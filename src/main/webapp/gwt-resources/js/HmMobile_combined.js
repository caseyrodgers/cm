var HmEvents={eventTutorInitialized:{listeners:[],subscribe:function(B){var A=HmEvents.eventTutorInitialized.listeners;A[A.length]=B},fire:function(A){var C=HmEvents.eventTutorInitialized.listeners;for(var B=0;B<C.length;B++){C[B](A,[])}}},eventWidgetInitialized:{listeners:[],subscribe:function(B){var A=HmEvents.eventWidgetInitialized.listeners;A[A.length]=B},fire:function(A){var C=HmEvents.eventWidgetInitialized.listeners;for(var B=0;B<C.length;B++){C[B](A,[])}}},eventTutorLastStep:{listeners:[],subscribe:function(B){var A=HmEvents.eventTutorLastStep.listeners;A[A.length]=B},fire:function(){var B=HmEvents.eventTutorLastStep.listeners;for(var A=0;A<B.length;A++){B[A]([])}}},eventTutorWidgetComplete:{listeners:[],subscribe:function(B){var A=HmEvents.eventTutorWidgetComplete.listeners;A[A.length]=B},fire:function(D,A){var C=HmEvents.eventTutorWidgetComplete.listeners;for(var B=0;B<C.length;B++){C[B](A,[D])}}},eventTutorSetComplete:{listeners:[],subscribe:function(B){var A=HmEvents.eventTutorSetComplete.listeners;A[A.length]=B},fire:function(A){var C=HmEvents.eventTutorSetComplete.listeners;for(var B=0;B<C.length;B++){C[B](null,[A])}}},eventTutorChangeStep:{listeners:[],subscribe:function(B){var A=HmEvents.eventTutorChangeStep.listeners;A[A.length]=B},fire:function(A,C){var D=HmEvents.eventTutorChangeStep.listeners;for(var B=0;B<D.length;B++){D[B](C,[A])}}}};function f_clientWidth(){return f_filterResults(window.innerWidth?window.innerWidth:0,document.documentElement?document.documentElement.clientWidth:0,document.body?document.body.clientWidth:0)}function f_clientHeight(){return f_filterResults(window.innerHeight?window.innerHeight:0,document.documentElement?document.documentElement.clientHeight:0,document.body?document.body.clientHeight:0)}function f_scrollLeft(){return f_filterResults(window.pageXOffset?window.pageXOffset:0,document.documentElement?document.documentElement.scrollLeft:0,document.body?document.body.scrollLeft:0)}function f_scrollTop(){return f_filterResults(window.pageYOffset?window.pageYOffset:0,document.documentElement?document.documentElement.scrollTop:0,document.body?document.body.scrollTop:0)}function f_filterResults(D,B,A){var C=D?D:0;if(B&&(!C||(C>B))){C=B}return A&&(!C||(C>A))?A:C};var _productionMode=false;HmEvents.eventTutorInitialized.subscribe(function(A){processMathJax()});function getAtw(){return TutorManager.getActiveTutorWrapper()}HmEvents.eventTutorLastStep.subscribe(function(A){gwt_solutionHasBeenViewed(String(A))});HmEvents.eventTutorInitialized.subscribe(function(A){gwt_solutionHasBeenInitialized(A)});function setStepsInfoHelp(){}function resetStepsInfo(){}function getNextMoveTo(){}var TutorManager={tutorWrappers:[],activeTutorWrapper:null,initializeTutor:function(M,L,P,G,C,I,D,J,F,O,R,N,K){var H=new TutorWrapper(M,L,P,G,C,I,D,J,F,O,R,N,K);TutorManager.activeTutorWrapper=H;TutorManager.tutorWrappers[TutorManager.tutorWrappers.length]=H;H.loadTutorData();if(O){var Q={submitButtonText:O,indicateWidgetStatus:R};setTutorConfiguration(Q)}H.initializeTutor(H.context);if(J){var B=100;var A=0;for(A=0;A<B;A++){var E=_getStepUnit(A);if(E==null){break}E.style.display="block"}}},unregisterTutorWrapper:function(A){for(var B=0;B<TutorManager.tutorWrappers.length;B++){if(TutorManager.tutorWrappers[B].id==A){TutorManager.tutorWrappers.splice(B,1)}}},setActiveTutorWrapper:function(C){var B=null;for(var A=0;A<TutorManager.tutorWrappers.length;A++){if(TutorManager.tutorWrappers[A].id==C){B=TutorManager.tutorWrappers[A]}}if(!B){alert("tutorWrapper not found in TutorManager: "+C)}TutorManager.activeTutorWrapper=B},getActiveTutorWrapper:function(){return TutorManager.activeTutorWrapper},showMessage:function(B){var A=$get("tutor_message");A.innerHTML=B;setTimeout(function(){A.innerHTML="&nbsp;"},2000)},removeStep:function(A){getAtw().stepUnits.split(A,1)},showNextStep:function(){var A=getAtw();if(A.currentStepUnit+1<A.stepUnits.length){A.currentStepUnit++;A.showStepUnit(A.currentStepUnit);A.scrollToStep(A.currentStepUnit)}else{TutorManager.showMessage("No more steps")}},showPreviousStep:function(){var A=getAtw();if(A.currentStepUnit<0){TutorManager.showMessage("No previous step");return }else{while(A.currentStepUnit>-1){var B=A.stepUnits[A.currentStepUnit].ele;if(A.stepUnits[A.currentStepUnit].realNum!=A.currentRealStep){A.currentRealStep=A.stepUnits[A.currentStepUnit].realNum;break}B.style.display="none";A.currentStepUnit--}if(A.currentStepUnit==0){A.currentStepUnit=-1;window.scrollTo(0,0)}if(A.currentStepUnit>-1){setAsCurrent(A.stepUnits[A.currentStepUnit].ele)}A.setButtonState();A.scrollToStep(A.currentStepUnit);return false}},getCurrentStepNumber:function(){return getAtw().currentStepUnit},backToLesson:function(){gwt_backToLesson()},newProblem:function(){var B=getAtw();var A=B.context.probNum;var C=B.context.jsonConfig?B.context.jsonConfig.limit:0;gwt_tutorNewProblem(A+1,C)},showWhiteboard:function(){gwt_showWhiteboard()},showStepUnit:function(A){showStepUnit(A)},generateContext:function(G,A,F){if(G!=null){var M=document.createElement("div");var F=null;var J="";var K="";var H=false;var E=false;var I=null;var N="";var L=false;var D=false;TutorManager.initializeTutor(M,G,F,A,J,K,H,E,I,N,L,D)}else{TutorDynamic.refreshProblem()}var C=getAtw();var B=getTutorVariableContextJson(C.tutorData._variables);return B}};function StepUnit(F,E,B,A,D,C){this.id=F;this.stepUnitNum=E;this.type=B;this.roleType=A;this.realNum=D;this.ele=C}function Step(A){this.realNum=A;this.stepUnits=new Array()}function _getStepUnit(A){return _getElement("stepunit",A)}function _getHintUnit(A){return _getElement("hintunit",A)}function _getFigureUnit(A){return _getElement("figure",A)}function findPreviousFigureUnit(A){for(p=A-1;p>-1;p--){fu=_getFigureUnit(p);if(fu!=null){return fu}}return null}function setAsNotCurrent(A){A.style.backgroundColor="#E2E2E2"}function _getElement(A,B){var C=A+"-"+B;return $get(C)}function setAsCurrent(A){A.style.backgroundColor="#F1F1F1"}function findPreviousFigureUnit(A){for(p=A-1;p>-1;p--){fu=_getFigureUnit(p);if(fu!=null){return fu}}return null}function scrollToStep(A){getAtw().scrollToStep(A)}function hideAllSteps(){var B=getAtw();for(var A=0;A<B.stepUnits.length;A++){var C=B.stepUnits[A].ele;if(C==null){return }if(C.style.display!="none"){C.style.display="none"}}window.scrollTo(0,0)}function initializeExternalJs(){var A="control-floater";new FloatLayer(A,150,15,10);detach(A);alignControlFloater()}function alignControlFloater(){alignFloatLayers();setTimeout(alignControlFloater,2000)}function doQuestionResponseEnd(){}var _activeQuestion;function doQuestionResponse(A,E){var B=getAtw();var D=B.tutorData._strings_moArray[A];if(_activeQuestion){var C=document.createElement("div");C.className="questionResponseAnswer";C.innerHTML=D;_activeQuestion.parentNode.appendChild(C)}else{gwt_showMessage(D)}}HmEvents.eventTutorInitialized.subscribe(function(D){var A=document.getElementById("tutor_raw_steps_wrapper");if(A==null){return }var I=A.getElementsByTagName("div");var G=I.length;for(var H=0;H<G;H++){var B=I.item(H);if(B.className=="question_guess"){var F=B.getElementsByTagName("img");var C=F.item(0);var E=C.onmouseout=null;C.onmouseoverDeferred=C.onmouseover;C.onmouseover=null;C.onclick=function(J){var K=(J)?J:window.event;var L=K.srcElement?K.srcElement:K.target;_activeQuestion=L;if(!L.onmouseoverDeferred){alert("error: no deferred move event");return }L.onclick=null;L.onmouseoverDeferred()}}}});function MessageContext(C,A,B){this.messageLocation=C;this.collabPointer=A;this.message=B}MessageContext.prototype.toString=function(){return this.messageLocation+", "+this.collabPointer};function SolutionMessageLocation(A,B,C){this.type=A;this.locationString1=B;this.locationInt1=C;this.complete=false}function gotoGUID(B,A){var C=getAtw();C.resetTutor()}function resetTutor(){var A=getAtw();A.resetTutor()}function gotoStepUnit(A){var B=getAtw();B.showStepUnit(A)}function getCurrentStepUnitNumber(){return getAtw().currentStepUnit}function deleteStep(A){var D=0;if(A>0){D=A*2}var C=$get("stepunit-"+D);var B=$get("stepunit-"+(D+1));if(C==null||B==null){alert("Delete Step: step "+A+" not found");return false}else{C.parentNode.removeChild(C);B.parentNode.removeChild(B);getAtw().steps.split(A,1);getAtw().stepUnits.split(D,2);return true}}function deleteStep(A){var D=0;if(A>0){D=A*2}var C=$get("stepunit-"+D);var B=$get("stepunit-"+(D+1));if(C==null||B==null){alert("Delete Step: step "+A+" not found");return false}else{C.parentNode.removeChild(C);B.parentNode.removeChild(B);var E=getAtw();E.steps.splice(A,1);E.stepUnits.splice(D,2);return true}}function _getElementTop(B){if(!B&&this){B=this}var C=document.all?true:false;var A=B.offsetTop;var D=B.offsetParent;while(D!=null){if(C){if(D.tagName=="TD"){A+=D.clientTop}}A+=D.offsetTop;D=D.offsetParent}return A}function tutor_questionGuessChanged(C){var D=C.getAttribute("id");var A=C.getAttribute("option_number");var B=C.getAttribute("value");gwt_tutorQuestionGuessChanged(D,A,B)}var MD5=function(AQ){function AC(A,B){return(A<<B)|(A>>>(32-B))}function AD(E,B){var C,K,J,D,A;J=(E&2147483648);D=(B&2147483648);C=(E&1073741824);K=(B&1073741824);A=(E&1073741823)+(B&1073741823);if(C&K){return(A^2147483648^J^D)}if(C|K){if(A&1073741824){return(A^3221225472^J^D)}else{return(A^1073741824^J^D)}}else{return(A^J^D)}}function AR(C,B,A){return(C&B)|((~C)&A)}function AS(C,B,A){return(C&A)|(B&(~A))}function AT(C,B,A){return(C^B^A)}function AV(C,B,A){return(B^(C|(~A)))}function AO(D,E,K,J,A,C,B){D=AD(D,AD(AD(AR(E,K,J),A),B));return AD(AC(D,C),E)}function Ac(D,E,K,J,A,C,B){D=AD(D,AD(AD(AS(E,K,J),A),B));return AD(AC(D,C),E)}function AG(D,E,K,J,A,C,B){D=AD(D,AD(AD(AT(E,K,J),A),B));return AD(AC(D,C),E)}function AP(D,E,K,J,A,C,B){D=AD(D,AD(AD(AV(E,K,J),A),B));return AD(AC(D,C),E)}function Ad(L){var B;var M=L.length;var E=M+8;var C=(E-(E%64))/64;var J=(C+1)*16;var A=Array(J-1);var D=0;var K=0;while(K<M){B=(K-(K%4))/4;D=(K%4)*8;A[B]=(A[B]|(L.charCodeAt(K)<<D));K++}B=(K-(K%4))/4;D=(K%4)*8;A[B]=A[B]|(128<<D);A[J-2]=M<<3;A[J-1]=M>>>29;return A}function AI(A){var B="",D="",C,E;for(E=0;E<=3;E++){C=(A>>>(E*8))&255;D="0"+C.toString(16);B=B+D.substr(D.length-2,2)}return B}function AE(B){B=B.replace(/rn/g,"n");var D="";for(var C=0;C<B.length;C++){var A=B.charCodeAt(C);if(A<128){D+=String.fromCharCode(A)}else{if((A>127)&&(A<2048)){D+=String.fromCharCode((A>>6)|192);D+=String.fromCharCode((A&63)|128)}else{D+=String.fromCharCode((A>>12)|224);D+=String.fromCharCode(((A>>6)&63)|128);D+=String.fromCharCode((A&63)|128)}}}return D}var AH=Array();var k,Aa,AF,AN,Ab,F,G,H,I;var b=7,d=12,AA=17,AB=22;var AJ=5,AK=9,AL=14,AM=20;var AU=4,AW=11,AX=16,AY=23;var Z=6,a=10,c=15,x=21;AQ=AE(AQ);AH=Ad(AQ);F=1732584193;G=4023233417;H=2562383102;I=271733878;for(k=0;k<AH.length;k+=16){Aa=F;AF=G;AN=H;Ab=I;F=AO(F,G,H,I,AH[k+0],b,3614090360);I=AO(I,F,G,H,AH[k+1],d,3905402710);H=AO(H,I,F,G,AH[k+2],AA,606105819);G=AO(G,H,I,F,AH[k+3],AB,3250441966);F=AO(F,G,H,I,AH[k+4],b,4118548399);I=AO(I,F,G,H,AH[k+5],d,1200080426);H=AO(H,I,F,G,AH[k+6],AA,2821735955);G=AO(G,H,I,F,AH[k+7],AB,4249261313);F=AO(F,G,H,I,AH[k+8],b,1770035416);I=AO(I,F,G,H,AH[k+9],d,2336552879);H=AO(H,I,F,G,AH[k+10],AA,4294925233);G=AO(G,H,I,F,AH[k+11],AB,2304563134);F=AO(F,G,H,I,AH[k+12],b,1804603682);I=AO(I,F,G,H,AH[k+13],d,4254626195);H=AO(H,I,F,G,AH[k+14],AA,2792965006);G=AO(G,H,I,F,AH[k+15],AB,1236535329);F=Ac(F,G,H,I,AH[k+1],AJ,4129170786);I=Ac(I,F,G,H,AH[k+6],AK,3225465664);H=Ac(H,I,F,G,AH[k+11],AL,643717713);G=Ac(G,H,I,F,AH[k+0],AM,3921069994);F=Ac(F,G,H,I,AH[k+5],AJ,3593408605);I=Ac(I,F,G,H,AH[k+10],AK,38016083);H=Ac(H,I,F,G,AH[k+15],AL,3634488961);G=Ac(G,H,I,F,AH[k+4],AM,3889429448);F=Ac(F,G,H,I,AH[k+9],AJ,568446438);I=Ac(I,F,G,H,AH[k+14],AK,3275163606);H=Ac(H,I,F,G,AH[k+3],AL,4107603335);G=Ac(G,H,I,F,AH[k+8],AM,1163531501);F=Ac(F,G,H,I,AH[k+13],AJ,2850285829);I=Ac(I,F,G,H,AH[k+2],AK,4243563512);H=Ac(H,I,F,G,AH[k+7],AL,1735328473);G=Ac(G,H,I,F,AH[k+12],AM,2368359562);F=AG(F,G,H,I,AH[k+5],AU,4294588738);I=AG(I,F,G,H,AH[k+8],AW,2272392833);H=AG(H,I,F,G,AH[k+11],AX,1839030562);G=AG(G,H,I,F,AH[k+14],AY,4259657740);F=AG(F,G,H,I,AH[k+1],AU,2763975236);I=AG(I,F,G,H,AH[k+4],AW,1272893353);H=AG(H,I,F,G,AH[k+7],AX,4139469664);G=AG(G,H,I,F,AH[k+10],AY,3200236656);F=AG(F,G,H,I,AH[k+13],AU,681279174);I=AG(I,F,G,H,AH[k+0],AW,3936430074);H=AG(H,I,F,G,AH[k+3],AX,3572445317);G=AG(G,H,I,F,AH[k+6],AY,76029189);F=AG(F,G,H,I,AH[k+9],AU,3654602809);I=AG(I,F,G,H,AH[k+12],AW,3873151461);H=AG(H,I,F,G,AH[k+15],AX,530742520);G=AG(G,H,I,F,AH[k+2],AY,3299628645);F=AP(F,G,H,I,AH[k+0],Z,4096336452);I=AP(I,F,G,H,AH[k+7],a,1126891415);H=AP(H,I,F,G,AH[k+14],c,2878612391);G=AP(G,H,I,F,AH[k+5],x,4237533241);F=AP(F,G,H,I,AH[k+12],Z,1700485571);I=AP(I,F,G,H,AH[k+3],a,2399980690);H=AP(H,I,F,G,AH[k+10],c,4293915773);G=AP(G,H,I,F,AH[k+1],x,2240044497);F=AP(F,G,H,I,AH[k+8],Z,1873313359);I=AP(I,F,G,H,AH[k+15],a,4264355552);H=AP(H,I,F,G,AH[k+6],c,2734768916);G=AP(G,H,I,F,AH[k+13],x,1309151649);F=AP(F,G,H,I,AH[k+4],Z,4149444226);I=AP(I,F,G,H,AH[k+11],a,3174756917);H=AP(H,I,F,G,AH[k+2],c,718787259);G=AP(G,H,I,F,AH[k+9],x,3951481745);F=AD(F,Aa);G=AD(G,AF);H=AD(H,AN);I=AD(I,Ab)}var AZ=AI(F)+AI(G)+AI(H)+AI(I);return AZ.toLowerCase()};function _makeContextFingerPrint(A){return MD5(String(_getVariablesFromContext(A)))}function _getVariablesFromContext(context){var contextObject=eval("("+context+")");var vars=contextObject._variables;if(!vars){return"NO VARIABLES"}var varNames=[];for(var i=0;i<vars.length;i++){varNames[varNames.length]=vars[i].name}return varNames}function _stripValuesFromContext(context){var contextObject=eval("("+context+")");var vars=contextObject._variables;if(!vars){return"NO VARIABLES"}for(var i=0;i<vars.length;i++){v=vars[i];v.value=null}var contextStr=JSON.stringify(contextObject._variables);return contextStr}function __getDiffBetweenContexts(master,other){var c1=eval("("+master+")");var c2=eval("("+other+")");var v1=c1._variables;var v2=c2._variables;if(v1==null){return"no variables in master"}if(v2==null){return"No variables in other"}var varsInMasterNotInOther=__findVarInContextNotInOther(v1,v2);var varsInOtherNotInMaster=__findVarInContextNotInOther(v2,v1);if(varsInMasterNotInOther.length==0&&varsInOtherNotInMaster.length==0){return null}else{var msg="";if(varsInMasterNotInOther.length>0){msg="Vars in master, but not in other: "+varsInMasterNotInOther;msg+="\n"}if(varsInOtherNotInMaster.length>0){msg+="Vars in other, but not in master: "+varsInOtherNotInMaster}return msg}}function __findVarInContextNotInOther(G,F){var D=[];for(var C=0;C<G.length;C++){var A=G[C];var E=false;for(var B=0;B<F.length;B++){if(F[B].name==A.name){E=true;break}}if(!E){if(!(A.name=="tutor_data_record")){D[D.length]=A.name}}}return D};	/**
 * Tutor wrapper class.
 
    A single instance for each new tutor wrapper
 *
 *
 *
 * Problem CM abstraction over HM tutor API
 *
 */

var TutorWrapper = (function () {

    // private static
    var nextId = 1;

    // constructor
    var cls = function (tutorDomNode, pid, jsonConfig, solutionData, stepText,solutionTitle,showWork, shouldExpandSolution, solutionVariableContext, submitButtonText, indicateWidgetStatus, installCustomSteps, whiteboardText) {
    
        // private variables 
        this.id = nextId++;

        // store solution info into instance vars
        this.tutorDomNode = tutorDomNode;        
        this.pid = pid;
        this.jsonConfig = jsonConfig;
        this.solutionData = solutionData;
        this.stepText = stepText;
        this.solutionTitle = solutionTitle;
        this.showWork = showWork;
        this.shouldExpandSolution = shouldExpandSolution;
        this.solutionVariableContext = solutionVariableContext;
        this.submitButtonText = submitButtonText;
        this.indicateWidgetStatus = indicateWidgetStatus;
        this.installCustomSteps = installCustomSteps;
        
        // state vars used to drive this TutorWrapper
        this.currentRealStep=-1;
        this.currentStepUnit=-1;
        this.stepUnitsMo=[];
        this.stepUnits=[];
        this.steps=[];
        this.stepUnit=null;
        this.tutorData=null;
        this.solutionTitle=null;
        this.context=null;
        this.whiteboardText = whiteboardText;
        
                
        if(installCustomSteps) { 
            installCustomSteps();
        }
        
        
        this.context = createNewSolutionMessageContext(pid, jsonConfig);
        

        // TutorWrapper API        
        this.getPid = function() {
            return this.pid;
        };


        this.initializeTutor = function() {
            TutorDynamic.initializeTutor(this);
        };        
        
 
        this.clearEndOfProblem = function() {
            var e = $('[name=refresh_problem_button]', this.tutorDomNode);
            if (e.length > 0) {
                e.get(0).innerHTML = '';
            }
        };
 
        /**
          * read loaded tutor html and create meta data used to drive the solution.
          *
          * The stepUnits are individual parts of a step.
          *
          * Stepunit contains these attribute: id, steprole, steptype, realstep
          *
          * steps are the complete steps consisting of two stepUnits.
          *
          * Return count of stepUnits loaded
          *
        */
        this.analyzeLoadedData = function() {
            this.stepUnits = [];
            this.steps = [];

            /**
            * for each step unit div on page
            *
            */
            var maxStepUnits = 100;
            for ( var s = 0; s < maxStepUnits; s++) {
                var stepUnit = _getStepUnit(s);
                if (stepUnit == null) {
                    break; // done
                }

                var id = stepUnit.getAttribute("id");
                var stepUnitNum = this.stepUnits.length;
                var role = stepUnit.getAttribute("steprole");
                var type = stepUnit.getAttribute("steptype");
                var realNum = parseInt(stepUnit.getAttribute("realstep"));

                var su = new StepUnit(id, stepUnitNum, type, role, realNum,stepUnit);
                this.stepUnits[this.stepUnits.length] = su;

                // is this realStep already created?
                var myStep = this.steps[realNum];
                if (myStep == null) {
                    myStep = new Step(realNum);
                    this.steps[realNum] = myStep;
                }
                myStep.stepUnits[myStep.stepUnits.length] = su;
            }
            
            
            
            return this.stepUnits.length;
        };      
        
        
        /** load data into internal data structures used to 
            drive tutor.
        */
        this.loadTutorData = function() {
            try {
                this.tutorData = eval("(" + this.solutionData + ")");
                
                // in tutor_dynamic.js
                processTutorData(this.tutorData, this.stepText, this.solutionVariableContext, this.tutorDomNode);
                
                
                this.analyzeLoadedData();
            } catch (e) {
                alert('Error processing TutorWidget: ' + e);
            }
        };
        
        this.scrollToStep = function(num) {
            var stb = $get('scrollTo-button');
            if (stb) {
                var top = _getElementTop(stb);
                var visibleSize = getViewableSize();
                var scrollXy = getScrollXY();
                var visTop = scrollXy[1];
                var visHeight = visibleSize[1];
                var visBot = visHeight + visTop;

                if (true || top < visTop || top > visBot) {
                
                    // alert('Need to scroll, visibleSize: ' + visibleSize + ' scrollXy:
                    // ' + scrollXy + ' visTop: '
                    // + visTop + ' visHeight: ' + visHeight + ' visBot: ' + visBot + '
                    // buttonBar: '
                    // + stb);
                    
                    gwt_scrollToBottomOfScrollPanel(top - visHeight);
                }
            }
        };        
        
        
        this.enabledNext = function(yesNo) {
            this.enabledButton('steps_next', yesNo);
        };
        
        
        // Set the state of the toolbar buttons
        this.setState = function(n, onoff) {
            if (n == 'step') {
                this.enabledNext(onoff);

                if (!onoff) {
                    TutorDynamic.endOfSolutionReached();
                }
            } else if (n == 'back') {
                this.enabledPrevious(onoff);
            }
        };
        
        this.enabledPrevious = function(yesNo) {
            this.enabledButton('steps_prev', yesNo);
        }
        
        
        this.setButtonState = function() {
            this.setState('step', this.currentStepUnit < (this.stepUnits.length - 1));
            this.setState('back', this.currentStepUnit > -1);
        }
        
        this.enabledButton = function(btn, yesNo) {
            // gwt_enableTutorButton(btn, yesNo);
            //    var clazz = 'sexybutton sexy_cm_silver ';
            //    if (!yesNo) {
            //        clazz += ' disabled';
            //    }
            //    var b = $get(btn);
            //    if(b) {
            //       b.className = clazz;
            //    }
           //    else {
           //        alert('required button with id [' + btn + '] not found');
           //    }
        }
        
        this.setStepTitle = function(num, stepElement) {
            // put title up.
            // put up step number if not a hint
            // otherwise, show 'Hint'
            var stepTitle = $get('step_title-' + num);
            if (stepTitle) {
                var sr = stepElement.getAttribute("steprole");
                if (sr && sr == 'step') {
                    stepTitle.innerHTML = 'Step '
                        + (parseInt(stepElement.getAttribute('realstep')) + 1);
                    stepTitle.className = 'step_title_step';
                } else {
                    // assume hint
                    stepTitle.innerHTML = 'Hint';
                    stepTitle.className = 'step_title_hint';
                }
            }
        };
        
        this.resetTutor = function() {
            var tutor = this.tutorDomNode;
            
            if(tutor) {
                tutor.innerHTML = this.stepText;
            }

            this.currentRealStep = -1;
            this.currentStepUnit = -1;
            this.loadTutorData();
            
            if(this.isVisible) {
                this.setButtonState();
            }
        },

        
        
        // Show the next available step unit
        this.showStepUnit = function(num) {
            if (num < 0)
                return;
            try {
                var stepElement = this.stepUnits.length == 0?null:this.stepUnits[num].ele;
                if (stepElement == null) {
                    return false;
                }

                // use animation library to show step
                // appear added as method during intiialize
                // of scripty2
                stepElement.style.display = 'block';
                //stepElement.appear();

                if (stepElement.getAttribute("steprole") == 'step')
                    setAsCurrent(stepElement);

                this.setStepTitle(num, stepElement);

                // determine if figure should be displayed. Only display
                // if is the first one or different than the previous.
                var figureUnit = _getFigureUnit(num);
                if (figureUnit != null) {
                if (num == 0) {
                    figureUnit.style.display = "block";
                } else {
                    // only display image if it is not
                    // the same as the previously displayed image.
                    // find the first previous image.
                    var prevFigureUnit = findPreviousFigureUnit(num);
                    if (prevFigureUnit != null && prevFigureUnit.src == figureUnit.src) {
                        // skip it
                        figureUnit.style.display = "none";
                    } else {
                        // image is different, so show it
                        figureUnit.style.display = "block";
                    }
                }
            }

            // make sure all previous hints are invisible
            // stepunits of role == 'hint'
            for (i = num - 1; i > -1; i--) {
                if (this.stepUnits[i].roleType == 'hint') {
                    this.stepUnits[i].ele.style.display = 'none';
                } else {
                    // set as not-current
                    setAsNotCurrent(this.stepUnits[i].ele);
                }
            }

            // make sure all future step unitsare hidden
            for ( var i = num + 1; i < this.stepUnits.length; i++) {
                if (this.stepUnits[i].roleType == 'hint') {
                    this.stepUnits[i].ele.style.display = 'none';
                } else {
                    // set as not-current
                    setAsNotCurrent(this.stepUnits[i].ele);
               }
            }

            this.currentStepUnit = num;
            this.currentRealStep = this.stepUnits[num].realNum;

            this.setButtonState();

            this.scrollToStep(num);

            HmEvents.eventTutorChangeStep.fire(num, this);

        } catch (e) {
            alert('Error showing step: ' + e);
        }
        return true;
    }

    
    
    function createNewSolutionMessageContext(pid, jsonConfig) {
        var loc = new SolutionMessageLocation('solution', pid);
        var mc = new MessageContext(loc);
        if (jsonConfig) {
            try {
                mc.jsonConfig = eval('(' + jsonConfig + ')');
            } catch (e) {
                alert('could not process solution ' + pid + ' config: ' + jsonConfig)
            }
        }
        return mc;
    }
    
        
        
    function installCustomSteps() {
        try {
            /** install new step unit showing answer to multi choice
            * 
            */
            var root = document.getElementById("raw_tutor_steps");
        
            var root = document.getElementById("raw_tutor_steps");
            var ps = document.getElementById("problem_statement");
            var options = ps.getElementsByTagName("input");
            if(options.length == 0) {
                return;
            }
        
            var answer=-1;
            for(var i=0;i<options.length;i++) {
                if(options[i].getAttribute("value") == 'true') {
                    answer = i;
                    break;
                }
            }
            if(answer == -1) {
                return;
            }
        
            /**
            * remove all existing step units
            * 
            */
            var maxStepUnits = 100;
            for ( var s = 0; s < maxStepUnits; s++) {
                var stepUnit = _getStepUnit(s);
                if (stepUnit == null) {
                    break; // done
                }
            
                // remove it
                stepUnit.parentNode.removeChild(stepUnit);
            }
            
        
            var letters = ['A','B','C','D', 'E', 'F'];
            var answer = letters[answer];
            var html = '<div style="display:none;" realstep="0" steprole="hint" class="hint" steptype="hint" id="stepunit-0"><div class="step_content"><p>Click the Lesson button for review.</p></div></div>';
            var el = document.createElement('div');
            el.innerHTML = html;
            root.appendChild(el);
        
            var html2 = '<div style="display:none;" realstep="0" steprole="step" class="step" steptype="step" id="stepunit-1"> <div id="step_title-1"></div> <div class="step_content"><p>The correct choice is ' + answer + '.</p> </div></div>'
            var el = document.createElement('div');
            el.innerHTML = html2;
            root.appendChild(el);
        }
        catch(e) {
            console.log('error installing custom steps: ' + e);
        }
    }
     }   
    return cls;
    
})();













function DL_GetElementLeft(B){if(!B&&this){B=this}var C=document.all?true:false;var A=B.offsetLeft;var D=B.offsetParent;while(D!=null){if(C){if(D.tagName=="TD"){A+=D.clientLeft}}A+=D.offsetLeft;D=D.offsetParent}return A}function DL_GetElementTop(B){if(!B&&this){B=this}var C=document.all?true:false;var A=B.offsetTop;var D=B.offsetParent;while(D!=null){if(C){if(D.tagName=="TD"){A+=D.clientTop}}A+=D.offsetTop;D=D.offsetParent}return A}function getViewableSize(){var B=0,A=0;if(typeof (window.innerWidth)=="number"){B=window.innerWidth;A=window.innerHeight}else{if(document.documentElement&&(document.documentElement.clientWidth||document.documentElement.clientHeight)){B=document.documentElement.clientWidth;A=document.documentElement.clientHeight}else{if(document.body&&(document.body.clientWidth||document.body.clientHeight)){B=document.body.clientWidth;A=document.body.clientHeight}}}a=[B,A];return a}function getScrollXY(){var B=0,A=0;if(typeof (window.pageYOffset)=="number"){A=window.pageYOffset;B=window.pageXOffset}else{if(document.body&&(document.body.scrollLeft||document.body.scrollTop)){A=document.body.scrollTop;B=document.body.scrollLeft}else{if(document.documentElement&&(document.documentElement.scrollLeft||document.documentElement.scrollTop)){A=document.documentElement.scrollTop;B=document.documentElement.scrollLeft}}}return[B,A]}function _addEvent(E,D,B,A){if(E.addEventListener){E.addEventListener(D,B,A);return true}else{if(E.attachEvent){var C=E.attachEvent("on"+D,B);return C}else{alert("Handler could not be attached")}}}function _removeEvent(E,D,B,A){if(E.removeEventListener){E.removeEventListener(D,B,A);return true}else{if(E.detachEvent){var C=E.detachEvent("on"+D,B);return C}else{alert("Handler could not be removed")}}}function hideDivOnMouseOut(A){var C,B;if(window.event){C=this;B=window.event.toElement}else{C=A.currentTarget;B=A.relatedTarget}if(C!=B){if(!contains(C,B)){C.style.display="none"}}}function contains(B,A){while(A.parentNode){A=A.parentNode;if(A==B){return true}}return false}function grabComputedStyle(B,A){if(document.defaultView&&document.defaultView.getComputedStyle){return document.defaultView.getComputedStyle(B,null).getPropertyValue(A)}else{if(B.currentStyle){return B.currentStyle[A]}else{return null}}}function grabComputedHeight(B){var A=grabComputedStyle(B,"height");if(A!=null){if(A=="auto"){if(B.offsetHeight){A=B.offsetHeight}}A=parseInt(A)}return A}function grabComputedWidth(B){var A=grabComputedStyle(B,"width");if(A!=null){if(A.indexOf("px")!=-1){A=A.substring(0,A.indexOf("px"))}if(A=="auto"){if(B.offsetWidth){A=B.offsetWidth}}}return A};function initializeQuiz(){var D=document.getElementById("testset_div");if(D){var C=D.getElementsByTagName("div");for(var B=0,A=C.length;B<A;B++){var E=C[B];if(E.className=="hm_question_def"){initializeQuizQuestion(E)}}processMathJax()}}var uniquer=1;function initializeQuizQuestion(D){var K="answer_"+uniquer;var H=D.getElementsByTagName("li");for(var E=0,J=H.length;E<J;E++){answer=H[E];var A=answer.getAttribute("correct");answer.removeAttribute("correct");var G=(A==="correct"||A==="yes")?"true":"false";var B=answer.getElementsByTagName("div");var F=B[0];uniquer++;var C="answer_id_"+uniquer;var I="<span class='question-input' style='margin-right: 10px'><input type='radio' name='"+K+"' id='"+C+"' onclick='questionGuessChanged(this)'/></span>";F.innerHTML=I+F.innerHTML;if(B.length>0){B[1].style.display="none"}}}function hideQuestionResult(B){var E=B.getElementsByTagName("li");for(var D=0,C=E.length;D<C;D++){answer=E[D];var A=answer.getElementsByTagName("div");if(A.length>1){A[1].style.display="none"}}}function editQuizQuestion(B){if(B){var A=window.open("/solution_editor/SolutionEditor.html?pid="+B)}}function hideQuizQuestionResults(C){if(!C){C="testset_div"}var E=document.getElementById(C);if(E){var D=E.getElementsByTagName("div");for(var B=0,A=D.length;B<A;B++){var F=D[B];if(F.className=="hm_question_def"){hideQuestionResult(F)}}processMathJax()}}function prepareCustomQuizForDisplay(F,H){var E=F.getElementsByTagName("input");var G=0;var D=0;for(var C=0,B=E.length;C<B;C++){if(C>3&&(C%4)==0){G++}E[C].disabled=true;var A=C-(G*4);if(H[G]==A){E[C].checked=true}}};var TutorDynamic = (function () {
    var theApi = {}

    theApi.thisContext;
    theApi.pid;
    theApi.initializeTutor = function (tutorWrapper) {

        var context = tutorWrapper.context;
    
        tutorWrapper.clearEndOfProblem();

        // always start at 1
        // lookupSolutionContext(solutionContext);

        theApi.thisContext = context;

        theApi.pid = theApi.thisContext.messageLocation.locationString1;
        if (typeof theApi.thisContext.probNum === "undefined" || !theApi.thisContext.probNum) {
            // first view of this solution
            console.log('first view of solution: ' + theApi.pid);

            var tc = theApi.thisContext;
            tc.probNum = 0;
            tc.numCorrect = 0;
        }

        if (theApi.thisContext.jsonConfig) {
            //theApi.thisContext.jsonConfig.limit = 2;
            theApi.setSolutionTitle(theApi.thisContext.probNum + 1,
            theApi.thisContext.jsonConfig.limit);
            theApi.isDynamicSolution = true;
            theApi.thisContext.complete = false;
        } else {
            theApi.isDynamicSolution = false;
            theApi.setSolutionTitle(0, 0);
            theApi.thisContext.complete = true;
        }
        try {
            debug('fire hm event tutor initialize');
            HmEvents.eventTutorInitialized.fire(tutorWrapper);
        } catch (e) {
            alert(e);
        }

        console.log("dynamic tutor initialized");

    };

    function removeStorage(sc) {
        if (typeof localStorage == 'undefined') {
            return;
        }

        var tag = getLocalStorageTag(sc);
        localStorage.removeItem(tag);
    }

    /** look up any persistent data associated
     *  with message context.  This will track
     *  the progress of this dynamic solution.
     *
     */
    function lookupSolutionContext(sc) {

        if (typeof localStorage == 'undefined') {
            return;
        }

        var tag = getLocalStorageTag(sc);

        if (sc.probNum > 0) {
            // already active, no change
            localStorage.setItem(tag, String(sc.probNum) + '|' + String(sc.numCorrect));

            return;
        }

        // update context to reflect any saved
        // information about this context
        var existingContext = localStorage.getItem(tag);
        if (existingContext) {
            // alert("reusing context");
            var p = existingContext.split('|');
            if (p.length == 2) {
                var pn = Number(p[0]);
                var cor = Number(p[1]);
                if (!pn) {
                    pn = 0;
                    cor = 0;
                }
                sc.probNum = pn;
                sc.numCorrect = cor;
            } else {
                alert('invalid solution stored context: ' + existingContext);
                localStorage.removeItem(tag);
            }
        }
    }

    function getLocalStorageTag(sc) {
        return 'mc_' + sc.messageLocation.locationString1;
    }
    
    theApi.resetTutor = function () {
        theApi.initializeTutor(theApi.thisContext);
    };

    theApi.setSolutionTitle = function (probNum, limit) {
        if (limit > 0) {
            var el = $get('steps_head_title');
            if(el) {
                el.innerHTML = 'Problem ' + probNum + ' of ' + limit;
            }
        }
    };

    theApi.endOfSolutionReached = function () {
        
        
        if(TutorManager.activeTutorWrapper) {
            TutorManager.activeTutorWrapper.clearEndOfProblem();
        }

        if (theApi.isDynamicSolution) {
            showEndOfTutorOptions(theApi.thisContext);
        }

        try {
            if ((typeof theApi.thisContext.jsonConfig === "undefined" || theApi.thisContext.jsonConfig == null) || (!theApi.thisContext.complete && (theApi.thisContext.probNum + 1) >= theApi.thisContext.jsonConfig.limit)) {

                theApi.thisContext.complete = true;

                // depending on current state of
                // solution context, fire event
                // informing listeners that this
                // solution context is complete.
                HmEvents.eventTutorLastStep.fire();
            }
        } catch (e) {
            alert(e);
        }

    };

    theApi.getSolutionSetTitle = function () {
        return 'Problem ' + theApi.thisContext.probNum + ' of ' + theApi.thisContext.jsonConfig.limit;
    };

    // only allow getting each problem
    // correct once.
    var thisProbHasBeenAnsCorrect = false;

    /** Reload the existing solution */
    theApi.refreshProblem = function () {
        console.log("Refreshing current solution set member");

        if (theApi.isDynamicSolution) {
            theApi.thisContext.probNum++;
        }

        if (!theApi.thisContext.jsonConfig || theApi.thisContext.probNum < theApi.thisContext.jsonConfig.limit) {
            thisProbHasBeenAnsCorrect = false;
            gotoGUID(theApi.thisContext);
        } else {
            HmEvents.eventTutorSetComplete.fire();
        }
    };
    




    /** When any widget is complete */
    HmEvents.eventTutorWidgetComplete.subscribe(function (tutorWrapper, data) {

        if (data) {
            /** if data[0] is boolean, then is input widget */
            var isInputWidget = typeof data[0] != "object";
            var isCorrect = _extractEventCorrect(data);
            var inputWidgetValue = null;
            try {
                inputWidgetValue = TutorSolutionWidgetValues.getTutorWidgetValues();
            } catch (e) {
                alert('Error getting tutor widget values: ' + e);
            }
            if (isCorrect === true) {
                // only increment correct
                // if current problem set number
                // has not already been incremented.
                if (!thisProbHasBeenAnsCorrect) {
                    theApi.thisContext.numCorrect++;
                    thisProbHasBeenAnsCorrect = true;
                }
                tutorWidgetComplete(inputWidgetValue, true);
            } else {
                tutorWidgetComplete(inputWidgetValue, false);
            }

            fireTutorEvent('widget_complete', data, tutorWrapper);
        }
    });

    function serailizeWidgetValue(value) {
        return String(value);
    }

    /**
     * register a listener to be notified when the tutor widget is complete
     * to indicate on standard input widget correct/incorrect.
     *
     */
    if (HmEvents.eventTutorWidgetComplete) {
        HmEvents.eventTutorWidgetComplete.subscribe(function (widget, data) {
            try {
                //resetTutor();
                if (data) {
                    var tutorWrapper = widget.tutorWrapper;
                    var isCorrect = _extractEventCorrect(data);
                    if (isCorrect === true) {
                        fireTutorEvent('widget_correct', null, tutorWrapper);
                    } else if (isCorrect === false) {
                        fireTutorEvent('widget_incorrect', null, tutorWrapper);
                    }
                }
            } catch (e) {
                console.log('error: ' + e);
            }
        });
    }

    if (HmEvents.eventTutorInitialized) {
        HmEvents.eventTutorInitialized.subscribe(function (tutorWrapper, args) {
            try {
                debug('hm tutor init event');
                window.scrollTo(0, 0);

                if (_tutorData._depends && _tutorData._depends.length > 0) {
                    var v = _tutorData._depends[0];
                    loadDepend(v.depend.src, function () {
                        debug('depend read successfully');
                        fireTutorEvent('tutor_initialized', args[0], tutorWrapper);
                    });
                } else {
                    fireTutorEvent('tutor_initialized', args[0], tutorWrapper);
                }

            } catch (e) {
                alert('error: ' + e);
            }
        });
    }

    function loadDepend(depSrc, callback) {
        debug('depend: reading ' + depSrc);
        TutorAjax.getContents(depSrc, function (contents) {
            debug('depend returned: ' + contents.length);

            eval(contents);

            debug('depend executed');

            callback();
        });
    }

    /** Extract true/false boolean from event data array */

    function _extractEventCorrect(data) {
        var completeData = data[0];
        var to = typeof data;
        var isObject = (typeof completeData == "object");
        var isCorrect = null;
        if (isObject) {
            isCorrect = completeData.correct;
        } else {
            isCorrect = completeData;
        }

        return isCorrect;
    }

    /**
     * register a listener to be notified when any step is changed
     *
     */

    /**
     * register a listener to be notified when the tutor widget is complete
     *
     */
    if (HmEvents.eventTutorChangeStep) {
        HmEvents.eventTutorChangeStep.subscribe(function (tutorWrapper, args) {
            try {
                fireTutorEvent('step_changed', args[0], tutorWrapper);
            } catch (e) {
                alert('error: ' + e);
            }
        });
    }

    if (HmEvents.eventTutorSetComplete) {
        HmEvents.eventTutorSetComplete.subscribe(function (x) {
            clearEndOfProblem();
            solutionSetComplete(theApi.thisContext.numCorrect,
            theApi.thisContext.jsonConfig.limit);
            removeStorage(theApi.thisContext);
        });
    }

    return theApi;

})();

/** overwritten in GWT modules to retrieve
 *  solution problem number context.  This allows
 *  the same context to be shown for each problem number.
 *
 * @param probNum
 */
function gwt_getSolutionProblemContext(probNum) {
    alert('default gwt_getSolutionProblemContext should not be called');
}

var _variableContextToUse;

function gotoGUIDAfterCheckingForVariableContext(context) {
    _variableContextToUse = gwt_getSolutionProblemContext(TutorDynamic.thisContext.probNum);
    gotoGUID(context);
}

/** called when the end of a tutor has been reached
 *
 */

function showEndOfTutorOptions(context) {
    var e = document.getElementById('refresh_problem_button');
    if (!e) {
        alert('creating new refresh button holder');
        e = document.createElement('div');
        e.setAttribute('id', 'refresh_problem_button');
        var doc = document.getElementById('tutoroutput');
        if (doc) {
            var scrollTo = document.getElementById('scrollTo-button');
            doc.removeChild(scrollTo);
            doc.appendChild(e);
            doc.appendChild(scrollTo);
        } else {
            alert('no doc to add end of tutor options button');
        }
    }

    if (!e) {
        alert('no end of tutor options div found');
    }

    var msg = '';
    if (context.jsonConfig.limit < (context.probNum + 2)) {
        msg = 'View Problem Set Results';
    } else {
        msg = 'Go to Problem ' + (context.probNum + 2) + ' of ' + context.jsonConfig.limit;
    }

    e.innerHTML = '<button class="end-of-tutor-next-problem sexybutton" onclick="TutorDynamic.refreshProblem();"><span><span>' + msg + '</span></span></button>';
    e.style.display = 'block';

    showEndOfTutorOptionsMessage(context.probNum, context.jsonConfig.limit);
}

/** display popup status about the problem set.

 Can be overriden to provide custom layout
 */
function showEndOfTutorOptionsMessage(probNum, limit) {
    // optional message can be shown
}

/** Called when a solution set (defined by confing) has
 *  been completed.
 *
 *   This will be overridden for specific needs depending
 *   on end implementation (cm,mobile,hm,etc..)
 */

function solutionSetComplete(numCorrect, limit) {

    var msg = '  <div>' + '    <b>Total Questions: </b>' + '' + limit + '  </div>' + '  <div>' + '    <b>Correct Responses: </b>' + '' + numCorrect + '  </div>';
    msg = '<p class="solution_set_results">' + msg + '</p>';
    YAHOO.solutionCompleteDialog = new YAHOO.widget.Panel(
        "solution_complete_dialog", {
        modal: true,
        underlay: "none",
        fixedcenter: true,
        zIndex: 999,
        width: "300px",
        height: "240px",
        visible: true,
        close: true,
        contraintoviewport: true,
        draggable: false
    });

    msg += '<div id="solutionCompleteDialog_close"><a href="#" onclick="closeSolutionCompleteDialog();return false;">Click to close</a></div>';
    YAHOO.solutionCompleteDialog.setHeader("Problem Set Complete!");
    YAHOO.solutionCompleteDialog.setBody(msg);

    YAHOO.solutionCompleteDialog.render(document.body);
}

/** General functionality when input widget is completed
 * 
 *   NOTE: might be overridden in GWT
 *   
 *   */
function tutorWidgetComplete(value, yesNo) {
    console.log('tutorWidgetComplete: ' + value);
    if (yesNo) {
        if (TutorDynamic.isDynamicSolution) {
            showEndOfTutorOptions(TutorDynamic.thisContext);
        }
        TutorDynamic.endOfSolutionReached();
    } else {
        if (getCurrentStepUnitNumber() < 1) {
            gotoStepUnit(0);
        }
        tutorWidgetCompleteAux(yesNo);
    }
}

/** Used to override and provide custom
 *  functionality at a high level, such as
 *  CM Mobile.
 *
 * @param yesNo
 */
function tutorWidgetCompleteAux(yesNo) {
    /** empty */
}

function closeSolutionCompleteDialog() {
    YAHOO.solutionCompleteDialog.hide();
    YAHOO.solutionCompleteDialog.destroy();
}

var _tutorData;



/** Shared functionality to extract needed
 *  dynamic data from tutor_data.js
 *
 *  tutorNode is node where tutor should be initialized
 *  (if null, use deprecated way of using #tutor_raw_steps_wrapper
 *  
 *  TODO: does not seem to belong here.
 */
function processTutorData(tutorData, stepText, variableContextJson, tutorDomNode) {
    if (!tutorData) return;

    var theTutorElement=null;
    if(!tutorDomNode) {
        theTutorElement = $get('tutor_raw_steps_wrapper');
    }
    else {
        theTutorElement = $get('tutor_raw_steps_wrapper', tutorDomNode);
    }
 
    // last known
    _tutorData = tutorData;


    /** allow loading a saved variable context, thus restoring
        previous state of all variables
     */

    // provide override to allow problem numbers
    if (_variableContextToUse) {
        console.log('overwriting/restoring problem set context');
        variableContextJson = _variableContextToUse;
        _variableContextToUse = null; // one use
    }

    var isNewContext=false;
    if (variableContextJson) {
        _tutorData._variables = getTutorVariableContextFromJson(variableContextJson)._variables;
    }
    else {
        isNewContext=true;
    }

    processTutorDataAux(tutorData, stepText);
    evaluateTutorDataVariables(tutorData);
    
    
    
    /** insert the raw HTML into the dom node
     * 
     *  
    if(theTutorElement) {
        theTutorElement.innerHTML = interpolateVariables(tutorData._variables, stepText);
    }*/
    if(theTutorElement) {
        var htmlProcessed = interpolateVariables(tutorData._variables, stepText);
        
        htmlProcessed = _mathMlTransform.processHtml(htmlProcessed);
        
        theTutorElement.innerHTML = htmlProcessed;
    }

    /** if there is a depend, then we must make sure
     *  it is downloaded and ready before allowing any events
     *  to fire
     */

    if (tutorData._variables) {
        var vars = tutorData._variables;
        for (var i = 0, t = vars.length; i < t; i++) {
            var v = vars[i];
            debug('var: ' + v.name + " == " + v.value);
        }
    }

    // output to debugger, if not in production mode (is expensive)
    if (!_productionMode) {
        if (_tutorData._events) {
            var ct = _tutorData._events.length;
            for (var ci = 0; ci < ct; ci++) {
                var co = _tutorData._events[ci];
                debug('event [' + co.event.type + ']: ' + co.event.code);
            }
        }

        if (_tutorData._code) {
            var ct = _tutorData._code.length;
            for (var ci = 0; ci < ct; ci++) {
                var co = _tutorData._code[ci];
                debug('code : ' + co.code);
            }
        }
    }

    if (tutorData._depends) {
        var depends = tutorData._depends;
        if (depends.length == 1) {
            var v = depends[0];
            debug('depends: ' + v.depend.src + " == " + v.depend.src);
        } else if (tutorData._depends.length > 1) {
            alert('Only one depend allowed for now');
        }
    }


    if(isNewContext) {
        // add tutor_data_record
        var vars = _tutorData._variables;
        if(vars.length > 0) {
           console.log('creating new context: ' + _tutor_data_record);
           vars[vars.length] = {name: 'tutor_data_record', value: _tutor_data_record, type: 'PROVIDED', init:''};
        }
    }


    checkIfAllVarsAreUndefined(vars);

}

/** debug check to see if corrupt context 
*/
function checkIfAllVarsAreUndefined(vars) {
   for(var i=0;i<vars.length;i++) {
      var v = vars[i];
      var allUndefined=true;
      if(v.value != null) {
          break;
      }
      
      if(allUndefined) {
          alert('WARNING: Context contains only undefined varaiables');
      }

   }
}


function processTutorDataAux(tutorData, stepText) {
    if (tutorData._code) {
        for (var i = 0, t = tutorData._code.length; i < t; i++) {
            var c = tutorData._code[i];
            if (c.code && c.code > '') {

                if (!c.base64Processed) {
                    c.code = Base64.decode(c.code);
                    c.base64Processed = true;
                }

                try {
                    //alert('code to eval: ' + c.code);
                    /** TODO: use safe method */
                    eval(c.code);
                } catch (e) {
                    alert("code eval failed: " + e);
                }
            }
        }
    }

    if (tutorData._events) {
        for (var i = 0, t = tutorData._events.length; i < t; i++) {
            var c = tutorData._events[i];
            if (c.event.code && c.event.code > '') {
                if (!c.base64Processed) {
                    c.event.code = Base64.decode(c.event.code);
                    c.base64Processed = true;
                }
            }
        }
    }

    if (tutorData._variables) {
        for (var i = 0, t = tutorData._variables.length; i < t; i++) {
            var v = tutorData._variables[i];
            if (v.init && v.init > '' && !v.base64Processed) {
                v.init = Base64.decode(v.init);
                v.base64Processed = true;
            }
        }
    }

}


/** replace any variable references in text with current values
 * 
 * @param vars
 * @param text
 * @returns
 */
function interpolateVariables(vars, text) {
    if (vars) {
        for (var i = 0, t = vars.length; i < t; i++) {
            var v = vars[i];
            
            try {
                if (v.type == 'TEMPLATE') {
                    text = _replaceAll(text, '$' + v.name + '-escape', Base64.encode(String(v.value)));
                }
            } catch (ex) {
                alert(ex);
            }

            /** replace absolute value, then with ${} format */
            text = _replaceAll(text, '$' + v.name, v.value);
            text = _replaceAll(text, '${' + v.name + '}', v.value);

            // apply changes to variables below
            for (j = i; j < t; j++) {
                vars[j].init = _replaceAll(vars[j].init, '$' + v.name, v.value);
                vars[j].init = _replaceAll(vars[j].init, '${' + v.name + '}',
                v.value);
            }
        }

        /** final pass of applying varaiables to all final values */
        for (var i = 0, t = vars.length; i < t; i++) {
            // apply to all template variables
            for (var ii = 0; ii < t; ii++) {
                if (vars[ii].type == 'TEMPLATE') {
                    vars[ii].value = _replaceAll(vars[ii].value, '$' + vars[i].name, vars[i].value);
                    vars[ii].value = _replaceAll(vars[ii].value, '{$' + vars[i].name + '}', vars[i].value);
                }
            }
        }

    }
    return text;
}
function processmathml(str){
    var nstr=str;
    var _str=String(nstr);
    if(_str.indexOf("<mn")>-1||_str.indexOf("<mi")>-1||_str.indexOf("<mtext")>-1){
        if(_str.indexOf("mathsize")===-1){
           /* _str=_str.replace(/\<mn/g,"<mn mathsize=1em");
            _str=_str.replace(/\<mi/g,"<mi mathsize=1em");
            _str=_str.replace(/\<mtext/g,"<mtext mathsize=1em");*/
            _str=_str.replace(/\<mtext\>([0-9].?)\<\/mtext\>/g,"<mn>$1</mn>");
            _str=_str.replace(/\<mtext\>([a-zA-Z])\<\/mtext\>/g,"<mi>$1</mi>");
            nstr=_str;
        }
    }
    return nstr;
}

/** make sure all variables are evalued and ready for interpolation */

function evaluateTutorDataVariables(tutorData, text) {
    if (tutorData._variables) {
        var vars =  tutorData._variables;

        console.log('processing ' + vars.length + ' variables');
        for (var i = 0, t = vars.length; i < t; i++) {
            var v = vars[i];
            if (!v.value) {
                v.value =processmathml(generateVarValue(v));//generateVarValue(v);
            }
            // apply changes to variables
            // below current position
            for (j = i; j < t; j++) {
                vars[j].init = _replaceAll(vars[j].init, '$' + v.name, v.value);
                vars[j].init = _replaceAll(vars[j].init, '${' + v.name + '}',
                v.value);
            }
        }

        /** final pass of applying varaiables to all final values */
        for (var i = 0, t = vars.length; i < t; i++) {
            // apply to all template variables
            for (var ii = 0; ii < t; ii++) {
                if (vars[ii].type == 'TEMPLATE') {
                    vars[ii].value = _replaceAll(vars[ii].value, '$' + vars[i].name, vars[i].value);
                    vars[ii].value = _replaceAll(vars[ii].value, '{$' + vars[i].name + '}', vars[i].value);
                }
            }

            // apply to all events
            if (tutorData._events) {
                var ct = tutorData._events.length;
                for (var ci = 0; ci < ct; ci++) {
                    var co = tutorData._events[ci];

                    //debug('code before: ' + co.event.code);
                    //debug('applying value: ' + vars[i].value);
                    co.event.code = _replaceAll(co.event.code, '$' + vars[i].name, vars[i].value);
                    co.event.code = _replaceAll(co.event.code, '${' + vars[i].name + '}', vars[i].value);
                    //debug('code after: ' + co.event.code);
                }
            }

            // apply to all code blocks
            if (tutorData._code) {
                var ct = tutorData._code.length;
                for (var ci = 0; ci < ct; ci++) {
                    var co = tutorData._code[ci];
                    co.code = _replaceAll(co.code, '$' + vars[i].name,
                    vars[i].value);
                    co.code = _replaceAll(co.code, '${' + vars[i].name + '}',
                    vars[i].value);
                }
            }
        }

    }
}

/** return the JSON string reprsentation of the solution context.
 *
 *   NOTE: each value is in Base64.
 *
 * @param vars
 * @returns {String}
 */
function getTutorVariableContextJson(vars) {
    if (!vars) {
        return null;
    }
    /** convert vars to a JSON string with values as Base64
     *
     */
    try {
        var jsonStr = '';
        for (var i = 0, t = vars.length; i < t; i++) {
            var v = vars[i];
            if (i > 0) {
                jsonStr += ',\n';
            }

            jsonStr += '{"name":"' + v.name + '","init":"","type":"' + v.type + '", "value":"' + Base64.encode(String(v.value)) + '"}';
        }
        jsonStr = '{"_variables":[' + jsonStr + ']}';

        //document.open();document.write(jsonStr);document.close();    return;
        return jsonStr;
    } catch (e) {
        alert(e);
    }
}


/** regular expression for finding control characters in
 *  String.  This is to work around a bug where control
 *  chars are inserted via context creation
 */
var _regExpLookControl =  /[^\u0000-\u00ff]/;

/** get the tutor variables context object.
 All values are Base64 decoded.
 */
function getTutorVariableContextFromJson(json) {
    var variables = {};
    try {
        var varsObject = eval('(' + json + ')');;
        for (var i = 0, t = varsObject._variables.length; i < t; i++) {
            var v = varsObject._variables[i];
            v.value = Base64.decode(v.value);
            if(_regExpLookControl.test(v.value)) {
            	v.value = v.value.replace(/[^(\u0000-\u00ff|\u2200-\u22ff|\u03b1-\u03c9)]/g, "\u00b2");
            	console.log('context value control character was replaced in \'' + v.name + '\'');
            }
        }
        return varsObject;
    } catch (e) {
        alert(e);
    }
}

/**
 * create value for variable v
 *
 * Depending on type of variable, create the appropriate type.
 *
 * @param v
 */

function generateVarValue(v) {
    try {
        //console.log('debug generate var: ' + v.name);
        if (v.init) {
            if (v.type == 'PROVIDED') {
                return eval(v.init);
            } else if (v.type == 'TEMPLATE') {
                // alert('evaluating template: ' + v.init);
                return eval(v.init);
            } else {
                return v.init;
            }
        }
        else {
            return ''; // default to empty string no undefined vars
        }
    } catch (e) {
        console.log('error processing variable: ' + v.name + ', ' + v.type + ', ' + v.init + ", " + e);
    }
}

/** Fire tutor events.
 *  tutor events are defined as:
 *
 *   <div type='event' event_type='EVENT_TYPE'>THE_JS</div>
 *
 * @param eventName
 * @param arg
 */

function fireTutorEvent(eventName, arg, tutorWrapper) {
    try {
        console.log('fire tutor event: ' + eventName);

        if(typeof tutorWrapper != 'object') {
            tutorWrapper = TutorWrapper; // singleton
        }
        
        
        var tutorOutput = tutorWrapper.tutorDomNode;
        if (!tutorOutput) {
            return;
        }

        var eventBlocks = tutorWrapper.tutorData._events;
        if (eventBlocks) {
            for (var i = 0, t = eventBlocks.length; i < t; i++) {
                var eventType = eventBlocks[i].event.type;
                if (!eventType) {
                    continue;
                }

                var jsToExecute = eventBlocks[i].event.code;
                if (eventType && jsToExecute) {
                    console.log('onevent: ' + eventType + '=' + jsToExecute);
                    if (eventType == eventName) {

                        //jsToExecute = 'alert(new Date())';
                        // define a JS method to
                        // contains the event code
                        //
                        // (the false|| is a hack around IE not executing anonymous functions)
                        var method = 'false||function(args){' + jsToExecute + "}";

                        //alert('executing : ' + jsToExecute);
                        //var func = new Function(jsToExecute);
                        //func(arg);
                        // evaluate the new function and
                        // store in tempFunc
                        tempCallableFunction = eval('(' + method + ')');
                        // make the call passing in any
                        // parameters
                        tempCallableFunction(arg);
                    }
                }
            }
        }
    } catch (e) {
        console.log('widget event error: ' + e);
    }
}

function _replaceAll(str, token, value) {
    var intIndexOfMatch = str.indexOf(token);

    while (intIndexOfMatch != -1) {
        // Relace out the current instance.
        str = str.replace(token, value);

        // Get the index of any next matching substring.
        intIndexOfMatch = str.indexOf(token);
    }

    return str;
}

function gwt_tutorInputWidgetComplete(yesNo) {
    alert('default gwt_tutorInputWidgetComplete:' + yesNo);
}
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/** Client side mathml transformation processing

    Needs to mirror process on server.
    
    Process is broke up into rules. Each rule is applied
    in sequence.   Only if mathsize not set it is changed.
    
    The order of the rules is important.  The order should be:
            MathTemplates.MnMfracMn,
            MathTemplates.MfracWithVariableInMn,
            MathTemplates.MfracWithNumberInMn,
            MathTemplates.MrootMrowMsup,
            MathTemplates.MfracWithMo,
            MathTemplates.MfracWithMi,
            MathTemplates.MsqrtMi,
            MathTemplates.MrootMn,
            MathTemplates.MrootMi,
            MathTemplates.MrootOther,
            MathTemplates.MtrMtdMi,
            MathTemplates.MfracMtext,
            MathTemplates.MFracMtextBalance,
            MathTemplates.MsupLastMnWithPrevSiblingMrow,
            MathTemplates.MsupWithExactlyTwoMi,
            MathTemplates.MsupWithExactlyTwoMn,
            MathTemplates.MsupWithExactlyMnMi,
            MathTemplates.MsupWithExactlyMiMn,
            MathTemplates.MsupMi,
            MathTemplates.MsubMiMnMo,
            MathTemplates.AllMi,
            MathTemplates.AllMn
*/
var Cm2Application;
(function (Cm2Application) {
    var MathMl;
    (function (MathMl) {
        var MathMlTransform = (function () {
            function MathMlTransform() {
                this.rules = [
                    new Rules.MnFracMn(),
                    new Rules.MfracWithVariableInMn(),
                    new Rules.MfracMtext()];
            }
            MathMlTransform.prototype.processHtml = function (html) {
                var jqNodes = $.parseHTML(html);
                for (var r = 0; r < this.rules.length; r++) {
                    var rule = this.rules[r];
                    rule.processHtml(jqNodes);
                }
                return $(jqNodes).html();
            };
            return MathMlTransform;
        }());
        MathMl.MathMlTransform = MathMlTransform;
        var Rules;
        (function (Rules) {
            var IRuleImplDefault = (function () {
                function IRuleImplDefault() {
                }
                IRuleImplDefault.prototype.processHtml = function (html) {
                    return html;
                };
                IRuleImplDefault.prototype.replaceIfNotSet = function (jqNodes, value, callback) {
                    for (var n = 0; n < jqNodes.length; n++) {
                        var node = jqNodes.eq(n);
                        if (!node.attr('mathsize')) {
                            if (!callback || callback(node)) {
                                // only if no callback, or callback returns true
                                node.attr('mathsize', value);
                            }
                        }
                    }
                };
                IRuleImplDefault.prototype.contentIsNumber = function (content) {
                    return $.isNumeric(content);
                };
                return IRuleImplDefault;
            }());
            var MnFracMn = (function (_super) {
                __extends(MnFracMn, _super);
                function MnFracMn() {
                    _super.apply(this, arguments);
                }
                MnFracMn.prototype.processHtml = function (jqNodes) {
                    var els = $("math mn+mfrac mn", jqNodes);
                    this.replaceIfNotSet(els, "1.2em");
                };
                return MnFracMn;
            }(IRuleImplDefault));
            Rules.MnFracMn = MnFracMn;
            var MfracWithVariableInMn = (function (_super) {
                __extends(MfracWithVariableInMn, _super);
                function MfracWithVariableInMn() {
                    _super.apply(this, arguments);
                }
                MfracWithVariableInMn.prototype.processHtml = function (jqNodes) {
                    var _this = this;
                    var els = $("math mfrac mn", jqNodes);
                    this.replaceIfNotSet(els, "1.2em", function (node) {
                        return !_this.contentIsNumber(node);
                    });
                };
                return MfracWithVariableInMn;
            }(IRuleImplDefault));
            Rules.MfracWithVariableInMn = MfracWithVariableInMn;
            var MfracMtext = (function (_super) {
                __extends(MfracMtext, _super);
                function MfracMtext() {
                    _super.apply(this, arguments);
                }
                MfracMtext.prototype.processHtml = function (jqNodes) {
                    var els = $("math mfrac mtext", jqNodes);
                    this.replaceIfNotSet(els, "1.2em");
                };
                return MfracMtext;
            }(IRuleImplDefault));
            Rules.MfracMtext = MfracMtext;
        })(Rules || (Rules = {}));
    })(MathMl = Cm2Application.MathMl || (Cm2Application.MathMl = {}));
})(Cm2Application || (Cm2Application = {}));
var _mathMlTransform = new Cm2Application.MathMl.MathMlTransform();if (typeof console === "undefined") {
    console = {
        log: function (x) {
            // empty
        }
    };
}
/**
 * Register with the HM Solution event system to be notified after the Tutor has
 * been fully initialized.
 *
 * Only subscribe once.
 *
 */
HmEvents.eventTutorInitialized.subscribe(

    function (tutorWrapper) {
        try {
            _showTutorWidget(tutorWrapper);
            _setupTutorMultiChoice(tutorWrapper);
        } catch (e) {
            alert('error: ' + e);
        }
    });

function setTutorConfiguration(config) {
    _tutorConfiguration = config;
}

var _enableJsWidgets = true;
var _active

/**
 * global configuration object used provide customization to the widgets.
 *
 * User can all setTutorConfiguration to provide customization.
 *
 */
var _tutorConfiguration;

function _showTutorWidget(tutorWrapper) {

    /**
     * if no config object provided,create a default one.
     */
    if (!_tutorConfiguration) {
        _tutorConfiguration = {
            'submitButtonText': 'Check Answer',
            'indicateWidgetStatus': 'DEFAULT'
        };
    }

    TutorSolutionWidgetValues.setActiveWidgetDummy();


    var problemHead = $get('problem_statement', tutorWrapper?tutorWrapper.tutorDomNode:null);
    if (problemHead == null) {
        return;
    }

    /**
     * remove the Flash widget, if specified. This is to get around a bug with
     * Safari on IOS that still tries to load the Flash widget and shows the
     * JSON
     */
    var flashWidget = $get("hm_flash_object", tutorWrapper?tutorWrapper.tutorDomNode:null);
    if (flashWidget) {
        flashWidget.innerHTML = "";
    }

    var divs = problemHead.getElementsByTagName('div');
    for (var w = 0, t = divs.length; w < t; w++) {
        var widgetDiv = divs[w];
        var cn = getNodeName(widgetDiv);
        if (cn == 'hm_flash_widget') {
            /** extract embedded JSON */
            var jsonDef = $get('hm_flash_widget_def', widgetDiv);
            if (jsonDef) {
                if (_enableJsWidgets) {
                    _json = jsonDef.innerHTML;

                    debug('widget JSON: ' + _json);

                    var jsonObj = eval('(' + _json + ')');
                    
                    // add the tutorWrapper instance to the widget config JSON
                    // the widget have access to this object and can access the 
                    // tutor dom elements directly.
                    jsonObj.tutorWrapper = tutorWrapper;
                    
                    var createdWidget = HmFlashWidgetFactory.createWidget(jsonObj, widgetDiv);
                    
                    
                    // any post widget creation rountines
                    postProcessingWidget(createdWidget);
                    
                    createdWidget.widgetJson = _json;

                    // tell system about the new 'active' widget
                    TutorSolutionWidgetValues.setActiveWidget(createdWidget);
                    /*
                     * try{
                     * MathJax.Hub.Queue(["Typeset",MathJax.Hub,'mathjax_dummy']);
                     * }catch(e){ console.log("MathJax Typeset error"); }
                     */
                } else {
                    showFlashObject();
                    widgetDiv.style.display = 'none';
                }
            } else {
                // make sure there is not an interactive widget
                // and no input widgets at all
                if (problemHead.innerHTML.indexOf('div widget') == -1 && problemHead.getElementsByTagName("input").length == 0) {
                    createWhiteboardWidget(widgetDiv, tutorWrapper.whiteboardText);
                } else {
                    // THERE IS AN INTERACTIVE WIDGET
                    //
                    // define not used wrapper not shown
                    // alert('interactive widget found');
                    widgetDiv.style.display = 'none';
                }
            }
        }
    }
}


function postProcessingWidget(widget) {
	$('input', widget._widgetForm).attr({
	    "widgetautocorrect" : "off",
	    "autocapitalize" : "off"
	  });	
}

function createWhiteboardWidget(widgetDiv, whiteboardText) {
    // alert('widget and interactive widget not used');
	widgetDiv.innerHTML = _getWidgetNotUsedHtml(whiteboardText);;
	return;
	
	
    widgetDiv.innerHTML = _createGuiWrapper().innerHTML;
    var info = document.createElement("div");
    info.innerHTML = _getWidgetNotUsedHtml(whiteboardText);
    widgetDiv.appendChild(info);
}

function cm_unescape(str) {
    return unescape(decodeURI(str));
}

var _json
var shiftFocus = false;
var moveFocus = false;
var newFocus = null;
var newPos = 0;
var keyIsDown;
var HmFlashWidgetFactory = {
    createWidget: function (jsonObj, widgetDiv) {

        if (jsonObj.type == 'number_integer') {
            if (jsonObj.format == 'angle_deg') {
                return new HmFlashWidgetImplNumberIntegerAngleDeg(jsonObj);
            } else {
                return new HmFlashWidgetImplNumberInteger(jsonObj);
            }
        } else if (jsonObj.type == 'number_decimal') {
            if (jsonObj.format == 'money') {
                return new HmFlashWidgetImplNumberMoney(jsonObj);
            } else {
                return new HmFlashWidgetImplNumberDecimal(jsonObj);
            }
        } else if (jsonObj.type == 'inequality') {
            return new HmFlashWidgetImplInequality(jsonObj);
        } else if (jsonObj.type == 'number_fraction') {
            return new HmFlashWidgetImplNumberIntegerFraction(jsonObj);
        } else if (jsonObj.type == 'number_simple_fraction') {
            return new HmFlashWidgetImplSimpleFraction(jsonObj);
        } else if (jsonObj.type == 'number_rational') {
            return new HmFlashWidgetImplRational(jsonObj);
        } else if (jsonObj.type == 'number_rational_mixed') {
            // just a wrapper for rational, with mixed option
            return new HmFlashWidgetImplRational(jsonObj);
        } else if (jsonObj.type == 'mChoice') {
            return new HmFlashWidgetImplMulti(jsonObj);
        } else if (jsonObj.type == 'coordinates') {
            return new HmFlashWidgetImplCoord(jsonObj);
        } else if (jsonObj.type == 'number_mixed_fraction') {
            return new HmFlashWidgetImplMixedFraction(jsonObj);
        } else if (jsonObj.type == 'power_form') {
            return new HmFlashWidgetImplPowerForm(jsonObj);
        } else if (jsonObj.type == 'scientific_notation') {
            return new HmFlashWidgetImplSciNotation(jsonObj);
        } else if (jsonObj.type == 'letter') {
            return new HmFlashWidgetImplLetter(jsonObj);
        } else if (jsonObj.type == 'odds') {
            return new HmFlashWidgetImplOdds(jsonObj);
        } else if (jsonObj.type == 'point_slope_form') {
            return new HmFlashWidgetImplPointSlopeForm(jsonObj);
        } else if (jsonObj.type == 'inequality_exact') {
            return new HmFlashWidgetImplInequalityExact(jsonObj);
        } else if (jsonObj.type == 'slope_intercept_form') {
            return new HmFlashWidgetImplSlopeInterceptForm(jsonObj);
        } else if (jsonObj.type == 'expressions') {
            return new HmFlashWidgetImplExpressions(jsonObj);
        } else if (jsonObj.type == 'combo_input') {
            console.log("combo_input init called")
            return new HmFlashWidgetImplComboInput(jsonObj);
        } else if (jsonObj.type == 'multi_yesno') {
            console.log("Multi YesNo init called")
            return new HmFlashWidgetImplMultiYesNo(jsonObj);
        } else if (jsonObj.type == 'multi_field') {
            console.log("Multi Fields init called")
            return new HmFlashWidgetImplMultiField(jsonObj);
        } else if (jsonObj.type == 'set') {
            console.log("Set init called")
            return new HmFlashWidgetImplSet(jsonObj);
        } else if (jsonObj.type == 'qe_vertexform') {
            console.log("QEVertexForm init called")
            return new HmFlashWidgetImplQEVertexForm(jsonObj);
        } else if (jsonObj.type == 'qe_standardform') {
            console.log("QEStandardForm init called")
            return new HmFlashWidgetImplQEStandardForm(jsonObj);
        } else if (jsonObj.type == 'qe_factoredform') {
            console.log("QEFactoredForm init called")
            return new HmFlashWidgetImplQEFactoredForm(jsonObj);
        } else if (jsonObj.type == 'exponent_form') {
            return new HmFlashWidgetImplExponentForm(jsonObj);
        } else if (jsonObj.type == 'log_form') {
            return new HmFlashWidgetImplLogarithmicForm(jsonObj);
        } else if (jsonObj.type == 'polynomial') {
            return new HmFlashWidgetImplPolynomialForm(jsonObj);
        } else if (jsonObj.type == 'polynomial_mv') {
            return new HmFlashWidgetImplPolynomialMVForm(jsonObj);
        } else if (jsonObj.type == 'matrix') {
            return new HmFlashWidgetImplMatrixForm(jsonObj);
        } else if (jsonObj.type == 'table') {
            return new HmFlashWidgetImplTableForm(jsonObj);
        } else if (jsonObj.type == 'widget_plot') {
            return new HmFlashWidgetImplWidgetPlot(jsonObj);
        } else if (jsonObj.type == 'fraction_model') {
            return new HmFlashWidgetImplFractionModel(jsonObj);
        } else if (jsonObj.type == 'prime_factors') {
            return new HmFlashWidgetImplPrimeFactors(jsonObj);
        } else if (jsonObj.type == 'ratio') {
            return new HmFlashWidgetImplRatio(jsonObj);
        } else if (jsonObj.type == 'conicsection') {
            return new HmFlashWidgetImplConicSection(jsonObj);
        } else if (jsonObj.type == 'sigma_notation') {
            return new HmFlashWidgetImplSigma(jsonObj);
        } else if (jsonObj.type == 'complex_number') {
            return new HmFlashWidgetImplComplexNumber(jsonObj);
        } else if (jsonObj.type == 'trigonometry') {
            return new HmFlashWidgetImplTrig(jsonObj);
        } else if (jsonObj.type == 'whiteboard') {
            return new HmFlashWidgetImplWhiteboard(jsonObj, widgetDiv);
        } else {
            alert("tutor widget: do not know how to initialize: " + jsonObj.type);
        }
    }
};
/**
 * Collection of field types
 */
var coord_html = "<span style='font-size: 40px;font-weight: bold'>&#40;<span>" + 
                 "<input style='width: 50px;text-align:center;'  name='widget_input_field_1' type='text'/>" + ",&nbsp;" + 
                 "<input style='width: 50px;text-align:center;' name='widget_input_field_2' type='text'/>" + 
                 "<span style='font-size: 40px;font-weight: bold'>&#41;<span>";
var norm_html = "<input name='widget_input_field_1'  type='text' style='text-align:center;'/>";
// style='float:left;clear:both;'
function getNormalField(id,_w) {
var w=_w?_w:'75'
    var norm_html = "<input name='widget_input_field_" + id + "' name='widget_input_field_" + id + "' type='text' style='float:left; width:"+w+"px; text-align:center; font-weight: bold;'/>";
    return norm_html;
}
function getNormalblock(id, w) {
    var norm_html = "<input name='widget_input_field_norm_" + id + "' type='text' style='float:left; width:"+w+"px; text-align:center; font-weight: bold;'/>";
    return norm_html;
}
function getRationalUnit(id, wi, frac, exp) {
    var w = wi ? wi : 75;
    var _frac = frac===undefined ? true : frac;
    var _exp = exp===undefined ? true : exp;
    var html = "<div style='position:absolute;'>";
    if (_frac) {
        html += "   <div name='widget_input_field_base_" + id + "' style='position: absolute; left: 0;'>" + getFractionField(id, w) + "</div>"
    } else {
        html += "   <div name='widget_input_field_base_" + id + "' style='position: absolute; left: 0;'>" + getNormalblock(id, w) + "</div>"
    }
    if (_exp) {
        html += "   <input class='exponent' name='widget_input_field_exp_" + id + "' type='text' style='position: relative;  top: -8px;left:"+(w+5)+"px;font-size: .5em;width: " + (w * 0.55) + "px;text-align:left;display:none;'/>"
    }
    html += "</div>";
    return html;
}
function getFractionField(id, w, format) {
    var wid = w ? w : 80
    var disp1 = format == 'fraction' ? 'inline' : 'none';
    var disp2 = format == 'fraction' ? 'block' : 'none';
    var html = "<div style='height: 75px;float: left;'>" + "<div style='float: left;'>" + "<input name='widget_input_field_norm_" + id + "' type='text' style='width: " + wid + "px;text-align:center;font-weight: bold;'/>" + "<div name='widget_divider_" + id + "' class='divider' style='display: " + disp2 + ";width:" + wid + "px;'>&nbsp;</div>" + "<input name='widget_input_field_den_" + id + "' type='text' style='display: " + disp1 + ";width: " + wid + "px;text-align:center;font-weight: bold;'/>" + "</div>" + "</div>";
    return html
}

function getFractionHTML(n, d, w) {
    var wid = w ? w : 80
    var html = "<div style='float: left;'>" + "<div style='width: " + wid + "px;text-align:center;font-weight: bold;'>" + n + "</div>" + "<div class='divider' style='width:" + wid + "px;'>&nbsp;</div>" + "<div style='width: " + wid + "px;text-align:center;font-weight: bold;'>" + d + "</div>" + "</div>";
    return html;
}

function getComboInput(id, combo_data, combo_disp) {
    var opts = "";
    var disp = combo_disp ? combo_disp : combo_data;
    for (var i = 0; i < combo_data.length - 1; i++) {
        opts += "<option value=" + combo_data[i] + ">" + disp[i] + "</option>"
    }
    var comboHTML = "<select name='icombo_" + id + "'>" + opts + "</select>";
    return comboHTML
}

function getExponentField(b, e) {
    // var html_0 = "<div style='position: relative;height: 40px;'>" + " <input
    // name='widget_input_field_1' type='text' style='position: absolute; left:
    // 0;width: 87px;text-align:right;'/>" + " <input name='widget_input_field_2'
    // type='text' style='position: absolute; top: -10px;left:90px;font-size:
    // .6em;width: 40px;text-align:left;'/>" + "</div>";
    var html = "<div style='position: relative;height: 40px;'>";
    if (b !== undefined) {
        html += "   <div name='widget_input_field_1' style='position: absolute; left: 0;width: 87px;text-align:right;'>" + b + "</div>"
    } else {
        html += "   <input name='widget_input_field_1' type='text' style='position: absolute; left: 0;width: 87px;text-align:right;'/>"
    }
    if (e !== undefined) {
        html += "   <div class='exponent' name='widget_input_field_2'  style='position: absolute;  top: -10px;left:90px;font-size: .6em;width: 40px;text-align:left;'>" + e + "</div>"
    } else {
        html += "   <input class='exponent' name='widget_input_field_2' type='text' style='position: absolute;  top: -10px;left:90px;font-size: .6em;width: 40px;text-align:left;'/>"
    }
    html += "</div>";
    return html;
}

function getExponentField_adv(b, e, show_ans, ans, id) {
    // var html_0 = "<div style='position: relative;height: 40px;'>" + " <input
    // name='widget_input_field_1' type='text' style='position: absolute; left:
    // 0;width: 87px;text-align:right;'/>" + " <input name='widget_input_field_2'
    // type='text' style='position: absolute; top: -10px;left:90px;font-size:
    // .6em;width: 40px;text-align:left;'/>" + "</div>";
    var bid = id ? "_" + id : "";
    var eid = id ? "_" + id : "";
    var aid = id ? "_" + id : "";
    var html = "<div style='position: relative;height: 75px;'>";
    if (b !== undefined) {
        html += "   <div name='widget_input_field_base" + bid + "' style='position: absolute; left: 0;width: 87px;text-align:right;'>" + b + "</div>"
    } else {
        html += "   <div name='widget_input_field_base" + bid + "' style='position: absolute; left: 0;'>" + getFractionField(1, 87) + "</div>"
    }
    if (e !== undefined) {
        html += "   <div class='exponent' name='widget_input_field_exp" + eid + "'  style='position: absolute;  top: -10px;left:90px;font-size: .6em;width: 40px;text-align:left;font-weight:bold;'>" + e + "</div>"
    } else {
        html += "   <input class='exponent' name='widget_input_field_exp" + eid + "' type='text' style='position: absolute;  top: -10px;left:90px;font-size: .6em;width: 40px;text-align:left;font-weight:bold;'/>"
    }
    if (show_ans) {
        html += "   <div name='widget_input_field_eql' style='position: absolute; left: 140px;text-align:right;'>=</div>"
        if (ans !== undefined) {
            html += "   <div name='widget_input_field_ans" + aid + "' style='position: absolute; left: 160px;text-align:right;'>" + ans + "</div>"
        } else {
            html += "   <div name='widget_input_field_ans" + aid + "' style='position: absolute; left: 160px;text-align:right;'>" + getFractionField(3, 87) + "</div>";
        }
    }
    html += "</div>";
    return html;
}
function getExponentField_mf(b, e, show_ans, ans, id) {
    var bid = id ? "_" + id : "";
    var eid = id ? "_" + id : "";
    var aid = id ? "_" + id : "";
    var html = "<div style='position: relative;height: 75px;float:left;'>";
    if (b !== undefined) {
        html += "   <div name='widget_input_field_base" + bid + "' style='position: absolute; left: 0;width: 87px;text-align:right;'>" + b + "</div>"
    } else {
        html += "   <div name='widget_input_field_base" + bid + "' style='position: absolute; left: 0;'>" + getFractionField(id, 87) + "</div>"
    }
    if (e !== undefined) {
        html += "   <div class='exponent' name='widget_input_field_exp" + eid + "'  style='position: absolute;  top: -10px;left:90px;font-size: .6em;width: 40px;text-align:left;font-weight:bold;'>" + e + "</div>"
    } else {
        html += "   <input class='exponent' name='widget_input_field_exp" + eid + "' type='text' style='position: absolute;  top: -10px;left:90px;font-size: .6em;width: 40px;text-align:left;font-weight:bold;'/>"
    }
    html += "</div>";
    return html;
}
function getLogField_adv(b, e, show_ans, ans) {
    // var html_0 = "<div style='position: relative;height: 40px;'>" + " <input
    // name='widget_input_field_1' type='text' style='position: absolute; left:
    // 0;width: 87px;text-align:right;'/>" + " <input name='widget_input_field_2'
    // type='text' style='position: absolute; top: -10px;left:90px;font-size:
    // .6em;width: 40px;text-align:left;'/>" + "</div>";
    var html = "<div style='position: relative;height: 75px;'>";
    html += "<div style='position: absolute; left: 0;width: 40px;text-align:right;'>log</div>";
    if (e !== undefined) {
        html += "   <div class='exponent' name='widget_input_field_exp'  style='position: absolute;  top: 15px;left:43px;font-size: .6em;width: 35px;text-align:left;'>" + e + "</div>"
    } else {
        html += "   <input class='exponent' name='widget_input_field_exp' type='text' style='position: absolute;  top: 15px;left:43px;font-size: .6em;width: 35px;text-align:left;'/>"
    }
    if (b !== undefined) {
        html += "   <div name='widget_input_field_base' style='position: absolute; left: 86px;width: 87px;text-align:center;'>" + b + "</div>"
    } else {
        html += "   <div name='widget_input_field_base' style='position: absolute; left: 86px;'>" + getFractionField(1, 80) + "</div>"
    }

    if (show_ans) {
        html += "   <div name='widget_input_field_eql' style='position: absolute; left: 176px;text-align:right;'>=</div>"
        if (ans !== undefined) {
            html += "   <div name='widget_input_field_ans' style='position: absolute; left: 200px;text-align:right;'>" + ans + "</div>"
        } else {
            html += "   <div name='widget_input_field_ans' style='position: absolute; left: 200px;text-align:right;'>" + getFractionField(3, 80) + "</div>";
        }
    }
    html += "</div>";
    return html;
}

function getPowerHTML(b, e) {
    var html = "<div style='position: relative;height: 40px;'>";
    html += "   <div style='position: absolute; left: 0;width: 87px;text-align:right;'>" + b + "</div>";
    html += "   <div class='exponent' style='position: absolute;  top: -10px;left:90px;font-size: .6em;width: 40px;text-align:left;'>" + e + "</div>";

    html += "</div>";
    return html;
}

function getNormalFieldWithSelect(id, labForSelect, onlySel) {
    var _html = "<input name='widget_input_field_" + id + "' name='widget_input_field_" + id + "' type='text' style='width:200px; text-align:left; font-weight: bold;'/>";

    if (labForSelect) {
        if (onlySel) {
            _html = "";
        }
        _html += "<div class='simplified_wrapper'>" + "  <label>" + labForSelect + " <input data-bind='widget_input_field_" + id + "' name='widget_input_simplified_" + id + "' type='checkbox' onclick='onOptionSelect(" + id + ")'" + "/></label>" + "</div>";
    }
    return _html;
}

function getRepeaterField(id, w, show) {
    var wid = w ? w : 75;
    var disp = show ? 'block' : 'none';
    var rep_left = w + 2;
    var html = "<div style='display:" + disp + ";' name=widget_input_rep_cont_" + id + ">"
    html += "<input type='text' class='repeater' style='text-align:left;font-weight:bold;border-left:0px;width:" + w + "px' name=widget_input_field_rep_" + id + " /><div style='width:" + w + "px;position:relative;top:-27px;left:" + rep_left + "px;' class='divider' name=overbar_" + id + "></div>"
    html += "</div>";
    return html
}

function getMChoiceField(id, value, format, sep, useBase64) {
    var s = sep ? sep : "|"
    var values = s == 'null' || s == null ? eval(value) : value.split(s);
    var use_question_def = value == 'use_question_def'

    var isMultiSelect = format == 'multiselect';
    var inputType = isMultiSelect ? 'checkbox' : 'radio';

    var items = '';
    /** all but last, which has answer */
    for (var v = 0, t = values.length - 1; v < t; v++) {
        items += '<input type="' + inputType + '" name="mchoice_' + id + '" onclick="setWidgetMessage(null)" value="' + values[v] + '"/>';
        items += '<span>' + useBase64 != null && useBase64 ? Base64.decode(values[v]) : values[v] + '</span>';
        items += '<br/>';
    };
    /* if (use_question_def) {
        var node = "";
        items = "";
        var values = "";
        var ans;
        var correct = 0;
        var _c=[]
        $('#hm_question_def ul li').each(function(index) {
            values += (index + 1) + "|";
            node = "<div>";
            node += '<input style="float:left" type="'+inputType+'" name="widget_value" onclick="setWidgetMessage(null)" value="' + (index + 1) + '"/>';
            node += '<span>' + $(this).html() + '</span>';
            node += '</div>';
            items += node;
            correct = $(this).attr('correct') == 'yes' ? index + 1 : correct;
            if(isMultiSelect){
                if($(this).attr('correct') == 'yes'){
                    _c.push(index+1);
                }
            }
        });
        values += isMultiSelect?_c.join(","):correct;
        //this._jsonObj.value = values;

    }*/

    return items;
}

function onOptionSelect(id) {
    //
    showWidgetSubmit(true);
    var num = $get('widget_input_field_' + id);

    if (num) {
        num.value = "";
        var den = $get('widget_input_field_2');
        if (den && ($(den).is(":visible"))) {

            HmFlashWidgetImplRational.prototype.configureAsFraction(false)
        }
    }
}
var sub_indi_array = [];

function removeSubIndi() {
        var l = sub_indi_array.length;
        for (var i = 0; i < l; i++) {
            var ele = $get(sub_indi_array[i]);
            if (ele) {
                ele.style.display = 'none';
            }
        }
    }
    /** Called when Flash Tutor widget calls */

function flash_quizResult(x) {
    // enable the Tutor's next button
    // setState('step',true);
}

/** Create question element */

function _createQuestionStep(el) {
     var lists=$(el).find("p");
    lists.each(function(){
        var para=$(this);
        var checkforwrap=para.parent().prop("tagName")==="DIV";
        if(!checkforwrap){
            para.wrap("<div></div>");
        }
    });
    // first child div is the question
    var divs = el.getElementsByTagName('div');

    for (var d = 0, t = divs.length; d < t; d++) {
        var del = divs[d];
        if (d == 0) {
            // the question text
        } else if ((d % 2) != 0) {
            // a choice
            var html = "<img class='ques_icon' src='/images/tutor5/hint_question-16x16.gif' onmouseover='showMouseAnswer(this)' onmouseout='nd()'/>";
            del.innerHTML = html + del.innerHTML;
        } else {
            del.style.display = 'none';
        }
    }
}

function showMouseAnswer(el) {
    var imgTarget = el;
    var questionDiv = el.parentNode.parentNode;
    var qc = questionDiv.getAttribute('correct');
    var isCorrect = (qc == 'true' || qc == 'yes');
    var divs = questionDiv.getElementsByTagName("div");

    var divResponse = divs[1]; // second div in list item
    var message = divResponse.innerHTML;
    var stringResourceCorrect = isCorrect ? 'yes' : 'no';
    var pathToImages = '/images';
    if (stringResourceCorrect == 'yes') {
        message = "<img class='question_correct_incorrect' src='" + pathToImages + "/tutor5/question_correct.gif'>" + message;
    } else {
        message = "<img class='question_correct_incorrect' src='" + pathToImages + "/tutor5/question_incorrect.gif'>" + message;
    }
    return overlib(message, FGCLASS, 'ol_question_style');
}
/**
* wrap widget with prefix and postfix texts
*/
function applyPrePostfixFormat(obj,_html,t){
    var measure = '';
    var format = '';
    var prefix = '';
    if (obj.format) {
        format = obj.format;
        var vm = unescape(format).split('|');
        if (vm.length > 1) {
            measure = vm[1];
            prefix = vm[0];
        }
        var mp = format.split('^');
        var raised = null;
        if (mp.length > 1) {
            measure = mp[0];
            raised = mp[1];
        } else {
            measure = unescape(obj.format);
        }
        var font_style = "";
        if (measure) {
            if (measure == 'angle_deg') {
                return _html
            } else {
            var _m=measure.split('_')
                measure = _m[1];
                if(measure=='simplified'){
                measure=_m[2]?_m[2]:"";
                }
            }
            var dummy = $("<input>");
            $('body').append(dummy);
            var icss = dummy.css('font-style') + " ";
            icss = dummy.css('font-variant') + " ";
            icss += dummy.css('font-weight') + " ";
            icss += dummy.css('font-size') + " ";
            icss += dummy.css('font-family');
            dummy.remove();
            font_style = "font:" + icss + ";font-weight:bold";
            font_style = ""
        }

        if (!measure)
            measure = '';

        format = '';
        if (raised) {
            measure += "<span style='vertical-align: baseline;font-size: 0.8em;position: relative;top: -0.4em;'>" + raised + "</span>";
        }
    }
    var _t=t?t:'top:25%'
   var _t2=t?_t:"position:relative;"+_t

    var html = "<div style='height: 75px;'>" + "<div style='float: left;"+_t2+";margin-right: 5px;'>" + prefix + "</div>" +  "<div style='float:left;position:relative;'>" +    

        _html + "</div><span class='input_units' style='vertical-align: baseline;position: relative;"+_t+";" + font_style + "'>&nbsp;" + measure + "</span>"
    
    return html;
}
//
/**
 * Setup any multiple choice widgets on form
 *
 * This will also register with TutorSolutionWidgetValues the current active
 * widget.
 *
 * So, only one of the widget types can be active at any one time. 'input',
 * 'interactive', 'multi'.
 */
function _setupTutorMultiChoice() {

    _searchForMultiChoiceWidgets();

    var tutorOuput = $get('tutoroutput');
    if(tutorOuput) {
        var multiChoice = tutorOuput.getElementsByTagName('div');
        for (var d = 0, t = multiChoice.length; d < t; d++) {
            if (multiChoice[d].className == 'hm_question_def') {
                var el = multiChoice[d];
                _createQuestionStep(el);
            }
        }
    }
}

/**
 * only set active widget, if it is in the problem statement
 *
 */
function _searchForMultiChoiceWidgets() {
    
    var problemStatement = $get('problem_statement');
    if (problemStatement == null) {
        return;
    }

    /** if there is a widget definition, then do not process 
     * 
     * TODO: is this correct..?
     */
    var ps = problemStatement.innerHTML;
    if(ps.indexOf('not-used') == -1 && ps.indexOf('not_used') == -1) {
    	// there is a widget
    	return;
    }
    
    var multiChoice = problemStatement.getElementsByTagName('div');
    for (var d = 0, t = multiChoice.length; d < t; d++) {
        if (multiChoice[d].className == 'hm_question_def') {
            var thisQuestion = multiChoice[d];
            var thisWidgetValueAdapter = {
                getWidgetValue: function () {
                    return null;
                },
                setWidgetValue: function (value, indicateCorrectFalse) {
                    var opSelect = _setMultiChoiceSelection(thisQuestion, value);
                    if (indicateCorrectFalse) {
                        thisWidgetValueAdapter.setWidgetMessage(opSelect.value);
                    }
                },
                setWidgetMessage: function (correct) {
                    var html = null;
                    if (_tutorConfiguration.indicateWidgetStatus == 'INDICATE_SUBMIT_ONLY') {
                        html = "Submitted";
                    } else if (_tutorConfiguration.indicateWidgetStatus == 'NONE') {
                        html = "";
                    } else {
                        if (correct == 'true') {
                            html = "<img src='/tutor/widget/images/widget_correct.png'/> <span>Correct</span>";
                        } else {
                            html = "<img src='/tutor/widget/images/widget_incorrect.png'/> <span>Incorrect</span>";
                        }
                    }

                    /**
                     * create or reuse the message div
                     *
                     */
                    var theElement = null;
                    var divs = thisQuestion.getElementsByTagName('ul')[0].getElementsByTagName('div');
                    if (divs.length > 0) {
                        for (var i = 0; i < divs.length; i++) {
                            var e = divs[i];
                            if (e.className == 'tutor-widget-mc-indicator') {
                                theElement = e;
                                break;
                            }
                        }
                        if (!theElement) {
                            // create new message div
                            theElement = document.createElement('div');
                            theElement.className = 'tutor-widget-mc-indicator';
                            thisQuestion.getElementsByTagName('ul')[0].appendChild(theElement);
                        }
                        theElement.innerHTML = html;
                    }
                }
            }

            TutorSolutionWidgetValues.setActiveWidget(thisWidgetValueAdapter);
        }
    }
}

/**
 * return the option node that is selected
 *
 * @param ques
 * @param value
 * @returns
 */
function _setMultiChoiceSelection(ques, value) {
    var options = ques.getElementsByTagName("input");
    var sel = Number(value);
    if (sel > 0) {
        if (options.length + 1 > sel) {
            options.item(sel - 1).checked = 'true';

            return options.item(sel - 1);
        }
    }
}

function _getWidgetNotUsedHtml(whiteboardText) {
	if(whiteboardText) {
	    var html = "<div class='widget-not-used'>" + whiteboardText + "</div>";
	    return html;
	}
	else {
		return "";
	}
}

function showWidgetSubmit(yesNo) {
    var w = $get('widget_submit');
    if (w) {
        w.disabled = yesNo ? false : true;
    }
}



/**
 * Copy prototype from one class to another. Allows for JS inheritance.
 */

function copyPrototype(descendant, parent) {
    var sConstructor = parent.toString();
    var aMatch = sConstructor.match(/\s*function (.*)\(/);
    if (aMatch != null) {
        descendant.prototype[aMatch[1]] = parent;
    }
    for (var m in parent.prototype) {
        descendant.prototype[m] = parent.prototype[m];
    }
};

/**
 * Utility Methods
 *
 */
var restrictionType_digitsOnly = /[1234567890-]/g;
var restrictionType_decimals = /[1234567890\-\+\.]/g;
var restrictionType_digitsOnlyWithSlash = /[1234567890\/]/g;
var restrictionType_digitsOnlyWithColon = /[1234567890:]/g;
var restrictionType_integerOnly = /[0-9]/g;
var restrictionType_alphaOnly = /[A-Z]/g;

var restrictionType_rational = /[1234567890\-\.]/g;
var restrictionType_exp1 = /[0-9a-zA-Z\-\+\.\^]/g;
var restrictionType_exp2 = /[0-9a-zA-Z%\$\/\-\+\.\^]/g;
var restrictionType_exp3 = /[0-9\=]/g;
var restrictionType_exp4 = /[0-9a-zA-Z\-\+\.\/\^]/g;
var restrictionType_set = /[,0-9a-z\-\+\.]/g;
var restrictionType_primefact = /[0-9\*\^]/g;
//
function restrictCharacters(myfield, e, restrictionType, m,n) {
    if (!e)
        var e = window.event
    if (e.keyCode)
        code = e.keyCode;
    else if (e.which)
        code = e.which;
    var _charCode = e.charCode;
    var character = String.fromCharCode(code);
    character = ((code == 190 || (code == 110 && (_charCode === 0 || _charCode === undefined))) ? '.' : character);
    // if they pressed esc... remove focus from field...
    var ifield_val = myfield.value;

    if (code == 27) {
        this.blur();
        return false;
    }    
    // ignore if they are press other keys
    if (_enableJsWidgets) {

        var jsonObj = eval('(' + _json + ')');

    }
    if(jsonObj.type=='scientific_notation'){
        if($(myfield).attr('name')=="widget_input_field_2"){
            n=n?(n+"."):".";
        }
    }
    var extra = eval('/[' + m + ']/g');
    var nextra = eval('/[' + n + ']/g');
    var allowChars = m ? character.match(extra) : false;
    var dntallowChars = n ? character.match(nextra) : false;
    console.log("KEY:" + code + ":" + character + ":" + _charCode);
    if ((code != 13 && !e.ctrlKey && code != 9 && code != 8 && code != 36 && code != 37 && code != 38 && (code != 39 || (code == 39 && character == "'")) && code != 40 && code != 46) || (character == "$") || (character == "%" && _charCode == 37) || (character == "&" && _charCode == 38) || (character == "(" && _charCode == 40)) {
        if (character.match(restrictionType) || allowChars) {
            if(dntallowChars){
            setWidgetMessage("Invalid Input")
                return false;
            }
            var isLegal = !(isIlegalChar(ifield_val, character, jsonObj.type, jsonObj));
            if(!isLegal){
            setWidgetMessage("Invalid Input")
            }
            return isLegal;
        } else {
        setWidgetMessage("Invalid Input")
            return false;
        }
    }
}

function isIlegalChar(val, c, inputType, obj) {
    console.log("CHECK_FOR_INPUT LEGALITY::: value: " + val + " character: " + c + " for type: " + inputType);
    var boo = false;
    var curpos = _getSelection();
    var s = curpos[0];
    var e = curpos[1];
    var valLen = val.length;
    var tstr = String(val);
    var lstr = tstr.substring(0, s)
    var mstr = c
    var rstr = tstr.substring(e)
    var str = lstr + mstr + rstr
    inputType=obj.format&&obj.format.indexOf('expression')>-1?'expressions':inputType;
        // Check for invalid '-' character
    if (inputType != 'letter' && inputType != 'expressions' && inputType != 'set'&& inputType != 'polynomial_mv') {
        var negC = str.split("-").length
        boo = negC > 2
        if (negC == 2) {
            boo = str.indexOf('-') > 0 ? (inputType == 'set' ? false : true) : false;
        }
        if (boo) {
            return boo;
        }
        // Check for invalid '.' character
        var decC = str.split(".").length
        boo = decC > 2
        if (boo) {
            return boo;
        }
    }
    if(inputType === 'expressions' || inputType === 'set'||inputType == 'polynomial_mv'){
        //var decimalPattern = /((\d+)?\.+){2,}|([^0-9]\.)|(\.[^0-9])/g;
        //var decimalPattern = /((\d+)?\.+){2,}|([^0-9]\.)|([^0-9]\.[^0-9])|(^\.[^0-9])/g;
        //var decimalPattern = /((\d+)?\.+){2,}|([^0-9]\.)|([^0-9]\.[^0-9])|(^\.)/g;
        var decimalPattern = /((\d+)?\.+){2,}|([^0-9^\+^\-]\.)|([^0-9]\.[^0-9])|(\.[^0-9])/g;
        if(inputType === 'set'){
            decimalPattern = /((\d+)?\.+){2,}|([^0-9]\.[^0-9])/g;
        }
        boo=str.match(decimalPattern)
        if(inputType === 'set'){
            var pcri=s===0?0:s-1;
            boo=str.charAt(pcri)===','&&str.charAt(s)===',';
        }
        return boo?true:false;
    }
    
    // Check for leading zero
    if(!(inputType==='combo_input'&&obj.format==='time')){
    if (str.charAt(0) == '0' && str.charAt(1).match(/[0-9]/g)) {
        boo = true;
    }
    }
    if (str.substring(0, 2) == '-0' && str.charAt(2).match(/[0-9]/g)) {
        boo = true;
    }
    if (boo) {
        return boo;
    }
    // check for illegal '%' character
    var negC = str.split("%").length;
    boo = negC > 2;
    if (negC == 2 && str.length > 1) {
        boo = str.indexOf('%') != str.length - 1;
    }
    if (boo) {
        return boo;
    }
    return boo;
}

function isAMinusCharacter(event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    console.log("KEY_CODE:" + code);
    if (code == 45) { // minus (for the case of repeating decimals)
        return true;
    }
    return false;
}

function isASlashCharacter(event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    console.log("KEY_CODE:" + code);
    if (code == 47) { // slash
        return true;
    }
    return false;
}

function isABackSpaceCharacter(event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    console.log("KEY_CODE:" + code);
    if (code == 8) {
        return true;
    }
    return false;
}

function isADeleteCharacter(event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    console.log("KEY_CODE:" + code);
    if (code == 46) {
        return true;
    }
    return false;
}

function isAMCharacter(event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    console.log("KEY_CODE:" + code);
    if (code == 77 || code == 109) { // m key
        return true;
    }
    return false;
}
function isACaretCharacter(event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    console.log("KEY_CODE:" + code);
    if (code == 94) { // m key
        return true;
    }
    return false;
}
function getInstructionForWidget(widget) {
    if (!widget._jsonObj.showInstruction||widget._jsonObj.showInstruction=='false') {
        return ""
    }
    var _type = widget._jsonObj.type;
    var _ansformat = widget._jsonObj.ans_format;
    var _mixed = widget._jsonObj.allowMixed
    var _html = "<div>"
    if (_type == 'number_rational') {
        var mix = _mixed ? " and [ m ] to enter a mixed number" : "";
        //_html+="<ul><li>Use [ / ] to enter a fraction"+mix+".</li></ul>"
        _html += "<p>Use [ / ] to enter a fraction" + mix + ".</p>";
    }
    _html += "</div>"
    return _html
}

/**
 * Class to define a single flash widget
 *
 * @param widgetDiv
 * @return
 */

function HmFlashWidget(jsonObj) {
    try {
        this._jsonObj = jsonObj;
        this.tutorWrapper = jsonObj.tutorWrapper;
        this._widgetAnswer = jsonObj.value;
        var helpMesg=jsonObj.helpMesg;
        if(helpMesg){
            
            try{
                var w=this.constructor.name;
                if(typeof(helpMesg)==='string'){
                    TutorHelp.replaceHelpMesg(w,helpMesg)
                }else{
                    var msg=helpMesg.add
                    var idx=helpMesg.index
                    if(idx===undefined){
                        TutorHelp.addHelpMesg(w,msg)
                    }else{
                        TutorHelp.insertHelpMesg(w,msg,idx)
                    }
                }
            }catch(e){
                console.log("TutorHelp Error: "+e)
            }
            
        }
        this.initializeWidget();
    } catch (e) {
        alert('Widget initialization error: ' + e);
    }
}


/**
 * Set main widget message.
 *
 * If null msg then clears any messages and shows the Submit button.
 *
 * @param msg
 */

HmFlashWidget.prototype.setWidgetMessage = function(msg) {
var parent=$get('hm_widget_form')
    if (!msg) {
        msg = '&nbsp;';
        var img = $get('hm_flash_widget_indicator', this.tutorWrapper.tutorDomNode);
        if (img) {
            img.style.display = 'none';
        }
        removeSubIndi();
        showWidgetSubmit(true);

        if ($get('widget_input_simplified')) {
            $get('widget_input_simplified').checked = false;
        }
        //$("input[name^='widget_input_simplified']",parent).prop('checked', false);
        $("input[name^='widget_input_simplified']", parent).each(function(i) {
            var b = $(this).attr('data-bind');
            if (b) {
                var ce = document.activeElement;
                if ($(ce).attr('name') === b) {
                    $(this).prop('checked', false)
                }
            } else {
                $(this).prop('checked', false)
            }
        })
    }
    var nmsg = msg;
    nmsg = String(nmsg).indexOf("Error:") > -1 ? "We didn't understand your input. Try again." : nmsg;
    console.log("GLOBAL_WIDGET_VALIDATION_MESSAGE::: " + msg)
    var h = $get('hm_flash_widget_head', this.tutorWrapper.tutorDomNode);
    if (h) {
        h.innerHTML = nmsg;
        h.style.display = 'block';
    }
}

/**
 * Class HmFlashWidget base class - Takes a widget and assigns a key listener on
 * field widget_input_field_1-n. - Each key press will call the method
 * widgetKeyPress on the attached listener. - The form submit is assigned to the
 * proper widgetObject handler.
 *
 * @param widgetDiv
 *
 */
HmFlashWidget.prototype.initializeWidget = function (tutorWrapper) {
    /**
     * put value in widget
     */
    var widgetObj = this;
    this._widgetGui = _createGuiWrapper(this.tutorWrapper);
    this._widgetForm = this.drawGui();
    this._widgetForm.onsubmit = function () {
        widgetObj.processWidget(false);
        return false;
    };
    this._widgetGui.appendChild(this._widgetForm);
    var inst = getInstructionForWidget(widgetObj);
    
    /** add the submit button if required to widget form */
    var submit="";
    if(this._widgetGui.innerHTML.indexOf("not-used") == -1) {
         if(this._widgetGui.innerHTML.indexOf('widget_submit') == -1) {
             submit = "<input type='submit'  name='widget_submit' class='sexybutton sexysimple sexylarge sexyred' disabled='true' style='display: block;clear:both;' value='" + _tutorConfiguration.submitButtonText + "'/>";
         }
    }

    this._widgetForm.innerHTML = this._widgetForm.innerHTML + inst + submit;
    
    var that=this;

    var fields = this._widgetForm.getElementsByTagName("input");
    for (var f = 0, t = fields.length; f < t; f++) {
        var inputField = fields[f];
        if(this._jsonObj.fieldwidth){
            if(inputField.getAttribute("type") == 'text'||inputField.getAttribute("type") == 'number'){
                 $(inputField).width(this._jsonObj.fieldwidth);
                 var hasdiv=$(inputField).parent().find(".divider");
                 if(hasdiv.size()){
                    hasdiv.width(this._jsonObj.fieldwidth);
                 }
             }
        }
        if (inputField.getAttribute("type") == 'text') {
            if (inputField) {

                /*
                 * inputField.onkeypress = function(event) {
                 * setWidgetMessage(null); return
                 * widgetObj.processKey(this,event); };
                 */
                // edit-begin
                /**
                 * Detect cut paste action on input field and check whether to enable 'checkAnswer' button
                 */
                $(inputField).on("cut paste", function (e) {
                    setTimeout(function () {
                        var _val = $(e.currentTarget).val();
                        if (_val && _val.length) {
                            //
                            that.setWidgetMessage(null);
                        } else {

                            /**if the input field is empty check if all input field in this widget
                             * -is empty, if yes disable submit button
                             */
                            var isNull = true;
                            $($get("hm_widget_form")).find("input[type='text']:visible").each(function () {
                                var _v = $(this).val()
                                if (_v && _v.length) {
                                    isNull = false
                                    return false;
                                }
                            })
                            if (isNull) {
                                //showWidgetSubmit(false)
                            } else {
                                if ($get('widget_submit').disabled) {
                                    showWidgetSubmit(!false)
                                }
                            }
                        }
                    }, 0)
                })
                inputField.onkeydown = function (event) {
                    var code;
                    keyIsDown = true;
                    if (!event)
                        var event = window.event
                    if (event.keyCode)
                        code = event.keyCode;
                    else if (event.which)
                        code = event.which;
                    console.log("CODE_KEY_DOWN: " + event.keyCode + ":" + event.charCode + ":" + code);
                    //
                    // var _this=HmFlashWidget;
                    var _charCode = event.charCode;
                    var character = String.fromCharCode(code);
                    character = ((code == 190 || (code == 110 && (_charCode === 0 || _charCode === undefined))) ? '.' : character);
                    character = ((code == 191 || (code == 111 && (_charCode === 0 || _charCode === undefined))) ? '/' : character);
                    if (_enableJsWidgets) {

                        var jsonObj = eval('(' + _json + ')');
                        var sm=null
                        if(jsonObj.type=='number_integer'){
                        if(character==='.'||character==='/'){
                        sm=jsonObj.helpmsg||INFO_EXP_INT;
                        }
                        }
                        if(jsonObj.type=='number_decimal'){
                        if(character==='/'){
                        sm=jsonObj.helpmsg||INFO_EXP_DEC;
                        }
                        }
                        if(sm){
                        setTimeout(function(){
                            var h = $get('hm_flash_widget_head', that.tutorWrapper.tutorDomNode);
                            if (h) {
                                h.innerHTML = sm;
                                h.style.display = 'block';
                            }
                            },0);
                        }

                    }
                    
                    var foc = document.activeElement;
                    console.log(event.which);
                    var sel, s, e;
                    var id = $(foc).attr('name');
                    var ind = id.split("_");
                    ind = ind[ind.length - 1];
                    var repf = $get('widget_input_field_rep_' + ind);
                    var normf = $get('widget_input_field_' + ind);
                    var boo = (repf && foc && foc.tagName.toLowerCase() == 'input');
                    var crf = code !== 37 && code !== 39;
                    if (boo && getNodeName(foc) == 'widget_input_field_rep_' + ind && code == 37) {
                        sel = _getSelection();
                        s = sel[0];
                        e = sel[1];
                        if (s === e && s === 0) {
                            moveFocus = true;
                            newFocus = normf;
                            newPos = normf.value.length - 1;
                        }
                        crf = false;

                    }
                    if (boo && getNodeName(foc) == 'widget_input_field_' + ind && code == 39) {
                        sel = _getSelection();
                        s = sel[0];
                        e = sel[1];
                        if (s == e && e == normf.value.length) {
                            moveFocus = true;
                            newFocus = repf;
                            newPos = 1;
                        }
                        crf = false;

                    }

                    //
                    if (code == 8 || code == 46 || code == 190 || code == 110) {
                        console.log("A: ON KEY DOWN")
                        that.setWidgetMessage(null);
                        return widgetObj.processKey(this, event);
                    }
                };

                inputField.onkeypress = function (event) {
                    var code;
                    keyIsDown = true;
                    if (!event)
                        var event = window.event
                    if (event.keyCode)
                        code = event.keyCode;
                    else if (event.which)
                        code = event.which;
                    console.log("CODE_KEY_PRESS: " + event.keyCode + ":" + event.charCode + ":" + code);
                    if ((code != 8 && code != 46)) {
                        console.log("B: ON KEY PRESS")
                        that.setWidgetMessage(null);
                        return widgetObj.processKey(this, event);
                    }
                };
                inputField.onkeyup = function (event) {
                    keyIsDown = false;
                    _getSelection();
                    // var _this=HmFlashWidget;
                    var foc = document.activeElement;
                    var hasRepF = $('input[name^="widget_input_field_rep_"]', TutorManager.getActiveTutorWrapper().tutorDomNode)[0];
                    var boo = !(foc && foc.tagName.toLowerCase() == 'input');
                    if (!hasRepF || boo) {
                        return;
                    }
                    console.log("WIN_KEY_UP::" + moveFocus);
                    if (moveFocus) {
                        setCaretPosition(newFocus, newPos);
                        moveFocus = false;
                    }

                    var id = $(foc).attr('name');
                    var ind = id.split("_");
                    ind = ind[ind.length - 1];
                    var repf = $get('widget_input_field_rep_' + ind);
                    var normf = $get('widget_input_field_' + ind);
                    if (getNodeName(foc) == 'widget_input_field_' + id) {

                        if (foc.value.indexOf('.') < 0) {
                            var rv = repf.value;
                            var nv = foc.value;
                            hideRepeaterField(ind);
                            console.log("WIN_REM_REP");
                            // $('#norm')[0].value=nv+""+rv;
                        }
                    }
                    if (getNodeName(foc).indexOf('widget_input_field_rep_') > -1) {
                        console.log("REP::KEY_UP:: " + shiftFocus + ":" + repf.value);
                        if (shiftFocus) {
                            hideRepeaterField(ind);
                            normf.focus();
                            shiftFocus = false;
                            setCaretPosition(normf, normf.value.length);
                            return;
                        }
                        showRepeaterField(ind, repf.value);
                    }
                };
                // edit-end
            }
        }
    }
    // setWidgetMessage('Optional: enter an answer!');
    var hmsg = this._jsonObj.type==='mChoice'?'Required: Choose an answer!':'Required: enter an answer!';
    this.setWidgetMessage(hmsg);

    /**
     * dynamically set the type to number to default to showing the numerical
     * keyboard
     */
    if (false) {
        for (var i = 1; i < 4; i++) {
            var f = $get('widget_input_field_' + i);
            if (f) {
                f.type = 'number';
            }
        }
    }
    var fc = $get('icombo');
    if (fc) {
        fc.onchange = function () {
            var value=$get('widget_input_field_1').value
            if(value){
                that.setWidgetMessage(null)
            }
        }
    }
    $('select[name*="icombo_"]').change(function () {
        that.setWidgetMessage(null)
        })
        /**
         * force mathjax fonts/classes to be made available for the inputs
         *
         * if(MathJax){ MathJax.Hub.Queue(["Typeset",MathJax.Hub,'mathjax_dummy']); }
         * $("#hm_widget_form input[type='text']").css({ "font-family":
         * "MathJax_Main", "font-size": "16pt","font-weight":"normal" });
         * $("#hm_widget_form
         * .divider").css({"height":"3px","line-height":"3px","background":"black","border-left":"1px
         * inset #000000","border-right":"1px inset #000000"}) $("#hm_widget_form
         * input[type='text']").css({"border":"1px inset","font":"normal normal bold
         * 17pt Symbola,Times New Roman,Times,serif"}) $("#hm_widget_form
         * .input_units").css({"font":"normal normal bold 17pt Symbola,Times New
         * Roman,Times,serif"})
         * loadjscssfile("http://hotmath.kattare.com:8081/learning_activities/mathquill/mathquill.css",
         * "css")
         * //loadjscssfile("http://hotmath.kattare.com:8081/css/tutor_widget_cm.css",
         * "css"); $("#hm_widget_form
         * .divider").css({"height":"2px","line-height":"2px","background":"black","border-left":"1px
         * inset #000000","border-right":"1px inset #000000"}) $("#hm_widget_form
         * input[type='text']").css({"border":"1px inset","font":"normal normal
         * normal 17pt MathJax_Main,Times New Roman,serif"}) $("#hm_widget_form
         * .input_units").css({"font":"normal normal normal 17pt MathJax_Main,Times
         * New Roman,serif"})
         */
};

/**
 * Default method to set the widget value.
 *
 * subclasses should provide their own implementation to provide a more detailed
 * update
 *
 * value might be delimited by |
 */
HmFlashWidget.prototype.setWidgetValue = function (val, doValidate) {
    this.setWidgetValueDefault(val);
    if (doValidate) {
        this.processWidget(true)
    }
};

/**
 * Default setWidgetValue will parse value as delimited values and set each
 * value in predefine field names.
 *
 * If there is secondary field
 */
HmFlashWidget.prototype.setWidgetValueDefault = function (val) {
    var vals = val.split('|');
    for (var i = 0, t = vals.length; i < t; i++) {
        var f = 'widget_input_field_' + (i + 1);
        var elem = $get(f);
        if (elem != null) {
            elem.value = vals[i];
        }
    }
    ////
   /* var vals = val.split("|");
    var sel = vals[0];
    sel = sel == 'null' ? 'false' : sel;
    sel = sel == 'false' ? false : true;
    var cb = $get('widget_input_simplified');
    if (cb != null) {
        cb.checked = sel;
        if (String(sel) == 'true') {
            return;
        }
    }
    for (var i = 1, t = vals.length; i < t; i++) {
        var f = 'widget_input_field_' + (i);
        var elem = $get(f);
        if (elem != null) {
            elem.value = vals[i];
        }
    }*/
}

/**
 * return the value currently in widget. Return as simple string delimited by |.
 */
HmFlashWidget.prototype.getWidgetValue = function () {
    // var value = '';
    var value = [];
    for (var i = 1; i < 5; i++) {
        var f = 'widget_input_field_' + i;
        
        var tutorWrapper = this._jsonObj.tutorWrapper;
        
        var elem = $get(f, tutorWrapper.tutorDomNode);
        if (elem != null && elem.style.display != 'none') {
            var v = elem.value;
            
            value.push(v);
        }
    }
    return value.join("|");
    ////
    /*var value = [];
    var cb = $get('widget_input_simplified');
    if (cb != null) {
        value[0] = cb.checked;
    } else {
        value[0] = 'null';
    }
    for (var i = 1; i < 3; i++) {
        var f = 'widget_input_field_' + i;
        var tutorWrapper = this._jsonObj.tutorWrapper;        
        var elem = $get(f, tutorWrapper.tutorDomNode);
        if (elem != null&& elem.style.display != 'none') {
            var v = elem.value;
            value.push(v);
        }
    }
    return value.join("|");*/
};

/**
 */

HmFlashWidget.prototype.formatWidgetCorrectValue = function () {
    var _val = cm_unescape(this._jsonObj.value)
    return _val;
    /*var _val = cm_unescape(this._jsonObj.value)
    if(String(this._jsonObj.addCheckbox)==='true'){
        var arr = String(_val).split("|")
        var arrF = arr.pop();
        if (arrF == 'true') {
            _val = String(true) + "|" + arr.join("|")
        } else {
            _val = "null|" + arr.join("|")
        }
    }
    if(!this._jsonObj.addCheckbox){
        _val = "null|" +_val;
    }
        return _val*/
}
HmFlashWidget.prototype.showWidgetCorrectValue = function () {
    var _val = this.formatWidgetCorrectValue()
    this.setWidgetValue(_val, false);
}
HmFlashWidget.prototype.drawGui = function () {
    return this.drawGuiDefault();
};

/**
 * Define GUI for basic widget
 *
 */
/*
 * HmFlashWidget.prototype.drawGuiDefault = function() { var widget =
 * this.createWidgetForm();
 *
 * var html = "<input name='widget_input_field_1' name='widget_input_field_1'
 * type='text'/>"; widget.innerHTML = html;
 *
 * return widget; }
 */
HmFlashWidget.prototype.drawGuiDefault = function () {
    var measure = '';
    var format = '';
    var prefix = '';
    var iwd=this._jsonObj.input_width;
    iwd=iwd?iwd:100;
    if (this._jsonObj.format) {
        format = this._jsonObj.format;
        var vm = unescape(format).split('|');
        if (vm.length > 1) {
            measure = vm[1];
            prefix = vm[0];
        }
        var mp = format.split('^');
        var raised = null;
        if (mp.length > 1) {
            measure = mp[0];
            raised = mp[1];
        } else {
            measure = unescape(this._jsonObj.format);
        }
        var font_style = "";
        if (measure) {
            if (measure == 'angle_deg') {
                var widget = this.createWidgetForm();
                var html = "<input name='widget_input_field_1' type='text' style='text-align:center;'/>";
                widget.innerHTML = html;
                return widget;
            } else {
                measure = measure.split('_')[1];
            }
            var dummy = $("<input>");
            $('body').append(dummy);
            var icss = dummy.css('font-style') + " ";
            icss = dummy.css('font-variant') + " ";
            icss += dummy.css('font-weight') + " ";
            icss += dummy.css('font-size') + " ";
            icss += dummy.css('font-family');
            dummy.remove();
            font_style = "font:" + icss + ";font-weight:bold";
            font_style = ""
        }

        if (!measure)
            measure = '';

        format = '';
        if (raised) {
            measure += "<span style='vertical-align: baseline;font-size: 0.8em;position: relative;top: -0.4em;'>" + raised + "</span>";
        }
    }
    var widget = this.createWidgetForm();
    var ms = prefix == '' ? 150 : 125;

    var html = "<div style='height: 75px;'>" + "<div class='input_prefix' style='float: left;margin-top: 0px;margin-right: 5px;'>" + prefix + "</div>" +

        "<div style='float: left;'>" +

        "<input name='widget_input_field_1' type='text' style='width: "+iwd+"px;text-align:center;'/>" + "<span class='input_units' style='vertical-align: baseline;position: relative;" + font_style + "'>&nbsp;" + measure + "</span>" + "<div name='widget_divider' class='divider' style='display: none;width:"+iwd+"px;text-align:center;'>&nbsp;</div>" + "<input name='widget_input_field_2' type='text' style='display: none;width: "+iwd+"px;text-align:center;'/>" + "</div>" + "</div>";

    if (this._jsonObj.addCheckbox === 'true'||this._jsonObj.addCheckbox===true) {
        var lab = this._jsonObj.checkbox_label;
        this.checkbox_label = lab ? lab : "No Solution";
        this.hasSimplified = true;
        html += "<div class='simplified_wrapper'>" + "  <label>" + this.checkbox_label + " <input name='widget_input_simplified' type='checkbox'/></label>" + "</div>";
    }
    widget.innerHTML = html;
    return widget;
}

/**
 * Default processWidget functionality.
 *
 * This will take the value from single field and matches it with jsonObj.value.
 *
 * If it is equal, then show correct image else show error image.
 *
 */
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}

HmFlashWidget.prototype.processWidgetDefault = function (doNotFireEvent) {
    try {
        var boo = this.processWidgetValidation();
        var valid = false;
        if (boo == true) {
            console.log("MARK_CORRECT!");
            this.markWidgetCorrect();

            valid = true;
        } else if (boo == 'partial') {
            console.log("MARK_PARTIAL_CORRECT!");
            this.markWidgetPartialCorrect(this.partialanswers);

            valid = false;
        } else {
            console.log("MARK_INCORRECT!");
            this.markWidgetIncorrect();

            valid = false;
        }

        if (!doNotFireEvent) {
            HmEvents.eventTutorWidgetComplete.fire(valid, this);
        }

        // only submit if correct/incorrect
        showWidgetSubmit(false);

    } catch (msg) {
        //alert("MESG " + msg)
        this.setWidgetMessage(msg);
    }
}

/**
 * Default process validation method (equality)
 *
 * This method will be overridden by subclasses to provide widget specific
 * validation.
 *
 * It must return either true, or false. Any widget specific errors should throw
 * an exception.
 */
HmFlashWidget.prototype.processWidgetValidation = function () {
    var d = $get('widget_input_field_1');
    var ans = d.value;
    return ans == this._widgetAnswer;
}

/**
 * Default functionality is to allow any key
 *
 */
HmFlashWidget.prototype.processKey = function () {
    // allow all
}

/**
 * Add the head and control box for indicator/submit button
 *
 */
_createGuiWrapper = function (tutorWrapper) {

    /**
     * FIX, this must be specified ...
     *
     */
    var guiWrapper = $get('hm_flash_widget', tutorWrapper?tutorWrapper.tutorDomNode:null);
    if(guiWrapper == null) {
        alert('guiWrapper is null, must be created ...');
        return document.createElement("div");
    }

    guiWrapper.setAttribute("style", "position: relative;");
    var html = "     <div name='hm_flash_widget_indicator' style='position: absolute;right: 5px;top: 25px;display: none;'>&nbsp;</div>" + 
               "     <div name='hm_flash_widget_head'>&nbsp;</div>";
    // guiWrapper.innerHTML ='<div id="mathjax_dummy"
    // style="display:none;"><math><mtext></mtext></math></div>'+ html;
    // guiWrapper.innerHTML ='<div id="mathjax_dummy"
    // style="display:none"><math/></div>'+ html;
    html = "<div name='help_overlay_btn'><a class='widget_help_btn' onclick='widgetHelpHandler(event)'>?</a></div>" +html;
    guiWrapper.innerHTML = html;
    return guiWrapper;
}

function showFlashObject() {
    console.log('showFlashObject not implemented');
}



HmFlashWidget.prototype.markWidgetPartialCorrect = function (n) {
    if (n === 1) {
        this.setWidgetMessage("One of your answers is incorrect!");
    } else if (n > 1) {
        this.setWidgetMessage("Some of your answers are incorrect!");
    } else {
        this.setWidgetMessage("One or more of your answers is incorrect!");
    }
}
HmFlashWidget.prototype.markWidgetCorrect = function () {

    if (_tutorConfiguration.indicateWidgetStatus == 'INDICATE_SUBMIT_ONLY') {
        this.setWidgetMessage("Submitted");
        return;
    } else if (_tutorConfiguration.indicateWidgetStatus == 'NONE') {
        this.setWidgetMessage("");
        return;
    } else {
        this.setWidgetMessage("Correct!");
        var indicator = $get('hm_flash_widget_indicator', this.tutorWrapper.tutorDomNode);
        indicator.innerHTML = "<img src='/tutor/widget/images/widget_correct.png'/>";
        indicator.style.display = 'block';

        this.animateWidgetOnce('tada');
    }
}

HmFlashWidget.prototype.animateWidgetOnce = function(type) {
    var that=this;
    $('div[name=hm_flash_widget]', this.tutorWrapper.tutorDomNode).addClass('animated ' + type);
    $('div[name=hm_flash_widget]', this.tutorWrapper.tutorDomNode).one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function () {
        $('div[name=hm_flash_widget]', that.tutorWrapper.tutorDomNode).removeClass('animated ' + type);
    });
}

HmFlashWidget.prototype.markWidgetIncorrect = function () {

    if (_tutorConfiguration.indicateWidgetStatus == 'INDICATE_SUBMIT_ONLY') {
        this.setWidgetMessage("Submitted");
        return;
    } else if (_tutorConfiguration.indicateWidgetStatus == 'NONE') {
        this.setWidgetMessage("");
    } else {
        // setWidgetMessage("TRY AGAIN!");
        this.setWidgetMessage("Try again, or click the 'Next' button!");
        var indicator = $get('hm_flash_widget_indicator', this.tutorWrapper.tutorDomNode);
        indicator.innerHTML = "<img src='/tutor/widget/images/widget_incorrect.png'/>";
        indicator.style.display = 'block';
        // HmEvents.eventTutorWidgetComplete.fire(false);

        this.animateWidgetOnce('wobble');
    }
}

/**
 * Create base widget form object
 *
 */
HmFlashWidget.prototype.createWidgetForm = function () {
    var widgetForm = document.createElement("form");
    widgetForm.setAttribute('styleName', 'width: ' + this._jsonObj.width + 'px');
    widgetForm.setAttribute("name", "hm_widget_form");
    widgetForm.setAttribute("autocomplete", "off");
    return widgetForm;
}

/**
 * Start of widget specific classes
 *
 * Order is important!
 *
 */


/** Whiteboard widget that simply draws the whiteboard msg
 *
 */
function HmFlashWidgetImplWhiteboard(jsonObj, widgetDiv) {
    this.HmFlashWidget(jsonObj);
    this.widgetDiv = widgetDiv;
}
HmFlashWidget.prototype.drawGui = function () {
    var info = document.createElement("div");
    
    var msg = _getWidgetNotUsedHtml();
    if(msg) {
    	this._widgetGui.innerHTML = mesg
    }
    else {
    	this._widgetGui.style.display = 'none';
    }
    return info;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    return null;
}
copyPrototype(HmFlashWidgetImplWhiteboard, HmFlashWidget);


function prepareChkCntrl(jsonObj, obj,ctrl) {
    //var p = jsonObj.value.split('/');
    //obj.numerator = p[0];
   // obj.denominator = p[1];
    obj.hasSimplified = false;
    
    var simpEl = ctrl?ctrl:$get('widget_input_simplified');
    if (simpEl) {
        simpEl.onclick = function () {
            showWidgetSubmit(true);
           // $(simpEl).parent().parent().find("input[type='text']").val("");
           $($get("hm_widget_form")).find("input[type='text']").val("")
        };
    }
}

/**
 * Number integer entry test: cmextras_1_1_1_1_1
 */
function HmFlashWidgetImplNumberInteger(jsonObj) {
    this.HmFlashWidget(jsonObj);
    prepareChkCntrl(jsonObj, this);
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
}
HmFlashWidget.prototype.processKey = function (ele, event) {
    return restrictCharacters(ele, event, restrictionType_digitsOnly, this.allowChars,this.dntallowChars);
}
HmFlashWidget.prototype.drawGui = function () {
    var wid= this.drawGuiDefault();
    if (this._jsonObj.symbols) {
        var symbols = this._jsonObj.symbols;
        var html="";
        var sarr = symbols.split(",");
        var _symbols = [];       
        if (sarr.length) {
            var btns = "";
            for (var s = 0; s < sarr.length; s++) {
                symbols = getSymbol(sarr[s]);                
                _symbols.push(symbols);
                btns += "<button type='button' onmouseover='_getSelection()' onblur='_getSelection()' onfocus='_getSelection()' ontouchstart='_getSelection()' onclick='_addButtonTextToWidget(\"" + symbols + "\");return false;'>" + symbols + "</button>";                
            }
        }
        var btn_inst = ""
        if (_symbols.length) {
            var str_keys = "[" + _symbols.join("], [") + "]";
            var str_symb = sarr.length === 1 ? "the " : "";
            str_symb += _symbols.join(", ");
            str_symb += sarr.length === 1 ? " symbol." : " symbols.";
            btn_inst = "<div style='font-size:0.7em;padding-bottom:2px;clear:left;'>+ Use " + str_keys + " to enter " + str_symb + "</div>"
        }
        html = btn_inst + "<div class='buttons'  style='clear:both;padding:0 5px; background: #DDD;'>" + "    " + btns + "</div>";
        wid.innerHTML += html;
        }
    return wid;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    return this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplNumberInteger, HmFlashWidget);
HmFlashWidgetImplNumberInteger.prototype.setWidgetValue = function (val) {
    var vals = val.split("|");
    if(String(this._jsonObj.addCheckbox)==='true'){
    var sel = vals[0];
    sel = sel == 'null' ? 'false' : sel;
    sel = sel == 'false' ? false : true;
    var cb = $get('widget_input_simplified');
    if (cb != null) {
        cb.checked = sel;
        if (String(sel) == 'true') {
            return;
        }
    }
    vals.shift();
    }
    for (var i = 0, t = vals.length; i < t; i++) {
        var f = 'widget_input_field_' + (i+1);
        var elem = $get(f);
        if (elem != null) {
            elem.value = vals[i];
        }
    }
}
HmFlashWidgetImplNumberInteger.prototype.getWidgetValue = function () {
    var value = [];
    if(String(this._jsonObj.addCheckbox)==='true'){
    var cb = $get('widget_input_simplified');
    if (cb != null) {
        value[0] = cb.checked;
    } else {
        value[0] = 'null';
    }
    }
    for (var i = 1; i < 3; i++) {
        var f = 'widget_input_field_' + i;
        var tutorWrapper = this._jsonObj.tutorWrapper;        
        var elem = $get(f, tutorWrapper.tutorDomNode);
        if (elem != null&& elem.style.display != 'none') {
            var v = elem.value;
            value.push(v);
        }
    }
    return value.join("|");
};
HmFlashWidgetImplNumberInteger.prototype.formatWidgetCorrectValue = function () {
    var _val = cm_unescape(this._jsonObj.value)
    if(String(this._jsonObj.addCheckbox)==='true'){
        var arr = String(_val).split("|")
        var arrF = arr.pop();
        if (arrF == 'true') {
            _val = String(true) + "|" + arr.join("|")
        } else {
            _val = "null|" + arr.join("|")
        }
    }
        return _val
}
/**
 * Class for simple decimal values test:
 */

function HmFlashWidgetImplNumberDecimal(jsonObj) {
    this.HmFlashWidget(jsonObj); // super
    prepareChkCntrl(jsonObj, this);
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
}
HmFlashWidget.prototype.drawGui = function () {
    if (this._jsonObj.format == 'repeating_decimal') {
        var widget = this.createWidgetForm();
        var html = "<div style=float:left;><input name='widget_input_field_1' type='text' style='text-align:right;width:75px;'/></div>" + getRepeaterField(1, 75);
        widget.innerHTML = "<div style='height:75px'>" + html + "</div>";
        return widget;
    }
    
    var wid= this.drawGuiDefault();
    if (this._jsonObj.symbols) {
        var symbols = this._jsonObj.symbols;
        var html="";
        var sarr = symbols.split(",");
        var _symbols = [];       
        if (sarr.length) {
            var btns = "";
            for (var s = 0; s < sarr.length; s++) {
                symbols = getSymbol(sarr[s]);                
                _symbols.push(symbols);
                btns += "<button type='button' onmouseover='_getSelection()' onblur='_getSelection()' onfocus='_getSelection()' ontouchstart='_getSelection()' onclick='_addButtonTextToWidget(\"" + symbols + "\");return false;'>" + symbols + "</button>";                
            }
        }
        var btn_inst = ""
        if (_symbols.length) {
            var str_keys = "[" + _symbols.join("], [") + "]";
            var str_symb = sarr.length === 1 ? "the " : "";
            str_symb += _symbols.join(", ");
            str_symb += sarr.length === 1 ? " symbol." : " symbols.";
            btn_inst = "<div style='font-size:0.7em;padding-bottom:2px;clear:left;'>+ Use " + str_keys + " to enter " + str_symb + "</div>"
        }
        html = btn_inst + "<div class='buttons'  style='clear:both;padding:0 5px; background: #DDD;'>" + "    " + btns + "</div>";
        wid.innerHTML += html;
        }
        return wid;
}
HmFlashWidget.prototype.processKey = function (ele, event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    var id = getNodeName(ele);
    var ind = id.split("_");
    ind = ind[ind.length - 1];
    var sel = _getSelection();
    var s = sel[0];
    var e = sel[1];
    if (this._jsonObj.format == 'repeating_decimal' && id == 'widget_input_field_1' && isAMinusCharacter(event)) {

        var val = ele.value;
        if (val.indexOf(".") < 0) {
            return restrictCharacters(ele, event, restrictionType_decimals, this.allowChars,this.dntallowChars);
        }
        var dp = val.indexOf(".");
        if (dp >= s) {
            return restrictCharacters(ele, event, restrictionType_decimals, this.allowChars,this.dntallowChars);
        }
        var lv = val.substring(0, s);
        var rv = val.substring(s, e);
        var repf = ele;

        showRepeaterField(1, rv, lv, true);
        // repf.focus();
        // setCaretPosition(repf, rv.length);

        return false;
    } else if (isABackSpaceCharacter(event) || isADeleteCharacter(event)) {

        if (getNodeName(ele).indexOf('widget_input_field_rep_') > -1) {
            console.log("REP::KEY_DOWN::" + code);

            var rv = ele.value;
            if (!rv.length) {
                shiftFocus = true;
                return false;
            }

        }

        return true;
    } else if (code == 39 || code == 37) {
        return true;
    }
    if (keyIsDown && getNodeName(ele).indexOf('widget_input_field_rep_') > -1) {
        if (code == 13) {
            return true
        }

        var rv = ele.value;
        console.log("REP::KEY_DOWN::CHARS" + code + ":" + rv);
        var ch = String.fromCharCode(code);
        ch = isNaN(ch) ? "" : ch;
        var ns = rv.substring(0, s) + ch + rv.substring(e)
        showRepeaterField(ind, ns);
        ele.focus();
        setCaretPosition(ele, s + 1);
        return false;
    }
    return restrictCharacters(ele, event, restrictionType_decimals, this.allowChars,this.dntallowChars);
}
copyPrototype(HmFlashWidgetImplNumberDecimal, HmFlashWidget);

function showRepeaterField(id, val, valL, show) {
    var repf = $get('widget_input_field_rep_' + id);
    var normf = $get('widget_input_field_' + id);
    var ob = $get('overbar_' + id);
    var cont = $get('widget_input_rep_cont_' + id)
    var sel = _getSelection();
    var s = sel ? sel[0] : 0;
    var e = sel ? sel[1] : 0;
    var np = val.length
    if (val.length) {

        var dummy = $('<span>' + val + '</span>');
        $(cont).append(dummy);
        // dummy.appendTo(cont);
        dummy.css('font-size', $(repf).css('font-size'));
        dummy.css('font-weight', $(repf).css('font-weight'));
        dummy.css('font-family', $(repf).css('font-family'));
        dummy.css('font-style', $(repf).css('font-style'));
        dummy.css('font-variant', $(repf).css('font-variant'));
        console.log("DUMMY::" + dummy.width())
        $(cont).show();
        console.log("DUMMY::" + dummy.width())
        var w = dummy.innerWidth() + 2;
        // w=Math.max(18,w);
        $(cont).hide();
        console.log("DUMMY::" + dummy.innerWidth())
        dummy.remove();
        repf.value = val;
        if (valL) {
            normf.value = valL;
        }
        $(repf).css('width', w + 'px');
        $(normf).css('border-right', '0px');
        $(ob).css('width', w + 'px');
        $(cont).show();
        if (show) {
            repf.focus();
            setCaretPosition(repf, np);
        }

        // repf.focus();
        // setCaretPosition(repf, val.length);
    }
}

function hideRepeaterField(id, boo) {
    var cont = $get('widget_input_rep_cont_' + id)
    $(cont).hide();
    $($get('widget_input_field_' + id)).css('border-right', '');
    shiftFocus = boo ? boo : false;
}
HmFlashWidgetImplNumberDecimal.prototype.getWidgetValue = function () {
    // var value = '';
    var value = [];
    
    var cb = $get('widget_input_field_rep_1');
    if (cb && cb.value) {
        value[0] = cb.value;
    } else {
        value[0] = 'null';
    }

    var f = 'widget_input_field_1';
    var elem = $get(f);
    if (elem != null) {
        var v = elem.value;
        value.push(v);
    }
    if(String(this._jsonObj.addCheckbox)==='true'){
    var cb1 = $get('widget_input_simplified');
    if (cb1 != null) {
        value.push(cb1.checked);
    } else {
        value.push('null');
    }
    }
    return value.join("|");
}
HmFlashWidgetImplNumberDecimal.prototype.setWidgetValue = function (val, doValidate) {
    var vals = val.split("|");
    if(String(this._jsonObj.addCheckbox)==='true'){
    var cb1 = $get('widget_input_simplified');
    var sel=vals.pop();
    if(cb1){        
        sel = sel == 'null' ? 'false' : sel;
        sel = sel == 'false' ? false : true;
        cb.checked = sel;
        if (String(sel) == 'true') {
            return;
        }    
    }
    }
    var rep = vals[0];
    rep = rep == 'null' ? 'false' : rep;
    rep = rep == 'false' ? false : true;
    if (rep) {
        showRepeaterField(1, vals[0], vals[1], false)
    }

    for (var i = 1, t = vals.length; i < t; i++) {
        var f = 'widget_input_field_' + (i);
        var elem = $get(f);
        if (elem != null) {
            elem.value = vals[i];
        }
    }
    if (doValidate) {
        this.processWidget(true)
    }
}
HmFlashWidgetImplNumberDecimal.prototype.formatWidgetCorrectValue = function () {
    var _val = cm_unescape(this._jsonObj.value)
    var sel=""
    if(String(this._jsonObj.addCheckbox)==='true'){
    var _vals=_val.split("|");
    _sel="|"+_vals.pop();
    _val=_vals.join("");
    }
    var arr = String(_val).split("R")
    var arrV = ""
    if (arr[1]) {
        _val = String(arr[1]) + "|" + arr[0]
    } else {
        _val = "null|" + arr[0]
    }
    _val=_val+_sel;
    return _val
}

/**
 * Class for Money entry
 *
 * test: cmextras_1_1_1_11_1
 */

function HmFlashWidgetImplNumberMoney(jsonObj) {
    this.HmFlashWidget(jsonObj);
    prepareChkCntrl(jsonObj, this);
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
    if (String(this.allowChars).indexOf('$') == -1) {
        if (this.allowChars == null) {
            this.allowChars = '$.';
        } else {
            this.allowChars += '$';
        }
    }
}
HmFlashWidget.prototype.drawGui = function () {
    return this.drawGuiDefault();
}
HmFlashWidget.prototype.processKey = function (ele, event) {
    return restrictCharacters(ele, event, restrictionType_digitsOnly, this.allowChars,this.dntallowChars);
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplNumberMoney, HmFlashWidget);
HmFlashWidgetImplNumberMoney.prototype.setWidgetValue = function (val) {
    var vals = val.split("|");
    if(String(this._jsonObj.addCheckbox)==='true'){
    var sel = vals[0];
    sel = sel == 'null' ? 'false' : sel;
    sel = sel == 'false' ? false : true;
    var cb = $get('widget_input_simplified');
    if (cb != null) {
        cb.checked = sel;
        if (String(sel) == 'true') {
            return;
        }
    }
    vals.shift();
    }
    for (var i = 0, t = vals.length; i < t; i++) {
        var f = 'widget_input_field_' + (i+1);
        var elem = $get(f);
        if (elem != null) {
            elem.value = vals[i];
        }
    }
}
HmFlashWidgetImplNumberMoney.prototype.getWidgetValue = function () {
    var value = [];
    if(String(this._jsonObj.addCheckbox)==='true'){
    var cb = $get('widget_input_simplified');
    if (cb != null) {
        value[0] = cb.checked;
    } else {
        value[0] = 'null';
    }
    }
    for (var i = 1; i < 3; i++) {
        var f = 'widget_input_field_' + i;
        var tutorWrapper = this._jsonObj.tutorWrapper;        
        var elem = $get(f, tutorWrapper.tutorDomNode);
        if (elem != null&& elem.style.display != 'none') {
            var v = elem.value;
            value.push(v);
        }
    }
    return value.join("|");
};
HmFlashWidgetImplNumberMoney.prototype.formatWidgetCorrectValue = function () {
    var _val = cm_unescape(this._jsonObj.value)
    if(String(this._jsonObj.addCheckbox)==='true'){
        var arr = String(_val).split("|")
        var arrF = arr.pop();
        if (arrF == 'true') {
            _val = String(true) + "|" + arr.join("|")
        } else {
            _val = "null|" + arr.join("|")
        }
    }
        return _val
}
/**
 * Define Class for Fraction entry
 *
 * test: cmextras_1_2_1_56_1
 *
 */

function HmFlashWidgetImplNumberIntegerFraction(jsonObj) {
    this.HmFlashWidget(jsonObj);
    var p = jsonObj.value.split('/');
    prepareSimpleFraction(jsonObj, this);
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
}
HmFlashWidget.prototype.processKey = function (ele, event) {
       if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
        
    var id = getNodeName(ele);
    if (isASlashCharacter(event)) {
        if(id=='widget_input_field_1'){
            $($get("widget_input_field_2")).focus()
        }    
        setWidgetMessage("Enter a numerator and a denominator in the correct fields")   
    } 
    return restrictCharacters(ele, event, restrictionType_digitsOnly, this.allowChars,this.dntallowChars);
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();

    var html = "<div class='widget-fraction' style='background: white'>" + "<input name='widget_input_field_1' type='text' style='width:60px;text-align:center;'/>" + "<div class='divider' style='width:60px;'>&nbsp;</div>" + "<input name='widget_input_field_2' type='text' style='width:60px;text-align:center;'/>" + "</div>";

    /**
     * should a simplified choice been added?
     *
     */
    if (String(this._jsonObj.format).indexOf('text_simplified')>-1) {
        this.hasSimplified = true;

        html += "<div class='simplified_wrapper'>" + "  <label>Already Simplified?<input name='widget_input_simplified' type='checkbox'/></label>" + "</div>";
    }
    html=applyPrePostfixFormat(this._jsonObj,html)
    widget.innerHTML = html;

    return widget;
}
copyPrototype(HmFlashWidgetImplNumberIntegerFraction, HmFlashWidget);

HmFlashWidgetImplNumberIntegerFraction.prototype.getWidgetValue = function () {
    // var value = '';
    var value = [];
    var cb = $get('widget_input_simplified');
    if (cb != null) {
        value[0] = cb.checked;
    } else {
        value[0] = 'null';
    }
    for (var i = 1; i < 3; i++) {
        var f = 'widget_input_field_' + i;
        var elem = $get(f);
        if (elem != null) {
            var v = elem.value;
            /*
             * if (value > '') { value += '|'; }
             */
            value.push(v);
        }
    }
    return value.join("|");
}
HmFlashWidgetImplNumberIntegerFraction.prototype.setWidgetValue = function (val, doValidate) {
    var vals = val.split("|");
    var sel = vals[0];
    sel = sel == 'null' ? 'false' : sel;
    sel = sel == 'false' ? false : true;
    var cb = $get('widget_input_simplified');
    if (cb != null) {
        cb.checked = sel;
        if (String(sel) == 'true') {
            return;
        }
    }
    for (var i = 1, t = vals.length; i < t; i++) {
        var f = 'widget_input_field_' + (i);
        var elem = $get(f);
        if (elem != null) {
            elem.value = vals[i];
        }
    }
    if (doValidate) {
        this.processWidget(true)
    }
}
HmFlashWidgetImplNumberIntegerFraction.prototype.formatWidgetCorrectValue = function () {
        var _val = cm_unescape(this._jsonObj.value)
        var arr = String(_val).split("|")
        var arrF = arr[0].split("/").join("|")
        if (arr[1] && arr[1] == 'simplified') {
            _val = String(true) + "|" + arrF
        } else {
            _val = "null|" + arrF
        }
        return _val
    }
    /**
     * Define class for Number Simple Fraction
     *
     * test: genericprealg_3_5_NumberTheory_29_320
     *
     * inherit all from IntegerFraction
     */

function HmFlashWidgetImplSimpleFraction(jsonObj) {
    this.HmFlashWidget(jsonObj);
    prepareSimpleFraction(jsonObj, this);
}
copyPrototype(HmFlashWidgetImplSimpleFraction, HmFlashWidget);

/** helper method for Fraction setup */

function prepareSimpleFraction(jsonObj, obj) {
    var p = jsonObj.value.split('/');
    obj.numerator = p[0];
    obj.denominator = p[1];
    obj.hasSimplified = false;
    var num = $get('widget_input_field_1');
    var den = $get('widget_input_field_2');
    var simpEl = $get('widget_input_simplified');
    if (simpEl) {
        simpEl.onclick = function () {
            showWidgetSubmit(true);
            num.value = '';
            den.value = '';
        };
    }
}

HmFlashWidgetImplSimpleFraction.prototype.getWidgetValue = HmFlashWidgetImplNumberIntegerFraction.prototype.getWidgetValue;
HmFlashWidgetImplSimpleFraction.prototype.setWidgetValue = HmFlashWidgetImplNumberIntegerFraction.prototype.setWidgetValue;
HmFlashWidgetImplSimpleFraction.prototype.formatWidgetCorrectValue = HmFlashWidgetImplNumberIntegerFraction.prototype.formatWidgetCorrectValue;

/**
 * Define class for Integer with Angle Deg
 *
 */

function HmFlashWidgetImplNumberIntegerAngleDeg(jsonObj) {
    this.HmFlashWidget(jsonObj);
prepareChkCntrl(jsonObj, this);
}
HmFlashWidget.prototype.drawGui = function () {
    var widget = this.drawGuiDefault();

    var tag = document.createElement("span");
    tag.innerHTML = "&nbsp;&deg;";
    widget.appendChild(tag);

    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplNumberIntegerAngleDeg, HmFlashWidget);
HmFlashWidgetImplNumberIntegerAngleDeg.prototype.setWidgetValue = function (val) {
    var vals = val.split("|");
    if(String(this._jsonObj.addCheckbox)==='true'){
    var sel = vals[0];
    sel = sel == 'null' ? 'false' : sel;
    sel = sel == 'false' ? false : true;
    var cb = $get('widget_input_simplified');
    if (cb != null) {
        cb.checked = sel;
        if (String(sel) == 'true') {
            return;
        }
    }
    vals.shift();
    }
    for (var i = 0, t = vals.length; i < t; i++) {
        var f = 'widget_input_field_' + (i+1);
        var elem = $get(f);
        if (elem != null) {
            elem.value = vals[i];
        }
    }
}
HmFlashWidgetImplNumberIntegerAngleDeg.prototype.getWidgetValue = function () {
    var value = [];
    if(String(this._jsonObj.addCheckbox)==='true'){
    var cb = $get('widget_input_simplified');
    if (cb != null) {
        value[0] = cb.checked;
    } else {
        value[0] = 'null';
    }
    }
    for (var i = 1; i < 3; i++) {
        var f = 'widget_input_field_' + i;
        var tutorWrapper = this._jsonObj.tutorWrapper;        
        var elem = $get(f, tutorWrapper.tutorDomNode);
        if (elem != null&& elem.style.display != 'none') {
            var v = elem.value;
            value.push(v);
        }
    }
    return value.join("|");
};
HmFlashWidgetImplNumberIntegerAngleDeg.prototype.formatWidgetCorrectValue = function () {
    var _val = cm_unescape(this._jsonObj.value)
    if(String(this._jsonObj.addCheckbox)==='true'){
        var arr = String(_val).split("|")
        var arrF = arr.pop();
        if (arrF == 'true') {
            _val = String(true) + "|" + arr.join("|")
        } else {
            _val = "null|" + arr.join("|")
        }
    }
        return _val
}
/**
 * Define class for Multi entry
 *
 * test: cmextrasalg1_1_1_1_13_1
 *
 */

function HmFlashWidgetImplMulti(jsonObj) {
    this.HmFlashWidget(jsonObj);

    var values = jsonObj.value.split('|');
    this._correct = values[values.length - 1];

    var widgetHolder = $get("widget_wrapper");
    var use_question_def = jsonObj.value == 'use_question_def'

    var isMultiSelect = jsonObj.format == 'multiselect';
    var inputType = isMultiSelect ? 'checkbox' : 'radio';

    var items = '';
    var seed=Date.now();
    /** all but last, which has answer */
    for (var v = 0, t = values.length - 1; v < t; v++) {
        var id='r'+seed+'-'+v;
        items += '<input id="'+id+'" style="margin-top:1.5em;" type="' + inputType + '" name="widget_value" onclick="setWidgetMessage(null)" value="' + values[v] + '"/>';
        items += '<label for="'+id+'" style="font-size:0.8em;"><div style="display:inline;">' + (jsonObj.useBase64 != null && jsonObj.useBase64 ? Base64.decode(values[v]) : values[v]) + '</div></label>';
        items += '<br/>';
    };
    if (use_question_def) {
        var node = "";
        items = "";
        var values = "";
        var ans;
        var correct = 0;
        var _c = []
        $('ul li',$get('hm_question_def')).each(function (index) {
            var children=$(this).children();
            var __l=children.length;
            if(children[__l-1].innerHTML==='&nbsp;'){
                $(children[__l-1]).remove();
            }
            var wrapped=$(this).children().length===1&&$(this).children()[0].nodeName=="DIV";
            if(wrapped){
                var wrap=$($(this).children()[0]);
                wrap.css("display","inline-block");
            }
            var id='r'+seed+'-'+index;
            values += (index + 1) + "|";
            node = "<div>";
            node += '<input id="'+id+'" style="float:left" type="' + inputType + '" name="widget_value" onclick="setWidgetMessage(null)" value="' + (index + 1) + '"/>';
            node += '<label for="'+id+'" style="font-size:0.8em;">' + $(this).html() + '</label>';
            node += '</div>';
            items += node;
            correct = $(this).attr('correct') == 'yes' ? index + 1 : correct;
            if (isMultiSelect) {
                if ($(this).attr('correct') == 'yes') {
                    _c.push(index + 1);
                }
            }
        });
        values += isMultiSelect ? _c.join(",") : correct;
        this._jsonObj.value = values;

    }

    widgetHolder.innerHTML = items;

}
HmFlashWidget.prototype.processKey = function (event) {
    // empty
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);

}
HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();

    var html = "<div name='widget_wrapper'>" + "</div>";

    widget.innerHTML = html;

    return widget;
}
copyPrototype(HmFlashWidgetImplMulti, HmFlashWidget);
HmFlashWidgetImplMulti.prototype.getWidgetValue = function () {
    var widgetHolder = $get("widget_wrapper");
    if (widgetHolder) {
        var items = widgetHolder.getElementsByTagName("input");
        if (items.length > 0) {
            for (var i = 0, t = items.length; i < t; i++) {
                if (items.item(i).checked) {
                    return String(i + 1);
                }
            }
        }
    }

    return null;
}

HmFlashWidgetImplMulti.prototype.setWidgetValue = function (selected, doValidate) {
    var sel = Number(selected);
    var widgetHolder = document.getElementById("widget_wrapper");
    var items = widgetHolder.getElementsByTagName("input");
    if (items.length > 0) {
        for (var i = 0, t = items.length; i < t; i++) {
            items.item(i).checked = ((i + 1) == sel);
        }
    }
    if (doValidate) {
        this.processWidget(true);
    }
}
HmFlashWidgetImplMulti.prototype.formatWidgetCorrectValue = function () {
    var _val = cm_unescape(this._jsonObj.value)
    var arr = String(_val).split("|")
    _val = arr[arr.length - 1]
    return _val
}

/**
 * Define class for Rational
 *
 * test: cmextras_1_1_1_83_1
 *
 */

function HmFlashWidgetImplRational(jsonObj) {
    this.isFraction = false;
    this.isMixFraction = false;
    this.allowMixed = jsonObj.allowMixed;
    this.HmFlashWidget(jsonObj);
    prepareChkCntrl(jsonObj, this);
    var widgetObj = this;
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;

    console.log("NUMBER_RATIONAL_INIT")
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    console.log("NUMBER_RATIONAL_PROCESSKEY")
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    if (isASlashCharacter(event)) {
        if (!this.isFraction) {
            this.configureAsFraction(true);
            this.isFraction = true;
        }
        return false;
    } else if (isAMCharacter(event)) {
        if (!this.isMixFraction && this.allowMixed) {
            this.configureAsMixFraction(true);
            this.isMixFraction = true;
            this.isFraction = !true;
        }
        return false;
    } else if (isABackSpaceCharacter(event) || isADeleteCharacter(event)) {
        if (this.isFraction) {
            if (getNodeName(ele) == 'widget_input_field_2' && ele.value.length < 1) {
                if (!this.isMixFraction) {
                    this.configureAsFraction(false);
                    this.isFraction = false;
                    ele.value = '';
                }
                return false;
            }
        }
        if (this.isMixFraction) {
            if (getNodeName(ele) == 'widget_input_field_3' && ele.value.length < 1) {
                this.configureAsMixFraction(false);
                this.isMixFraction = false;
                this.isFraction = $get('widget_input_field_2').style.display != 'none'
                ele.value = '';
                return false;
            }
            if (getNodeName(ele)== 'widget_input_field_2' && ele.value.length < 1) {
                this.configureAsMixFraction(false);
                this.isMixFraction = false;
                this.isFraction = false
                ele.value = '';
                $get('widget_input_field_3').value="";
                return false;
            }
        }
        return true;
    } else if (code == 39) {
        return true;
    }

    return restrictCharacters(ele, event, this.allowMixed?restrictionType_digitsOnly:restrictionType_rational, this.allowChars, this.dntallowChars);
}

HmFlashWidget.prototype.configureAsFraction = function (yesNo) {
    var measureNode = $($get('widget_divider').parentNode).find('span :first').get(0);
    if (yesNo) {
        //
        // $get('widget_input_field_2').style.width = '60px';
        // $get('widget_input_field_1').style.width = '60px';
        // $get('widget_divider').style.width = '60px';
        //
        $get('widget_input_field_2').style.display = 'inline';
        $get('widget_divider').style.display = 'block';
        $get('widget_input_field_2').focus();
        if (measureNode) {
            measureNode.style.top = '13px'
        }
        this.isFraction = true;
    } else {
        // $get('widget_input_field_2').style.width = '80px';
        // $get('widget_input_field_1').style.width = '80px';
        // $get('widget_divider').style.width = '80px';
        $get('widget_input_field_2').style.display = 'none';
        $get('widget_divider').style.display = 'none';
        if (measureNode) {
            measureNode.style.top = '0px'
        }
        $get('widget_input_field_1').focus();
        this.isFraction = !true;
    }
}
HmFlashWidget.prototype.configureAsMixFraction = function (yesNo) {
    var measureNode = $($get('widget_divider').parentNode).find('span :first').get(0);
    if (yesNo) {
        
        if(!this.isFraction){
        var _wval=$get('widget_input_field_1').value;
        $get('widget_input_field_1').value="";
        $get('widget_input_field_3').value=_wval?_wval:"";
        }
        $get('widget_input_field_2').style.display = 'inline';
        $get('widget_input_field_3').style.display = 'block';
        $get('widget_input_field_3').style.top = "13px"
        $get('widget_divider').style.display = 'block';
        $get('widget_input_field_3').focus();
        if (measureNode) {
            measureNode.style.top = '13px'
        }
        this.isMixFraction = true;
    } else {
        var ip2 = $get('widget_input_field_2').value
        $get('widget_input_field_3').style.display = 'none';
        $get('widget_input_field_3').value = '';
        if (!ip2) {
            $get('widget_input_field_2').style.display = 'none';
            $get('widget_divider').style.display = 'none';
            $get('widget_input_field_3').style.display = 'none';
            if (measureNode) {
                measureNode.style.top = '0px'
            }
            $get('widget_input_field_1').focus();
            this.isFraction = !true;
        } else {
            $get('widget_input_field_2').focus();
            this.isFraction = true;
        }
        this.isMixFraction = !true;
    }
}

/**
 * Builds UI and places measure text to right of main input field
 *
 */
function getSymbol(n) {
    var sym = unescape(n)
    if (sym == 'pi') {
        sym = '&pi;';
    } else if (sym == 'undefined') {} else if (sym == 'sqrt') {
        sym = '&radic;';
    } else {
        if (!isNaN(String(sym))) {
            sym = String.fromCharCode(sym)
        }
    }
    return sym;
}
HmFlashWidget.prototype.drawGui = function () {
    console.log("NUMBER_RATIONAL_DRAWGUI")
    var measure = '';
    var format = '';
    var prefix = '';
    if (this._jsonObj.format) {
        format = this._jsonObj.format;
        var vm = unescape(format).split('|');
        if (vm.length > 1) {
            measure = vm[1];
            prefix = vm[0];
        }
        var mp = format.split('^');
        var raised = null;
        if (mp.length > 1) {
            measure = mp[0];
            raised = mp[1];
        } else {
            measure = unescape(this._jsonObj.format);
        }
        var font_style = "";
        if (measure) {
            measure = measure.split('_')[1];
            if (measure == 'deg') {
                measure = "&nbsp;&deg;"
            }
            var dummy = $("<input>");
            $('body').append(dummy);
            var icss = dummy.css('font-style') + " ";
            icss = dummy.css('font-variant') + " ";
            icss += dummy.css('font-weight') + " ";
            icss += dummy.css('font-size') + " ";
            icss += dummy.css('font-family');
            dummy.remove();
            font_style = "font:" + icss + ";font-weight:bold";
            font_style = ""
        }

        if (!measure)
            measure = '';

        format = '';
        if (raised) {
            measure += "<span style='vertical-align: baseline;font-size: 0.8em;position: relative;top: -0.4em;'>" + raised + "</span>";
        }
    }
    var widget = this.createWidgetForm();
    var ms = prefix == '' ? 150 : 125;
    var mixHtml = this.allowMixed ? '<input name="widget_input_field_3" type="text" style="width: 80px;text-align:center;position:relative;float:left;display:none;">' : "";
    var html = "<div style='height: 75px;'>" + "<div class='input_prefix' style='float: left;margin-top: 0px;margin-right: 5px;'>" + prefix + "</div>" + mixHtml +
        "<div style='float: left;'>" +

        "<input name='widget_input_field_1' type='text' style='width: 80px;text-align:center;'/>" + "<span class='input_units' style='vertical-align: baseline;position: relative;" + font_style + "'>&nbsp;" + measure + "</span>" + "<div name='widget_divider' class='divider' style='display: none'>&nbsp;</div>" + "<input name='widget_input_field_2' type='text' style='display: none;width: 80px;text-align:center;'/>" + "</div>" + "</div>";

    /*
     * if (this._jsonObj.symbols) { var symbols = this._jsonObj.symbols; if
     * (symbols == 'pi') { symbols = '&pi;'; } else if (symbols == 'undefined') { }
     * else { /** square root ? symbols = '&radic;'; }
     *
     * html += "" + "<div class='buttons' style='padding: 5px; background:
     * #DDD;'>" + " <button type='button' onmouseover='_getSelection()'
     * onblur='_getSelection()' onfocus='_getSelection()'
     * ontouchstart='_getSelection()' onclick='_addButtonTextToWidget(\"" +
     * symbols + "\");return false;'>" + symbols + "</button>" + "</div>"; }
     */
if (this._jsonObj.addCheckbox === 'true'||this._jsonObj.addCheckbox===true) {
        var lab = this._jsonObj.checkbox_label;
        this.checkbox_label = lab ? lab : "No Solution";
        this.hasSimplified = true;
        html += "<div class='simplified_wrapper'>" + "  <label>" + this.checkbox_label + " <input name='widget_input_simplified' type='checkbox'/></label>" + "</div>";
    }
    if (this._jsonObj.symbols) {
        var symbols = this._jsonObj.symbols;
        var sarr = symbols.split(",");
        var _symbols = []
        if (sarr.length) {
            var btns = "";
            for (var s = 0; s < sarr.length; s++) {
                symbols = getSymbol(sarr[s]);
                if (symbols == 'undefined') {
                    btns = getNormalFieldWithSelect(1, "Slope is undefined:", true);
                } else {
                    _symbols.push(symbols)
                    btns += "<button type='button' onmouseover='_getSelection()' onblur='_getSelection()' onfocus='_getSelection()' ontouchstart='_getSelection()' onclick='_addButtonTextToWidget(\"" + symbols + "\");return false;'>" + symbols + "</button>"
                }
            }
        }
        var btn_inst = ""
        if (_symbols.length) {
            var str_keys = "[" + _symbols.join("], [") + "]";
            var str_symb = sarr.length === 1 ? "the " : "";
            str_symb += _symbols.join(", ");
            str_symb += sarr.length === 1 ? " symbol." : " symbols.";
            btn_inst = "<div style='font-size:0.7em;padding-bottom:2px;'>+ Use " + str_keys + " to enter " + str_symb + "</div>"
        }
        html += btn_inst + "<div class='buttons'  style='clear:both;padding:0 5px; background: #DDD;'>" + "    " + btns + "</div>";
        // widget.innerHTML = html;
        // return widget;
    }
    widget.innerHTML = html;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplRational, HmFlashWidget);
HmFlashWidgetImplRational.prototype.setWidgetValue = function (val, doValidate) {
    var vals = val.split("|");
    var notUndefined = true;
    var sel = vals.shift();

    sel = sel == 'null' ? 'false' : sel;
    if (sel == 'true' || sel == 'false') {
        val = vals.join("|");
        sel = sel == 'false' ? false : true;
        var cb = $get('widget_input_simplified_1')||$get('widget_input_simplified');

        if (cb != null) {
            cb.checked = sel;
            if (String(sel) == 'true') {
                // return;
                notUndefined = false
            }
        }
    }

    if (notUndefined) {
        this.setWidgetValueDefault(val);
        /** if there is a secondary field */
        if (val.split('|').length > 1) {
            // are there really two values?
            if (vals[1] != "") {
                if (this.configureAsFraction) {
                    this.configureAsFraction(true);
                }
            }
            if (vals[2]) {
                if (this.configureAsMixFraction) {
                    this.configureAsMixFraction(true);
                }
            }
        }
    }
    if (doValidate) {
        this.processWidget(true)
    }
}
HmFlashWidgetImplRational.prototype.getWidgetValue = function () {
    // var value = '';
    var value = [];
    var cb = $get('widget_input_simplified_1')||$get('widget_input_simplified');
    if (cb != null) {
        value[0] = cb.checked;
    } else {
        value[0] = 'null';
    }
    for (var i = 1; i < 4; i++) {
        var f = 'widget_input_field_' + i;
        var elem = $get(f);
        if (elem != null && elem.style.display != 'none') {
            var v = elem.value;
            /*
             * if (value > '') { value += '|'; }
             */
            value.push(v);
        }
    }
    return value.join("|");
}
HmFlashWidgetImplRational.prototype.formatWidgetCorrectValue = function () {
    var _val = cm_unescape(this._jsonObj.value)
    _val = _val.replace(/pi/g, PI_SYM)
    _val = _val.replace(/sqrt/g, SQUARE_ROOT_SYM)

    if (_val == 'undefined'||this._jsonObj.addCheckbox) {
        
        if(String(this._jsonObj.addCheckbox)==='true'){
            var arr = String(_val).split("|")
            var arrF = arr.pop();
            if (arrF == 'true') {
                _val = String(true) + "|" + arr.join("|")
            } else {
                _val = "null|" + arr.join("|")
            }
        }else{
            _val = String(true) + "|";
        }
    } else {
        if (_val.indexOf("[") > -1) {
            _val = _val.split("[")[1]
            var a_val = _val.split("]")
            _val = a_val[1] + "/" + a_val[0];
        }
        _val = 'false' + "|" + (String(_val).split("/").join("|"))

    }
    return _val
}

/**
 * Define class for Inequality
 *
 * test: cmextras_1_2_1_43_1
 *
 */

function HmFlashWidgetImplInequality(jsonObj) {
    this.isFraction = false;
    this.HmFlashWidget(jsonObj);

    var widgetObj = this;
}
HmFlashWidget.prototype.processKey = function (ele, event) {
    return true; // accept all
}

HmFlashWidget.prototype.configureAsFraction = function (yesNo) {
    if (yesNo) {
        $get('widget_input_field_2').style.display = 'inline';
        $get('widget_divider').style.display = 'block';
        $get('widget_input_field_2').focus();
    } else {
        $get('widget_input_field_2').style.display = 'none';
        $get('widget_divider').style.display = 'none';
        $get('widget_input_field_1').focus();
    }
}
HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var stype=this._jsonObj.stype?this._jsonObj.stype:null;
    var extrabtns=""
    if(stype){
    if(stype=='compound'){
        extrabtns+= "<button type='button' onmouseover='_getSelection()' onblur='_getSelection()' onfocus='_getSelection()' ontouchstart='_getSelection()' onclick='_addButtonTextToWidget(\"OR\");return false;'>OR</button>"
        }
        if(stype=='interval_notation'){
        extrabtns+= "<button type='button' onmouseover='_getSelection()' onblur='_getSelection()' onfocus='_getSelection()' ontouchstart='_getSelection()' onclick='_addButtonTextToWidget(\"&cup;\");return false;'>&cup;</button>"
        extrabtns+= "<button type='button' onmouseover='_getSelection()' onblur='_getSelection()' onfocus='_getSelection()' ontouchstart='_getSelection()' onclick='_addButtonTextToWidget(\"&infin;\");return false;'>&infi;</button>"
        }
    }
    var prefix = this._jsonObj.prefix||"";
    var postfix=this._jsonObj.postfix||"";
    var f='';
    var sty="";
    if(prefix&&postfix){
        f="width:70px!important;text-align:center;";
        sty="float:left";
    }
    var html = "<div><div style='float:left'>"+prefix+"</div><div style='"+sty+"'><input name='widget_input_field_1' type='text' style="+f+"/></div>" + postfix+"</div><div class='buttons' style='margin-top: 10px;'>" + "<button type='button' onmouseover='_getSelection()' onblur='_getSelection()' onfocus='_getSelection()' ontouchstart='_getSelection()' onclick='_addButtonTextToWidget(\"&lt;\");return false;'>&lt;</button>" + "<button type='button' onmouseover='_getSelection()' onblur='_getSelection()' onfocus='_getSelection()' ontouchstart='_getSelection()' onclick='_addButtonTextToWidget(\"&le;\");return false;'>&le;</button>" + "<button type='button' onmouseover='_getSelection()' onblur='_getSelection()' onfocus='_getSelection()' ontouchstart='_getSelection()' onclick='_addButtonTextToWidget(\"&gt;\");return false;'>&gt;</button>" + "<button type='button' onmouseover='_getSelection()' onblur='_getSelection()' onfocus='_getSelection()' ontouchstart='_getSelection()' onclick='_addButtonTextToWidget(\"&ge;\");return false;'>&ge;</button>" + "<button type='button' onmouseover='_getSelection()' onblur='_getSelection()' onfocus='_getSelection()' ontouchstart='_getSelection()' onclick='_addButtonTextToWidget(\"=\");return false;'>=</button>" + "<button type='button' onmouseover='_getSelection()' onblur='_getSelection()' onfocus='_getSelection()' ontouchstart='_getSelection()' onclick='_addButtonTextToWidget(\"&ne;\");return false;'>&ne;</button>" +extrabtns+ "</div>";
    //html=prefix+html+postfix;
    if (this._jsonObj.symbols) {
        html = "<input name='widget_input_field_1' type='text'/>" + "<div class='buttons' style='margin-top: 10px;'>";
        var symbols = this._jsonObj.symbols;
        var sarr = symbols.split(",");

        if (sarr.length) {
            var btns = "";
            for (var s = 0; s < sarr.length; s++) {
                html += "<button type='button' onmouseover='_getSelection()' onblur='_getSelection()' onfocus='_getSelection()' ontouchstart='_getSelection()' onclick='_addButtonTextToWidget(\"" + sarr[s] + "\");return false;'>" + sarr[s] + "</button>"
            }
        }
        html += "</div>";
    }
    widget.innerHTML = html;
    return widget;
}
var savedRange;
var lastFocus = null;

function _getSelection() {
    var ctrl = document.activeElement
    var CaretPos = [];
    var CaretPos_s;
    var CaretPos_e;
    var noActiveInput = !ctrl || !(ctrl.tagName == 'INPUT' || ctrl.tagName == 'input')||ctrl.type!='text';
    if (noActiveInput) {
        return;
    }
    lastFocus = noActiveInput ? lastFocus : ctrl;
    if (document.selection) {
        ctrl.focus();
        var Sel = document.selection.createRange();
        var r1 = (Sel.text).length
        Sel.moveStart('character', -ctrl.value.length);
        CaretPos_s = Sel.text.length - r1;
        CaretPos_e = Sel.text.length;
    } else if (ctrl.selectionStart || ctrl.selectionStart == '0') {
        CaretPos_s = ctrl.selectionStart;
        CaretPos_e = ctrl.selectionEnd;
    }
    CaretPos = [CaretPos_s, CaretPos_e]
    console.log(CaretPos)
    savedRange = CaretPos
    return (CaretPos);
}

function setCaretPosition(ctrl, pos) {
    if (ctrl.setSelectionRange) {
        ctrl.focus();
        ctrl.setSelectionRange(pos, pos);
    } else if (ctrl.createTextRange) {
        var range = ctrl.createTextRange();
        range.collapse(true);
        range.moveEnd('character', pos);
        range.moveStart('character', pos);
        range.select();
    }
}

function _addButtonTextToWidget(ch) {
var parent=$get('hm_widget_form')
    var ctrl = lastFocus;
    var noActiveInput = !ctrl || !(ctrl.tagName == 'INPUT' || ctrl.tagName == 'input')||ctrl.type!='text';
    console.log("_addButtonTextToWidget::noActiveInput:: " + noActiveInput)
    if (noActiveInput) {

        ctrl = $('input[name^="widget_input_field"]',parent)[0];
        savedRange = [0, 0];

    }
    console.log("_addButtonTextToWidget::ctrl:: " + savedRange)
    console.log(ctrl)
    if (ctrl && (ctrl.tagName == 'INPUT' || ctrl.tagName == 'input')) {
        var v = ctrl.value;
        var s = savedRange[0];
        var e = savedRange[1];
        var l = v.substring(0, s);
        var r = v.substring(e);
        if (ch == 'undefined') {
            ctrl.value = ch;
            l = ""
            r = ""
        } else {
            ctrl.value = l + ch + r;
        }
        setCaretPosition(ctrl, String(l + ch).length);
        setWidgetMessage(null);
    }
    // $get('widget_input_field_1').focus();
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplInequality, HmFlashWidget);

/**
 * Define class for Coord
 *
 */
/*
 * function HmFlashWidgetImplCoord(jsonObj) { var widgetObj = this;
 * this.HmFlashWidget(jsonObj); var inputField = $get('widget_input_field_2'); //
 * inputField.onkeydown = function(event) {setWidgetMessage(null);return //
 * widgetObj.processKey(this,event);}; } HmFlashWidget.prototype.processKey =
 * function (ele, event) { return restrictCharacters(ele, event,
 * restrictionType_decimals); }
 *
 * HmFlashWidget.prototype.drawGui = function () { var widget =
 * this.createWidgetForm(); var html = "<span style='font-size:
 * 40px;font-weight: bold'>&#40;<span>" + "<input style='width:
 * 50px;text-align:center;' name='widget_input_field_1' type='text'/>" + ",&nbsp;" + "<input
 * style='width: 50px;text-align:center;' name='widget_input_field_2'
 * type='text'/>" + "<span style='font-size: 40px;font-weight: bold'>&#41;<span>";
 * widget.innerHTML = html; return widget; }
 */
// HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
/*
 * var var1 = $get('widget_input_field_1').value; var var2 =
 * $get('widget_input_field_2').value;
 *
 * var vals = this._widgetAnswer.split('|'); if (var1 == vals[0] && var2 ==
 * vals[1]) { this.markWidgetCorrect(); } else { this.markWidgetIncorrect(); }
 * showWidgetSubmit(false);
 */
// this.processWidgetDefault(doNotFireEvent);
// }
// copyPrototype(HmFlashWidgetImplCoord, HmFlashWidget);
/**
 *
 * cmextrasgeo_1_2_1_4_1
 */
function HmFlashWidgetImplCoord(jsonObj) {
    var widgetObj = this;
    this.HmFlashWidget(jsonObj);
    var inputField = $get('widget_input_field_2');
    // inputField.onkeydown = function(event) {setWidgetMessage(null);return
    // widgetObj.processKey(this,event);};
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
}

function getFractionField(id, w, format) {
    var wid = w ? w : 80
    var disp1 = format == 'fraction' ? 'inline' : 'none';
    var disp2 = format == 'fraction' ? 'block' : 'none';
    var html = "<div style='height: 75px;float: left;'>" + "<div style='float: left;'>" + "<input name='widget_input_field_norm_" + id + "' type='text' style='width: " + wid + "px;text-align:center;font-weight: bold;'/>" + "<div name='widget_divider_" + id + "' class='divider' style='display: " + disp2 + ";width:" + wid + "px;'>&nbsp;</div>" + "<input name='widget_input_field_den_" + id + "' type='text' style='display: " + disp1 + ";width: " + wid + "px;text-align:center;font-weight: bold;'/>" + "</div>" + "</div>";
    return html
}
HmFlashWidget.prototype.processKey = function (ele, event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    console.log('BACKSLASH:' + isABackSpaceCharacter(event))
    var idy = getNodeName(ele);
    console.log("FOCUS 0: " + idy);
    if (idy.indexOf('widget_input_field_') == -1) {
        return;
    }
    var istr = idy.split("_")
    var i = parseInt(istr[istr.length - 1]);
    var f = istr[istr.length - 2];
    var pi;
    var p = ['x', 'y']
    if (f == 'norm' || f == 'den') {
        pi = p[i - 1];
    }
    if (isASlashCharacter(event)) {
        if ($get('widget_divider_' + i).style.display != 'block') {
            this.configureAsFraction(true, pi, i);
            // this.isFraction = true;
        }
        return false;
    } else if (isABackSpaceCharacter(event) || isADeleteCharacter(event)) {
        if ($get('widget_divider_' + i).style.display == 'block') {
            if (getNodeName(ele).indexOf('widget_input_field_den') > -1 && ele.value.length < 1) {
                this.configureAsFraction(false, pi, i);
                // this.isFraction = false;
                ele.value = '';
                return false;
            }
        }
        return true;
    } else if (code == 39) {
        return true;
    }

    return restrictCharacters(ele, event, restrictionType_decimals, this.allowChars, this.dntallowChars);
}

function onCoordControl(event, ind) {
var parent=$get('hm_widget_form')
    $('.simplified_wrapper input[name!="widget_input_simplified_' + ind + '"]', parent).prop("checked", false);
    $('input[type="text"]',parent).val("");
    HmFlashWidgetImplCoord.prototype.configureAsFraction(false, 'x', 1);
    HmFlashWidgetImplCoord.prototype.configureAsFraction(false, 'y', 2);
    showWidgetSubmit(true);
    var targ = event.target
    $(targ).focus();
}
HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var prefix = this._jsonObj.prefix;
    prefix = prefix ? "<div style='float: left;margin-right: 5px;'>" + prefix + "</div>" : ""
    var value = this._jsonObj.value;
    var varr = value.split("|");
    var lastV = varr[varr.length - 1];
    var isArr = lastV.indexOf("[") == 0;
    var controls = null;
    var controlsHtml = ""

    if (isArr) {
        controls = eval(lastV)
        var cl = controls.length
        if (cl) {

            for (var s = 0; s < cl - 1; s++) {
                controlsHtml += "<div class='simplified_wrapper' style='clear:both'>" + "  <label><input onclick='onCoordControl(event," + (s + 1) + ")' name='widget_input_simplified_" + (s + 1) + "' type='checkbox'/>" + controls[s] + "</label>" + "</div>";
            }
        }
    }
    var html = "<div style='font-size: 60px;float:left;margin-top:-27.5px;'><span>&#40;</span></div>" + '<div name="widget_input_field_x" style="float: left;">' + getFractionField(1, 75) + '</div>' + "<div style='font-size: 30px;float:left;margin-top:-7.5px;'><span>,&nbsp;</span></div>" + '<div name="widget_input_field_y" style="float: left;">' + getFractionField(2, 75) + '</div>' + "<div style='font-size: 60px;float:left;margin-top:-27.5px;'><span>&#41;</span></div>"
    widget.innerHTML = prefix + html + "<br>" + controlsHtml;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    /*
     * var var1 = $get('widget_input_field_1').value; var var2 =
     * $get('widget_input_field_2').value;
     *
     * var vals = this._widgetAnswer.split('|'); if (var1 == vals[0] && var2 ==
     * vals[1]) { this.markWidgetCorrect(); } else { this.markWidgetIncorrect(); }
     * showWidgetSubmit(false);
     */
    this.processWidgetDefault(doNotFireEvent);
}
HmFlashWidget.prototype.configureAsFraction = function (yesNo, pid, id) {
    if (yesNo) {
        $get('widget_input_field_' + pid).style.marginTop = '-15px';
        $get('widget_input_field_den_' + id).style.display = 'inline';
        $get('widget_divider_' + id).style.display = 'block';
        $get('widget_input_field_den_' + id).focus();

    } else {
        $get('widget_input_field_' + pid).style.marginTop = '0px';
        $get('widget_input_field_den_' + id).style.display = 'none';
        $get('widget_divider_' + id).style.display = 'none';
        $get('widget_input_field_norm_' + id).focus();
    }
}
copyPrototype(HmFlashWidgetImplCoord, HmFlashWidget);
HmFlashWidgetImplCoord.prototype.getWidgetValue = function () {
    var value = '';
    var parent=$get('hm_widget_form')
    for (var i = 1; i < 3; i++) {
        var f1 = 'widget_input_field_norm_' + i;
        var f2 = 'widget_input_field_den_' + i;
        var _n = "";
        var _d = "";
        if ($get(f1) != null) {
            _n = $get(f1).value;

        }
        if ($get(f2) != null) {
            _d = $get(f2).value;
            if ($get(f2).style.display == 'none') {
                _d = 'null';
            }
        }
        if (value > '') {
            value += '|';
        }
        value += _n + "/" + _d;
    }
    var controls = $('.simplified_wrapper input[type="checkbox"]',parent)
    var cl = controls.length;
    var v = [];
    for (var i = 1; i <= cl; i++) {
        var comb = 'widget_input_simplified_' + i;

        if ($get(comb) != null) {
            v.push($get(comb).checked);

        }

    }
    if (v.length) {
        if (value > '') {
            value += '|';
        }
        value += "[" + v.join(",") + "]";
    }
    return value;
}
HmFlashWidgetImplCoord.prototype.setWidgetValue = function (val, doValidate) {
    var parent=$get('hm_widget_form')
    var vals = val.split("|");
    var p = ['x', 'y'];
    var hasControls = false;
    var lastV = vals[vals.length - 1]
    var setOnlyControls = false
    if (lastV.indexOf("[") == 0) {
        hasControls = true;
    }

    if (hasControls) {
        var cvals = eval(lastV)
        var controls = $('.simplified_wrapper input[type="checkbox"]',parent)
        var cl = controls.length

        for (var j = 1; j <= cl; j++) {
            var comb = 'widget_input_simplified_' + j;
            var v = cvals[j - 1];
            // alert($get(comb))
            // alert(v)
            if ($get(comb) != null) {
                $get(comb).checked = v;
            }
            if (v === true) {
                setOnlyControls = true

            }
        }
    }
    if (!setOnlyControls) {

        for (var i = 1; i < 3; i++) {
            var obj = vals[i - 1];

            var frac = String(obj).split("/");
            var _n = frac[0];
            var _d = frac[1];
            _d = String(_d) == "null" || String(_d) == 'undefined' ? 'null' : _d;
            var isFrac = _d != 'null';

            var f1 = 'widget_input_field_norm_' + (i);
            if ($get(f1) != null) {
                $get(f1).value = _n;
            }
            if (isFrac) {
                var f2 = 'widget_input_field_den_' + (i);
                if ($get(f2) != null) {
                    $get(f2).value = _d;
                    if (this.configureAsFraction) {
                        this.configureAsFraction(true, p[i - 1], i)
                    }
                }
            }

        }
    }

    if (doValidate) {
        this.processWidget(true)
    }
}
HmFlashWidgetImplCoord.prototype.formatWidgetCorrectValue = function () {
    var _val
    var widget_answer = cm_unescape(this._jsonObj.value)
    var expectedValue = widget_answer.indexOf("|") > -1 ? widget_answer.split("|") : widget_answer.split(",");

    var lastV = expectedValue[expectedValue.length - 1]
    var ev = ""
    if (lastV.indexOf("[") == 0) {

        lastV = eval(lastV)
        if (lastV.length) {
            var index = lastV[lastV.length - 1]

            lastV.pop()
            var l = lastV.length
            ev = []
            for (var i = 0; i < l; i++) {
                if (i === index) {
                    ev.push(true)
                } else {
                    ev.push(false)
                }
            }
            ev = "[" + ev.join(",") + "]"
            expectedValue.pop()
            expectedValue.push(ev)

        }
    }
    _val = expectedValue.join("|");
    return _val
}

/**
 * Define class for number_mixed_fraction: cmextras_1_4_1_1_4
 *
 */

function HmFlashWidgetImplMixedFraction(jsonObj) {
    this.HmFlashWidget(jsonObj);
    var inputField = $get('widget_input_field_2');
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
}
HmFlashWidget.prototype.processKey = function (ele, event) {
    return restrictCharacters(ele, event, restrictionType_digitsOnly,this.allowChars,this.dntallowChars);
}

HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var html = "<div style='height: 50px;'>" + "<div style='float: left;margin-top: 15%;margin-right: 3px;'>" + "    <input name='widget_input_field_1' type='text' style='width: 30px;text-align:center;'/>" + "</div>" + "<div style='float: left;width: 80px;'>" + "<input name='widget_input_field_2' type='text' style='width: 80px;display: block;text-align:center;'/>" + "<div class='divider'>&nbsp;</div>" + "<input name='widget_input_field_3' type='text' style='width: 80px;display: block;text-align:center;font-weight: bold;'/>" + "</div>" + "</div>";
    
    html=applyPrePostfixFormat(this._jsonObj,html)

    widget.innerHTML = html;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplMixedFraction, HmFlashWidget);
HmFlashWidgetImplMixedFraction.prototype.formatWidgetCorrectValue = function () {
    var _val = cm_unescape(this._jsonObj.value)
    if (_val.indexOf("[") > -1) {
        var splitVal = _val.split("]")
        var ewhole = splitVal[0].split("[")[1];
        splitVal = splitVal[1].split("/")
        var enumero = splitVal[0]
        var eden = splitVal[1]
        _val = ewhole + "|" + Number(enumero) + "|" + eden;
    } else {
        _val = String(_val).split("/").join("|")
    }
    return _val
}

/**
 * Define class for Power Form
 *
 * test: genericprealg_1_6_Operations,ExpressionsandVariables_15_125
 *
 */

function HmFlashWidgetImplPowerForm(jsonObj) {
    this.HmFlashWidget(jsonObj);
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
    this.stype = jsonObj.stype ? jsonObj.stype : null;
    console.log("STYPE_DEF: " + this.stype + ":" + jsonObj.stype);
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    return restrictCharacters(ele, event, restrictionType_decimals, this.allowChars, this.dntallowChars);
}

HmFlashWidget.prototype.drawGui = function () {
    var power = '';
    var format = '';
    var prefix = this._jsonObj.prefix;

    var v = this._jsonObj.value.split('^');
    var postfix = this._jsonObj.postfix;
    var base = v[0];
    var power = v[1];
    var widget = this.createWidgetForm();
    var html = "<div style='position: relative;height: 40px;'>" + "   <input name='widget_input_field_1' type='text' style='position: absolute; left: 0;width: 87px;text-align:right;'/>" + "   <input name='widget_input_field_2' type='text' style='position: absolute;  top: -10px;left:90px;font-size: .6em;width: 40px;text-align:left;'/>" + "</div>";
    this.stype = this.stype ? this.stype : (this._jsonObj.stype ? this._jsonObj.stype : null);
    console.log("STYPE: " + this.stype);
    if (this.stype != null) {
        var b;
        var e;
        if (this.stype == 'base') {
            e = power
        } else {
            b = base
        }
        console.log("STYPE: " + b + ":" + e);
        html = getExponentField(b, e);

    }
    if (postfix) {
        /**
         * TODO - Add option to render postfix node
         */
        var isFrac = postfix.indexOf("/") > -1;
        var isPower = postfix.indexOf("^") > -1;
        var op = "<div style='position:absolute;left:145px; font-weight:bold;float:left;top:45px;'>"
        var cl = "</div>"
        var phtml = "&nbsp;=&nbsp;"
        if (isFrac) {
            var frac = postfix.split("/");
            phtml += "<div style='height: 75px;position:absolute;left:30px;top:-15px;'>" + getFractionHTML(frac[0], frac[1]) + "</div>";
        } else if (isPower) {
            var exp = postfix.split("^")
            phtml += "<div style='height: 75px;position:absolute;left:30px;top:0px;'>" + getPowerHTML(exp[0], exp[1]) + "</div>";
        } else {
            phtml += postfix
        }
        phtml += cl;
        html += op + phtml
    }
    console.log("HTML: " + html);
    widget.innerHTML = html;

    return widget;
}

HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplPowerForm, HmFlashWidget);

HmFlashWidgetImplPowerForm.prototype.formatWidgetCorrectValue = function () {
    var _val = cm_unescape(this._jsonObj.value)

    _val = String(_val).split("^").join("|")

    return _val
}

/**
 * type = 'science notation' test = genericprealg_3_8_NumberTheory_1_335
 */

function HmFlashWidgetImplSciNotation(jsonObj) {
    this.HmFlashWidget(jsonObj);

    var val = unescape(jsonObj.value);
    var p1 = val.split('x');
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    return restrictCharacters(ele, event, restrictionType_decimals, this.allowChars, this.dntallowChars);
}

HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    widget.className = 'science-notation';
    var html = "<div style='position: relative;height: 40px;'>" + "   <input name='widget_input_field_1' type='text' style='position: absolute; left: 0;width: 63px;text-align:right;'/>" + "   <input name='widget_input_field_2' type='text' style='position: absolute;  top: -10px;left:110px;font-size: .5em;width: 40px;text-align:left;'/>" + "   <span style='position: absolute;left: 70px;font-weight: bold;'>x 10</span>" + "</div>";
    widget.innerHTML = html;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplSciNotation, HmFlashWidget);
HmFlashWidgetImplMixedFraction.prototype.formatWidgetCorrectValue = function () {
    var _val = cm_unescape(this._jsonObj.value)

    _val = String(_val).split("x10^").join("|")

    return _val
}

/**
 * type = letter test =
 * 'genericprealg_10_1_LinearEquationsandInequalities_5_900'
 */

function HmFlashWidgetImplLetter(jsonObj) {
    this.HmFlashWidget(jsonObj);

    var val = unescape(jsonObj.value);
    var p1 = val.split('x');
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    return true;
}

HmFlashWidget.prototype.drawGui = function () {
    return this.drawGuiDefault();
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplLetter, HmFlashWidget);

/**
 * Type = Odds test = genericalg1_13_1_DiscreteMathematicsandProbability_13_1200
 */

function HmFlashWidgetImplOdds(jsonObj) {
    this.HmFlashWidget(jsonObj);
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    return restrictCharacters(ele, event, restrictionType_digitsOnlyWithColon,this.allowChars,this.dntallowChars);
}

HmFlashWidget.prototype.drawGui = function () {
    return this.drawGuiDefault();
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplOdds, HmFlashWidget);

/**
 * Type = point_slope_form test = genericalg1_2_7_GraphingLinearEquations_1_130
 */
/*
 * function HmFlashWidgetImplPointSlopeForm(jsonObj) {
 * this.HmFlashWidget(jsonObj); }
 *
 * HmFlashWidget.prototype.processKey = function (ele, event) { return
 * restrictCharacters(ele, event, restrictionType_decimals); }
 *
 * HmFlashWidget.prototype.drawGui = function () { var widget =
 * this.createWidgetForm(); widget.className = 'point-slope-form'; var html = "<span>y-&nbsp;</span>" + "<input
 * name='widget_input_field_1' type='text' style='width: 30px;display:
 * inline;text-align:center;'/>" + "<span>&nbsp;=&nbsp;</span>" + "<input
 * name='widget_input_field_2' type='text' style='width: 30px;display:
 * inline;text-align:center;'/>" + "<span>&nbsp;<span style='font-size:
 * 50px;'>(</span>x-&nbsp;</span>" + "<input id='widget_input_field_3'
 * type='text' style='width: 30px;display: inline;text-align:center;'/>" + "<span><span
 * style='font-size: 50px;'>)</span>";
 *
 *
 * widget.innerHTML = html; return widget; }
 * HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
 * this.processWidgetDefault(doNotFireEvent); }
 * copyPrototype(HmFlashWidgetImplPointSlopeForm, HmFlashWidget);
 */
/**
 * Type = QEVertexFOrm
 */

function HmFlashWidgetImplPointSlopeForm(jsonObj) {
    this.ishFraction = false;
    this.iskFraction = false;
    this.allowFrac = cm_unescape(jsonObj.allowFrac);
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
    this.show_xcoeff = cm_unescape(jsonObj.show_xcoeff);
    this.show_xcoeff = this.show_xcoeff == 'true' ? true : false;
    this.HmFlashWidget(jsonObj);
    var widgetObj = this;
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    var idy = getNodeName(ele);
    console.log("FOCUS 0: " + idy);
    if (idy.indexOf('widget_input_field_') == -1) {
        return;
    }
    var istr = idy.split("_")
    var i = parseInt(istr[istr.length - 1]);
    var f = istr[istr.length - 2];
    var pi;
    if (f == 'norm' || f == 'den') {
        var p = ['a', 'h', 'k']
        if (f == 'norm' || f == 'den') {
            pi = p[i - 1];
        }
    }
    if (isASlashCharacter(event)) {
        if ($get('widget_divider_' + i).style.display != 'block') {
            this.configureAsFraction(true, pi, i);
            // this.isFraction = true;
        }
        return false;
    } else if (isABackSpaceCharacter(event) || isADeleteCharacter(event)) {
        if ($get('widget_divider_' + i).style.display == 'block') {
            if (getNodeName(ele).indexOf('widget_input_field_den') > -1 && ele.value.length < 1) {
                this.configureAsFraction(false, pi, i);
                // this.isFraction = false;
                ele.value = '';
                return false;
            }
        }
        return true;
    } else if (code == 39) {
        return true;
    }
    
    return restrictCharacters(ele, event, restrictionType_rational, this.allowChars,this.dntallowChars);
}
HmFlashWidget.prototype.configureAsFraction = function (yesNo, pid, id) {
    if (yesNo) {
        $get('widget_input_field_' + pid).style.marginTop = '-15px';
        $get('widget_input_field_den_' + id).style.display = 'inline';
        $get('widget_divider_' + id).style.display = 'block';
        $get('widget_input_field_den_' + id).focus();

    } else {
        $get('widget_input_field_' + pid).style.marginTop = '0px';
        $get('widget_input_field_den_' + id).style.display = 'none';
        $get('widget_divider_' + id).style.display = 'none';
        $get('widget_input_field_norm_' + id).focus();
    }
}
HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var combo_for_pm = true; // cm_unescape(this._jsonObj.combo_for_pm)
    // combo_for_pm = combo_for_pm == 'true' ? true : false;

    var pmahtml;
    var ahtml;
    ahtml = getFractionField(1, 40);
    pmahtml = '<div style="float: left;font-weight:bold;">' + getComboInput(0, ['+', '-', ''], ['', '\u2212']) + '&nbsp;</div>';
    html = '<div name="horizontalContainer" style="float: none;margin-top:15px;">' + '<div name="horizontalDiv1" style="float: left;font-weight:bold;"><i>y</i>&nbsp;' + getComboInput(2, ['-', '+', ''], ['\u2212', '+']) + '&nbsp;</div>' + '<div name="widget_input_field_k" style="float: left;">' + getFractionField(3, 40) + '</div>' + '<div name="horizontalDiv3" style="float: left;font-weight:bold;">&nbsp;=&nbsp;</div>' + pmahtml + '<div name="widget_input_field_a" style="float: left">' + ahtml + '</div>' + '<div name="horizontalDiv5" style="float: left;margin-top:-7.5px"><span class="widget_obrac" style="font-size: 30px;font-weight: bold">&#40;</span></div>' + '<div name="horizontalDiv6" style="float: left;font-weight:bold;"><i>x</i>&nbsp;' + getComboInput(1, ['-', '+', ''], ['\u2212', '+']) + '&nbsp;</div>' + '<div name="widget_input_field_h" style="float: left;">' + getFractionField(2, 40) + '</div>' + '<div name="horizontalDiv8" style="float: left;margin-top:-7.5px"><span style="font-size: 30px;font-weight: bold" class="widget_cbrac">&#41;</span></div>' + '</div>';
    widget.innerHTML = html;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplPointSlopeForm, HmFlashWidget);

HmFlashWidgetImplPointSlopeForm.prototype.getWidgetValue = function () {
    var value = '';

    for (var i = 1; i < 4; i++) {
        var f1 = 'widget_input_field_norm_' + i;
        var f2 = 'widget_input_field_den_' + i;
        var _n = "";
        var _d = "";
        if ($get(f1) != null) {
            _n = $get(f1).value;

        }
        if ($get(f2) != null) {
            _d = $get(f2).value;
            if ($get(f2).style.display == 'none') {
                _d = 'null';
            }
        }
        if (value > '') {
            value += '|';
        }
        value += _n + "/" + _d;
    }
    for (var i = 0; i < 3; i++) {
        var comb = 'icombo_' + i;
        var v;
        if ($get(comb) != null) {
            v = $get(comb).selectedIndex;
            if (value > '') {
                value += '|';
            }
            value += v;
        } else {
            if (value > '') {
                value += '|';
            }
            value += "null";
        }

    }
    return value;
}
HmFlashWidgetImplPointSlopeForm.prototype.setWidgetValue = function (val, doValidate) {
    var vals = val.split("|");
    var p = ['a', 'h', 'k']
    for (var i = 1; i < 4; i++) {
        var obj = vals[i - 1];

        var frac = String(obj).split("/");
        var _n = frac[0];
        var _d = frac[1];
        _d = String(_d) == "null" || String(_d) == 'undefined' ? 'null' : _d;
        var isFrac = _d != 'null';

        var f1 = 'widget_input_field_norm_' + (i);
        if ($get(f1) != null) {
            $get(f1).value = _n;
        }
        if (isFrac) {
            var f2 = 'widget_input_field_den_' + (i);
            if ($get(f2) != null) {
                $get(f2).value = _d;
                if (this.configureAsFraction) {
                    this.configureAsFraction(true, p[i - 1], i)
                }
            }
        }

    }
    for (var j = 0; j < 3; j++) {
        var comb = 'icombo_' + j;
        var v = vals[j + 3];
        v = v ? v : 0;
        if ($get(comb) != null) {
            $get(comb).selectedIndex = v;
        }
    }
    if (doValidate) {
        this.processWidget(true)
    }
}

HmFlashWidgetImplPointSlopeForm.prototype.formatWidgetCorrectValue = function () {
    var _val = cm_unescape(this._jsonObj.value)
    var ev = String(_val).split(",")
    var co = []
    for (var j = 0; j < ev.length; j++) {
        var u = ev[j]
        if (u.indexOf("-") > -1) {
            co.push(1)
            ev[j] = u.split("-").join("")
        } else {
            co.push(0)
        }
    }
    ev = ev.concat(co);
    _val = ev.join("|")

    return _val
}

/**
 * type = inequality_exact test =
 */

function HmFlashWidgetImplInequalityExact(jsonObj) {
    this.HmFlashWidget(jsonObj);
}
HmFlashWidget.prototype.processKey = function (ele, event) {
    return restrictCharacters(ele, event, restrictionType_digitsOnly);
}
HmFlashWidget.prototype.drawGui = function () {
    return this.drawGuiDefault();
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplInequalityExact, HmFlashWidget);

/**
 * Type = slope_intercept_form test = ''
 */

function HmFlashWidgetImplSlopeInterceptForm(jsonObj) {
    this.isFraction = false;
    this.isIFraction = false;
    this.HmFlashWidget(jsonObj);
    var widgetObj = this;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    console.log('BACKSLASH:' + isABackSpaceCharacter(event))
    if (isASlashCharacter(event)) {
        if (getNodeName(ele) == 'widget_input_field_1') {
            if (!this.isFraction) {
                this.configureSlopeAsFraction(true);
                this.isFraction = true;
            }
        }
        if (getNodeName(ele) == 'widget_input_field_3') {
            if (!this.isIFraction) {
                this.configureInterceptAsFraction(true);
                this.isIFraction = true;
            }
        }
        return false;
    } else if (isABackSpaceCharacter(event) || isADeleteCharacter(event)) {
        if (this.isFraction) {
            if (getNodeName(ele) == 'widget_input_field_2' && ele.value.length < 1) {
                console.log('BACKSLASH: frac to normal')
                this.configureSlopeAsFraction(false);
                this.isFraction = false;
                ele.value = '';
                return false;
            }
        }
        if (this.isIFraction) {
            if (getNodeName(ele) == 'widget_input_field_4' && ele.value.length < 1) {
                console.log('BACKSLASH: frac to normal')
                this.configureInterceptAsFraction(false);
                this.isIFraction = false;
                ele.value = '';
                return false;
            }
        }
        return true;
    } else if (code == 39) {
        return true;
    }
    return restrictCharacters(ele, event, restrictionType_rational, this.allowChars, this.dntallowChars);
}
HmFlashWidget.prototype.configureSlopeAsFraction = function (yesNo) {
    if (yesNo) {
        $get('widget_input_field_slope').style.marginTop = '0px';
        $get('widget_input_field_2').style.display = 'inline';
        $get('widget_divider').style.display = 'block';
        $get('widget_input_field_2').focus();

    } else {
        $get('widget_input_field_slope').style.marginTop = '15px';
        $get('widget_input_field_2').style.display = 'none';
        $get('widget_divider').style.display = 'none';
        $get('widget_input_field_1').focus();
    }
}
HmFlashWidget.prototype.configureInterceptAsFraction = function (yesNo) {
    if (yesNo) {
        $get('widget_input_field_intercept').style.marginTop = '0px';
        $get('widget_input_field_4').style.display = 'inline';
        $get('widget_divider_i').style.display = 'block';
        $get('widget_input_field_4').focus();

    } else {
        $get('widget_input_field_intercept').style.marginTop = '15px';
        $get('widget_input_field_4').style.display = 'none';
        $get('widget_divider_i').style.display = 'none';
        $get('widget_input_field_3').focus();
    }
}
HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    // widget.className='point-slope-form';
    // var html = "<div style='height: 75px;'>" + "<div style='float:
    // left;margin-top: 15px;margin-right: 5px;'>" + "<i>y</i>&nbsp;=&nbsp;" +
    // "</div>" + "<div id='widget_input_field_slope' style='float: left;width:
    // 60px;margin-top: 15px;'>" + "<input class='input'
    // name='widget_input_field_1' type='text' style='width: 60px;display:
    // block;text-align:center;'/>" + "<div id='widget_divider' class='divider'
    // style='display: none;width: 60px;'>&nbsp;</div>" + "<input class='input'
    // name='widget_input_field_2' type='text' style='width: 60px;display:
    // none;text-align:center;'/>" + "</div>" + "<div style='float:
    // left;margin-top: 15px;'>" + "<div>&nbsp;<i>x<i>&nbsp;+&nbsp;</div>" +
    // "</div>" + "<div style='float: left;width: 60px;margin-top: 15px;'>" +
    // "<input class='input' id='widget_input_field_3' type='text' style='width:
    // 60px;display: block;text-align:center;font-weight:bold;'/>" + "</div>" +
    // "</div>";
    var html = "<div style='height: 75px;'>" + "<div style='float: left;margin-top: 15px;margin-right: 5px;'>" + "<i>y</i>&nbsp;=&nbsp;" + "</div>" + "<div name='widget_input_field_slope' style='float: left;width: 60px;margin-top: 15px;'>" + "<input class='input' name='widget_input_field_1' type='text' style='width: 60px;display: block;text-align:center;'/>" + "<div name='widget_divider' class='divider' style='display: none;width: 60px;'>&nbsp;</div>" + "<input class='input' name='widget_input_field_2' type='text' style='width: 60px;display: none;text-align:center;'/>" + "</div>" + "<div style='float: left;margin-top: 15px;'>" + "<div>&nbsp;<i>x<i>&nbsp;" + getComboInput(1, ['+', '-', ''], ['+', '\u2212']) + "&nbsp;</div>" + "</div>" + "<div name='widget_input_field_intercept' style='float: left;width: 60px;margin-top: 15px;'>" + "<input class='input' name='widget_input_field_3' type='text' style='width: 60px;display: block;text-align:center;font-weight: bold;'/>" + "<div name='widget_divider_i' class='divider' style='display: none;width: 60px;'>&nbsp;</div>" + "<input class='input' name='widget_input_field_4' type='text' style='width: 60px;display: none;text-align:center;font-weight: bold;'/>" + "</div>" + "</div>";
    widget.innerHTML = html;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplSlopeInterceptForm, HmFlashWidget);

HmFlashWidgetImplSlopeInterceptForm.prototype.setWidgetValue = function (val, doValidate) {
    var vals = val.split('|');
    var c_sel = vals.shift();
    $get('icombo_1').selectedIndex = c_sel;
    for (var i = 0, t = vals.length; i < t; i++) {
        var f = 'widget_input_field_' + (i + 1);
        vals[i] = String(vals[i]) == "null" || String(vals[i]) == 'undefined' ? 'null' : vals[i];
        var elem = $get(f);
        if (elem != null) {
            elem.value = vals[i];

            /** if there is a secondary field */
            if (i == 1 && vals[i] != 'null') {
                if (this.configureSlopeAsFraction) {
                    this.configureSlopeAsFraction(true);
                }
            }
            if (i == 3 && vals[i] != 'null') {
                if (this.configureInterceptAsFraction) {
                    this.configureInterceptAsFraction(true);
                }
            }
        }
    }
    if (doValidate) {
        this.processWidget(true);
    }
}
HmFlashWidgetImplSlopeInterceptForm.prototype.getWidgetValue = function () {
    var value = [];
    for (var i = 1; i < 5; i++) {
        var f = 'widget_input_field_' + i;
        var elem = $get(f);
        if (elem != null && elem.style.display != 'none') {
            var v = elem.value;
            value.push(v);
        } else if (elem != null) {
            // var v = 'null';
            value.push('null');
        }
    }
    var comb = 'icombo_1';
    var v;
    if ($get(comb) != null) {
        v = $get(comb).selectedIndex;
        value.unshift(v);
    }
    return value.join("|");
}
HmFlashWidgetImplSlopeInterceptForm.prototype.formatWidgetCorrectValue = function () {
    var _val = cm_unescape(this._jsonObj.value)
    var ev = String(_val).split("+")
    var reg = /\(([^)]+)\)/;
    var co = [ev[0], ev[1]]
    ev[1] = co[0].match(reg)[1]
    var nd
    if (ev[1].indexOf("/") > -1) {
        nd = ev[1].split("/")
        ev[1] = nd[0]
        ev[2] = nd[1]
    } else if (ev[1].indexOf(".") > -1) {
        nd = Math.simpleFrac(ev[1]).split("/")
        ev[1] = nd[0]
        ev[2] = nd[1]
    } else {
        ev[2] = 'null'
    }
    ev[3] = co[1].match(reg)[1]

    var u = ev[3]
    if (u.indexOf("-") > -1) {
        ev[0] = 1
        ev[3] = u.split("-").join("")
    } else {
        ev[0] = 0
    }
    if (ev[3].indexOf("/") > -1) {
        nd = ev[3].split("/")
        ev[3] = nd[0]
        ev[4] = nd[1]
    } else if (ev[3].indexOf(".") > -1) {
        nd = Math.simpleFrac(ev[3]).split("/")
        ev[3] = nd[0]
        ev[4] = nd[1]
    } else {
        ev[4] = 'null'
    }
    _val = ev.join("|")

    return _val
}

/**
 * type =Expressions[for distributive property and combine like term activities]
 * test = 'genericprealg_10_1_LinearEquationsandInequalities_5_900'
 */

function HmFlashWidgetImplExpressions(jsonObj) {
    var expectedValue = jsonObj.questObj;

    var inp_type = expectedValue ? expectedValue[8] : undefined;
    inp_type = inp_type ? inp_type : "general";
    this.restrictChars = jsonObj.restrictedChars ? jsonObj.restrictedChars : false;
    if (inp_type == "DP" || inp_type == "CLT") {
        this.restrictChars = true;
        this.restrType = restrictionType_exp1
    } else {
        if (this.restrictChars) {
            this.restrType = restrictionType_exp2
        }
    }
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
    this.HmFlashWidget(jsonObj);
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    if (this.restrictChars) {
        return restrictCharacters(ele, event, this.restrType, this.allowChars, this.dntallowChars);
    }
    return true;
}

HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var html = "<input class='input' name='widget_input_field_1' type='text' style='width:200px;'/>";
    widget.innerHTML = html;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplExpressions, HmFlashWidget);

/**
 * type =ComboInput a combination of input field with comobox
 */

function HmFlashWidgetImplComboInput(jsonObj) {
    this.HmFlashWidget(jsonObj);
    this.inp_format = jsonObj.format;
    var widgetObj = this;
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    var character = String.fromCharCode(code);
    if (this.inp_format == 'percent_inc_dec') {
        if (character == '-') {
            var msg = "Remember, a decrease by a negative percentage -<i>x</i> means an increase by a positive percentage <i>x</i>."
            var combo = $get("icombo");
            var combo_val = (combo.options[combo.selectedIndex].value).toLowerCase();
            if (combo_val == 'increase') {
                msg = "Remember, an increase by a negative percentage -<i>x</i> means a decrease by a positive percentage <i>x</i>."
            }
            console.log(this.inp_format + " MESSAGE: " + msg)
            this.setWidgetMessage(msg);
        }
    }

    return restrictCharacters(ele, event, restrictionType_decimals, this.allowChars, this.dntallowChars);

    // return true;
}

HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var v = this._jsonObj.value.split('|');
    var combo_data = eval(v[1]);
    console.log("COMBO_INPUT" + this._jsonObj.value);
    console.log("COMBO_INPUT" + combo_data);
    var mtex = v[2];
    var inp = v[3];
    var pretex = v[0];
    var postex = v[4];
    var inputPos=this._jsonObj.input_pos;
    inputPos=inputPos?inputPos:"post";
    var ihtml = inp.indexOf(',') > -1 ? coord_html : norm_html;
    var opts = "";
    for (var i = 0; i < combo_data.length - 1; i++) {
        opts += "<option value=" + combo_data[i] + ">" + combo_data[i] + "</option>"
    }
    var combo = "<select name='icombo'>" + opts + "</select>";
    var html = "";
    if (pretex && pretex.length) {
        html += "<span>" + pretex + "&nbsp;</span>"
    }
    if(inputPos=='pre'){
    html += ihtml;
    }
    html += combo;
    if (mtex && mtex.length) {
        html += "<span>&nbsp;" + mtex + "&nbsp;</span>"
    }
    if(inputPos=='post'){
    html += ihtml;
    }
    if (postex && postex.length) {
        html += "<span>&nbsp;" + postex + "</span>"
    }
    widget.innerHTML = html;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplComboInput, HmFlashWidget);
HmFlashWidgetImplComboInput.prototype.getWidgetValue = function () {
    var value = [];
    var combo = $get("icombo");
    value[0] = combo.selectedIndex;
    for (var i = 1; i < 5; i++) {
        var f = 'widget_input_field_' + i;
        var elem = $get(f);
        if (elem != null) {
            var v = elem.value;
            value.push(v)
        }
    }
    return value.join("|");
}
HmFlashWidgetImplComboInput.prototype.setWidgetValue = function (val, doValidate) {

    var vals = val.split('|');
    var combo = $get("icombo");
    combo.selectedIndex = vals[0];
    for (var i = 1, t = vals.length; i < t; i++) {
        var f = 'widget_input_field_' + i;
        var elem = $get(f);
        if (elem != null) {
            elem.value = vals[i];
        }
    }
    if (doValidate) {
        this.processWidget(true);
    }
}
HmFlashWidgetImplComboInput.prototype.formatWidgetCorrectValue = function () {
        var expval = (this._jsonObj.value)
        var expval_arr = String(expval).split("|");
        var inp_format = (this._jsonObj.format);
        var arr = eval(expval_arr[1]);
        var ind = arr.pop();
        var combo_val_e = ind;
        var eVal = expval_arr[3].split(",").join("|");
        var _val = combo_val_e + "|" + eVal;
        return _val
    }
    /**
     * type =multi_yesno a multiple line of yes no type using radio buttons
     */

function HmFlashWidgetImplMultiYesNo(jsonObj) {
    this.HmFlashWidget(jsonObj);
    var widgetObj = this;
    var values = jsonObj.value.split('|');
    var widgetHolder = document.getElementById("widget_wrapper");

    var items = '';
    /** all but last, which has answer */
    var item;
    for (var v = 0, t = values.length; v < t; v++) {
        var gname = 'widget_value_' + v
        item = eval(values[v]);
        items += '<form>'
        items += '<span>' + item[0] + '</span>';
        items += "<input type='radio' name='" + gname + "' onclick='setWidgetMessage(null)' value='" + item[1][0] + "'/>";
        items += '<span>' + item[1][0] + '</span>';
        items += "<input type='radio' name='" + gname + "' onclick='setWidgetMessage(null)' value='" + item[1][1] + "'/>";
        items += '<span>' + item[1][1] + '</span>';
        items += '</form>';
    }
    widgetHolder.innerHTML = items;
}

HmFlashWidget.prototype.processKey = function (ele, event) {

}

HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var html = "<div name='widget_wrapper'>" + "</div>";
    widget.innerHTML = html;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    // this.processWidgetDefault();
    try {
        var valid = false;

        if (this.processWidgetValidation()) {
            console.log("MARK_CORRECT!")
            this.markWidgetCorrect();

            valid = true;
        } else {
            console.log("MARK_INCORRECT!")
            this.markWidgetIncorrect();
            this.setWidgetMessage('One or more of your answers is incorrect!');

            valid = false;
        }

        if (!doNotFireEvent) {
            HmEvents.eventTutorWidgetComplete.fire(valid, this);
        }

    } catch (msg) {
        console.log("MESG " + msg)
        this.setWidgetMessage(msg);
    }
    showWidgetSubmit(false);
}
copyPrototype(HmFlashWidgetImplMultiYesNo, HmFlashWidget);

HmFlashWidgetImplMultiYesNo.prototype.getWidgetValue = function () {
    var widgetHolder = document.getElementById("widget_wrapper");
    var items = widgetHolder.getElementsByTagName("input");
    var value = ''
    if (items.length > 0) {
        for (var i = 0, t = items.length; i < t; i++) {

            if (items.item(i).checked) {
                value += items.item(i).value;
            } else {
                value += ""
            }
            if (i < t - 1) {
                value += '|';
            }
        }
    }
    console.log("MULTI_YESNO values: " + value)
    return value
}
HmFlashWidgetImplMultiYesNo.prototype.setWidgetValue = function (val, doValidate) {
    var sel = val.split("|");
    var widgetHolder = document.getElementById("widget_wrapper");
    var items = widgetHolder.getElementsByTagName("input");
    if (items.length > 0) {
        for (var i = 0, t = items.length; i < t; i++) {
            // items.item(i).checked = ((i+1) == sel);
            setCheckedValue(items.item(i), sel[i])
        }
    }
    if (doValidate) {
        this.processWidget(true);
    }
}
HmFlashWidgetImplMultiYesNo.prototype.formatWidgetCorrectValue = function () {
    var expectedValue_a = cm_unescape(this._jsonObj.value).split("|");
    var expectedValue_arr = [];
    var len = expectedValue_a.length;
    for (var i = 0; i < len; i++) {
        var item = eval(expectedValue_a[i])
        var val = item[1][item[2]]
        var l = item[1].length
        var q = []
        for (var k = 0; k < l; k++) {
            q.push("")
        }
        q[item[2]] = val
        expectedValue_arr.push(q.join("|"))
    }
    return expectedValue_arr.join("|");
}

function setCheckedValue(radioObj, newValue) {
        if (!radioObj)
            return;
        var radioLength = radioObj.length;
        if (radioLength == undefined) {
            radioObj.checked = (newValue && radioObj.value == newValue.toString());
            return;
        }
        for (var i = 0; i < radioLength; i++) {
            radioObj[i].checked = false;
            if (newValue && radioObj[i].value == newValue.toString()) {
                radioObj[i].checked = true;
            }
        }
    }
    /**
     * type =Multi fields multiple inputs
     */

function HmFlashWidgetImplMultiField(jsonObj) {
    this.HmFlashWidget(jsonObj);
    this.inp_format = jsonObj.format;
    var widgetObj = this;
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
    this.isFraction = false
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    var character = String.fromCharCode(code);
    var idy = getNodeName(ele);
    
    console.log("MULTI-FIELD-KEY 0: " + idy);
    if (idy.indexOf('widget_input_field') == -1) {
        return;
    }
    var istr = idy.split("_")
    var i = parseInt(istr[istr.length - 1]);
    var v = this._jsonObj.value.split('|');
    var l = v.length;

    var data = eval(v[i - 1]);
    var type = data[3];
    var _format = data[4];
    console.log("MULTI-FIELD-KEY " + data + ":" + type + ":" + idy + ":" + i);
    if (type == 'string') {
        return true;
    } else if(type==='integer'){
        return restrictCharacters(ele, event, restrictionType_integerOnly, this.allowChars, this.dntallowChars);
    } else if(type==='decimal'){
        return restrictCharacters(ele, event, restrictionType_decimals, this.allowChars, this.dntallowChars);
    } else if (type == 'set'||type=='inequality') {
        return true;
    } else if (type=='exponent_form') {
       // return true;
       idy = getNodeName(ele.parentElement.parentElement.parentElement);
       istr = idy.split("_")
        i = parseInt(istr[istr.length - 1]);
        var p=$(ele.parentElement.parentElement.parentElement);
       if (isASlashCharacter(event)) {
            if (p.find('[name=widget_divider_'+i+']')[0].style.display != 'block') {
                this.configureBaseAsFraction(true, i);
                // this.isFraction = true;
            }
            return false;
        } else if (isABackSpaceCharacter(event) || isADeleteCharacter(event)) {
            if (p.find('[name=widget_divider_'+i+']')[0].style.display == 'block') {
                if (getNodeName(ele).indexOf('widget_input_field_den') > -1 && ele.value.length < 1) {
                    this.configureBaseAsFraction(false, i);
                    // this.isFraction = false;
                    ele.value = '';
                    return false;
                }
            }
            return true;
        } else if (code == 39) {
            return true;
        }
        return restrictCharacters(ele, event, restrictionType_decimals, this.allowChars, this.dntallowChars);
    } else if (type == 'coordinates') {
        var i = parseInt(istr[istr.length - 2]);
        var fid = parseInt(istr[istr.length - 1]);
        var f = istr[istr.length - 3];
        var pi;
        var p = ['x', 'y']
        if (f == 'norm' || f == 'den') {
            pi = p[i - 1];
        }
        if (isASlashCharacter(event)) {
            if ($get('widget_divider_' + i + '_' + fid).style.display != 'block') {
                this.configureAsFraction_coord(true, pi + '_' + fid, i + '_' + fid);
                // this.isFraction = true;
            }
            return false;
        } else if (isABackSpaceCharacter(event) || isADeleteCharacter(event)) {
            if ($get('widget_divider_' + i + '_' + fid).style.display == 'block') {
                if (getNodeName(ele).indexOf('widget_input_field_den') > -1 && ele.value.length < 1) {
                    this.configureAsFraction_coord(false, pi + '_' + fid, i + '_' + fid);
                    // this.isFraction = false;
                    ele.value = '';
                    return false;
                }
            }
            return true;
        } else if (code == 39) {
            return true;
        }

        return restrictCharacters(ele, event, restrictionType_decimals, this.allowChars, this.dntallowChars);
    } else {
        if (_format == 'fraction') {
            return true;
        }
        var p=$(ele.parentElement);
        var fbar=p.find('[name=widget_divider_'+i+']');
        if (isASlashCharacter(event)) {
            if (fbar[0].style.display != 'block') {
                this.configureAsFraction(true, i);
                // this.isFraction = true;
            }
            return false;
        } else if (isABackSpaceCharacter(event) || isADeleteCharacter(event)) {
            if (fbar[0].style.display == 'block') {
                if (getNodeName(ele).indexOf('widget_input_field_den') > -1 && ele.value.length < 1) {
                    this.configureAsFraction(false, i);
                    // this.isFraction = false;
                    ele.value = '';
                    return false;
                }
            }
            return true;
        } else if (code == 39) {
            return true;
        }
        return restrictCharacters(ele, event, restrictionType_rational, this.allowChars, this.dntallowChars);
    }

    // return restrictCharacters(ele, event, restrictionType_rational);

    // return true;
}

function onCoordControlMF(event, fid, ind) {
//var parent=$get('hm_widget_form')
var tutorWrapper = TutorManager.getActiveTutorWrapper().tutorDomNode;
    $('.simplified_wrapper input[name!="widget_input_simplified_' + ind + '_' + fid + '"]',tutorWrapper).prop("checked", false);
    
    
    $('div[name=hm_widget_form] input[type="text"]', tutorWrapper).val("");
    
    HmFlashWidgetImplMultiField.prototype.configureAsFraction_coord(false, 'x_' + fid, 1 + '_' + fid);
    HmFlashWidgetImplCoord.prototype.configureAsFraction_coord(false, '_y', 2 + '_' + fid);
    showWidgetSubmit(true);
    var targ = event.target
    $(targ).focus();
}

function getCoordField(id, val) {
    var value = val;
    var varr = value.split(",");
    var lastV = varr[varr.length - 1];
    var isArr = lastV.indexOf("[") == 0;
    var controls = null;
    var controlsHtml = ""

    if (isArr) {
        controls = eval(lastV)
        var cl = controls.length
        if (cl) {

            for (var s = 0; s < cl - 1; s++) {
                controlsHtml += "<div class='simplified_wrapper' style='clear:both'>" + "  <label><input onclick='onCoordControlMF(event," + (s + 1) + ")' name='widget_input_simplified_" + (s + 1) + "_" + id + "' type='checkbox'/>" + controls[s] + "</label>" + "</div>";
            }
        }
    }
    var html = "<div style='font-size: 60px;float:left;margin-top:-27.5px;'><span>&#40;</span></div>" + '<div name="widget_input_field_x_' + id + '" style="float: left;">' + getFractionField("1_" + id, 75) + '</div>' + "<div style='font-size: 30px;float:left;margin-top:-7.5px;'><span>,&nbsp;</span></div>" + '<div name="widget_input_field_y_' + id + '" style="float: left;">' + getFractionField("2_" + id, 75) + '</div>' + "<div style='font-size: 60px;float:left;margin-top:-27.5px;'><span>&#41;</span></div>"
    return html + "<br>" + controlsHtml;
}
HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var v = this._jsonObj.value.split('|');
    var l = v.length;
    var html = "";
    var inputOnSelect=this._jsonObj.input_format;
    var select_labels=this._jsonObj.input_format_labels;
    inputOnSelect=inputOnSelect?inputOnSelect:"";
    select_labels=select_labels?select_labels:"";
    sub_indi_array = []
    HmFlashWidgetImplMultiField.multi_type_data = {
        length: l
    }
    var local_data = [];
    var graph_data = [];
    widget.innerHTML = "";
    var that = this;
    for (var i = 0; i < l; i++) {
        var data = eval(v[i]);
        console.log("MULTI-FIELD " + this._jsonObj.value);
        console.log("MULTI-FIELD " + data);
        var classes=i===l-1?"mfnode lastfield":"mfnode";
        html = "<div class='"+classes+"' style='float:none;clear:both;'>";
        var inp = data[1];
        var pretex = data[0];
        var postex = data[2];
        var type = data[3];
        var format = data[4];
        var no_sol = false;
        no_sol = format == 'set_with_nosolution' ? true : no_sol;
        var w=type=='inequality'||type=='set'?'150':'75';
        var ihtml = type == 'rational' ? getFractionField(i + 1, null, format) : (type == 'mChoice' ? getMChoiceField(i + 1, inp, format, "null", null) : getNormalField(i + 1,w));
        ihtml = type == 'coordinates' ? getCoordField(i + 1, inp) : ihtml;
        ihtml=type=='exponent_form'?getExponentField_mf(undefined,undefined,undefined,null,i+1):ihtml;
        if (no_sol) {
            var lab = data[5]
            ihtml = getNormalFieldWithSelect(i + 1, lab)
        }
        var topPos = "";
        local_data.push({
            type: type,
            format: format,
            id: i + 1
        })
        if (type == 'graph') {
            var gid = 'graph_holder_' + (i + 1)
            ihtml = "<div name=" + gid + "></div>"
            graph_data.push({
                widgetDom: gid,
                config: data[1],
                gid: i + 1
            })
        }
        if (type == 'rational' || type == 'coordinates'||"exponent_form") {
            topPos = "top:-50px;"
        }
        if (pretex && pretex.length) {
            if (type == 'rational') {
                html += "<span style='float: left'>" + pretex + "&nbsp;</span>"
            } else {
                html += "<span style='float: left'>" + pretex + "&nbsp;</span>"
            }
        }
        html += ihtml;

        html += "<span style='float:left;'>&nbsp;" + postex + "</span>"

        sub_indi_array.push('sub_field_indicator_' + (i + 1));
        if (format == 'set_with_nosolution' || format == 'mChoice') {
            html += "<span name='sub_field_indicator_" + (i + 1) + "' style='position:relative; display: none;top:-50px'>&nbsp;</span>"
        } else {
            html += "<span name='sub_field_indicator_" + (i + 1) + "' style='position:relative; display: none;'>&nbsp;</span>"
        }
        html += "</div>"
        widget.innerHTML += html;
    }
    setTimeout(function () {
        for (var z = 0; z < graph_data.length; z++) {
            var gdata = graph_data[z]
            var obj = local_data[gdata.gid - 1]
            obj.graph = GraphWidget.initialize($get(gdata.widgetDom), gdata.config);
            local_data[gdata.gid - 1] = obj
        }

        HmFlashWidgetImplMultiField.multi_type_data.data = local_data;

    }, 100)
    if (this._jsonObj.symbols) {
        var symbols = this._jsonObj.symbols;
        var sarr = symbols.split(",");
        var _symbols = []
       
        if (sarr.length) {
            var btns = "";
            for (var s = 0; s < sarr.length; s++) {
                symbols = getSymbol(sarr[s]);
                if (symbols == 'undefined') {
                    btns = getNormalFieldWithSelect(1, "Slope is undefined:", true);
                } else {
                    _symbols.push(symbols)
                    btns += "<button type='button' onmouseover='_getSelection()' onblur='_getSelection()' onfocus='_getSelection()' ontouchstart='_getSelection()' onclick='_addButtonTextToWidget(\"" + symbols + "\");return false;'>" + symbols + "</button>"
                }
            }
        }
        var btn_inst = ""
        if (_symbols.length) {
            var str_keys = "[" + _symbols.join("], [") + "]";
            var str_symb = sarr.length === 1 ? "the " : "";
            str_symb += _symbols.join(", ");
            str_symb += sarr.length === 1 ? " symbol." : " symbols.";
            btn_inst = "<div style='font-size:0.7em;padding-bottom:2px;clear:left;'>+ Use " + str_keys + " to enter " + str_symb + "</div>"
        }
        html = btn_inst + "<div class='buttons'  style='clear:both;padding:0 5px; background: #DDD;'>" + "    " + btns + "</div>";
        widget.innerHTML += html;
        }
        if(inputOnSelect.indexOf('onselect')>-1){
        var _html=widget.innerHTML;
        var _slabs=select_labels.split("|");
        _slabs[1]=_slabs[1]?_slabs[1]:"Yes";
        _slabs[2]=_slabs[2]?_slabs[2]:"No";
        
        var _cntrl="<div style='float:none;clear:both;'><span>"+_slabs[0]+"</span><INPUT TYPE='radio' NAME='q1' VALUE='1' onclick='showMField(event)'>"+_slabs[1]+"<INPUT TYPE='radio' NAME='q1' VALUE='0' onclick='hideMField(event)'>"+_slabs[2]+"</div>"
        widget.innerHTML=_cntrl+"<div class='multifield-cont' style='float:none;clear:both;display:none'>"+_html+"</div>";
        if(inputOnSelect.indexOf('onadd')>-1){
            
            var cont=$(widget)
            var l=cont.find(".mfnode").length
            if(l>1){
            cont.find(".mfnode").each(function(ind){
                var item=$(this);
                var lab="Add";
                if(item.is(":first-child")){
                item.addClass('first-node')
                }else{
                item.css("display","none");
                }
                if(ind==l-1){
                item.addClass('last-node')
                lab="Remove";
                }
                var mfbtn='<button onclick="toggleMF(event)" class="addremove">'+lab+'</button>'
                var targ=item.find("span[name^='sub_field_indicator']")
                $(mfbtn).insertBefore(targ)
            });
            }
            //_html=cont.html();
       
        }
        
        }else 
        if(inputOnSelect.indexOf('onadd')>-1){
            var _html
            var cont=$(widget)
            var l=cont.children(".mfnode").length
            if(l>1){
            cont.children(".mfnode").each(function(ind){
                var item=$(this);
                var lab="Add";
                if(item.is(":first-child")){
                item.addClass('first-node')
                }else{
                item.css("display","none");
                }
                if(ind==l-1){
                item.addClass('last-node')
                lab="Remove";
                }
                var mfbtn='<button onclick="toggleMF(event)" class="addremove">'+lab+'</button>'
                var targ=item.find("span[name^='sub_field_indicator']")
                $(mfbtn).insertBefore(targ)
            });
            }
            widget.innerHTML=cont.html();
       
        }
        // return widget;
    
    // widget.innerHTML = html;
    return widget;
}
function toggleMF(e){
    e?e.preventDefault():"";
    var t=$(e.target)
    var p=t.parent();
    var s=$($get("hm_widget_form"));
    var c=e.target.innerHTML;
    var isFirst=p.hasClass("first-node")
    var isLast=p.hasClass("last-node")
    if(c=='Add'){
        if(!isFirst){
            e.target.innerHTML="Remove";
        }
        p.next().show()
        t.hide()
    }else if(c=='Remove'){
        if(!isLast){
            e.target.innerHTML="Add"
        }
        p.hide()
        p.prev().find(".addremove").show()
    }
}
function showMField(e){
//e?e.preventDefault():"";
        $(".multifield-cont").show()
        }
        function hideMField(){
        $(".multifield-cont").hide()
        }
HmFlashWidget.prototype.configureAsFraction = function (yesNo, id) {
    console.log("CONFIG_AS_FRAC: " + yesNo + " : " + id)
    if (yesNo) {
        /*
        $get('widget_input_field_den_' + id).style.width = '75px';
        $get('widget_input_field_norm_' + id).style.width = '75px';
        $get('widget_divider_' + id).style.width = '75px';
        */
        $get('widget_input_field_den_' + id).style.display = 'inline';
        $get('widget_divider_' + id).style.display = 'block';
        $get('widget_input_field_den_' + id).focus();
    } else {
        /*$get('widget_input_field_den_' + id).style.width = '75px';
        $get('widget_input_field_norm_' + id).style.width = '75px';
        $get('widget_divider_' + id).style.width = '75px';*/
        $get('widget_input_field_den_' + id).style.display = 'none';
        $get('widget_divider_' + id).style.display = 'none';
        $get('widget_input_field_norm_' + id).focus();
    }
}
HmFlashWidget.prototype.configureBaseAsFraction = function (yesNo,id) {
    if (yesNo) {
        $($get('widget_input_field_base_' + id)).find('input[name=widget_input_field_den_'+id+']').css("display","inline");
        $($get('widget_input_field_base_' + id)).find('[name=widget_divider_'+id+']').css("display","block");
        $($get('widget_input_field_base_' + id)).find('input[name=widget_input_field_den_'+id+']').focus();
    } else {
        $($get('widget_input_field_base_' + id)).find('input[name=widget_input_field_den_'+id+']').css("display","none");
        $($get('widget_input_field_base_' + id)).find('[name=widget_divider_'+id+']').css("display","none");
        $($get('widget_input_field_base_' + id)).find('input[name=widget_input_field_norm_'+id+']').focus();
    }
}
HmFlashWidget.prototype.configureAsFraction_coord = function (yesNo, pid, id) {
    if (yesNo) {
        $get('widget_input_field_' + pid).style.marginTop = '-15px';
        $get('widget_input_field_den_' + id).style.display = 'inline';
        $get('widget_divider_' + id).style.display = 'block';
        $get('widget_input_field_den_' + id).focus();

    } else {
        $get('widget_input_field_' + pid).style.marginTop = '0px';
        $get('widget_input_field_den_' + id).style.display = 'none';
        $get('widget_divider_' + id).style.display = 'none';
        $get('widget_input_field_norm_' + id).focus();
    }
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplMultiField, HmFlashWidget);

HmFlashWidgetImplMultiField.prototype.setWidgetValue = function (val, doValidate) {
    var vals = val.split('|');
    var parent=$get('hm_widget_form')
    for (var i = 0, t = vals.length; i < t; i++) {
        var obj = vals[i];
        var isGraph = String(obj).indexOf('plot_data') > -1;
        var isFrac = isGraph ? false : String(obj).indexOf('/') > -1;
        var has_no_sol = isGraph ? false : String(obj).indexOf('@') > -1;
        var isMChoice = String(obj).indexOf('mchoice') > -1;
        var isCoords = String(obj).indexOf('coords') > -1;
        var isExp = String(obj).indexOf('exponent_form') > -1;
        if (isMChoice) {
            var radioButtons = $('input[name=mchoice_' + (i + 1) + ']',parent);
            var inputValue = String(obj).split(",");
            inputValue.shift();
            for (var j = 0, l = radioButtons.length; j < l; j++) {
                if (String(j) == String(inputValue[j])) {
                    radioButtons.get(j).checked = true;
                }
            };
        } else if (isCoords) {

            var inputValue = String(obj).split(",");
            inputValue.shift();
            vals = inputValue;
            var p = ['x', 'y'];
            var hasControls = false;
            var lastV = vals[vals.length - 1]
            var setOnlyControls = false
            if (lastV.indexOf("[") == 0) {
                hasControls = true;
            }
            var _id = i + 1
            if (hasControls) {
                var cvals = eval(lastV)
                var controls = $('.simplified_wrapper input[type="checkbox"]',parent)
                var cl = controls.length

                for (var j = 1; j <= cl; j++) {
                    var comb = 'widget_input_simplified_' + j + "_" + _id;
                    var v = cvals[j - 1];
                    // alert($get(comb))
                    // alert(v)
                    if ($get(comb) != null) {
                        $get(comb).checked = v;
                    }
                    if (v === true) {
                        setOnlyControls = true

                    }
                }
            }
            if (!setOnlyControls) {

                for (var z = 1; z < 3; z++) {
                    var obj = vals[z - 1];

                    var frac = String(obj).split("/");
                    var _n = frac[0];
                    var _d = frac[1];
                    _d = String(_d) == "null" || String(_d) == 'undefined' ? 'null' : _d;
                    var isFrac = _d != 'null';

                    var f1 = 'widget_input_field_norm_' + (z) + "_" + _id;
                    if ($get(f1) != null) {
                        $get(f1).value = _n;
                    }
                    if (isFrac) {
                        var f2 = 'widget_input_field_den_' + (z) + "_" + _id;
                        if ($get(f2) != null) {
                            $get(f2).value = _d;
                            if (this.configureAsFraction_coord) {
                                this.configureAsFraction_coord(true, p[z - 1] + "_" + _id, z + "_" + _id)
                            }
                        }
                    }

                }
            }
        } else if (isGraph) {
            var local_data = HmFlashWidgetImplMultiField.multi_type_data.data;
            var graph_wid = local_data[i].graph;
            graph_wid.setWidgetValue(obj)
        } else if (has_no_sol) {
            var vals = String(obj).split("@");
            var sel = vals[0];
            sel = sel == 'null' ? 'false' : sel;
            sel = sel == 'false' ? false : true;
            var cb = $get('widget_input_simplified_' + (i + 1));
            if (cb != null) {
                cb.checked = sel;
                if (String(sel) == 'true') {
                    return;
                }
            }

            //
            var f = 'widget_input_field_' + (i + 1);
            vals[1] = String(vals[1]) == "null" || String(vals[1]) == 'undefined' ? '' : vals[1];
            if ($get(f) != null) {
                $get(f).value = vals[1];
            }
        } else if (isFrac) {
            var frac = String(obj).split("/");
            var _n = frac[0];
            var _d = frac[1];
            _d = String(_d) == "null" || String(_d) == 'undefined' ? 'null' : _d;
            var f1 = 'widget_input_field_norm_' + (i + 1);
            if ($get(f1) != null) {
                $get(f1).value = _n;
            }
            if (_d != 'null') {
                var f2 = 'widget_input_field_den_' + (i + 1);
                if ($get(f2) != null) {
                    $get(f2).value = _d;
                    if (this.configureAsFraction) {
                        this.configureAsFraction(true, i + 1)
                    }
                }
            }
        }else if(isExp){
            var inputValue = String(obj).split(",");
            inputValue.shift();
            vals = inputValue;
            var _i=(i + 1);
            var b_n = String(vals[0]) == "null" || String(vals[0]) == 'undefined' ? 'null' : vals[0];
            var b_d = String(vals[1]) == "null" || String(vals[1]) == 'undefined' ? 'null' : vals[1];
            var exp = String(vals[2]) == "null" || String(vals[2]) == 'undefined' ? 'null' : vals[2];
            var p=$($get('widget_input_field_base_' + _i));
            p.find('input[name=widget_input_field_norm_'+_i+']')[0].value = b_n;
            p.find('input[name=widget_input_field_den_'+_i+']')[0].value = b_d;    
            $get('widget_input_field_exp_'+_i).value = exp;
            if (b_d != 'null') {
                if (this.configureBaseAsFraction) {
                    this.configureBaseAsFraction(true);
                }
            }
        } else {
            var f = 'widget_input_field_' + (i + 1);
            vals[i] = String(vals[i]) == "null" || String(vals[i]) == 'undefined' ? '' : vals[i];
            if ($get(f) != null) {
                $get(f).value = vals[i];
            }
        }
    }
    if (doValidate) {
        this.processWidget(true);
    }
}
HmFlashWidgetImplMultiField.prototype.getWidgetValue = function () {
    var value = '';
    var parent=$get('hm_widget_form')
    var l = HmFlashWidgetImplMultiField.multi_type_data.length;
    var local_data = HmFlashWidgetImplMultiField.multi_type_data.data;
    for (var i = 0; i < l; i++) {
        var obj = local_data[i]
        var type = obj.type;
        var format = obj.format;
        var _id = obj.id;
        if (type == 'graph') {
            var graph_wid = obj.graph
            graph_wid.getWidgetValue()
        } else if (type == 'rational') {
            var f1 = 'widget_input_field_norm_' + _id;
            var f2 = 'widget_input_field_den_' + _id;
            var _n = "";
            var _d = "";
            if ($get(f1) != null) {
                _n = $get(f1).value;
            }
            if ($get(f2) != null) {
                _d = $get(f2).value;
                if ($get(f2).style.display == 'none') {
                    _d = 'null';
                }
            }
            value += _n + "/" + _d;
            if (i < l - 1) {
                value += "|";
            }
        } else if (type == 'set' && format == 'set_with_nosolution') {
            var cb = $get('widget_input_simplified_' + _id);
            var chk
            if (cb != null) {
                chk = String(cb.checked);
            } else {
                chk = 'null';
            }
            chk = chk + "@";
            var f = 'widget_input_field_' + _id;
            if ($get(f) != null) {
                var v = $get(f).value;
                value += chk + v;

            } else {
                value += chk + 'null';
            }
            if (i < l - 1) {
                value += "|";
            }
        } else if (type == 'mChoice') {
            var radioButtons = $('input[name=mchoice_' + _id + ']',parent);
            //var inputValue = null;
            var inputValue = ['mchoice'];
            for (var i = 0, l = radioButtons.length; i < l; i++) {
                if (radioButtons.get(i).checked) {
                    //inputValue = i;
                    inputValue.push(i + 1);
                    //break;
                }
            };
            value += inputValue.join(",");
            if (i < l - 1) {
                value += "|";
            }
        } else if (type == 'coordinates') {

            var inputValue = ['coords'];

            for (var z = 1; z < 3; z++) {
                var f1 = 'widget_input_field_norm_' + z + "_" + _id;
                var f2 = 'widget_input_field_den_' + z + "_" + _id;
                var _n = "";
                var _d = "";
                if ($get(f1) != null) {
                    _n = $get(f1).value;

                }
                if ($get(f2) != null) {
                    _d = $get(f2).value;
                    if ($get(f2).style.display == 'none') {
                        _d = 'null';
                    }
                }
                
                inputValue.push(_n + "/" + _d);
            }
            var controls = $('.simplified_wrapper input[type="checkbox"]',parent);
            var cl = controls.length;
            var v = [];
            for (var k = 1; k <= cl; k++) {
                var comb = 'widget_input_simplified_' + k + "_" + _id;

                if ($get(comb) != null) {
                    v.push($get(comb).checked);

                }

            }
            if (v.length) {

                inputValue.push("[" + v.join(",") + "]");
            }
            value += inputValue.join(",");
            if (i < l - 1) {
                value += "|";
            }
        }else if(type=="exponent_form"){
            
            var value = [type];
            var p=$($get('widget_input_field_base_' + _id));
            var b_n = p.find('input[name=widget_input_field_norm_'+_id+']')[0].value;
            var b_d = p.find('input[name=widget_input_field_den_'+_id+']')[0].value;
            var exp = $get('widget_input_field_exp_'+_id).value;
            value.push(b_n);
            value.push(b_d);
            value.push(exp);
            value=value.join(",")
            if (i < l - 1) {
                    value += "|";
                }
        } else {
            var f = 'widget_input_field_' + _id;
            if ($get(f) != null) {
                var v = $get(f).value;
                value += v;
                if (i < l - 1) {
                    value += "|";
                }
            }
        }

    }
    return value;
}

/**
 * type =set test =
 */
function prepareNoSolutionInput(jsonObj, obj, id) {
    var idStr = id ? "_" + id : "";
    var _id = id ? id : '1'
    var simpEl = $get('widget_input_simplified' + idStr);
    if (simpEl) {
        simpEl.onclick = function () {
            showWidgetSubmit(true);
            var num = $get('widget_input_field_' + _id);
            num.value = "";
        };
    }
}

function HmFlashWidgetImplSet(jsonObj) {
    this.HmFlashWidget(jsonObj);
    var val = unescape(jsonObj.value);
    this.no_sol_lab = jsonObj.no_sol_label;
    this.no_sol_lab = this.no_sol_lab ? this.no_sol_lab : "No Solution";
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
    prepareNoSolutionInput(jsonObj, this)
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    return restrictCharacters(ele, event, restrictionType_set, this.allowChars, this.dntallowChars);
}

HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var html = "<input name='widget_input_field_1' name='widget_input_field_1' type='text' style='width:250px; text-align:left; font-weight: bold;'/>";
    /**
     * should a simplified choice been added?
     *
     */
    var lab = this._jsonObj.no_sol_label;
    this.no_sol_lab = lab ? lab : "No Solution";
    if (this._jsonObj.format == 'set_with_nosolution') {
        this.hasSimplified = true;
        html += "<div class='simplified_wrapper'>" + "  <label>" + this.no_sol_lab + " <input name='widget_input_simplified' type='checkbox'/></label>" + "</div>";
    }
    widget.innerHTML = html;

    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}

copyPrototype(HmFlashWidgetImplSet, HmFlashWidget);

HmFlashWidgetImplSet.prototype.getWidgetValue = function () {
    var value = [];
    var cb = $get('widget_input_simplified');
    if (cb != null) {
        value[0] = String(cb.checked);
    } else {
        value[0] = 'null';
    }
    for (var i = 1; i < 5; i++) {
        var f = 'widget_input_field_' + i;
        if ($get(f) != null) {
            var v = $get(f).value;

            value.push(v);
        }
    }
    return value.join("|");
}
HmFlashWidgetImplSet.prototype.setWidgetValue = function (val, doValidate) {
    var vals = val.split("|");
    var sel = vals[0];
    sel = sel == 'null' ? 'false' : sel;
    sel = sel == 'false' ? false : true;
    var cb = $get('widget_input_simplified');
    if (cb != null) {
        cb.checked = sel;
        if (String(sel) == 'true') {
            return;
        }
    }
    for (var i = 1, t = vals.length; i < t; i++) {
        var f = 'widget_input_field_' + (i);
        if ($get(f) != null) {
            $get(f).value = vals[i];
        }
    }
    if (doValidate) {
        this.processWidget(true)
    }
}
HmFlashWidgetImplSet.prototype.formatWidgetCorrectValue = function () {
    var expectedValue = cm_unescape(this._jsonObj.value).split("|");
    var ans_hasNoSolution = expectedValue[1] == 'nosolution';
    var val = []
    val[0] = ans_hasNoSolution ? true : 'null'
    val[1] = expectedValue[0];
    return val.join("|");
}

/**
 * Type = QEVertexFOrm
 */

function HmFlashWidgetImplQEVertexForm(jsonObj) {
    this.ishFraction = false;
    this.iskFraction = false;
    this.allowFrac = cm_unescape(jsonObj.allowFrac);
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
    this.show_xcoeff = cm_unescape(jsonObj.show_xcoeff);
    this.show_xcoeff = this.show_xcoeff == 'true' ? true : false;
    this.HmFlashWidget(jsonObj);
    var widgetObj = this;
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    var idy = getNodeName(ele);
    console.log("FOCUS 0: " + idy);
    if (idy.indexOf('widget_input_field_') == -1) {
        return;
    }
    var istr = idy.split("_")
    var i = parseInt(istr[istr.length - 1]);
    var f = istr[istr.length - 2];
    var pi;
    if (f == 'norm' || f == 'den') {
        var p = ['a', 'h', 'k']
        if (f == 'norm' || f == 'den') {
            pi = p[i - 1];
        }
    }
    if (isASlashCharacter(event)) {
        if ($get('widget_divider_' + i).style.display != 'block') {
            this.configureAsFraction(true, pi, i);
            // this.isFraction = true;
        }
        return false;
    } else if (isABackSpaceCharacter(event) || isADeleteCharacter(event)) {
        if ($get('widget_divider_' + i).style.display == 'block') {
            if (getNodeName(ele).indexOf('widget_input_field_den') > -1 && ele.value.length < 1) {
                this.configureAsFraction(false, pi, i);
                // this.isFraction = false;
                ele.value = '';
                return false;
            }
        }
        return true;
    } else if (code == 39) {
        return true;
    }
    return restrictCharacters(ele, event, restrictionType_rational, this.allowChars, this.dntallowChars);
}
HmFlashWidget.prototype.configureAsFraction = function (yesNo, pid, id) {
    if (yesNo) {
        $get('widget_input_field_' + pid).style.marginTop = '-15px';
        $get('widget_input_field_den_' + id).style.display = 'inline';
        $get('widget_divider_' + id).style.display = 'block';
        $get('widget_input_field_den_' + id).focus();

    } else {
        $get('widget_input_field_' + pid).style.marginTop = '0px';
        $get('widget_input_field_den_' + id).style.display = 'none';
        $get('widget_divider_' + id).style.display = 'none';
        $get('widget_input_field_norm_' + id).focus();
    }
}
HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var combo_for_pm = cm_unescape(this._jsonObj.combo_for_pm)
    combo_for_pm = combo_for_pm == 'true' ? true : false;
    var ev = cm_unescape(this._jsonObj.value).split(",")[0];
    var evs = String(ev).split("/");
    var evs_0 = evs[0].substring(1)
    var s1 = evs[0].substring(0, 1)
    s1 = s1 == '-' ? s1 : ""
    evs_0 = s1 == '-' ? evs_0 : evs[0];
    var evs_1 = evs[1] ? evs[1] : "";
    var pmahtml = '<div style="float: left;font-weight:bold;"><span>' + (s1 == '-' ? '\u2212' : "") + '</span></div>'
    var ahtml = "<div style='float: left;width: 20px;margin-top:-15px;'>" + "<div style='width: 20px;text-align:center;font-weight: bold;'>" + evs_0 + "</div>" + "<div class='divider' style='width: 20px;height:3px;line-height:3px;background:black;'>&nbsp;</div>" + "<div style='width: 20px;text-align:center;font-weight: bold;'>" + evs[1] + "</div>" + "</div>";
    if (evs_1 == '') {
        if (evs_0 == '1') {
            pmahtml = ""
            ahtml = "<div style='float: left;width: 20px;'>" + "<div style='width: 20px;text-align:center;font-weight: bold;'>" + (s1 == '-' ? '\u2212' : "") + "</div>" + "</div>";
        } else {
            pmahtml = ""
            ahtml = "<div style='float: left;width: 20px;'>" + "<div style='width: 20px;text-align:center;font-weight: bold;'>" + evs[0] + "</div>" + "</div>";
        }
    }
    if (!this.show_xcoeff) {
        ahtml = getFractionField(1, 40);
        pmahtml = '<div style="float: left;font-weight:bold;">' + getComboInput(0, ['+', '-', ''], ['', '\u2212']) + '&nbsp;</div>'

    }
    var html = '<div name="horizontalContainer" style="float: none;margin-top:15px;">' + '<div name="horizontalDiv1" style="float: left;font-weight:bold;"><i>y</i>&nbsp;<span>\u2212</span>&nbsp;</div>' + '<div name="widget_input_field_k" style="float: left;">' + getFractionField(3, 40) + '</div>' + '<div name="horizontalDiv3" style="float: left;font-weight:bold;">&nbsp;<span>=</span>&nbsp;</div>' + pmahtml + '<div name="widget_input_field_a" style="float: left">' + ahtml + '</div>' + '<div name="horizontalDiv5" style="float: left;margin-top:-7.5px"><span class="widget_obrac" style="font-size: 30px;font-weight: bold">&#40;</span></div>' + '<div name="horizontalDiv6" style="float: left;font-weight:bold;"><i>x</i><span>&nbsp;<span>\u2212</span>&nbsp;</span></div>' + '<div name="widget_input_field_h" style="float: left;">' + getFractionField(2, 40) + '</div>' + '<div name="horizontalDiv8" style="float: left;margin-top:-7.5px"><span style="font-size: 30px;font-weight: bold" class="widget_cbrac">&#41;</span></div>' + '<div style="float:left;font-size:12px;font-weight: bold;margin-top:-7.5px;">2</div>' + '</div>';
    if (combo_for_pm) {
        html = '<div name="horizontalContainer" style="float: none;margin-top:15px;">' + '<div name="horizontalDiv1" style="float: left;font-weight:bold;"><i>y</i>&nbsp;' + getComboInput(2, ['-', '+', ''], ['\u2212', '+']) + '&nbsp;</div>' + '<div name="widget_input_field_k" style="float: left;">' + getFractionField(3, 40) + '</div>' + '<div name="horizontalDiv3" style="float: left;font-weight:bold;">&nbsp;=&nbsp;</div>' + pmahtml + '<div name="widget_input_field_a" style="float: left">' + ahtml + '</div>' + '<div name="horizontalDiv5" style="float: left;margin-top:-7.5px"><span class="widget_obrac" style="font-size: 30px;font-weight: bold">&#40;</span></div>' + '<div name="horizontalDiv6" style="float: left;font-weight:bold;"><i>x</i>&nbsp;' + getComboInput(1, ['-', '+', ''], ['\u2212', '+']) + '&nbsp;</div>' + '<div name="widget_input_field_h" style="float: left;">' + getFractionField(2, 40) + '</div>' + '<div name="horizontalDiv8" style="float: left;margin-top:-7.5px"><span style="font-size: 30px;font-weight: bold" class="widget_cbrac">&#41;</span></div>' + '<div style="float:left;font-size:12px;font-weight: bold;margin-top:-7.5px;">2</div>' + '</div>';
    }
    widget.innerHTML = html;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplQEVertexForm, HmFlashWidget);

HmFlashWidgetImplQEVertexForm.prototype.getWidgetValue = function () {
    var value = '';

    for (var i = 1; i < 4; i++) {
        var f1 = 'widget_input_field_norm_' + i;
        var f2 = 'widget_input_field_den_' + i;
        var _n = "";
        var _d = "";
        if ($get(f1) != null) {
            _n = $get(f1).value;

        }
        if ($get(f2) != null) {
            _d = $get(f2).value;
            if ($get(f2).style.display == 'none') {
                _d = 'null';
            }
        }
        if (value > '') {
            value += '|';
        }
        value += _n + "/" + _d;
    }
    for (var i = 0; i < 3; i++) {
        var comb = 'icombo_' + i;
        var v;
        if ($get(comb) != null) {
            v = $get(comb).selectedIndex;
            if (value > '') {
                value += '|';
            }
            value += v;
        } else {
            if (value > '') {
                value += '|';
            }
            value += "null";
        }

    }
    return value;
}
HmFlashWidgetImplQEVertexForm.prototype.setWidgetValue = function (val, doValidate) {
    var vals = val.split("|");
    var p = ['a', 'h', 'k']
    for (var i = 1; i < 4; i++) {
        var obj = vals[i - 1];

        var frac = String(obj).split("/");
        var _n = frac[0];
        var _d = frac[1];
        _d = String(_d) == "null" || String(_d) == 'undefined' ? 'null' : _d;
        var isFrac = _d != 'null';

        var f1 = 'widget_input_field_norm_' + (i);
        if ($get(f1) != null) {
            $get(f1).value = _n;
        }
        if (isFrac) {
            var f2 = 'widget_input_field_den_' + (i);
            if ($get(f2) != null) {
                $get(f2).value = _d;
                if (this.configureAsFraction) {
                    this.configureAsFraction(true, p[i - 1], i)
                }
            }
        }

    }
    for (var j = 0; j < 3; j++) {
        var comb = 'icombo_' + j;
        var v = vals[j + 3];
        v = v ? v : 0;
        if ($get(comb) != null) {
            $get(comb).selectedIndex = v;
        }
    }
    if (doValidate) {
        this.processWidget(true);
    }
}
HmFlashWidgetImplQEVertexForm.prototype.formatWidgetCorrectValue = function () {
    var val = cm_unescape(this._jsonObj.value).split(",");
    var a = val[0];
    var h = val[1];
    var k = val[2];
    var expectedValues = [a, h, k]
    if (a.indexOf("-") > -1) {
        expectedValues[0] = expectedValues[0].split("-").join("");
        expectedValues.push(1)
    } else {
        expectedValues.push(0)
    }
    if (h.indexOf("-") > -1) {
        expectedValues[1] = expectedValues[1].split("-").join("");
        expectedValues.push(1)
    } else {
        expectedValues.push(0)
    }
    if (k.indexOf("-") > -1) {
        expectedValues[2] = expectedValues[2].split("-").join("");
        expectedValues.push(1)
    } else {
        expectedValues.push(0)
    }
    return expectedValues.join("|");
}

/**
 * Type = QEStandardFOrm
 */

function HmFlashWidgetImplQEStandardForm(jsonObj) {
    this.ishFraction = false;
    this.iskFraction = false;
    this.isaFraction = false;
    this.allowFrac = cm_unescape(jsonObj.allowFrac);
    this.HmFlashWidget(jsonObj);
    var widgetObj = this;
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    console.log('BACKSLASH:' + isABackSpaceCharacter(event))
    var idy = getNodeName(ele);
    console.log("FOCUS 0: " + idy);
    if (idy.indexOf('widget_input_field_') == -1) {
        return;
    }
    var istr = idy.split("_")
    var i = parseInt(istr[istr.length - 1]);
    var f = istr[istr.length - 2];
    var pi;
    var p = ['a', 'h', 'k']
    if (f == 'norm' || f == 'den') {
        pi = p[i - 1];
    }
    if (isASlashCharacter(event)) {
        if ($get('widget_divider_' + i).style.display != 'block') {
            this.configureAsFraction(true, pi, i);
            // this.isFraction = true;
        }
        return false;
    } else if (isABackSpaceCharacter(event) || isADeleteCharacter(event)) {
        if ($get('widget_divider_' + i).style.display == 'block') {
            if (getNodeName(ele).indexOf('widget_input_field_den') > -1 && ele.value.length < 1) {
                this.configureAsFraction(false, pi, i);
                // this.isFraction = false;
                ele.value = '';
                return false;
            }
        }
        return true;
    } else if (code == 39) {
        return true;
    }
    return restrictCharacters(ele, event, restrictionType_rational, this.allowChars, this.dntallowChars);
}
HmFlashWidget.prototype.configureAsFraction = function (yesNo, pid, id) {
    if (yesNo) {
        $get('widget_input_field_' + pid).style.marginTop = '-15px';
        $get('widget_input_field_den_' + id).style.display = 'inline';
        $get('widget_divider_' + id).style.display = 'block';
        $get('widget_input_field_den_' + id).focus();

    } else {
        $get('widget_input_field_' + pid).style.marginTop = '0px';
        $get('widget_input_field_den_' + id).style.display = 'none';
        $get('widget_divider_' + id).style.display = 'none';
        $get('widget_input_field_norm_' + id).focus();
    }
}
HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var combo_for_pm = cm_unescape(this._jsonObj.combo_for_pm)
    combo_for_pm = combo_for_pm == 'true' ? true : false;
    var ev = cm_unescape(this._jsonObj.value).split(",")[0];
    var evs = String(ev).split("/");
    var evs_0 = evs[0].substring(1)
    var s1 = evs[0].substring(0, 1)
    s1 = s1 == '-' ? s1 : ""
    evs_0 = s1 == '-' ? evs_0 : evs[0];
    var evs_1 = evs[1] ? evs[1] : "";
    var ahtml = "<div style='float: left;width: 20px;margin-top: -15px;'>" + "<div style='width: 20px;text-align:center;font-weight: bold;'>" + evs[0] + "</div>" + "<div class='divider' style='width: 20px;height:3px;line-height:3px;background:black;'>&nbsp;</div>" + "<div style='width: 20px;text-align:center;font-weight: bold;'>" + evs[1] + "</div>" + "</div>";
    if (evs_1 == '') {
        ahtml = "<div style='float: left;width: 20px;margin-top: -15px;'>" + "<div style='width: 20px;text-align:center;font-weight: bold;'>" + evs[0] + "</div>" + "</div>";
    }
    var html = '<div name="horizontalContainer" style="float: none;margin-top:15px;">' + '<div name="horizontalDiv1" style="float: left;font-weight:bold;"><i>y</i>&nbsp;=&nbsp;</div>' + '<div name="horizontalDiv0" style="float: left;font-weight:bold;">' + getComboInput(0, ['+', '-', ''], ['', '\u2212']) + '</div>' + '<div name="widget_input_field_a" style="float: left;">' + getFractionField(1, 40) + '</div>' + '<div name="horizontalDiv3" style="float: left;font-weight:bold;"><i>x</i></div>' + '<div name="horizontalDiv4" style="float: left;font-size:11px;font-weight: bold;">2</div>' + '<div name="horizontalDiv5" style="float: left;font-weight:bold;">&nbsp;<span>\u2212</span>&nbsp;</div>' + '<div name="widget_input_field_h" style="float: left;">' + getFractionField(2, 40) + '</div>' + '<div name="horizontalDiv7" style="float: left;font-weight:bold;"><i>x</i>&nbsp;+&nbsp;</div>' + '<div name="widget_input_field_k" style="float: left;">' + getFractionField(3, 40) + '</div>' + '</div>';
    if (combo_for_pm) {
        html = '<div name="horizontalContainer" style="float: none;margin-top:15px;">' + '<div name="horizontalDiv1" style="float: left;font-weight:bold;"><i>y</i>&nbsp;=&nbsp;</div>' + '<div name="horizontalDiv0" style="float: left;font-weight:bold;">' + getComboInput(0, ['+', '-', ''], ['', '\u2212']) + '</div>' + '<div name="widget_input_field_a" style="float: left;">' + getFractionField(1, 40) + '</div>' + '<div name="horizontalDiv3" style="float: left;font-weight:bold;"><i>x</i></div>' + '<div name="horizontalDiv4" style="float: left;font-size:11px;font-weight: bold;">2</div>' + '<div name="horizontalDiv5" style="float: left;font-weight:bold;">&nbsp;' + getComboInput(1, ['+', '-', ''], ['+', '\u2212']) + '&nbsp;</div>' + '<div name="widget_input_field_h" style="float: left;">' + getFractionField(2, 40) + '</div>' + '<div name="horizontalDiv7" style="float: left;font-weight:bold;"><i>x</i>&nbsp;' + getComboInput(2, ['+', '-', ''], ['+', '\u2212']) + '&nbsp;</div>' + '<div name="widget_input_field_k" style="float: left;">' + getFractionField(3, 40) + '</div>' + '</div>';
    }
    widget.innerHTML = html;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplQEStandardForm, HmFlashWidget);
HmFlashWidgetImplQEStandardForm.prototype.getWidgetValue = HmFlashWidgetImplQEVertexForm.prototype.getWidgetValue;
HmFlashWidgetImplQEStandardForm.prototype.setWidgetValue = HmFlashWidgetImplQEVertexForm.prototype.setWidgetValue;
HmFlashWidgetImplQEStandardForm.prototype.formatWidgetCorrectValue = HmFlashWidgetImplQEVertexForm.prototype.formatWidgetCorrectValue;

/**
 * Type = QEFactoredFOrm
 */

function HmFlashWidgetImplQEFactoredForm(jsonObj) {
    this.ishFraction = false;
    this.iskFraction = false;
    this.isaFraction = false;
    this.allowFrac = cm_unescape(jsonObj.allowFrac);
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
    this.HmFlashWidget(jsonObj);
    var widgetObj = this;
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    console.log('BACKSLASH:' + isABackSpaceCharacter(event))
    var idy = getNodeName(ele);
    console.log("FOCUS 0: " + idy);
    if (idy.indexOf('widget_input_field_') == -1) {
        return;
    }
    var istr = idy.split("_")
    var i = parseInt(istr[istr.length - 1]);
    var f = istr[istr.length - 2];
    var pi;
    var p = ['a', 'h', 'k']
    if (f == 'norm' || f == 'den') {
        pi = p[i - 1];
    }
    if (isASlashCharacter(event)) {
        if ($get('widget_divider_' + i).style.display != 'block') {
            this.configureAsFraction(true, pi, i);
            // this.isFraction = true;
        }
        return false;
    } else if (isABackSpaceCharacter(event) || isADeleteCharacter(event)) {
        if ($get('widget_divider_' + i).style.display == 'block') {
            if (getNodeName(ele).indexOf('widget_input_field_den') > -1 && ele.value.length < 1) {
                this.configureAsFraction(false, pi, i);
                // this.isFraction = false;
                ele.value = '';
                return false;
            }
        }
        return true;
    } else if (code == 39) {
        return true;
    }
    return restrictCharacters(ele, event, restrictionType_rational, this.allowChars, this.dntallowChars);
}
HmFlashWidget.prototype.configureAsFraction = function (yesNo, pid, id) {
    if (yesNo) {
        $get('widget_input_field_' + pid).style.marginTop = '-15px';
        $get('widget_input_field_den_' + id).style.display = 'inline';
        $get('widget_divider_' + id).style.display = 'block';
        $get('widget_input_field_den_' + id).focus();

    } else {
        $get('widget_input_field_' + pid).style.marginTop = '0px';
        $get('widget_input_field_den_' + id).style.display = 'none';
        $get('widget_divider_' + id).style.display = 'none';
        $get('widget_input_field_norm_' + id).focus();
    }
}
HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var combo_for_pm = cm_unescape(this._jsonObj.combo_for_pm)
    combo_for_pm = combo_for_pm == 'true' ? true : false;
    var ev = cm_unescape(this._jsonObj.value).split(",")[0];
    var evs = String(ev).split("/");
    var evs_0 = evs[0].substring(1)
    var s1 = evs[0].substring(0, 1)
    s1 = s1 == '-' ? s1 : ""
    evs_0 = s1 == '-' ? evs_0 : evs[0];
    var evs_1 = evs[1] ? evs[1] : "";
    /*
     * var ahtml="<div style='float: left;width: 20px;margin-top: -15px;'>" + "<div
     * style='width: 20px;text-align:center;font-weight: bold;'>"+evs[0]+"</div>" + "<div
     * class='divider' style='width:
     * 20px;height:3px;line-height:3px;background:black;'>&nbsp;</div>" + "<div
     * style='width: 20px;text-align:center;font-weight: bold;'>"+evs[1]+"</div>" + "</div>";
     * if(evs_1==''){ ahtml="<div style='float: left;width: 20px;margin-top:
     * -15px;'>" + "<div style='width: 20px;text-align:center;font-weight:
     * bold;'>"+evs[0]+"</div>" + "</div>"; }
     */
    var html = '<div name="horizontalContainer" style="float: none;margin-top:15px;">' + '<div name="horizontalDiv1" style="float: left;font-weight:bold;"><i>y</i>&nbsp;=&nbsp;</div>' + '<div name="widget_input_field_a" style="float: left;">' + getFractionField(1, 40) + '</div>' + '<div name="horizontalDiv5" style="float: left;margin-top:-7.5px"><span class="widget_obrac" style="font-size: 30px;font-weight: bold">&#40;</span></div>' + '<div name="horizontalDiv6" style="float: left;font-weight:bold;"><i>x</i><span>&nbsp;<span>\u2212</span>&nbsp;</span></div>' + '<div name="widget_input_field_h" style="float: left;">' + getFractionField(2, 40) + '</div>' + '<div name="horizontalDiv8" style="float: left;margin-top:-7.5px"><span style="font-size: 30px;font-weight: bold" class="widget_cbrac">&#41;</span></div>' + '<div name="horizontalDiv5" style="float: left;margin-top:-7.5px"><span class="widget_obrac" style="font-size: 30px;font-weight: bold">&#40;</span></div>' + '<div name="horizontalDiv6" style="float: left;font-weight:bold;"><i>x</i><span>&nbsp;<span>\u2212</span>&nbsp;</span></div>' + '<div name="widget_input_field_h" style="float: left;">' + getFractionField(3, 40) + '</div>' + '<div name="horizontalDiv8" style="float: left;margin-top:-7.5px"><span style="font-size: 30px;font-weight: bold" class="widget_cbrac">&#41;</span></div>' + '</div>';
    if (combo_for_pm) {
        html = '<div name="horizontalContainer" style="float: none;margin-top:15px;">' + '<div name="horizontalDiv1" style="float: left;font-weight:bold;"><i>y</i>&nbsp;=&nbsp;</div>' + '<div name="widget_input_field_a" style="float: left;">' + getFractionField(1, 40) + '</div>' + '<div name="horizontalDiv5" style="float: left;margin-top:-7.5px"><span class="widget_obrac" style="font-size: 30px;font-weight: bold">&#40;</span></div>' + '<div name="horizontalDiv6" style="float: left;font-weight:bold;"><i>x</i>&nbsp;' + getComboInput(1, ['-', '+', ''], ['\u2212', '+']) + '&nbsp;</div>' + '<div name="widget_input_field_h" style="float: left;">' + getFractionField(2, 40) + '</div>' + '<div name="horizontalDiv8" style="float: left;margin-top:-7.5px"><span style="font-size: 30px;font-weight: bold" class="widget_cbrac">&#41;</span></div>' + '<div name="horizontalDiv5" style="float: left;margin-top:-7.5px"><span class="widget_obrac" style="font-size: 30px;font-weight: bold">&#40;</span></div>' + '<div name="horizontalDiv6" style="float: left;font-weight:bold;"><i>x</i>&nbsp;' + getComboInput(2, ['-', '+', ''], ['\u2212', '+']) + '&nbsp;</div>' + '<div name="widget_input_field_h" style="float: left;">' + getFractionField(3, 40) + '</div>' + '<div name="horizontalDiv8" style="float: left;margin-top:-7.5px"><span style="font-size: 30px;font-weight: bold" class="widget_cbrac">&#41;</span></div>' + '</div>';
    }
    widget.innerHTML = html;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplQEFactoredForm, HmFlashWidget);
HmFlashWidgetImplQEStandardForm.prototype.getWidgetValue = HmFlashWidgetImplQEVertexForm.prototype.getWidgetValue;
HmFlashWidgetImplQEStandardForm.prototype.setWidgetValue = HmFlashWidgetImplQEVertexForm.prototype.setWidgetValue;
HmFlashWidgetImplQEStandardForm.prototype.formatWidgetCorrectValue = HmFlashWidgetImplQEVertexForm.prototype.formatWidgetCorrectValue;

/**
 * Type = exponent form advanced (used in log to exponent conversion) ''
 */

function HmFlashWidgetImplExponentForm(jsonObj) {
    this.isFraction = false;
    this.isIFraction = false;
    this.HmFlashWidget(jsonObj);
    var widgetObj = this;
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    console.log('BACKSLASH:' + isABackSpaceCharacter(event))
    if (isASlashCharacter(event)) {
        if (getNodeName(ele) == 'widget_input_field_norm_1') {
            if (!this.isFraction) {
                this.configureBaseAsFraction(true);
                this.isFraction = true;
            }
        }
        if (getNodeName(ele) == 'widget_input_field_norm_3') {
            if (!this.isIFraction) {
                this.configureAnsAsFraction(true);
                this.isIFraction = true;
            }
        }
        if (getNodeName(ele) == 'widget_input_field_exp') {
            return restrictCharacters(ele, event, restrictionType_exp2, this.allowChars, this.dntallowChars);
        }
        return false;
    } else if (isABackSpaceCharacter(event) || isADeleteCharacter(event)) {
        if (this.isFraction) {
            if (getNodeName(ele) == 'widget_input_field_den_1' && ele.value.length < 1) {
                console.log('BACKSLASH: frac to normal')
                this.configureBaseAsFraction(false);
                this.isFraction = false;
                ele.value = '';
                return false;
            }
        }
        if (this.isIFraction) {
            if (getNodeName(ele) == 'widget_input_field_den_3' && ele.value.length < 1) {
                console.log('BACKSLASH: frac to normal')
                this.configureAnsAsFraction(false);
                this.isIFraction = false;
                ele.value = '';
                return false;
            }
        }
        return true;
    } else if (code == 39) {
        return true;
    }
    return restrictCharacters(ele, event, restrictionType_exp2, this.allowChars, this.dntallowChars);
}
HmFlashWidget.prototype.configureBaseAsFraction = function (yesNo) {
    if (yesNo) {
        $get('widget_input_field_base').style.marginTop = '-15px';
        $get('widget_input_field_exp').style.marginTop = '-15px';
        $get('widget_input_field_den_1').style.display = 'inline';
        $get('widget_divider_1').style.display = 'block';
        $get('widget_input_field_den_1').focus();

    } else {
        $get('widget_input_field_base').style.marginTop = '0px';
        $get('widget_input_field_exp').style.marginTop = '0px';
        $get('widget_input_field_den_1').style.display = 'none';
        $get('widget_divider_1').style.display = 'none';
        $get('widget_input_field_norm_1').focus();
    }
}
HmFlashWidget.prototype.configureAnsAsFraction = function (yesNo) {
    if (yesNo) {
        $get('widget_input_field_ans').style.marginTop = '-15px';

        $get('widget_input_field_den_3').style.display = 'inline';
        $get('widget_divider_3').style.display = 'block';
        $get('widget_input_field_den_3').focus();

    } else {
        $get('widget_input_field_ans').style.marginTop = '0px';

        $get('widget_input_field_den_3').style.display = 'none';
        $get('widget_divider_3').style.display = 'none';
        $get('widget_input_field_norm_3').focus();
    }
}
HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var html = getExponentField_adv(undefined, undefined, true);
    widget.innerHTML = html;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplExponentForm, HmFlashWidget);

HmFlashWidgetImplExponentForm.prototype.setWidgetValue = function (val, doValidate) {
    var vals = val.split('|');
    var b_n = String(vals[0]) == "null" || String(vals[0]) == 'undefined' ? 'null' : vals[0];
    var b_d = String(vals[1]) == "null" || String(vals[1]) == 'undefined' ? 'null' : vals[1];
    var exp = String(vals[2]) == "null" || String(vals[2]) == 'undefined' ? 'null' : vals[2];
    var a_n = String(vals[3]) == "null" || String(vals[3]) == 'undefined' ? 'null' : vals[3];
    var a_d = String(vals[4]) == "null" || String(vals[4]) == 'undefined' ? 'null' : vals[4];
    $get('widget_input_field_norm_1').value = b_n
    $get('widget_input_field_den_1').value = b_d
    $get('widget_input_field_norm_3').value = a_n
    $get('widget_input_field_den_3').value = a_d
    $get('widget_input_field_exp').value = exp
    if (b_d != 'null') {
        if (this.configureBaseAsFraction) {
            this.configureBaseAsFraction(true);
        }
    }
    if (a_d != 'null') {
        if (this.configureAnsAsFraction) {
            this.configureAnsAsFraction(true);
        }
    }

    if (doValidate) {
        this.processWidget(true);
    }
}
HmFlashWidgetImplExponentForm.prototype.getWidgetValue = function () {
    var value = [];
    var b_n = $get('widget_input_field_norm_1').value;
    var b_d = $get('widget_input_field_den_1').value;
    var a_n = $get('widget_input_field_norm_3').value;
    var a_d = $get('widget_input_field_den_3').value;
    var exp = $get('widget_input_field_exp').value;
    value.push(b_n);
    value.push(b_d);
    value.push(exp);
    value.push(a_n);
    value.push(a_d);
    return value.join("|");
}
HmFlashWidgetImplExponentForm.prototype.formatWidgetCorrectValue = function () {
        var val = cm_unescape(this._jsonObj.value).split("|");
        var b = val[0];
        var e = val[1];
        var a = val[2];
        var expectedValues = [b, 'null', e, a, 'null']
        var e
        if (b.indexOf("/") > -1) {
            e = expectedValues[0].split("/");
            expectedValues[0] = e[0]
            expectedValues[1] = e[1]
        }
        if (a.indexOf("/") > -1) {
            e = expectedValues[3].split("/");
            expectedValues[3] = e[0]
            expectedValues[4] = e[1]
        }
        return expectedValues.join("|");
    }
    //
    /**
     * Type = logarithmic form advanced (used in exponent to log form ) ''
     */

function HmFlashWidgetImplLogarithmicForm(jsonObj) {
    this.isFraction = false;
    this.isIFraction = false;
    this.HmFlashWidget(jsonObj);
    var widgetObj = this;
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    console.log('BACKSLASH:' + isABackSpaceCharacter(event))
    if (isASlashCharacter(event)) {
        if (getNodeName(ele) == 'widget_input_field_norm_1') {
            if (!this.isFraction) {
                this.configureBaseAsFraction(true);
                this.isFraction = true;
            }
        }
        if (getNodeName(ele) == 'widget_input_field_norm_3') {
            if (!this.isIFraction) {
                this.configureAnsAsFraction(true);
                this.isIFraction = true;
            }
        }
        return false;
    } else if (isABackSpaceCharacter(event) || isADeleteCharacter(event)) {
        if (this.isFraction) {
            if (getNodeName(ele) == 'widget_input_field_den_1' && ele.value.length < 1) {
                console.log('BACKSLASH: frac to normal')
                this.configureBaseAsFraction(false);
                this.isFraction = false;
                ele.value = '';
                return false;
            }
        }
        if (this.isIFraction) {
            if (getNodeName(ele) == 'widget_input_field_den_3' && ele.value.length < 1) {
                console.log('BACKSLASH: frac to normal')
                this.configureAnsAsFraction(false);
                this.isIFraction = false;
                ele.value = '';
                return false;
            }
        }
        return true;
    } else if (code == 39) {
        return true;
    }
    return restrictCharacters(ele, event, restrictionType_exp2, this.allowChars, this.dntallowChars);
}
HmFlashWidget.prototype.configureBaseAsFraction = function (yesNo) {
    if (yesNo) {
        $get('widget_input_field_base').style.marginTop = '-15px';
        $get('widget_input_field_den_1').style.display = 'inline';
        $get('widget_divider_1').style.display = 'block';
        $get('widget_input_field_den_1').focus();

    } else {
        $get('widget_input_field_base').style.marginTop = '0px';
        $get('widget_input_field_den_1').style.display = 'none';
        $get('widget_divider_1').style.display = 'none';
        $get('widget_input_field_norm_1').focus();
    }
}
HmFlashWidget.prototype.configureAnsAsFraction = function (yesNo) {
    if (yesNo) {
        $get('widget_input_field_ans').style.marginTop = '-15px';

        $get('widget_input_field_den_3').style.display = 'inline';
        $get('widget_divider_3').style.display = 'block';
        $get('widget_input_field_den_3').focus();

    } else {
        $get('widget_input_field_ans').style.marginTop = '0px';

        $get('widget_input_field_den_3').style.display = 'none';
        $get('widget_divider_3').style.display = 'none';
        $get('widget_input_field_norm_3').focus();
    }
}
HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var html = getLogField_adv(undefined, undefined, true);
    widget.innerHTML = html;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplLogarithmicForm, HmFlashWidget);

HmFlashWidgetImplLogarithmicForm.prototype.setWidgetValue = function (val, doValidate) {
    var vals = val.split('|');
    var b_n = String(vals[0]) == "null" || String(vals[0]) == 'undefined' ? 'null' : vals[0];
    var b_d = String(vals[1]) == "null" || String(vals[1]) == 'undefined' ? 'null' : vals[1];
    var exp = String(vals[2]) == "null" || String(vals[2]) == 'undefined' ? 'null' : vals[2];
    var a_n = String(vals[3]) == "null" || String(vals[3]) == 'undefined' ? 'null' : vals[3];
    var a_d = String(vals[4]) == "null" || String(vals[4]) == 'undefined' ? 'null' : vals[4];
    $get('widget_input_field_norm_1').value = b_n
    $get('widget_input_field_den_1').value = b_d
    $get('widget_input_field_norm_3').value = a_n
    $get('widget_input_field_den_3').value = a_d
    $get('widget_input_field_exp').value = exp
    if (b_d != 'null') {
        if (this.configureBaseAsFraction) {
            this.configureBaseAsFraction(true);
        }
    }
    if (a_d != 'null') {
        if (this.configureAnsAsFraction) {
            this.configureAnsAsFraction(true);
        }
    }

    if (doValidate) {
        this.processWidget(true);
    }
}
HmFlashWidgetImplLogarithmicForm.prototype.getWidgetValue = function () {
    var value = [];
    var b_n = $get('widget_input_field_norm_1').value;
    var b_d = $get('widget_input_field_den_1').value;
    var a_n = $get('widget_input_field_norm_3').value;
    var a_d = $get('widget_input_field_den_3').value;
    var exp = $get('widget_input_field_exp').value;
    value.push(b_n);
    value.push(b_d);
    value.push(exp);
    value.push(a_n);
    value.push(a_d);
    return value.join("|");
}
HmFlashWidgetImplLogarithmicForm.prototype.formatWidgetCorrectValue = function () {
        var val = cm_unescape(this._jsonObj.value).split("|");
        var b = val[2];
        var e = val[0];
        var a = val[1];
        var expectedValues = [b, 'null', e, a, 'null']
        var e
        if (b.indexOf("/") > -1) {
            e = expectedValues[0].split("/");
            expectedValues[0] = e[0]
            expectedValues[1] = e[1]
        }
        if (a.indexOf("/") > -1) {
            e = expectedValues[3].split("/");
            expectedValues[3] = e[0]
            expectedValues[4] = e[1]
        }
        return expectedValues.join("|");
    }
    /**
     * Type = PolynomialForm
     */

function HmFlashWidgetImplPolynomialForm(jsonObj) {
    this.ishFraction = false;
    this.iskFraction = false;
    this.isaFraction = false;
    this.allowFrac = cm_unescape(jsonObj.allowFrac);
    this.HmFlashWidget(jsonObj);
    var widgetObj = this;
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    console.log('BACKSLASH:' + isABackSpaceCharacter(event))
    var idy = getNodeName(ele);
    console.log("FOCUS 0: " + idy);
    if (idy.indexOf('widget_input_field_') == -1) {
        return;
    }
    var istr = idy.split("_")
    var i = parseInt(istr[istr.length - 1]);
    var f = istr[istr.length - 2];
    var pi;
    var p = [];
    var cc = 97;
    // var ev = cm_unescape(this._jsonObj.value).split(",");
    var l = HmFlashWidgetImplPolynomialForm.count;
    for (var z = 0; z < l; z++) {
        p.push(String.fromCharCode(cc));
        cc++
    }
    if (f == 'norm' || f == 'den') {
        pi = p[i - 1];
    }
    if (isASlashCharacter(event)) {
        if ($get('widget_divider_' + i).style.display != 'block') {
            this.configureAsFraction(true, pi, i);
            // this.isFraction = true;
        }
        return false;
    } else if (isABackSpaceCharacter(event) || isADeleteCharacter(event)) {
        if ($get('widget_divider_' + i).style.display == 'block') {
            if (getNodeName(ele).indexOf('widget_input_field_den') > -1 && ele.value.length < 1) {
                this.configureAsFraction(false, pi, i);
                // this.isFraction = false;
                ele.value = '';
                return false;
            }
        }
        return true;
    } else if (code == 39) {
        return true;
    }
    return restrictCharacters(ele, event, restrictionType_rational, this.allowChars, this.dntallowChars);
}
HmFlashWidget.prototype.configureAsFraction = function (yesNo, pid, id) {
    if (yesNo) {
        $get('widget_input_field_' + pid).style.marginTop = '-15px';
        $get('widget_input_field_den_' + id).style.display = 'inline';
        $get('widget_divider_' + id).style.display = 'block';
        $get('widget_input_field_den_' + id).focus();

    } else {
        $get('widget_input_field_' + pid).style.marginTop = '0px';
        $get('widget_input_field_den_' + id).style.display = 'none';
        $get('widget_divider_' + id).style.display = 'none';
        $get('widget_input_field_norm_' + id).focus();
    }
}

function buildPolynomialUnit(degree, divID, parentID, firstCoeff, vars, w, fs) {
    var _f = fs ? 'polysmall' : '';
    //_f = '';
    var degreeHTML = degree === 0 ? "" : '<div class="'+_f+'" style="float: left;font-weight:bold;margin-left:2px;"><i>' + vars + '</i></div>' + '<div class="'+_f+' degree" style="float: left;font-size:11px;font-weight: bold;">' + (degree == 1 ? "" : degree) + '</div>'
    var uhtml = '<div class="'+_f+'" style="float: left;font-weight:bold;margin:0 2px 0 2px;">' + getComboInput(divID - 1, ['+', '-', ''], [firstCoeff ? '' : "+", '\u2212']) + '</div>' + '<div class="'+_f+'" name="widget_input_field_' + parentID + '" style="float: left;">' + getFractionField(divID, w ? w : 40) + '</div>' + degreeHTML;
    return uhtml;
}
HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var cc = 97;
    var combo_for_pm = cm_unescape(this._jsonObj.combo_for_pm)
    combo_for_pm = combo_for_pm == 'true' ? true : false;
    var hideY=cm_unescape(this._jsonObj.hideYlabel);
    var dispY=hideY?"display:none;":"";
    var vars = cm_unescape(this._jsonObj.variable ? this._jsonObj.variable : 'x')
        // vars=vars?vars:'x';
    var ev = cm_unescape(this._jsonObj.value).split(",");
    var html;
    var unitHtmls = "";
    var l = ev.length;
    var hdeg = l - 1;
    var count = 0;
    var width, font_size;
    var fsmall='';
    if (l > 2) {
        width = 35;
        font_size = 'small';
        fsmall='polysmall';
    }

    for (var i = l; i > 0; i--) {
        if (String(ev[i - 1]) !== 'null') {
            unitHtmls += buildPolynomialUnit(i - 1, count + 1, String.fromCharCode(cc), i === l, vars, width, font_size)
            cc++
            count++
        }
    }
    HmFlashWidgetImplPolynomialForm.count = count
    html = '<div name="horizontalContainer" class="'+fsmall+'"  style="float: none;margin-top:15px;">' + '<div class="'+fsmall+'" style="float: left;font-weight:bold;'+dispY+'"><i>y</i><span class="degree">&nbsp;=&nbsp;</span></div>' + unitHtmls + '</div>';

    widget.innerHTML = html;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplPolynomialForm, HmFlashWidget);
HmFlashWidgetImplPolynomialForm.prototype.formatWidgetCorrectValue = function () {
    return cm_unescape(this._jsonObj.value).split(",").join("|")
}
HmFlashWidgetImplPolynomialForm.prototype.getWidgetValue = function () {
    var value = '';
    var l = HmFlashWidgetImplPolynomialForm.count
    for (var i = 1; i <= l; i++) {
        var f1 = 'widget_input_field_norm_' + i;
        var f2 = 'widget_input_field_den_' + i;
        var _n = "";
        var _d = "";
        if ($get(f1) != null) {
            _n = $get(f1).value;

        }
        if ($get(f2) != null) {
            _d = $get(f2).value;
            if ($get(f2).style.display == 'none') {
                _d = 'null';
            }
        }
        if (value > '') {
            value += '|';
        }
        value += _n + "/" + _d;
    }
    for (var i = 0; i < l; i++) {
        var comb = 'icombo_' + i;
        var v;
        if ($get(comb) != null) {
            v = $get(comb).selectedIndex;
            if (value > '') {
                value += '|';
            }
            value += v;
        } else {
            if (value > '') {
                value += '|';
            }
            value += "null";
        }

    }
    return value;
}
HmFlashWidgetImplPolynomialForm.prototype.setWidgetValue = function (val, doValidate) {
    var vals = val.split("|");
    var p = [];
    var cc = 97;
    var l = HmFlashWidgetImplPolynomialForm.count;
    for (var i = 0; i < l; i++) {
        p.push(String.fromCharCode(cc));
        cc++
    }
    for (var i = 1; i <= l; i++) {
        var obj = vals[i - 1];

        var frac = String(obj).split("/");
        var _n = frac[0];
        var _d = frac[1];
        _d = String(_d) == "null" || String(_d) == 'undefined' ? 'null' : _d;
        var isFrac = _d != 'null';

        var f1 = 'widget_input_field_norm_' + (i);
        if ($get(f1) != null) {
            $get(f1).value = _n;
        }
        if (isFrac) {
            var f2 = 'widget_input_field_den_' + (i);
            if ($get(f2) != null) {
                $get(f2).value = _d;
                if (this.configureAsFraction) {
                    this.configureAsFraction(true, p[i - 1], i)
                }
            }
        }

    }
    for (var j = 0; j < l; j++) {
        var comb = 'icombo_' + j;
        var v = vals[j + l];
        v = v ? v : 0;
        if ($get(comb) != null) {
            $get(comb).selectedIndex = v;
        }
    }
    if (doValidate) {
        this.processWidget(true);
    }
}

/**
 * Define class for polynomial multi vars
 *
 * 
 *
 */

function HmFlashWidgetImplPolynomialMVForm(jsonObj) {
    this.isFraction = false;
    this.isMixFraction = false;
    this.allowMixed = jsonObj.allowMixed;
    this.HmFlashWidget(jsonObj);
    prepareChkCntrl(jsonObj, this);
    var widgetObj = this;
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;

    console.log("POLYNOMIAL_MV_INIT")
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    console.log("POLYNOMIAL_MV_PROCESSKEY")
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    if (isASlashCharacter(event)) {
        if (!this.isFraction) {
            this.configureAsFraction(true);
            this.isFraction = true;
        }
        return false;
    } else if (isAMCharacter(event)) {
        if (!this.isMixFraction && this.allowMixed) {
            this.configureAsMixFraction(true);
            this.isMixFraction = true;
            this.isFraction = !true;
        }
        return false;
    } else if (isABackSpaceCharacter(event) || isADeleteCharacter(event)) {
        if (this.isFraction) {
            if (getNodeName(ele) == 'widget_input_field_2' && ele.value.length < 1) {
                if (!this.isMixFraction) {
                    this.configureAsFraction(false);
                    this.isFraction = false;
                    ele.value = '';
                }
                return false;
            }
        }
        if (this.isMixFraction) {
            if (getNodeName(ele) == 'widget_input_field_3' && ele.value.length < 1) {
                this.configureAsMixFraction(false);
                this.isMixFraction = false;
                this.isFraction = $get('widget_input_field_2').style.display != 'none'
                ele.value = '';
                return false;
            }
            if (getNodeName(ele)== 'widget_input_field_2' && ele.value.length < 1) {
                this.configureAsMixFraction(false);
                this.isMixFraction = false;
                this.isFraction = false
                ele.value = '';
                $get('widget_input_field_3').value="";
                return false;
            }
        }
        return true;
    } else if (code == 39) {
        return true;
    }

    return restrictCharacters(ele, event, restrictionType_exp1, this.allowChars, this.dntallowChars);
}

HmFlashWidget.prototype.configureAsFraction = function (yesNo) {
    var measureNode = $($get('widget_divider').parentNode).find('span:first').get(0);
    if (yesNo) {
        $get('widget_input_field_2').style.display = 'inline';
        $get('widget_divider').style.display = 'block';
        setTimeout(function(){
        $get('widget_input_field_2').focus();
        },0);
        if (measureNode) {
            measureNode.style.top = '13px'
        }
        this.isFraction = true;
    } else {
        $get('widget_input_field_2').style.display = 'none';
        $get('widget_divider').style.display = 'none';
        if (measureNode) {
            measureNode.style.top = '0px'
        }
       setTimeout(function(){
        $get('widget_input_field_1').focus();
        },0);
        this.isFraction = !true;
    }
}
HmFlashWidget.prototype.drawGui = function () {
    console.log("POLYNOMIAL_MV_DRAWGUI")
    var measure = '';
    var format = '';
    var prefix = '';
    if (this._jsonObj.format) {
        format = this._jsonObj.format;
        var vm = unescape(format).split('|');
        if (vm.length > 1) {
            measure = vm[1];
            prefix = vm[0];
        }
        var mp = format.split('^');
        var raised = null;
        if (mp.length > 1) {
            measure = mp[0];
            raised = mp[1];
        } else {
            measure = unescape(this._jsonObj.format);
        }
        var font_style = "";
        if (measure) {
            measure = measure.split('_')[1];
            if (measure == 'deg') {
                measure = "&nbsp;&deg;"
            }
            var dummy = $("<input>");
            $('body').append(dummy);
            var icss = dummy.css('font-style') + " ";
            icss = dummy.css('font-variant') + " ";
            icss += dummy.css('font-weight') + " ";
            icss += dummy.css('font-size') + " ";
            icss += dummy.css('font-family');
            dummy.remove();
            font_style = "font:" + icss + ";font-weight:bold";
            font_style = ""
        }

        if (!measure)
            measure = '';

        format = '';
        if (raised) {
            measure += "<span style='vertical-align: baseline;font-size: 0.8em;position: relative;top: -0.4em;'>" + raised + "</span>";
        }
    }
    var val=this._jsonObj.value;
    var vlen=val.length;
    var wd=vlen*70;
    wd=Math.max(150,wd);
    wd=Math.min(420,wd);
    var fnt=vlen>3?'font-size:0.7em':'';
    fnt=vlen>6?"font-size:0.6em":fnt;
    var widget = this.createWidgetForm();
    var ms = prefix == '' ? 150 : 125;
    var mixHtml = "";
    var html = "<div style='height: 75px;'>" + "<div class='input_prefix' style='float: left;margin-top: 0px;margin-right: 5px;'>" + prefix + "</div>" + mixHtml +
        "<div style='float: left;'>" +

        "<input class='input_fraction' name='widget_input_field_1' type='text' style='text-align:center;width:"+wd+"px!important;"+fnt+"'/>" + "<span class='input_units' style='vertical-align: baseline;position: relative;" + font_style + "'>&nbsp;" + measure + "</span>" + "<div name='widget_divider' class='divider input_fraction' style='display: none;width:"+wd+"px!important;'>&nbsp;</div>" + "<input class='input_fraction' name='widget_input_field_2' type='text' style='display: none;text-align:center;width:"+wd+"px!important;"+fnt+"'/>" + "</div>" + "</div>";
if (this._jsonObj.addCheckbox === 'true'||this._jsonObj.addCheckbox===true) {
        var lab = this._jsonObj.checkbox_label;
        this.checkbox_label = lab ? lab : "No Solution";
        this.hasSimplified = true;
        html += "<div class='simplified_wrapper'>" + "  <label>" + this.checkbox_label + " <input name='widget_input_simplified' type='checkbox'/></label>" + "</div>";
    }
    if (this._jsonObj.symbols) {
        var symbols = this._jsonObj.symbols;
        var sarr = symbols.split(",");
        var _symbols = []
        if (sarr.length) {
            var btns = "";
            for (var s = 0; s < sarr.length; s++) {
                symbols = getSymbol(sarr[s]);
                if (symbols == 'undefined') {
                    btns = getNormalFieldWithSelect(1, "Slope is undefined:", true);
                } else {
                    _symbols.push(symbols)
                    btns += "<button type='button' onmouseover='_getSelection()' onblur='_getSelection()' onfocus='_getSelection()' ontouchstart='_getSelection()' onclick='_addButtonTextToWidget(\"" + symbols + "\");return false;'>" + symbols + "</button>"
                }
            }
        }
        var btn_inst = ""
        if (_symbols.length) {
            var str_keys = "[" + _symbols.join("], [") + "]";
            var str_symb = sarr.length === 1 ? "the " : "";
            str_symb += _symbols.join(", ");
            str_symb += sarr.length === 1 ? " symbol." : " symbols.";
            btn_inst = "<div style='font-size:0.7em;padding-bottom:2px;'>+ Use " + str_keys + " to enter " + str_symb + "</div>"
        }
        html += btn_inst + "<div class='buttons'  style='clear:both;padding:0 5px; background: #DDD;'>" + "    " + btns + "</div>";
        // widget.innerHTML = html;
        // return widget;
    }
    widget.innerHTML = html;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplPolynomialMVForm, HmFlashWidget);
HmFlashWidgetImplPolynomialMVForm.prototype.setWidgetValue = function (val, doValidate) {
    var vals = val.split("|");
    var notUndefined = true;
    var sel = vals.shift();

    sel = sel == 'null' ? 'false' : sel;
    if (sel == 'true' || sel == 'false') {
        val = vals.join("|");
        sel = sel == 'false' ? false : true;
        var cb = $get('widget_input_simplified_1')||$get('widget_input_simplified');

        if (cb != null) {
            cb.checked = sel;
            if (String(sel) == 'true') {
                // return;
                notUndefined = false
            }
        }
    }

    if (notUndefined) {
        this.setWidgetValueDefault(val);
        /** if there is a secondary field */
        if (val.split('|').length > 1) {
            // are there really two values?
            if (vals[1] != "") {
                if (this.configureAsFraction) {
                    this.configureAsFraction(true);
                }
            }
            if (vals[2]) {
                if (this.configureAsMixFraction) {
                    this.configureAsMixFraction(true);
                }
            }
        }
    }
    if (doValidate) {
        this.processWidget(true)
    }
}
HmFlashWidgetImplPolynomialMVForm.prototype.getWidgetValue = function () {
    // var value = '';
    var value = [];
    var cb = $get('widget_input_simplified_1')||$get('widget_input_simplified');
    if (cb != null) {
        value[0] = cb.checked;
    } else {
        value[0] = 'null';
    }
    for (var i = 1; i < 4; i++) {
        var f = 'widget_input_field_' + i;
        var elem = $get(f);
        if (elem != null && elem.style.display != 'none') {
            var v = elem.value;
            /*
             * if (value > '') { value += '|'; }
             */
            value.push(v);
        }
    }
    return value.join("|");
}
HmFlashWidgetImplPolynomialMVForm.prototype.formatWidgetCorrectValue = function () {
    var _val = cm_unescape(this._jsonObj.value)
    _val = _val.replace(/pi/g, PI_SYM)
    _val = _val.replace(/sqrt/g, SQUARE_ROOT_SYM)

    if (_val == 'undefined'||this._jsonObj.addCheckbox) {
        
        if(String(this._jsonObj.addCheckbox)==='true'){
            var arr = String(_val).split("|")
            var arrF = arr.pop();
            if (arrF == 'true') {
                _val = String(true) + "|" + arr.join("|")
            } else {
                _val = "null|" + arr.join("|")
            }
        }else{
            _val = String(true) + "|";
        }
    } else {
        if (_val.indexOf("[") > -1) {
            _val = _val.split("[")[1]
            var a_val = _val.split("]")
            _val = a_val[1] + "/" + a_val[0];
        }
        _val = 'false' + "|" + (String(_val).split("/").join("|"))

    }
    return _val
}


/**
 * Matrix form
 *
 */

function HmFlashWidgetImplMatrixForm(jsonObj) {
    this.HmFlashWidget(jsonObj);
    var simpEl = $get('widget_input_simplified');
    if (simpEl) {
        simpEl.onclick = function () {
            showWidgetSubmit(true);
           // $(simpEl).parent().parent().find("input[type='text']").val("");
           $($get("hm_widget_form")).find("input[type='text']").val("");
        };
    }
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;

}
HmFlashWidget.prototype.processKey = function (ele, event) {
    return restrictCharacters(ele, event, restrictionType_rational, this.allowChars, this.dntallowChars);
}

HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var html = "";
    var matrix_arr = this._jsonObj.value;
    var matrix_row = matrix_arr.length;
    var matrix_col = matrix_arr[0].length;
    var __r = matrix_row;
    var __c = matrix_col;
    HmFlashWidgetImplMatrixForm.row = __r;
    HmFlashWidgetImplMatrixForm.col = __c;
    var matrix_html = "<div><div name='matrix_ifields_lb' style='float:left;width:10px;height:{ht}px;border-top:2px solid black;border-bottom:2px solid black;border-left:2px solid black;'></div><div name='matrix_ifields' style='float:left;padding-left:5px;padding-right:5px;position:relative;top:2px;'></div><div name='matrix_ifields_rb' style='float:left;width:10px;height:{ht}px;border-top:2px solid black;border-bottom:2px solid black;border-right:2px solid black;'></div></div>";
    var uhtml = "";

    function getMatrixFieldUnit(id) {
        var norm_html = "<input name='widget_input_field_" + id + "' name='widget_input_field_" + id + "' type='text' style='float:left; width:35px; text-align:center; font-weight: bold;margin:0px;padding:0px;margin-bottom:5px;font-size:17pt;'/>";
        return norm_html;
    }
    for (var i = 0; i < __r; i++) {
        for (var j = 0; j < __c; j++) {
            var _r = i + 1;
            var _c = j + 1;
            var id = _r + '_' + _c;
            uhtml += getMatrixFieldUnit(id)
        }
        uhtml += "<br/>"
    }
    var dummy = $("<div style='float:left;padding-left:5px;padding-right:5px;position:relative;top:2px;'/>")
    dummy.append(uhtml)
    $('body').append(dummy);
    var ht = dummy.height();
    dummy.remove();
    matrix_html = $(matrix_html.split('{ht}').join(ht));
    matrix_html.find('div[name=matrix_ifields]').append(uhtml);
    matrix_html.find('div[name=matrix_ifields] input').css('margin-left', '2px');
    matrix_html.find('div[name=matrix_ifields] input').css('margin-right', '2px');
    var _html = '<div style="height:' + ht + 'px;">' + matrix_html.html() + '</div>';
    if (this._jsonObj.addCheckbox === 'true'||this._jsonObj.addCheckbox===true) {
        var lab = this._jsonObj.checkbox_label;
        this.checkbox_label = lab ? lab : "No Solution";
        this.hasSimplified = true;
        _html += "<div class='simplified_wrapper'>" + "  <label>" + this.checkbox_label + " <input name='widget_input_simplified' type='checkbox'/></label>" + "</div>";
    }
    widget.innerHTML=_html;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplMatrixForm, HmFlashWidget);
HmFlashWidgetImplMatrixForm.prototype.getWidgetValue = function () {
    var value = '';
    var __r = HmFlashWidgetImplMatrixForm.row;
    var __c = HmFlashWidgetImplMatrixForm.col;
    var rows
    for (var i = 0; i < __r; i++) {
        rows = [];
        if (i > 0) {
            value += "|";
        }
        for (var j = 0; j < __c; j++) {
            var _r = i + 1;
            var _c = j + 1;
            var id = _r + '_' + _c;
            var uhtml = 'widget_input_field_' + id;
            var val = $($get(uhtml)).val();
            rows.push(val);
        }
        value += rows.join(",");
    }
    return value;
}
HmFlashWidgetImplMatrixForm.prototype.setWidgetValue = function (val, doValidate) {
    var vals = val.split("|");
    for (var k = 0; k < vals.length; k++) {
        vals[k] = vals[k].split(",");
    }
    var __r = vals.length;
    var __c = vals[0].length;
    for (var i = 0; i < __r; i++) {
        for (var j = 0; j < __c; j++) {
            var _r = i + 1;
            var _c = j + 1;
            var id = _r + '_' + _c;
            var uhtml = 'widget_input_field_' + id;
            $($get(uhtml)).val(vals[i][j]);
        }
    }
    if (doValidate) {
        this.processWidget(true);
    }
}
HmFlashWidgetImplMatrixForm.prototype.formatWidgetCorrectValue = function () {
        return this._jsonObj.value.join("|")
    }
    /**
     * Table form
     *
     */

function HmFlashWidgetImplTableForm(jsonObj) {
    this.HmFlashWidget(jsonObj);
    //test
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
}
HmFlashWidget.prototype.processKey = function (ele, event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    var idy = getNodeName(ele);
    if (idy.indexOf('widget_input_field_') == -1) {
        return;
    }
    var idummy = $("<input/>");
    $('body').append(idummy);
    var iht = idummy.outerHeight();
    idummy.remove();
    var tpos = iht;
    var istr = idy.split("_")
    var i = parseInt(istr[istr.length - 1]);
    var j = parseInt(istr[istr.length - 2]);
    var id = i + "_" + j
    if (isASlashCharacter(event)) {
        if ($get('widget_divider_' + id).style.display != 'block') {
            this.configureAsFraction(true, id, tpos);
            // this.isFraction = true;
        }
        return false;
    } else if (isABackSpaceCharacter(event) || isADeleteCharacter(event)) {
        if ($get('widget_divider_' + id).style.display == 'block') {
            if (getNodeName(ele).indexOf('widget_input_field_den') > -1 && ele.value.length < 1) {
                this.configureAsFraction(false, id, tpos);
                // this.isFraction = false;
                ele.value = '';
                return false;
            }
        }
        return true;
    } else if (code == 39) {
        return true;
    }
    return restrictCharacters(ele, event, restrictionType_rational, this.allowChars, this.dntallowChars);
}
HmFlashWidget.prototype.configureAsFraction = function (yesNo, pid, tpos) {
    if (yesNo) {
        $get('widget_input_cont_' + pid).style.top = (tpos / 2) + 'px';
        $get('widget_input_field_den_' + pid).style.display = 'inline';
        $get('widget_divider_' + pid).style.display = 'block';
        $get('widget_input_field_den_' + pid).focus();

    } else {
        $get('widget_input_cont_' + pid).style.top = (tpos) + 'px';;
        $get('widget_input_field_den_' + pid).style.display = 'none';
        $get('widget_divider_' + pid).style.display = 'none';
        $get('widget_input_field_norm_' + pid).focus();
    }
}

HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var html = "";
    var matrix_arr = this._jsonObj.value;
    var matrix_row = matrix_arr.length;
    var matrix_col = matrix_arr[0].length;
    var __r = matrix_row;
    var __c = matrix_col;
    HmFlashWidgetImplMatrixForm.row = __r;
    HmFlashWidgetImplMatrixForm.col = __c;
    //var matrix_html = "<div><div id='table_ifields' style='float:left;padding-left:5px;padding-right:5px;position:relative;top:2px;'></div></div>";
    var matrix_html = "<div><table name='table_ifields' style=''></table></div>";
    var uhtml = "";
    var idummy = $("<input/>");
    $('body').append(idummy);
    var iht = idummy.outerHeight();
    idummy.remove();
    var tpos = iht;

    function getTableUnit(id, val) {
        var _val = val.split("|");
        var _val1 = _val[1]
        _val1 = String(_val1).indexOf("/>") > -1||_val[0] == 'html'||_val[0] == 'text' ? _val1 : String(_val1).split("/");
        //_val1=_val1 instanceof Array&&_val1[1]?getFractionHTML(_val1[0],_val1[1]):_val1[0];
        if (_val1 instanceof Array) {
            _val1 = _val1[1] ? getFractionHTML(_val1[0], _val1[1]) : _val1[0];
        }
        var ihtml = _val[0] == 'text'||_val[0] == 'html' ? _val1 : ("<div name='widget_input_cont_" + id + "' style='position:relative;top:" + tpos + "px;'>" + getFractionField(id, 50) + "</div>");
        //var norm_html = "<div style='float:left;width:50px;height:75px;text-align:center;'>"+(ihtml)+"</div>"
        var norm_html = "<td style='text-align:center;min-width:50px;'>" + (ihtml) + "</td>"
        return norm_html;
    }
    for (var i = 0; i < __r; i++) {
        uhtml += "<tr>"
        for (var j = 0; j < __c; j++) {
            var _r = i + 1;
            var _c = j + 1;
            var id = _r + '_' + _c;
            var val = matrix_arr[i][j]
            uhtml += getTableUnit(id, val)
        }
        uhtml += "</tr>"
    }
    var dummy = $("<table/>")
    dummy.append(uhtml)
    $('body').append(dummy);
    var ht = dummy.height();
    dummy.remove();
    matrix_html = $(matrix_html);
    matrix_html.find('table[name=table_ifields]').append(uhtml);
    // matrix_html.find('#table_ifields input').css('margin-left', '2px');
    // matrix_html.find('#table_ifields input').css('margin-right', '2px');
    widget.innerHTML = '<div style="height:' + ht + 'px;">' + matrix_html.html() + '</div>';
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplTableForm, HmFlashWidget);
HmFlashWidgetImplTableForm.prototype.getWidgetValue = function () {
    var value = '';
    var __r = HmFlashWidgetImplMatrixForm.row;
    var __c = HmFlashWidgetImplMatrixForm.col;
    var rows
    for (var i = 0; i < __r; i++) {
        rows = [];
        if (i > 0) {
            value += "~";
        }
        for (var j = 0; j < __c; j++) {
            var _r = i + 1;
            var _c = j + 1;
            var id = _r + '_' + _c;
            var uhtml = 'widget_input_cont_' + id;
            var isInput = $($get(uhtml));
            isInput = isInput && isInput.length;
            if (isInput) {
                var f1 = 'widget_input_field_norm_' + id;
                var f2 = 'widget_input_field_den_' + id;
                var _n = "";
                var _d = "";
                if ($get(f1) != null) {
                    _n = $get(f1).value;

                }
                if ($get(f2) != null) {
                    _d = $get(f2).value;
                    if ($get(f2).style.display == 'none') {
                        _d = 'null';
                    }
                }

                rows.push('rational|' + _n + "/" + _d);
            } else {
                rows.push("text|")
            }
        }
        value += rows.join(",");
    }
    return value;
}
HmFlashWidgetImplTableForm.prototype.setWidgetValue = function (val, doValidate) {
    var vals = val.split("~");
    for (var k = 0; k < vals.length; k++) {
        vals[k] = vals[k].split(",");
    }
    var __r = vals.length;
    var __c = vals[0].length;
    for (var i = 0; i < __r; i++) {
        for (var j = 0; j < __c; j++) {
            var _r = i + 1;
            var _c = j + 1;
            var id = _r + '_' + _c;
            var _val = vals[i][j].split("|");
            if (_val[0] == 'text') {} else {
                var obj = _val[1];

                var frac = String(obj).split("/");
                var _n = frac[0];
                var _d = frac[1];
                _d = String(_d) == "null" || String(_d) == 'undefined' ? 'null' : _d;
                var isFrac = _d != 'null';

                var f1 = 'widget_input_field_norm_' + (id);
                if ($get(f1) != null) {
                    $get(f1).value = _n;
                }
                if (isFrac) {
                    var f2 = 'widget_input_field_den_' + (id);
                    if ($get(f2) != null) {
                        $get(f2).value = _d;
                        var idummy = $("<input/>");
                        $('body').append(idummy);
                        var iht = idummy.outerHeight();
                        idummy.remove();
                        var tpos = iht;
                        if (this.configureAsFraction) {
                            this.configureAsFraction(true, id, tpos)
                        }
                    }
                }
            }
        }
    }
    if (doValidate) {
        this.processWidget(true);
    }
}
HmFlashWidgetImplTableForm.prototype.formatWidgetCorrectValue = function () {
        return this._jsonObj.value.join("~");
    }
    /**
    * widget - interactive fraction model
    */
function HmFlashWidgetImplFractionModel(jsonObj) {
    this.HmFlashWidget(jsonObj);
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
}
HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var val = this._jsonObj.value;
    var pcont=$("<div name='fm_cont' style='width:200px;height:200px;'></div>")
    //var cont=$("<div class='field' style='margin: 0 auto;width:300px;position:relative;'></div>");
    var html=""
    //pcont.append(cont)
    html=pcont;
    $(widget).append(html);
    HmFlashWidgetImplFractionModel.settings=$.extend({containerDiv:pcont},val);
    
    
    /*setTimeout(function(){
    pcont.initFractionModel(HmFlashWidgetImplFractionModel.settings)
    },300)*/
    return widget;
}

copyPrototype(HmFlashWidgetImplFractionModel, HmFlashWidget);
HmEvents.eventTutorInitialized.subscribe(function (x, data) {
    var aw = TutorSolutionWidgetValues.getActiveWidget();
    if (aw instanceof HmFlashWidgetImplFractionModel) {
        HmFlashWidgetImplFractionModel.settings.containerDiv= $($get("fm_cont"));
        //$("#fm_cont").initFractionModel(HmFlashWidgetImplFractionModel.settings);
        TutorGraphicApi.initFractionModel("fm_cont",HmFlashWidgetImplFractionModel.settings);
    }
});
HmFlashWidgetImplFractionModel.prototype.getWidgetValue = function () {
var set=HmFlashWidgetImplFractionModel.settings;
var p=set.containerDiv;
var v=p.data('selectedTiles')
var value=v?v:0
return String(value);
}
HmFlashWidgetImplFractionModel.prototype.setWidgetValue = function (val, doValidate) {
var set=HmFlashWidgetImplFractionModel.settings;
var p=set.containerDiv;
var v=parseInt(val)
if(v>0){
p.showFraction(v);
}
}
HmFlashWidgetImplFractionModel.prototype.formatWidgetCorrectValue = function () {
var set=HmFlashWidgetImplFractionModel.settings;
return String(set.num);
}
/**
 * type =prime factorization
 * test = ''
 */

function HmFlashWidgetImplPrimeFactors(jsonObj) {
    
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
    this.HmFlashWidget(jsonObj);
}

HmFlashWidget.prototype.processKey = function (ele, event) {    
    return restrictCharacters(ele, event, restrictionType_primefact, this.allowChars, this.dntallowChars);
}

HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var html = "<input class='input' name='widget_input_field_1' type='text' style='width:200px;'/>";
    html=applyPrePostfixFormat(this._jsonObj,html,'margin-top:8px')
    widget.innerHTML = html;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplPrimeFactors, HmFlashWidget);
/**
 * Define Class for Fraction entry
 *
 * test: cmextras_1_2_1_56_1
 *
 */

function HmFlashWidgetImplRatio(jsonObj) {
    this.HmFlashWidget(jsonObj);    
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
}
HmFlashWidget.prototype.processKey = function (ele, event) {
    return restrictCharacters(ele, event, restrictionType_digitsOnly, this.allowChars,this.dntallowChars);
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var html = "<div>" + "<input name='widget_input_field_1' type='text' style='width:60px;text-align:right;'/>" + "<span style='font-weight:bold;'>&nbsp;:&nbsp;</span>" + "<input name='widget_input_field_2' type='text' style='width:60px;text-align:left;'/>" + "</div>";
    widget.innerHTML = html;
    return widget;
}
copyPrototype(HmFlashWidgetImplRatio, HmFlashWidget);

HmFlashWidgetImplRatio.prototype.getWidgetValue = function () {
    // var value = '';
    var value = [];
    for (var i = 1; i < 3; i++) {
        var f = 'widget_input_field_' + i;
        var elem = $get(f);
        if (elem != null) {
            var v = elem.value;            
            value.push(v);
        }
    }
    return value.join("|");
}
HmFlashWidgetImplRatio.prototype.setWidgetValue = function (val, doValidate) {
    var vals = val.split("|");
    
    for (var i = 1, t = vals.length; i <=t; i++) {
        var f = 'widget_input_field_' + (i);
        var elem = $get(f);
        if (elem != null) {
            elem.value = vals[i];
        }
    }
    if (doValidate) {
        this.processWidget(true)
    }
}
HmFlashWidgetImplRatio.prototype.formatWidgetCorrectValue = function () {
        var _val = cm_unescape(this._jsonObj.value)
        _val = String(_val).split(":").join("|");        
        return _val
    }
 /**
 * Type = Conic section
 * Circle, ellipse, hyperbola
 */

function HmFlashWidgetImplConicSection(jsonObj) {
    this.ishFraction = false;
    this.iskFraction = false;
    //this.allowFrac = cm_unescape(jsonObj.allowFrac);
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
    //this.show_xcoeff = cm_unescape(jsonObj.show_xcoeff);
    //this.show_xcoeff = this.show_xcoeff == 'true' ? true : false;
    this.HmFlashWidget(jsonObj);
    var widgetObj = this;
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    var idy = getNodeName(ele);
    console.log("FOCUS 0: " + idy);
    if (idy.indexOf('widget_input_field_') == -1) {
        return;
    }
    var istr = idy.split("_")
    var i = parseInt(istr[istr.length - 1]);
    var f = istr[istr.length - 2];
    var pi;
    if (f == 'norm' || f == 'den') {
        var p = ['h', 'k','r','a','b']
        if (f == 'norm' || f == 'den') {
            pi = p[i - 1];
        }
    }
    if (isASlashCharacter(event)) {
        if ($get('widget_divider_' + i).style.display != 'block') {
            this.configureAsFraction(true, pi, i);
            // this.isFraction = true;
        }
        return false;
    }else if (isACaretCharacter(event)) {
    var exp=$get('widget_input_field_exp_' + i)
        if (exp&&exp.style.display != 'block') {
            this.configureAsPower(true, i);
            // this.isFraction = true;
        }
        return false;
    } else if (isABackSpaceCharacter(event) || isADeleteCharacter(event)) {
        var isExp=idy.indexOf('widget_input_field_exp_')>-1
        if(isExp){
            if (ele.value.length < 1) {
                this.configureAsPower(false, i);
                // this.isFraction = false;
                ele.value = '';
                return false;
            }
        }else if ($get('widget_divider_' + i).style.display == 'block') {
            if (getNodeName(ele).indexOf('widget_input_field_den') > -1 && ele.value.length < 1) {
                this.configureAsFraction(false, pi, i);
                // this.isFraction = false;
                ele.value = '';
                return false;
            }
        }
        return true;
    } else if (code == 39) {
        return true;
    }
    return restrictCharacters(ele, event, restrictionType_rational, this.allowChars, this.dntallowChars);
}
HmFlashWidget.prototype.configureAsPower=function(yesNo, id) {
    console.log("CONFIG_AS_POW: " + yesNo + " : " + id)
    if (yesNo) {
$get('widget_input_field_base_' + id).style.top='5px';
        $get('widget_input_field_exp_' + id).style.display = 'inline';
        $get('widget_input_field_exp_' + id).focus();
        
    } else {
    $get('widget_input_field_base_' + id).style.top='0px';
        $get('widget_input_field_exp_' + id).style.display = 'none';
        $get('widget_input_field_norm_' + id).focus();
        
    }
}
HmFlashWidget.prototype.configureAsFraction = function (yesNo, pid, id) {
var stype=this._jsonObj.stype?this._jsonObj.stype:'circle';
    if (yesNo) {
        if(stype=='circle'){
            $get('widget_input_field_' + pid).style.marginTop = '-15px';
        }else{
            $("div[name=widget_input_field_"+pid+"]").find('div:eq(1)').css("margin-top","-27px");
            $("div[name=widget_input_field_"+pid+"]").prev().css("margin-top","-15px")
            $("div[name=widget_input_field_"+pid+"]").next().css("margin-top","-21px")
            $("div[name=widget_input_field_"+pid+"]").prev().prev().css("margin-top","-21px")
            $("div[name=widget_input_field_"+pid+"]").next().next().css("margin-top","-21px")
        }
        $get('widget_input_field_den_' + id).style.display = 'inline';
        $get('widget_divider_' + id).style.display = 'block';
        $get('widget_input_field_den_' + id).focus();

    } else {
    if(stype=='circle'){
        $get('widget_input_field_' + pid).style.marginTop = '0px';
        }else{
        $("div[name=widget_input_field_"+pid+"]").find('div:eq(1)').css("margin-top","0px");
            $("div[name=widget_input_field_"+pid+"]").prev().css("margin-top","0px")
            $("div[name=widget_input_field_"+pid+"]").next().css("margin-top","-6px")
            $("div[name=widget_input_field_"+pid+"]").prev().prev().css("margin-top","-6px")
            $("div[name=widget_input_field_"+pid+"]").next().next().css("margin-top","-6px")
        }
        $get('widget_input_field_den_' + id).style.display = 'none';
        $get('widget_divider_' + id).style.display = 'none';
        $get('widget_input_field_norm_' + id).focus();
    }
}
HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var combo_for_pm = true
    var stype=this._jsonObj.stype?this._jsonObj.stype:'circle';
    var mt=stype==='circle'?'0':'-20';
    var fracD=stype==='circle'?'display:none;':'';
    var rhtml='<div name="widget_input_field_r" style="float: left;">' + getRationalUnit(3, 40) + '</div>';
    if(stype!='circle'){
    rhtml='<span>1</span>'
    }
    var si=stype=='hyperbola'?"-":"+";
    var pre="";
    if(stype=="hyperbola"){
        pre='<div name="horizontalDiv" style="float: left;font-weight:bold;">' +getComboInput(3, ['+', '-', ''], ['','\u2212']) + '</div>'
        si=getComboInput(4, ['-', '+', ''], ['\u2212', '+'])
    }
    if (combo_for_pm) {
        html ='<div>'+pre+'</div><span style="float:left">&nbsp;</span><div style="margin-top:'+mt+'px;float:left;"><div><div name="horizontalDiv" style="float: left;margin-top:-6px"><span class="widget_obrac" style="font-size: 30px;font-weight: bold">&#40;</span></div>' + '<div name="horizontalDiv" style="float: left;font-weight:bold;"><i>x</i>&nbsp;' + getComboInput(1, ['-', '+', ''], ['\u2212', '+']) + '&nbsp;</div>' + '<div name="widget_input_field_h" style="float: left;">' + getFractionField(1, 40) + '</div>' + '<div name="horizontalDiv" style="float: left;margin-top:-6px"><span style="font-size: 30px;font-weight: bold" class="widget_cbrac">&#41;</span></div>' + '<div style="float:left;font-size:12px;font-weight: bold;margin-top:-6px;">2</div></div><div name="widget_divider" class="divider" style="'+fracD+'width:100%;float:left;margin-top:-45px;">&nbsp;</div>'+'<div name="horizontalDiv" style="'+fracD+'float: left;font-weight:bold;margin-left:30%;margin-top:-40px">'+ '<div name="widget_input_field_a" style="float: left;">' + getRationalUnit(4, 40,false) + '</div></div></div>'+'<div name="horizontalDiv" style="float: left;font-weight:bold;">&nbsp;'+si+'&nbsp;</div>'+'<div style="margin-top:'+mt+'px;float:left;"><div><div name="horizontalDiv" style="float: left;margin-top:-6px"><span style="font-size: 30px;font-weight: bold" class="widget_obrac">&#40;</span></div>' + '<div name="horizontalDiv" style="float: left;font-weight:bold;"><i>y</i>&nbsp;' + getComboInput(2, ['-', '+', ''], ['\u2212', '+']) + '&nbsp;</div>' + '<div name="widget_input_field_k" style="float: left;">' + getFractionField(2, 40) + '</div>' + '<div name="horizontalDiv" style="float: left;margin-top:-6px"><span style="font-size: 30px;font-weight: bold" class="widget_cbrac">&#41;</span></div>' + '<div style="float:left;font-size:12px;font-weight: bold;margin-top:-6px;">2</div></div><div name="widget_divider" class="divider" style="'+fracD+'width:100%;float:left;margin-top:-45px;">&nbsp;</div>'+'<div name="horizontalDiv" style="'+fracD+'float: left;font-weight:bold;margin-left:30%;margin-top:-40px">'+ '<div name="widget_input_field_b" style="float: left;">' + getRationalUnit(5, 40,false) + '</div></div></div>'+'<div name="horizontalDiv" style="float: left;font-weight:bold;">&nbsp;=&nbsp;</div>'+'<div name="horizontalDiv" style="float: left;font-weight:bold;">' +rhtml + '</div>';
    }
    widget.innerHTML = html;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplConicSection, HmFlashWidget);
HmFlashWidgetImplConicSection.prototype.getWidgetValue = function () {
    var value = '';

    for (var i = 1; i < 6; i++) {
        var f1 = 'widget_input_field_norm_' + i;
        var f2 = 'widget_input_field_den_' + i;
        var f3 = 'widget_input_field_exp_' + i;
        var _n = "";
        var _d = "";
        var _p="";
        if ($get(f1) != null) {
            _n = $get(f1).value;

        }
        if ($get(f2) != null) {
            _d = $get(f2).value;
            if ($get(f2).style.display == 'none') {
                _d = 'null';
            }
        }
        if ($get(f3) != null) {
            _p = $get(f3).value;
            if ($get(f3).style.display == 'none') {
                _p = 'null';
            }
        }
        if (value > '') {
            value += '|';
        }
        value += _n + "/" + _d+"/"+_p;
    }
    for (var i = 1; i < 5; i++) {
        var comb = 'icombo_' + i;
        var v;
        if ($get(comb) != null) {
            v = $get(comb).selectedIndex;
            if (value > '') {
                value += '|';
            }
            value += v;
        } else {
            if (value > '') {
                value += '|';
            }
            value += "null";
        }

    }
    return value;
}
HmFlashWidgetImplConicSection.prototype.setWidgetValue = function (val, doValidate) {
    var vals = val.split("|");
    var p = [ 'h', 'k','a','b']
    for (var i = 1; i < 6; i++) {
        var obj = vals[i - 1];

        var frac = String(obj).split("/");
        var _n = frac[0];
        var _d = frac[1];
        var _p = frac[2];
        _d = String(_d) == "null" || String(_d) == 'undefined' ? 'null' : _d;
        _p = String(_p) == "null" || String(_p) == 'undefined' ? 'null' : _p;
        var isFrac = _d != 'null';
        var hasExp = _p != 'null';

        var f1 = 'widget_input_field_norm_' + (i);
        if ($get(f1) != null) {
            $get(f1).value = _n;
        }
        if (isFrac) {
            var f2 = 'widget_input_field_den_' + (i);
            if ($get(f2) != null) {
                $get(f2).value = _d;
                if (this.configureAsFraction) {
                    this.configureAsFraction(true, p[i - 1], i)
                }
            }
        }
        if (hasExp) {
            var f3 = 'widget_input_field_exp_' + (i);
            if ($get(f3) != null) {
                $get(f3).value = _p;
                if (this.configureAsPower) {
                    this.configureAsPower(true, i)
                }
            }
        }

    }
    for (var j = 1; j < 5; j++) {
        var comb = 'icombo_' + j;
        var v = vals[j + 4];
        v = v ? v : 0;
        if ($get(comb) != null) {
            $get(comb).selectedIndex = v;
        }
    }
    if (doValidate) {
        this.processWidget(true);
    }
}
HmFlashWidgetImplConicSection.prototype.formatWidgetCorrectValue = function () {
    var val = cm_unescape(this._jsonObj.value).split(",");
    var stype=this._jsonObj.stype?this._jsonObj.stype:'circle';
    var h = val[0];
    var k = val[1];
    var a = val[2];
    var b = val[3];
    var inv = val[4];
    var expectedValues = [ h, k,a,b]
    if(stype!=='circle'){
        expectedValues = [ h, k,"",a,b]
    }
    if (h.indexOf("-") > -1) {
        expectedValues[0] = expectedValues[0].split("-").join("");
        expectedValues.push(1)
    } else {
        expectedValues.push(0)
    }
    if (k.indexOf("-") > -1) {
        expectedValues[1] = expectedValues[1].split("-").join("");
        expectedValues.push(1)
    } else {
        expectedValues.push(0)
    }
    if(inv){
    if(inv===1){
        expectedValues.push(0)
        expectedValues.push(0)
    }
    if(inv===-1){
        expectedValues.push(1)
        expectedValues.push(1)
    }
    }
    return expectedValues.join("|");
}
 /**
 * Type = Sigma Notation
 * param: sigma_notation
 */

function HmFlashWidgetImplSigma(jsonObj) {
    this.ishFraction = false;
    this.iskFraction = false;
    //this.allowFrac = cm_unescape(jsonObj.allowFrac);
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
    //this.show_xcoeff = cm_unescape(jsonObj.show_xcoeff);
    //this.show_xcoeff = this.show_xcoeff == 'true' ? true : false;
    this.HmFlashWidget(jsonObj);
    var widgetObj = this;
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    var idy = getNodeName(ele);
    console.log("FOCUS 0: " + idy);
    if (idy.indexOf('widget_input_field_') == -1) {
        return;
    }
    var rst=restrictionType_exp4
    if ($(idy).hasClass('sigmalimits')) {        
            rst=restrictionType_digitsOnly;
    }
    return restrictCharacters(ele, event, rst, this.allowChars, this.dntallowChars);
}

HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var combo_for_pm = true
    var stype=this._jsonObj.stype?this._jsonObj.stype:null;
    var indvar=this._jsonObj.indexvar?this._jsonObj.indexvar:'i';
    var pre="";//"<div style='display:inline-block;text-align:center'><div style='text-align:center;padding:0px;margin:0px;margin-bottom:-0.1em;'><input style='width: 10%;text-align: center;' value=""/></div><div style='font-size:225%'>∑</div><div style='text-align:center;padding:0px;margin:0px;margin-top:0.1em;'><span><i>n</i>&nbsp;=&nbsp;</span><input style='width: 10%;text-align: center;' value=""/></div></div>"
    pre='<span style="display:inline-block;text-align:center;"><span style="text-align:center;padding:0px;margin:0px;margin-bottom:-0.1em;width: 100%;display: block;font-size:0.8em;"><input type="text" name="sigma-limit-to" style="width: 25px;text-align: center;font: 12pt Times New Roman;font-weight: bold;" value=""></span><span style="display: inline-block;"><span style="font-size:150%;">∑</span></span><span style="text-align:center;padding:0px;margin:0px;margin-top:0.1em;width: 100%;float: right;font-size:0.8em;"><span><i>'+indvar+'</i>&nbsp;=&nbsp;</span><input type="text" name="sigma-limit-from" style="width: 25px;text-align: center;font: 12pt Times New Roman;font-weight: bold;" value=""></span></span>'
    html="<div>"+pre+'<span style="margin-left:-0.2em;">'+(getNormalField(1,150).split("float:left;").join("").split("text-align:center;").join(""))+'</span>'+"</div>"
    widget.innerHTML = html;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplSigma, HmFlashWidget);
HmFlashWidgetImplSigma.prototype.getWidgetValue = function () {
    // var value = '';
    var value = [];
    var f = 'widget_input_field_1';
        var elem = $get(f);
        var elemf = $get("sigma-limit-from");
        var elemt = $get("sigma-limit-to");
        if (elem != null) {                        
            value.push(elem.value);
        }else{
            value.push("");
        }
        if (elemf != null) {                        
            value.push(elemf.value);
        }else{
            value.push("");
        }
        if (elemt != null) {                        
            value.push(elemt.value);
        }else{
            value.push("");
        }
    return value.join("|");
}
HmFlashWidgetImplSigma.prototype.setWidgetValue = function (val, doValidate) {
    var vals = val.split("|");
    var f = 'widget_input_field_1';
        var elem = $get(f);
        var elemf = $get("sigma-limit-from");
        var elemt = $get("sigma-limit-to");
        if (elem != null) {                        
           elem.value=vals[0]
        }else{
            elem.value="";
        }
        if (elemf != null) {                        
           elemf.value=vals[1]
        }else{
            elemf.value="";
        }
        if (elemt != null) {                        
           elemt.value=vals[2]
        }else{
            elemt.value="";
        }
    if (doValidate) {
        this.processWidget(true);
    }
}
HmFlashWidgetImplSigma.prototype.formatWidgetCorrectValue = function () {
        var _val = (this._jsonObj.value)
        _val = _val.join("|");        
        return _val
}
/**
 * Type = complex_number
 */

function HmFlashWidgetImplComplexNumber(jsonObj) {
    this.isFraction = false;
    this.isIFraction = false;
    this.HmFlashWidget(jsonObj);
    var widgetObj = this;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    
    if (isASlashCharacter(event)) {
        if (getNodeName(ele) == 'widget_input_field_1') {
            if (!this.isFraction) {
                this.configureSlopeAsFraction(true);
                this.isFraction = true;
            }
        }
        if (getNodeName(ele) == 'widget_input_field_3') {
            if (!this.isIFraction) {
                this.configureInterceptAsFraction(true);
                this.isIFraction = true;
            }
        }
        return false;
    } else if (isABackSpaceCharacter(event) || isADeleteCharacter(event)) {
        if (this.isFraction) {
            if (getNodeName(ele) == 'widget_input_field_2' && ele.value.length < 1) {                
                this.configureSlopeAsFraction(false);
                this.isFraction = false;
                ele.value = '';
                return false;
            }
        }
        if (this.isIFraction) {
            if (getNodeName(ele) == 'widget_input_field_4' && ele.value.length < 1) {                
                this.configureInterceptAsFraction(false);
                this.isIFraction = false;
                ele.value = '';
                return false;
            }
        }
        return true;
    } else if (code == 39) {
        return true;
    }
    return restrictCharacters(ele, event, restrictionType_rational, this.allowChars, this.dntallowChars);
}
HmFlashWidget.prototype.configureSlopeAsFraction = function (yesNo) {
    if (yesNo) {
        $get('widget_input_field_slope').style.marginTop = '0px';
        $get('widget_input_field_2').style.display = 'inline';
        $get('widget_divider').style.display = 'block';
        $get('widget_input_field_2').focus();

    } else {
        $get('widget_input_field_slope').style.marginTop = '15px';
        $get('widget_input_field_2').style.display = 'none';
        $get('widget_divider').style.display = 'none';
        $get('widget_input_field_1').focus();
    }
}
HmFlashWidget.prototype.configureInterceptAsFraction = function (yesNo) {
    if (yesNo) {
        $get('widget_input_field_intercept').style.marginTop = '0px';
        $get('widget_input_field_4').style.display = 'inline';
        $get('widget_divider_i').style.display = 'block';
        $get('widget_input_field_4').focus();

    } else {
        $get('widget_input_field_intercept').style.marginTop = '15px';
        $get('widget_input_field_4').style.display = 'none';
        $get('widget_divider_i').style.display = 'none';
        $get('widget_input_field_3').focus();
    }
}
HmFlashWidget.prototype.drawGui = function () {
    var widget = this.createWidgetForm();
    var html = "<div style='height: 75px;'>" + "<div style='float: left;margin-top: 15px;margin-right: 5px;'></div>" + "<div name='widget_input_field_slope' style='float: left;width: 60px;margin-top: 15px;'>" + "<input class='input' name='widget_input_field_1' type='text' style='width: 60px;display: block;text-align:center;'/>" + "<div name='widget_divider' class='divider' style='display: none;width: 60px;'>&nbsp;</div>" + "<input class='input' name='widget_input_field_2' type='text' style='width: 60px;display: none;text-align:center;'/>" + "</div>" + "<div style='float: left;margin-top: 10px;'>" + "<div>&nbsp;" + getComboInput(1, ['+', '-', ''], ['+', '\u2212']) + "&nbsp;</div>" + "</div>" + "<div name='widget_input_field_intercept' style='float: left;width: 60px;margin-top: 15px;'>" + "<input class='input' name='widget_input_field_3' type='text' style='width: 60px;display: block;text-align:center;font-weight: bold;'/>" + "<div name='widget_divider_i' class='divider' style='display: none;width: 60px;'>&nbsp;</div>" + "<input class='input' name='widget_input_field_4' type='text' style='width: 60px;display: none;text-align:center;font-weight: bold;'/>" + "</div>" + "<div style='float: left;margin-top: 15px;'>&nbsp;<i>i</i></div></div>";
    widget.innerHTML = html;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplComplexNumber, HmFlashWidget);

HmFlashWidgetImplComplexNumber.prototype.setWidgetValue = function (val, doValidate) {
    var vals = val.split('|');
    var c_sel = vals.shift();
    $get('icombo_1').selectedIndex = c_sel;
    for (var i = 0, t = vals.length; i < t; i++) {
        var f = 'widget_input_field_' + (i + 1);
        vals[i] = String(vals[i]) == "null" || String(vals[i]) == 'undefined' ? 'null' : vals[i];
        var elem = $get(f);
        if (elem != null) {
            elem.value = vals[i];

            /** if there is a secondary field */
            if (i == 1 && vals[i] != 'null') {
                if (this.configureSlopeAsFraction) {
                    this.configureSlopeAsFraction(true);
                }
            }
            if (i == 3 && vals[i] != 'null') {
                if (this.configureInterceptAsFraction) {
                    this.configureInterceptAsFraction(true);
                }
            }
        }
    }
    if (doValidate) {
        this.processWidget(true);
    }
}
HmFlashWidgetImplComplexNumber.prototype.getWidgetValue = function () {
    var value = [];
    for (var i = 1; i < 5; i++) {
        var f = 'widget_input_field_' + i;
        var elem = $get(f);
        if (elem != null && elem.style.display != 'none') {
            var v = elem.value;
            value.push(v);
        } else if (elem != null) {
            // var v = 'null';
            value.push('null');
        }
    }
    var comb = 'icombo_1';
    var v;
    if ($get(comb) != null) {
        v = $get(comb).selectedIndex;
        value.unshift(v);
    }
    return value.join("|");
}
HmFlashWidgetImplComplexNumber.prototype.formatWidgetCorrectValue = function () {
    var _val = cm_unescape(this._jsonObj.value)
    var ev = String(_val).split("+")
    var reg = /\(([^)]+)\)/;
    var co = [ev[0], ev[1]]
    ev[1] = co[0].match(reg)[1]
    var nd
    if (ev[1].indexOf("/") > -1) {
        nd = ev[1].split("/")
        ev[1] = nd[0]
        ev[2] = nd[1]
    } else if (ev[1].indexOf(".") > -1) {
        nd = Math.simpleFrac(ev[1]).split("/")
        ev[1] = nd[0]
        ev[2] = nd[1]
    } else {
        ev[2] = 'null'
    }
    ev[3] = co[1].match(reg)[1]

    var u = ev[3]
    if (u.indexOf("-") > -1) {
        ev[0] = 1
        ev[3] = u.split("-").join("")
    } else {
        ev[0] = 0
    }
    if (ev[3].indexOf("/") > -1) {
        nd = ev[3].split("/")
        ev[3] = nd[0]
        ev[4] = nd[1]
    } else if (ev[3].indexOf(".") > -1) {
        nd = Math.simpleFrac(ev[3]).split("/")
        ev[3] = nd[0]
        ev[4] = nd[1]
    } else {
        ev[4] = 'null'
    }
    _val = ev.join("|")

    return _val
}


/**
 * Define class for Trigonometry
 *
 *
 *
 */
function withinBracket(ele,ev){
    var curpos = _getSelection();
    var s = curpos[0];
    var e = curpos[1];
    var val=ele.value;
    var valLen = val.length;
    var tstr = String(val);
    var lstr = tstr.substring(0, s);
    var ob=lstr?lstr.split("(").length:0;
    var cb=lstr?lstr.split(")").length:0;
    if(ob>cb){
        return true;
    }
    return false;
}
function HmFlashWidgetImplTrig(jsonObj) {
    this.isFraction = false;
    this.isMixFraction = false;
    this.allowMixed = false;//jsonObj.allowMixed;
    this.HmFlashWidget(jsonObj);
    prepareChkCntrl(jsonObj, this);
    var widgetObj = this;
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
    this.dntallowChars = jsonObj.donotallowChars ? jsonObj.donotallowChars : null;

    console.log("Trig_INIT")
}

HmFlashWidget.prototype.processKey = function (ele, event) {
    console.log("Trig_PROCESSKEY")
    if (!event)
        var event = window.event
    if (event.keyCode)
        code = event.keyCode;
    else if (event.which)
        code = event.which;
    if (isASlashCharacter(event)) {
        if(withinBracket(ele,event)){
        return true;
        }
        if (!this.isFraction) {
            this.configureAsFraction(true);
            this.isFraction = true;
            return false;
        }
        return true;
    } else if (isABackSpaceCharacter(event) || isADeleteCharacter(event)) {
        if (this.isFraction) {
            if (getNodeName(ele) == 'widget_input_field_2' && ele.value.length < 1) {
                if (!this.isMixFraction) {
                    this.configureAsFraction(false);
                    this.isFraction = false;
                    ele.value = '';
                }
                return false;
            }
        }
        return true;
    } else if (code == 39) {
        return true;
    }

    return restrictCharacters(ele, event, this.allowMixed?restrictionType_digitsOnly:restrictionType_rational, this.allowChars, this.dntallowChars);
}

HmFlashWidget.prototype.configureAsFraction = function (yesNo) {
    var measureNode = $($get('widget_divider').parentNode).find('span :first').get(0);
    if (yesNo) {
        $get('widget_input_field_2').style.display = 'inline';
        $get('widget_divider').style.display = 'block';
        $get('widget_input_field_2').focus();
        if (measureNode) {
            measureNode.style.top = '13px'
        }
        this.isFraction = true;
    } else {
        $get('widget_input_field_2').style.display = 'none';
        $get('widget_divider').style.display = 'none';
        if (measureNode) {
            measureNode.style.top = '0px'
        }
        $get('widget_input_field_1').focus();
        this.isFraction = !true;
    }
}
HmFlashWidget.prototype.drawGui = function () {
    console.log("Trig_DRAWGUI")
    var measure = '';
    var format = '';
    var prefix = '';
    if (this._jsonObj.format) {
        format = this._jsonObj.format;
        var vm = unescape(format).split('|');
        if (vm.length > 1) {
            measure = vm[1];
            prefix = vm[0];
        }
        var mp = format.split('^');
        var raised = null;
        if (mp.length > 1) {
            measure = mp[0];
            raised = mp[1];
        } else {
            measure = unescape(this._jsonObj.format);
        }
        var font_style = "";
        if (measure) {
            measure = measure.split('_')[1];
            if (measure == 'deg') {
                measure = "&nbsp;&deg;"
            }
            var dummy = $("<input>");
            $('body').append(dummy);
            var icss = dummy.css('font-style') + " ";
            icss = dummy.css('font-variant') + " ";
            icss += dummy.css('font-weight') + " ";
            icss += dummy.css('font-size') + " ";
            icss += dummy.css('font-family');
            dummy.remove();
            font_style = "font:" + icss + ";font-weight:bold";
            font_style = ""
        }

        if (!measure)
            measure = '';

        format = '';
        if (raised) {
            measure += "<span style='vertical-align: baseline;font-size: 0.8em;position: relative;top: -0.4em;'>" + raised + "</span>";
        }
    }
    var widget = this.createWidgetForm();
    var ms = prefix == '' ? 150 : 125;
    var mixHtml = this.allowMixed ? '<input name="widget_input_field_3" type="text" style="width: 80px;text-align:center;position:relative;float:left;display:none;">' : "";
    var html = "<div style='height: 75px;'>" + "<div class='input_prefix' style='float: left;margin-top: 0px;margin-right: 5px;'>" + prefix + "</div>" + mixHtml +
        "<div style='float: left;'>" +

        "<input name='widget_input_field_1' type='text' style='width: 80px;text-align:center;'/>" + "<span class='input_units' style='vertical-align: baseline;position: relative;" + font_style + "'>&nbsp;" + measure + "</span>" + "<div name='widget_divider' class='divider' style='display: none'>&nbsp;</div>" + "<input name='widget_input_field_2' type='text' style='display: none;width: 80px;text-align:center;'/>" + "</div>" + "</div>";
if (this._jsonObj.addCheckbox === 'true'||this._jsonObj.addCheckbox===true) {
        var lab = this._jsonObj.checkbox_label;
        this.checkbox_label = lab ? lab : "No Solution";
        this.hasSimplified = true;
        html += "<div class='simplified_wrapper'>" + "  <label>" + this.checkbox_label + " <input name='widget_input_simplified' type='checkbox'/></label>" + "</div>";
    }
    if (this._jsonObj.symbols) {
        var symbols = this._jsonObj.symbols;
        var sarr = symbols.split(",");
        var _symbols = []
        if (sarr.length) {
            var btns = "";
            for (var s = 0; s < sarr.length; s++) {
                symbols = getSymbol(sarr[s]);
                if (symbols == 'undefined') {
                    btns = getNormalFieldWithSelect(1, "Slope is undefined:", true);
                } else {
                    _symbols.push(symbols)
                    btns += "<button type='button' onmouseover='_getSelection()' onblur='_getSelection()' onfocus='_getSelection()' ontouchstart='_getSelection()' onclick='_addButtonTextToWidget(\"" + symbols + "\");return false;'>" + symbols + "</button>"
                }
            }
        }
        var btn_inst = ""
        if (_symbols.length) {
            var str_keys = "[" + _symbols.join("], [") + "]";
            var str_symb = sarr.length === 1 ? "the " : "";
            str_symb += _symbols.join(", ");
            str_symb += sarr.length === 1 ? " symbol." : " symbols.";
            btn_inst = "<div style='font-size:0.7em;padding-bottom:2px;'>+ Use " + str_keys + " to enter " + str_symb + "</div>"
        }
        html += btn_inst + "<div class='buttons'  style='clear:both;padding:0 5px; background: #DDD;'>" + "    " + btns + "</div>";
        // widget.innerHTML = html;
        // return widget;
    }
    widget.innerHTML = html;
    return widget;
}
HmFlashWidget.prototype.processWidget = function (doNotFireEvent) {
    this.processWidgetDefault(doNotFireEvent);
}
copyPrototype(HmFlashWidgetImplTrig, HmFlashWidget);
HmFlashWidgetImplTrig.prototype.setWidgetValue = function (val, doValidate) {
    var vals = val.split("|");
    var notUndefined = true;
    var sel = vals.shift();

    sel = sel == 'null' ? 'false' : sel;
    if (sel == 'true' || sel == 'false') {
        val = vals.join("|");
        sel = sel == 'false' ? false : true;
        var cb = $get('widget_input_simplified_1')||$get('widget_input_simplified');

        if (cb != null) {
            cb.checked = sel;
            if (String(sel) == 'true') {
                // return;
                notUndefined = false
            }
        }
    }

    if (notUndefined) {
        this.setWidgetValueDefault(val);
        /** if there is a secondary field */
        if (val.split('|').length > 1) {
            // are there really two values?
            if (vals[1] != "") {
                if (this.configureAsFraction) {
                    this.configureAsFraction(true);
                }
            }
            if (vals[2]) {
                if (this.configureAsMixFraction) {
                    this.configureAsMixFraction(true);
                }
            }
        }
    }
    if (doValidate) {
        this.processWidget(true)
    }
}
HmFlashWidgetImplTrig.prototype.getWidgetValue = function () {
    // var value = '';
    var value = [];
    var cb = $get('widget_input_simplified_1')||$get('widget_input_simplified');
    if (cb != null) {
        value[0] = cb.checked;
    } else {
        value[0] = 'null';
    }
    for (var i = 1; i < 4; i++) {
        var f = 'widget_input_field_' + i;
        var elem = $get(f);
        if (elem != null && elem.style.display != 'none') {
            var v = elem.value;
            /*
             * if (value > '') { value += '|'; }
             */
            value.push(v);
        }
    }
    return value.join("|");
}
HmFlashWidgetImplTrig.prototype.formatWidgetCorrectValue = function () {
    var _val = cm_unescape(this._jsonObj.value)
    _val = _val.replace(/pi/g, PI_SYM)
    _val = _val.replace(/sqrt/g, SQUARE_ROOT_SYM)

    if (_val == 'undefined'||this._jsonObj.addCheckbox) {
        
        if(String(this._jsonObj.addCheckbox)==='true'){
            var arr = String(_val).split("|")
            var arrF = arr.pop();
            if (arrF == 'true') {
                _val = String(true) + "|" + arr.join("|")
            } else {
                _val = "null|" + arr.join("|")
            }
        }else{
            _val = String(true) + "|";
        }
    } else {
        if (_val.indexOf("[") > -1) {
            _val = _val.split("[")[1]
            var a_val = _val.split("]")
            _val = a_val[1] + "/" + a_val[0];
        }
        _val = 'false' + "|" + (String(_val).split("/").join("|"))

    }
    return _val
}

    /**
     * Create a widget wrapper to allow using interactive widgets
     */

function HmFlashWidgetImplWidgetPlot(jsonObj) {
    this.HmFlashWidget(jsonObj);
    this.allowChars = jsonObj.allowChars ? jsonObj.allowChars : null;
}
HmFlashWidget.prototype.drawGui = function () {
    var widgetForm = document.createElement("div");

    var val = this._jsonObj.value;
    var p = val.split('|');

    if (p.length < 8) {
        alert('HmFlashWidgetImplWidgetPlot: incorrect values specified');
        return;
    }

    var x = parseFloat(p[0]);
    var y = parseFloat(p[1]);
    var xMin = parseFloat(p[2]);
    var yMin = parseFloat(p[3]);
    var xMax = parseFloat(p[4]);
    var yMax = parseFloat(p[5]);
    var xInc = parseFloat(p[6]);
    var yInc = parseFloat(p[7]);

    var h = "<div widget='graph'> " + " { " + " gtype:'xy', " + " xmin:" + xMin + ", " + " xmax: " + xMax + ", " + " ymin: " + yMin + ", " + " ymax: " + yMax + ", " + " xinc: " + xInc + ", " + "  yinc: " + yInc + ", " + " show_axis_label:'alternate', " + " snap:'GridToGrid', " + " plot_data: \"['interactive','point',[" + x + "," + y + "],false,'red']\"  " + "  } " + " </div> ";
    widgetForm.innerHTML = h;
    return widgetForm;
}
HmFlashWidget.prototype.showWidgetCorrectValue = function () {
    if (this._thePlot) {
        this._thePlot.showWidgetCorrectValue();
    } else {
        alert('showWidgetCorrectValue: plot widget wrapper plot not set in correct value');
    }
}
copyPrototype(HmFlashWidgetImplWidgetPlot, HmFlashWidget);

/** Provide plumbing need to link interactive widgets and input widgets */
HmEvents.eventTutorWidgetComplete.subscribe(function (x, data) {
    var aw = TutorSolutionWidgetValues.getActiveWidget();
    if (aw instanceof HmFlashWidgetImplWidgetPlot) {

        console.log('widget complete, handling plot');
        /** is it correct ? */
        var isCorrect = data[0].correct;
        if (isCorrect) {
            aw.markWidgetCorrect();
        } else {
            aw.markWidgetIncorrect();
        }
    }
});


/** global setWidgetMessage will hook up with active widget
 * 
 */
function setWidgetMessage(msg) {
    var widget = TutorSolutionWidgetValues.getActiveWidget();
    if(widget) {
        widget.setWidgetMessage(msg);
    }
} 

/**
* show widget help control support script 
* temporarily added here for testing, will be added in seperate file showWidgetHelp.js
*/
function getHelpMesgFor(jobj){
    var msg='<li>Enter your answer and click "Check Answer" button</li>'
    if(jobj.type=="number_rational"){
        msg="<li>Use [/] to enter a fraction bar.</li>";
        if(jobj.allowMixed===true||jobj.allowMixed==='true'){
        msg+="<li>Use [m] to enter a mixed number.</li>";
        }else if(jobj.allowMixed===false||jobj.allowMixed==='false'){
        msg+="<li>If the answer is greater than 1, enter it as a whole number or improper fraction.</li>";
        }
    }else if(jobj.type=="number_decimal"&&jobj.format==='repeating_decimal'){
        msg="<li>To write a repeating decimal, highlight the repeated digit or digits and press [-] key.</li>"
    }else if(jobj.type=="multi_field"){
        var defs=jobj.value.split("|");
        var l=defs.length;
        var hasRat=false;
        for(var j=0;j<l;j++){
            var _def=eval("("+defs[j]+")");
            if(_def[3]==='rational'){
                msg="<li>Use [/] to enter a fraction bar.</li>";
            }
        }
    }
    else if(jobj.type=='mChoice') {
    	msg="<li>Click or touch your answer.</li>"
    }
    return msg.length?"<ul>"+msg+"</ul>":"";
}
function widgetHelpHandler(e) {
    e.preventDefault();
    var msg = '';//'<ul style="padding-top:35px;margin:0px;"><li>Enter your answer and click "Check Answer" button</li></ul>';
    var jobj = TutorSolutionWidgetValues.getActiveWidget()._jsonObj;
    msg = jobj.help || getHelpMesgFor(jobj);    
    widgetShowHelp(msg);
}
function closeHelpBox(){
    var cont = $('[name = "hm_flash_widget"]');
    var hoDiv = $('div[name=help_overlay]');
    hoDiv.addClass('fadeOut');

    // fired when animation is complete
    hoDiv.one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function () {
       hoDiv.remove();
    });
}
function widgetShowHelp(msg) {
    //code to show tool tip
    var cont = $('[name = "hm_flash_widget"]');
    var btn=cont.find('[name = "help_overlay_btn"]');
    //btn.hide();

    var w=cont.width() + 10;
    var h=cont.height() + 10;
    var hoverlay=$("<div name='help_overlay' class='animated fadeIn' style='width:"+w+"px;height:"+h+"px;'><div><button class='sexybutton sexysimple widget_help_close_btn' onclick='closeHelpBox()'>X</button></div></div>");
    hoverlay.append(msg);
    cont.prepend(hoverlay);
    console.log("Widget message: " + msg);
    
    setTimeout(function() {hoverlay.remove();}, 5000);
}

var TutorGraphicApi=(function(){debug("initializing TutorGrapicApi");var A={};A.drawFractionModel=function(S,X,N,T,V,J,I,E,U){var H=X[0];var G=X[1];var L=G;var F=Math.PI*2/G;var D=N/2;var B=V;var M=0;var W=F;var P=[];for(var R=0;R<G;R++){var K=this.drawSector(V,N,T,D,M,W,J,I,E);M=W;W=M+F;P.push(K)}var C=document.createElement("canvas");C.width=T;C.height=T;C.style.position="absolute";$(C).addClass("no-mouse-event");V.appendChild(C);try{if(typeof G_vmlCanvasManager!="undefined"){G_vmlCanvasManager.initElement(C)}else{}}catch(Q){console.log("DEBUG_IE:"+Q)}var O=C.getContext("2d");M=0;W=F;console.log(O);for(var R=0;R<G;R++){this.drawLine(O,["ang",[J,I],[D,M]],(U?U:"black"));M=W;W=M+F}this.drawCircle(O,N,D,J,I,"red");return P};A.drawPie=function(d,T,X,a,K,J,Z,e,P){var I=d[0];var H=d[1];var L=d[2];var c=d[3];var E=document.createElement("canvas");E.width=X;E.height=X;E.style.position="absolute";$(E).addClass("no-mouse-event");a.appendChild(E);var R=H;var B=a;var Q=e!==undefined?e:true;var U=this.get2DContext(E);if(L=="circle"){var G=Math.PI*2/H;var F=T/2;var S;var b;S=0;b=G;for(var V=0;V<H;V++){this.drawLine(U,["ang",[K,J],[F,S]],(Z?Z:"black"));S=b;b=S+G}if(Q){this.drawCircle(U,T,F,K,J,P?P:"red")}}else{var O=T/H;var N=1;var M=1;var Y=N+K+O;var D=M+J;var W=Y;var C=D+c;for(var V=1;V<H;V++){this.drawLine(U,["points",[Y,D],[W,C]],(Z?Z:"black"));Y=W=Y+O}}return[E,U]};A.drawLine=function(E,I,C){var G=I[0];var D,H,B,F;D=I[1][0];H=I[1][1];if(G=="points"){B=I[2][0];F=I[2][1]}else{if(G=="ang"){B=D+I[2][0]*Math.cos(I[2][1]);F=H+I[2][0]*Math.sin(I[2][1])}}console.log("LINE: 0 "+D+":"+H);console.log("LINE: 1 "+B+":"+F);E.beginPath();E.moveTo(D,H);E.lineTo(B,F);E.strokeStyle=C;E.stroke()};A.drawCircle=function(C,B,H,F,E,D){var J=0;var G=Math.PI*2;var I=false;C.beginPath();console.log("CIRCLE:"+F+":"+E+":"+J+":"+G);C.arc(F,E,H,J,G,I);C.closePath();C.lineWidth=2;C.strokeStyle=D;C.stroke();return C};A.drawRectangle=function(D,E,B,G,F,C){console.log("DRAW_RECT: "+E+" : "+B);D.lineWidth=2;D.strokeStyle=C;D.strokeRect(1,1,E+1,B+1);return D};A.drawSector=function(T,N,V,G,M,U,J,I,H){var F=document.createElement("canvas");console.log(F);F.width=V;F.height=V;F.style.position="absolute";F.style.opacity=0;T.appendChild(F);try{if(typeof G_vmlCanvasManager!="undefined"){G_vmlCanvasManager.initElement(F)}else{}}catch(O){console.log("DEBUG_IE:"+O)}var C=F.getContext("2d");var K=M;var L=U;var P=false;var S=J;var E=I;var R=S+G*Math.cos(M);var D=E+G*Math.sin(M);var Q=S+G*Math.cos(U);var B=E+G*Math.sin(U);C.beginPath();C.moveTo(S,E);C.lineTo(R,D);C.arc(S,E,G,K,L,P);C.lineTo(Q,B);C.lineTo(S,E);C.closePath();C.lineWidth=1;C.fillStyle=H;C.fill();return F};A.shadeSector=function(R,K,F,O,I,H,G){var D=R;var Q=F;var J=O;var L=false;var E=I;var P=H;var C=E+K*Math.cos(F);var N=P+K*Math.sin(F);var B=E+K*Math.cos(O);var M=P+K*Math.sin(O);D.beginPath();D.moveTo(E,P);D.lineTo(C,N);D.arc(E,P,K,Q,J,L);D.lineTo(B,M);D.lineTo(E,P);D.closePath();D.lineWidth=1;D.fillStyle=G;D.fill();return R};A.drawUnitRect=function(H,D,I,L,F,K,B,J,G){var E=document.createElement("canvas");E.width=I;E.height=I;E.style.position="absolute";E.style.opacity=0;H.appendChild(E);var C=this.get2DContext(E);C.fillStyle=G;console.log("CREATE_TILES: "+F+":"+K+":"+B+":"+J+":"+I+":"+G);C.fillRect(F,K,B,J);return E};A.shadeUnitRect=function(J,D,I,E,H,B,G,F){var C=J;C.fillStyle=F;console.log(F+" <> "+E+":"+H+":"+B+":"+G);C.fillRect(E,H,B,G);return J};A.shadeSector=function(R,K,F,O,I,H,G){var D=R;var Q=F;var J=O;var L=false;var E=I;var P=H;var C=E+K*Math.cos(F);var N=P+K*Math.sin(F);var B=E+K*Math.cos(O);var M=P+K*Math.sin(O);D.beginPath();D.moveTo(E,P);D.lineTo(C,N);D.arc(E,P,K,Q,J,L);D.lineTo(B,M);D.lineTo(E,P);D.closePath();D.lineWidth=1;D.fillStyle=G;D.fill();return R};A.drawPieSectors=function(V,c,R,W,a,L,K,E,T,Z){var J=c[0];var I=c[1];var Q=c[2].height;var B=a;var O=I;var S=[];if(V=="circle"){var F=Math.PI*2/I;var D=R/2;var P=0;var b=F;for(var U=0;U<I;U++){var N=this.drawSector(a,R,W,D,P,b,L,K,E,T);P=b;b=P+F;S.push(N)}}else{var H=[];var G=R/I;var Y=1+L;var C=1+K;var M=G;var X=Q;for(var U=0;U<I;U++){H.push({width:R,height:Q,x0:Y,y0:C,dw:M,dh:X,col:E});var N=this.drawUnitRect(a,R,W,Q,Y,C,M,X,E,T);Y=Y+M;S.push(N)}c[2].rectData=H}return S};A.addGraphicLayer=function(E,B,D){var C=document.createElement("canvas");C.width=B?B:300;C.height=D?D:300;C.style.position="absolute";C.style.left="0px";C.style.top="0px";E.appendChild(C);return C};A.get2DContext=function(C){try{if(typeof G_vmlCanvasManager!="undefined"){G_vmlCanvasManager.initElement(C)}else{}}catch(B){console.log("DEBUG_IE:"+B)}return C.getContext("2d")};A.initFractionModel=function(B,C){if(!A.FMPluginInited){initFractionModelPlugin();A.FMPluginInited=true}$($get(B)).initFractionModel(C)};A.showFraction=function(B,C){$($get(B)).showFraction(C)};return A}());function initFractionModelPlugin(){(function(B){function A(D){var K=1;if(!Math.isPrime(D)){var I=Math.sqrt(D);if(I==parseInt(I)){K=I}else{var J=Math.getPrimeFactors(D);var E=J.length;var G=Math.round(E/2);var C=J.slice(0,G);var F=Math.getProduct(C);var H=D/F;K=Math.min(F,H)}}return K}B.fn.initFractionModel=function(U){var D;var i=50,M=100,C=100,f=null,Y=false,e=0,g=false,c=[],Q,O,a,J;var S=0;var R=0;function W(){i=50,M=100,C=100,f=null,Y=false,e=0,g=false,c=[],Q,O,a,J=undefined}W();var I=B(this);I.data("settings",U);var F=B("<div class='field' style='margin: 0 auto;width:300px;position:relative;'></div>");I.append(F);var Z=U.num;var h=U.den;var T=parseInt(Z/h);var N=h;var K=A(N);var G=D=U.model_type?U.model_type:"square";J=Z;var L=U.interactive===undefined?true:U.interactive;var b=U.showFrac?U.showFrac:false;setTimeout(function(){c=V(F,N,K,Z,h,T,G,L);if(G=="square"){c=F.find("div.tile")}I.data("settings",B.extend(U,{tiles:c}));if(L){if(G=="square"){F.on("click","div.tile",j)}else{var d="";B(c).each(function(l,m){B(m).data("selected",false)});F.on("click","div.cont",j)}}else{if(b){I.showFraction()}}},100);function V(t,q,p,r,y,x,d,o){var m=r==y?1:x+1;console.log("INIT_TILES");if(d=="circle"){var AC=180;a=175;var v=(AC-a)/2;var AB=(AC-a)/2;Q=v+(a/2);O=AB+(a/2);var AB;var n=0;var z;for(var AA=0;AA<m;AA++){AB=AA*(AC+20);var l=document.createElement("div");B(l).addClass("cont");B(l).attr("name","pie_cont_"+AA);B(l).css("top",AB+"px");B(t).append(l);var s;if(z){var s=TutorGraphicApi.drawFractionModel("circle",[r,y],a,AC,l,Q,O,"white");z=z.concat(s)}else{z=TutorGraphicApi.drawFractionModel("circle",[r,y],a,AC,l,Q,O,"white")}n+=(AA+1)*(AC+20)}B(t).css("height",n+"px");if(o){}return z}S=0;R=0;var w=parseInt(B(t).parent().css("height"));for(var AA=0;AA<m;AA++){H(t,q,p);R+=25;console.log("A0: "+w);if(AA>0){w+=125}console.log("B0: "+w)}console.log("A: "+B(t).parent().css("height"));B(t).parent().css("height",w+"px");console.log("B: "+B(t).parent().css("height"))}function H(m,t,x){var p=t/x;var n=Math.min(300,p*i);var q=n/p;var o=q;o=x==1?C:o;var w=x*o;var v=document.createElement("div");v.style.position="absolute";v.style.top=R+"px";v.style.left="0px";v.style.width=n+"px";v.style.height=w+"px";B(v).css({border:"2px solid #ff0000","pointer-events":"none"});var d=0;for(var s=0;s<t;s++){d++;var r=document.createElement("div");r.style.position="absolute";r.style.width=q+"px";r.style.height=o+"px";r.style.top=R+"px";r.style.left=S+"px";r.style.opacity=0;S=S+q;if(d==p){R=R+o;S=0;d=0}B(r).addClass("tile");B(r).css({border:"2px solid #000000","background-color":"white"});B(m).append(r)}B(m).append(v);var u=B(m).attr("name");var l=B(m).find("div.tile");l.each(function(y,z){B(z).animate({opacity:1},{duration:500,easing:"linear"})});return l}function P(o){var d=o;var p=B(d).parent().parent();try{if(typeof G_vmlCanvasManager!="undefined"){G_vmlCanvasManager.initElement(d)}else{}}catch(m){console.log("DEBUG_IE:"+m)}var l=B(d).data("selected");console.log("CLICK: "+l);if(l){if(D=="circle"){B(d).css("opacity","0");var n=d.getContext("2d");n.fillStyle="#ffffff";n.fill()}else{B(d).css("background-color","#ffffff")}l=false;e--}else{if(D=="circle"){B(d).css("opacity","1");var n=d.getContext("2d");n.fillStyle="#38ACEC";n.fill()}else{B(d).css("background-color","#38ACEC")}l=true;e++}p.data("selectedTiles",e);B(d).data("selected",l)}function E(w,v,d,s){var l=Q;var z=O;var AB=w-l;var AA=v-z;var p=AA/AB;var o=Math.sqrt(AB*AB+AA*AA);var u=a/2;if(o>u){return }var q=Math.atan2(AA,AB);if(q<0){q=q+(2*Math.PI)}var t=d.split("_")[2];var r=Math.PI*2/s;var n=Math.floor(q/r)+(t*s);console.log("POS:"+w+":"+v+":"+q+":"+r+":"+n+":"+t);return c[n]}function k(v){var p=B(v).get(0).getBoundingClientRect();var q=document.body;var l=document.documentElement;var d=window.pageYOffset||l.scrollTop||q.scrollTop;var n=window.pageXOffset||l.scrollLeft||q.scrollLeft;var o=l.clientTop||q.clientTop||0;var r=l.clientLeft||q.clientLeft||0;var s=p.top+d-o;var m=p.left+n-r;var u=Math.round(m);var t=Math.round(s);v.data("offX",u);v.data("offY",t);return{top:t,left:u}}function X(o,m){k(m);var l=m.data("offX");var d=m.data("offY");var n=o?o:window.event;isTouchEnabled=n.type.indexOf("touch")>-1;n=isTouchEnabled?n.changedTouches[0]:n;var p={x:0,y:0};if(n.pageX!==undefined){p.x=n.pageX-l;p.y=n.pageY-d}else{p.x=n.clientX-l;p.y=n.clientY-d}return p}function j(n){var d=B(this);var m=d.parent().parent();var p=m.data("settings");console.log("DISP_CLICK: "+B(d)+":"+B(d).attr("name"));if(Y){return }var l=d;if(D=="circle"){var o=X(n,B(d));var l=E(o.x,o.y,B(d).attr("name"),p.den);console.log("CLICK "+o+":"+l);if(!l){return }}P(l);if(e==J){m.data("correct",true)}else{m.data("correct",!true)}if(e>0){B($get("widget_submit")).attr("disabled",false);B($get("widget_result")).html("")}else{B($get("widget_submit")).attr("disabled",true)}}};B.fn.showFraction=function(H){var L=B(this).data("settings");if(!L){alert("Error! First initialize fraction model in this element!");return }var D=H?H:L.num;var J=L.den;var M=L.whole?L.whole:parseInt(D/J);var I=J;var E=A(I);var K=$model_type=L.model_type?L.model_type:"square";var C=L.tiles;var G=0;B(this).data("selectedTiles",D);function F(){var N=C[G];try{if(typeof G_vmlCanvasManager!="undefined"){G_vmlCanvasManager.initElement(N)}else{}}catch(O){console.log("DEBUG_IE:"+O)}if(!(G<D)){return }if($model_type=="circle"){setTimeout(function(){var P=N.getContext("2d");P.fillStyle="#38ACEC";P.fill();B(N).animate({opacity:1},100,F)},1)}else{B(N).animate({opacity:0},10,function(){B(N).css("background-color","#38ACEC").animate({opacity:1},100,F)})}B(N).data("selected",true);G++}F()}}(jQuery))}if(!window.requestAnimationFrame){debug("adding animationFrame");window.requestAnimationFrame=(function(){return window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(B,A){window.setTimeout(B,1000/60)}})()};/**
 * tutor flash widget validations
 * 
 * validation functions are assigned to specific widgets defiend in
 * tutor_flash_widget.js.
 * 
 * Each validation method is made an instance method of the assigned class. This
 * makes the instance vars (like _jsonObj) to be available.
 * 
 */
var widget_answer;
var widget_format;
var MESSAGE_CORRECT = 'Correct!';
var MESSAGE_INCORRECT = 'Try Again!';
var ERROR_INPUT = 'Check your input!'
var ERROR_UNITS = 'Enter correct units!'
var ERROR_SIMPLE_FRACTION = "Not in lowest terms!";
var ERROR_SCI_NOT = "The first number has to be between 1 and 10";
var ERROR_ODDS = "The problem asks for the odds not probability";
var ERROR_SIMPLIFY = "Correct! Now write in lowest terms!";
var ERROR_MIXED = "Correct! Now write it as a mixed number!";
var ERROR_REDUCE_RADICAL = "Write in reduced radical form!"
var PI_SYM = '\u03c0';
var SQUARE_ROOT_SYM = '\u221A';
var minuses=['\u2012','\u2013','\u2014','\u2212']
//
var MESSAGE_format_coeff = 'Correct! Write the numerical coefficient first!';
var MESSAGE_format_samevar = 'Correct! But use the same variable name!';
var MESSAGE_simplify_val = 'Correct! Now simplify your answer!';
var MESSAGE_format = 'Please check your answer format!';
var MESSAGE_sameVal = 'Two or more of your answers have same value!';
var MESSAGE_mf='Please answer all parts of the question';
var MESSAGE_pm="Every non-zero number has two square roots, a positive and a negative";
//
var ERROR_den_0='Division by zero is undefined.';
var ERROR_MIX_NUMDEN_NEG='Numerator/denominator cannot be negative.';
//
var INFO_EXP_INT="Enter an integer."
var INFO_EXP_DEC="Enter the number as a decimal."
//
function regExpMatch(reg, str) {
    var re = new RegExp(reg);
    str=String(str)
    if (str.match(re)) {
        return true;
    } else {
        return false;
    }
}

function regExpReplace(reg, str, repstr) {
    var re = new RegExp(reg, "g");
    return String(str).replace(re, repstr);
}
var revSymb = {};
revSymb['<'] = '>';
revSymb['>'] = '<';
revSymb['='] = '=';
revSymb['!='] = '!=';
revSymb['<='] = '>=';
revSymb['>='] = '<=';

// unicode:
// less-than-or-equals-to = \u2264
// greater-than-or-equals-to = \u2265
// not-equals-to = \u2260

function splitAtInEq(str) {
    var syArr = ["<=", "<", "&lt;", "\u2264", "&le;", ">=", ">", "&gt;", "\u2265", "&ge;", "=", "&eq;", "\u2260", "&ne;"];
    var ieq = null;
    for (var i = 0; i < syArr.length; i++) {
        if (str.indexOf(syArr[i]) != -1) {
            ieq = syArr[i];
            break;
        }
    }
    var exp = str.split(ieq);
    if (exp.length > 2) {
        var texp0 = exp.pop();
        var texp1 = exp.join("");
        exp = [texp0, texp1];
    }
    var _ieq = ieq;
    ieq = ieq == '&lt;' ? '<' : ieq == "\u2264" ? '<=' : ieq == '&le;' ? '<=' : ieq;
    ieq = ieq == '&gt;' ? '>' : ieq == "\u2265" ? '>=' : ieq == '&ge;' ? '>=' : ieq;
    ieq = ieq == "&eq;" ? '=' : ieq;
    ieq = ieq == "&ne;" || ieq == "\u2260" ? '!=' : ieq;
    return {
        ueq: _ieq,
        syeq: ieq,
        lexp: exp[0],
        rexp: exp[1]
    };
}

function applyUniqueVarX(str) {
    if (!str) {
        return str;
    }

    var inputValue = str
    if (str.length == 1) {
        inputValue = (regExpReplace('[a-z]', inputValue, 'x'));
    }
    if (regExpMatch('\\*[a-z()]|[a-z()]\\*', inputValue)) {
        inputValue = (regExpReplace('[a-z]', inputValue, 'x'))
    } else if (regExpMatch('[0-9]\\([a-z]\\)', inputValue)) {
        inputValue = (regExpReplace('\\([', inputValue, '*('))
    } else if (regExpMatch('[a-z]\\([0-9]', inputValue)) {
        inputValue = (regExpReplace('\\(', inputValue, '*('))
    } else if (regExpMatch('[0-9][a-z]', inputValue)) {
        inputValue = (regExpReplace('[a-z]', inputValue, '*x'))
    }
    if (regExpMatch('[a-z][0-9]', inputValue)) {
        inputValue = (regExpReplace('[a-z](?=[0-9])', inputValue, 'x*'))
    }
    return inputValue
}

function applyUniqueVarXForEval(str) {
    if (!str) {
        return str;
    }

    var inputValue = str
    if (regExpMatch('[0-9]\\([a-z]', inputValue)) {
        inputValue = (regExpReplace('\\(', inputValue, '*('))
    }
    if (regExpMatch('[a-z]\\([0-9]', inputValue)) {
        inputValue = (regExpReplace('\\(', inputValue, '*('))
    }
    if (regExpMatch('[a-z][0-9]', inputValue)) {
        inputValue = (regExpReplace('[a-z](?=[0-9])', inputValue, 'x*'))
    }
    if (regExpMatch('\\[a-z]\\)[0-9]', inputValue)) {
        inputValue = (regExpReplace('\\)(?=[0-9])', inputValue, ')*'))
    }
    if (regExpMatch('[0-9]\\)[a-z]', inputValue)) {
        inputValue = (regExpReplace('\\)(?=[a-z])', inputValue, ')*'))
    }
    if (regExpMatch('\\*[a-z()]|[a-z()]\\*', inputValue)) {
        inputValue = (regExpReplace('[a-z]', inputValue, 'x'))
    }
    if (regExpMatch('[0-9][a-z]', inputValue)) {
        //inputValue=(regExpReplace('[a-z]',inputValue,'*x'));
        inputValue = inputValue.replace(/([0-9])?[a-z]/g, function ($0, $1) {
            return $1 ? $1 + '*x' : $0;
        });
    }
    if (regExpMatch('[a-z][a-z]', inputValue)) {
        //inputValue=(regExpReplace('[a-z]',inputValue,'*x'));
        inputValue = inputValue.replace(/([a-z])?[a-z]/g, function ($0, $1) {
            return $1 ? $1 + '*x' : $0;
        });
    }
    if (regExpMatch('[+\\*\\-][a-z]', inputValue)) {
        //inputValue=(regExpReplace('[a-z]',inputValue,'*x'));
        inputValue = inputValue.replace(/([+\\*\\-])?[a-z]/g, function ($0, $1) {
            return $1 ? $1 + 'x' : $0;
        });
    }
    if (regExpMatch('\\([a-z][+\\*/\\(\\-]', inputValue)) {
        inputValue = (regExpReplace('[a-z](?=[+\\*/\\(\\-])', inputValue, 'x'))
    }
    if (regExpMatch('[a-z][+\\*/\\(\\-]', inputValue)) {
        inputValue = (regExpReplace('[a-z](?=[+\\*/\\(\\-])', inputValue, 'x'))
    }
    if (regExpMatch('\\)\\(', inputValue)) {
        inputValue = (regExpReplace('\\)\\(', inputValue, ')*('))
    }
    return inputValue
}

function cm_unescape(str) {
    return unescape(decodeURI(str));
}
// unicode used:
// divide = \u00f7
// subscript_minus = \u208B (verify correct?)---->\u2013
// plus_minus = \u00B1
// asterisk = \u002A (verify correct?)----->correct
function toMathFormat(_str) {
    var str = _str;
    var opStr = '/\u00f7*+-\u2013<=>][^\u00B1()\u002A';
    var hasPiSymb = str.indexOf(PI_SYM) > -1;
    if (hasPiSymb) {
        // str = str.split("\u03a0").join("pi");
        if(str.length===1){
        str="Math.PI"
        }else if(str.length===2&&str=="-\u03a0"){
        str="-Math.PI"
        }else if (regExpMatch('\\*\\(?\u03c0|\u03c0\\)?\\*', str)) {
            str = regExpReplace('\u03a0', str, 'Math.PI')
        } else {
            if (regExpMatch('[0-9)]\u03c0', str)) {
                //str = regExpReplace('\u03c0', str, '*Math.PI')
                str=str.replace(/([0-9])?\u03c0/g, function ($0, $1) {
                    return $1 ? $1 + '*Math.PI' : $0;
                });
            }
            if (regExpMatch('[/]\u03c0', str)) {
                //str = regExpReplace('\u03c0', str, 'Math.PI')
                str=str.replace(/([/])?\u03c0/g, function ($0, $1) {
                    return $1 ? $1 + 'Math.PI' : $0;
                });
            }
            if (regExpMatch('[/(]\u03c0', str)) {
                //str = regExpReplace('\u03c0', str, 'Math.PI')
                str=str.replace(/([/(])?\u03c0/g, function ($0, $1) {
                    return $1 ? $1 + 'Math.PI' : $0;
                });
            }
            if (regExpMatch('\u03c0[(0-9]', str)) {
                //str = regExpReplace('\u03c0', str, 'Math.PI*')
                str.replace(/\u03c0([\\(0-9])?/g, function ($0, $1) {
                    return $1 ? 'Math.PI*'+$1 : $0;
                });
            }
            if (regExpMatch('[PI]\u03c0', str)) {
                //str = regExpReplace('\u03c0', str, 'Math.PI')
                str=str.replace(/([PI])?\u03c0/g, function ($0, $1) {
                    return $1 ? $1 + '*Math.PI' : $0;
                });
            }
        }
        hasPiSymb = str.indexOf(PI_SYM) > -1;
        if(hasPiSymb){
            str = str.split("\u03c0").join("Math.PI");
        }
    }
    var hasSqrtSymb = str.indexOf(SQUARE_ROOT_SYM);
    var strL = str.length;
    var lstr, rstr, uchar, fstr;
    fstr = "";
    var closeB = ")"
    if (hasSqrtSymb > -1) {
        lstr = str.substring(0, hasSqrtSymb);
        rstr = str.substring(hasSqrtSymb + 1);
        if (rstr.length < 1) {
            return lstr;
        }
        if (lstr.length < 1) {
            fstr = "Math.sqrt("
        } else {
            if (lstr.charAt(lstr.length - 1) == '*') {
                if (rstr.charAt(0) == "(") {
                    fstr = lstr + "Math.sqrt"
                    closeB = ""
                } else {
                    fstr = lstr + "Math.sqrt("
                }
            } else {
            var isOP=opStr.indexOf(lstr.charAt(lstr.length - 1))>-1
            var mu=isOP?"":"*";
                if (rstr.charAt(0) == "(") {
                    fstr = lstr + mu+"Math.sqrt"
                    closeB = ""
                } else {
                    fstr = lstr + mu+"Math.sqrt("
                }
            }
        }
        //alert('fstr '+fstr+":"+closeB)
        var end = false;
        for (var i = 0; i < rstr.length; i++) {
            uchar = rstr.charAt(i);
            if (opStr.indexOf(uchar) != -1 && i != 0) {
                fstr += closeB + rstr.substring(i);
                end = true;
                break;
            } else {
                fstr += uchar;
            }
        }
        if (!end) {
            fstr += closeB;
        }
        //alert('fstr '+fstr)
        return toMathFormat(fstr);
    }
    return str;
}

/**
* Methods for trig validation
*/
Math.sec=function(x){
return 1/Math.cos(x);
}
Math.csc=function(x){
return 1/Math.sin(x);
}
Math.cot=function(x){
return 1/Math.tan(x);
}
function parseTrig(_str){
    var str=_str.split(" ").join("");
    var hascoeff=str.match(/(\u03b8|[a-z]|[0-9]|\))(csc|sin|cos|tan|sec|cot)/g);
    var nonbrack=str.match(/(csc|sin|cos|tan|sec|cot)([a-z]|[0-9]|\u03b8)/g);
    if(hascoeff){
        str=str.replace(/(csc|sin|cos|tan|sec|cot)/g, function ($0, $1) {
                    return $1 ? '*'+$1 : $0;
                });
    }
    var sarr=str.split(/(csc|sin|cos|tan|sec|cot)/g);
    var sl = sarr.length;
    for(var i=0;i<sl;i++){
        var e=sarr[i];
        var nstr;
        if(e.match(/(csc|sin|cos|tan|sec|cot)/g)){
            nstr="Math."+e;
        }else{
            var hasM=e.match(/[\*\+\-\/]$/g);//e.indexOf("*")>-1;
            var l=e.length;
            l=hasM?l-1:l;
            nstr=e.substring(0,l);
            if(nstr&&nstr.length){
            nstr=nstr.split("\u03b8").join("t");
            nstr=applyUniqueVarXForEval(nstr);
            nstr="("+nstr+")"+(hasM?hasM[0]:"");   
            }            
        }
        sarr[i]=nstr;
    }
    return toMathFormat(sarr.join(""));
}
function compareTrigFunc(e1,e2){
    
    var o1,o2;
    var f1=e1.indexOf("|")>-1;
    var f2=e2.indexOf("|")>-1;
    if(f1){
        var a1=e1.split("|");
        var e11=parseTrig(a1[0]);
        var e12=parseTrig(a1[1]);
        o1="("+e11+")/("+e12+")";
    }else{
        o1=parseTrig(e1);
    }
    if(f2){
        var a2=e2.split("|");
        var e21=parseTrig(a2[0]);
        var e22=parseTrig(a2[1]);
        o2="("+e21+")/("+e22+")";
    }else{
        o2=parseTrig(e2);
    }
    //var o1=parseTrig(e1);
   // var o2=parseTrig(e2);
    var boo=true;
    for(var x=-1;x<=1;x+=0.1){
        var v1=eval(o1);
        var v2=eval(o2);
        if(!isNaN(String(v1))){
            v1=v1.toFixed(4);
        }
        if(!isNaN(String(v2))){
            v2=v2.toFixed(4);
        }
        if(v1!=v2){
            return false;
        }
    }
    return true;
}
//-method for trig validation end
function clean(str) {
    var _str = String(str).split("\u2013").join("-");
    return _str.split(" ").join("");
}
function fixMinus(str) {
    var _str = String(str).split(/[\u2012\u2013\u2015\u2015\u2212]/g).join("-");
    return _str.split(" ").join("");
}
function cleanExtra(str) {
    var _str = String(str).split("*").join("");
    _str = _str.split("(").join("");
    _str = _str.split(")").join("");
    _str = _str.split("-").join("");
    if (_str.indexOf('1.') == -1) {
        if (parseInt(_str) === 1) {
            _str = _str.split("1").join("");
        }
    }
    if (_str.indexOf('0.') == -1) {
        if (parseInt(_str) === '0') {
            _str = "0";
        }
    }
    return _str;
}

function cleanBrac(str, a, b, c) {
    var c1 = "(" + b + ")";
    var c2 = "(" + c + ")";
    var c3 = isNaN(a) ? "(" + a + ")" : null;
    var _str = str.split(c1).join(String(b));
    _str = _str.split(c2).join(String(c));
    if (c3 != null) {
        _str = _str.split(c3).join(String(a));
    }
    var sub = _str
    var li = sub.lastIndexOf("(");
    var fi
    if (li > -1) {
        while (li > 0) {
            fi = sub.indexOf(")", li);
            var lp = li == 0 ? "" : sub.substring(0, li)
            var rp = fi == sub.length ? "" : sub.substring(fi + 1, sub.length)
            var mp = sub.substring(li + 1, fi)
            sub = lp + mp + rp
            li = sub.lastIndexOf("(");
        }
        li = sub.indexOf("(");
        fi = sub.indexOf(")", li);
        _str = (li == 0 && fi == sub.length - 1) ? sub.substring(1, sub.length - 1) : _str

    }
    return _str;
}

function splitAtOp(exp, op) {
    function exists(str, e) {
        var o = str.indexOf(e, 0);
        if (o == -1) {
            return false;
        } else {
            return true;
        }
    }

    function isUnary(e) {
        if (pc == "" || pc == "(" || exists(opArrS, pc)) {
            return true;
        } else {
            return false;
        }
    }
    var opStr = String(op);
    var opArrS = '-+';
    var opL = op.length;
    var tstr = exp.split(" ").join("");
    tstr = tstr.split("\u2013").join("-");
    tstr = tstr.split("\u00b7").join("*");
    var expL = tstr.length;
    var c;
    var eArr = [];
    var topArr = [];
    var cs = "";
    var pc = "";
    var ind = 0;
    for (var i = 0; i < expL; i++) {
        c = tstr.charAt(i);
        if (exists(opStr, c) && !isUnary(c)) {
            eArr.push((cs));
            topArr.push(c);
            cs = "";
        } else {
            cs += c;
        }
        pc = c;
    }
    eArr.push(cs);
    return {
        e: eArr,
        op: topArr
    };
}

function checkforNCF(ifev, isev, itev, ofev, osev, otev) {
    var boo = false;
    if (ofev == ifev && String(ofev) !== 0 && String(ifev) !== 0) {
        boo = true;
    }
    if (osev == isev && String(osev) !== 0 && String(isev) !== 0) {
        boo = true;
    }
    if (osev == isev && String(osev) !== 0 && String(isev) !== 0) {
        boo = true;
    }
    return boo;
}
//
function validate_Expressions_ff(input_val, questObj) {
    var val = input_val;
    var input = clean(val);
    input = input.split("+-").join("-");
    input = input.toLowerCase();
    var input_str = input.split(")(").join(")|(");
    var input_vals = input_str.split("|");
    var v1 = input_vals[0] ? input_vals[0] : null;
    var v2 = input_vals[1] ? input_vals[1] : null;
    var f1, f2, cf1, cf2, s1, s2;
    var vars = questObj[0];
    var ef1 = String(questObj[1]);
    var ef2 = String(questObj[2]);
    var boo1, boo2, boo3;
    boo1 = input.indexOf(vars) > -1;
    if (!boo1) {
        return false;
    }
    if (input === '0') {
        if (ef1 == '0') {
            return true;
        }
        return false;
    }
    if (v1) {
        f1 = cleanBrac(v1);
        f1 = String(f1);
        var f1str = splitAtOp(f1, "+");
        if (f1str.e.length === 1) {
            f1str = splitAtOp(f1, "-");
        }
        var fs1 = f1str.e
        if (String(fs1[0]).indexOf(vars) > -1) {
            f1 = String(fs1[1]);
            cf1 = String(fs1[0]).split(vars);
            cf1 = cf1[0] || cf1[1]
        } else if (String(fs1[1]).indexOf(vars) > -1) {
            f1 = String(fs1[0]);
            cf1 = String(fs1[1]).split(vars);
            cf1 = cf1[0] || cf1[1]
        } else {
            return false
        }
        if (f1str.op[0] == '+') {
            f1 = combineOp('-' + cleanBrac(f1));
        } else if (f1str.op[0] == '-') {
            f1 = combineOp('' + cleanBrac(f1));
        }

        if (cf1.length) {
            s1 = f1.charAt(0) == '-' ? '-' : '';
            s2 = cf1.charAt(0) == '-' ? '-' : '';
            if (s1 == '-' && s2 == '-') {
                f1 = (f1.substring(1)) + '/' + (cf1.substring(1));
            } else if (s1 == '-' || s2 == '-') {
                f1 = f1 + "/" + cf1;
                if (s2 == '-') {
                    f1 = '-' + f1 + '/' + (cf1.substring(1));
                }
            } else {
                f1 = f1 + "/" + cf1;
            }
        }
    }
    if (v2) {
        f2 = cleanBrac(v2);
        f2 = String(f2);
        var f2str = splitAtOp(f2, "+");
        if (f2str.e.length === 1) {
            f2str = splitAtOp(f2, "-");
        }
        var fs2 = f2str.e
        if (String(fs2[0]).indexOf(vars) > -1) {
            f2 = String(fs2[1]);
            cf2 = String(fs2[0]).split(vars);
            cf2 = cf2[0] || cf2[1]
        } else if (String(fs2[1]).indexOf(vars) > -1) {
            f2 = String(fs2[0]);
            cf2 = String(fs2[1]).split(vars);
            cf2 = cf2[0] || cf2[1]
        } else {
            return false
        }
        if (f2str.op[0] == '+') {
            f2 = combineOp('-' + cleanBrac(f2));
        } else if (f2str.op[0] == '-') {
            f2 = combineOp('' + cleanBrac(f2));
        }
        if (cf2.length) {
            s1 = f2.charAt(0) == '-' ? '-' : '';
            s2 = cf2.charAt(0) == '-' ? '-' : '';
            if (s1 == '-' && s2 == '-') {
                f2 = (f2.substring(1)) + '/' + (cf2.substring(1));
            } else if (s1 == '-' || s2 == '-') {
                f2 = f2 + "/" + cf2;
                if (s2 == '-') {
                    f2 = '-' + f2 + '/' + (cf2.substring(1));
                }
            } else {
                f2 = f2 + "/" + cf2;
            }
        }
    }
    boo2 = f1 === ef1 && f2 === ef2;
    boo3 = f1 === ef2 && f2 === ef1;
    var boo = boo2 || boo3;

    return boo;
}

function combineOp(str) {
    var res = str;
    res = res.split("--").join("");
    res = res.split("-+").join("-");
    res = res.split("+-").join("-");
    return res
}

function validate_Expressions_dp(input_val, questObj) {
    var val = input_val;
    var input = clean(val);
    input = input.split("+\u2013").join("\u2013");
    var questObj = questObj;
    var output = questObj[1];
    output = clean(output);
    var k = questObj[3][0];
    var j = questObj[3][1];
    var m = questObj[3][2];
    var n = questObj[3][3];
    var y = questObj[3][4];
    var z = questObj[3][5];
    input = cleanBrac(input, k, y, z);
    console.log("input:" + input);
    console.log("Expected:" + output + ":" + k + ":" + j);
    var var3 = questObj[3][1] ? true : false;
    var op1, op2;
    op1 = questObj[2][0];
    op2 = questObj[2][1];
    var ieqn = applyUniqueVarXForEval(input);
    var oeqn = applyUniqueVarXForEval(output);
    var x = 2
    var einput = eval(ieqn);
    var eoutput = eval(oeqn);
    console.log("eval_input:" + einput + ":" + ieqn);
    console.log("eval_Expected:" + eoutput + ":" + oeqn);
    var oop1, oop2, iop1, iop2;
    var indp = splitAtOp(input, "+").e;
    var indn = splitAtOp(input, "-").e;
    var ife, ise, ite;
    var type = questObj[4];
    console.log("step A:" + var3 + ":" + type + ":" + indp + ":" + indn + ":" + indp.length + ":" + indn.length);
    if (var3) {
        if (indp.length == 3) {
            ife = indp[0];
            ise = indp[1];
            ite = indp[2];
        } else if (indn.length == 3) {
            ife = indn[0];
            ise = indn[1];
            ite = indn[2];
        } else {
            console.log("AA:XX" + indp[0] + ":" + indp[1])
            var c1 = splitAtOp(indp[0], "-").e;
            var c2 = splitAtOp(indp[1] ? indp[1] : "", "-").e;
            console.log("AA:YY" + c1 + ":" + c2);
            if (c1.length == 2) {
                ife = c1[0];
                ise = c1[1];
                ite = indp[1];
            } else {
                ife = indp[0];
                ise = c2[0];
                ite = c2[1];
            }
        }
    } else {
        if (indp.length == 2) {
            ife = indp[0];
            ise = indp[1];
        } else {
            ife = indn[0];
            ise = indn[1];
        }
        if (type == 10) {
            var vcf = parseInt(ife);
            var vsf = String(ife).split(vcf)[1];
            if (isNaN(vcf)) {
                vcf = '1';
                vsf = String(ife);
            }
            if (vsf.length == 2 && vsf.charAt(0) == k && vsf.charAt(1) == y) {
                ife = vcf + y + "" + k;
            }
            var vcs = parseInt(ise);
            var vss = String(ise).split(vcs)[1];
            if (isNaN(vcs)) {
                vcs = '1';
                vss = String(ise);
            }
            if (vss.length == 2 && vss.charAt(0) == k && vss.charAt(1) == y) {
                ise = vcs + y + "" + k;
            }
        }
    }
    console.log("step B:");
    //
    var ondp = splitAtOp(output, "+").e;
    var ondn = splitAtOp(output, "-").e;
    var ofe, ose, ote;
    if (var3) {
        if (ondp.length == 3) {
            ofe = ondp[0];
            ose = ondp[1];
            ote = ondp[2];
        } else if (ondn.length == 3) {
            ofe = ondn[0];
            ose = ondn[1];
            ote = ondn[2];
        } else {
            var c1 = splitAtOp(ondp[0], "-").e;
            var c2 = splitAtOp(ondp[1] ? ondp[1] : "", "-").e;
            if (c1.length == 2) {
                ofe = c1[0];
                ose = c1[1];
                ote = ondp[1];
            } else if (c2.length == 2) {
                ofe = ondp[0];
                ose = c2[0];
                ote = c2[1];
            }
        }
    } else {
        if (ondp.length == 2) {
            ofe = ondp[0];
            ose = ondp[1];
        } else if (ondn.length == 2) {
            ofe = ondn[0];
            ose = ondn[1];
        }
    }
    console.log("step C: " + ofe + ":" + ose);
    ife = ife ? ife : "";
    ise = ise ? ise : "";
    ite = ite ? ite : "";
    var oc = ife.split("(");
    var cc = ife.split(")");
    if (oc.length == cc.length) {
        ife = cleanExtra(ife);
    }
    oc = ise.split("(");
    cc = ise.split(")");
    if (oc.length == cc.length) {
        ise = cleanExtra(ise);
    }
    if (ite) {
        oc = ite.split("(");
        cc = ite.split(")");
        if (oc.length == cc.length) {
            ite = cleanExtra(ite);
        }
    }
    console.log("step D:");
    //                             
    ofe = cleanExtra(ofe);
    ose = cleanExtra(ose);
    ote = ote ? cleanExtra(ote) : ote;
    var sc = false;
    var ics = "";
    if (ife == 0 || ife == undefined) {
        ics = "";
    } else {
        ics = ife;
    }
    if (ise == 0 || ise == undefined) {
        ics += "";
    } else {
        ics += "+" + ise;
    }
    if (ite == 0 || ite == undefined) {
        ics += "";
    } else {
        ics += "+" + ite;
    }
    var ocs = "";
    if (ofe == 0 || ofe == undefined) {
        ocs = "";
    } else {
        ocs = ofe;
    }
    if (ose == 0 || ose == undefined) {
        ocs += "";
    } else {
        ocs += "+" + ose;
    }
    if (ote == 0 || ote == undefined) {
        ocs += "";
    } else {
        ocs += "+" + ote;
    }
    //
    //----------------------------------------------//
    console.log("step E: " + ofe + ":" + ose);
    var ofex = ofe ? parseInt(ofe) : 0;
    var ofev = String(ofe).split(ofex)[1];
    var osex = ose ? parseInt(ose) : 0;
    var osev = String(ose).split(osex)[1];
    var otex = ote ? parseInt(ote) : 0;
    var otev = String(ote).split(otex)[1];
    //
    var ifex = ife ? parseInt(ife) : 0;
    var ifev = String(ife).split(ofex)[0];
    if (ifev.length == 2 && ifev.charAt(0) == k && ifev.charAt(1) == y) {
        ifev = y + "" + k;
    }
    var isex = ise ? parseInt(ise) : 0;
    var isev = String(ise).split(osex)[0];
    var itex = ite ? parseInt(ite) : 0;
    var itev = String(ite).split(otex)[0];
    console.log("cleaned:" + ofev + ":" + osev + ":" + otev + ":" + ifev + ":" + isev + ":" + itev);
    console.log("clean_inout:" + input + ":" + output);
    console.log("ICS_OCS: --> " + ics + " : " + ocs)
    //
    if (input == output) {
        sc = true;
    } else {
        if (einput == eoutput) {
            if (String(output) == '0' || String(input) == '0') {
                sc = true;
            } else if (String(einput) == String(output)) {
                sc = "simplify_val";
            } else if (ics == ocs) {
                console.log("ICS_OCS: -->CORRECT");
                sc = true;
            } else {
                if (var3) {
                    var k = questObj[3][0];
                    var j = questObj[3][1];
                    var m = questObj[3][2];
                    var n = questObj[3][3];
                    var y = questObj[3][4];
                    var z = questObj[3][5];
                    var lop = k * j;
                    var mop = k * m;
                    var rop = k * n;
                    var boo1 = (ife == ofe && ise == ose && ite == ote);
                    var boo2 = (ife == ofe && ise == ote && ite == ose);
                    var boo3 = (ife == ote && ise == ose && ite == ofe);
                    var boo4 = (ife == ote && ise == ofe && ite == ose);
                    var boo5 = (ife == ose && ise == ofe && ite == ote);
                    var boo6 = (ife == ose && ise == ote && ite == ofe);
                    //
                    var boo7 = (ifex == ofex && isex == osex && itex == otex);
                    var boo8 = (ifex == ofex && isex == otex && itex == osex);
                    var boo9 = (ifex == otex && isex == osex && itex == ofex);
                    var boo10 = (ifex == otex && isex == ofex && itex == osex);
                    var boo11 = (ifex == osex && isex == ofex && itex == otex);
                    var boo12 = (ifex == osex && isex == otex && itex == ofex);
                    //
                    if (boo1 || boo2 || boo3 || boo4 || boo5 || boo6) {
                        sc = true;
                    } else if (boo7 || boo8 || boo9 || boo10 || boo11 || boo12) {
                        sc = 'format_samevar';
                    } else {
                        var nCoeff = checkforNCF(ifev, isev, itev, ofev, osev, otev);
                        if (nCoeff) {
                            sc = 'format_coeff';
                        } else {
                            sc = 'format';
                        }
                    }
                } else {
                    var k = questObj[3][0];
                    var m = questObj[3][2];
                    var n = questObj[3][3];
                    var y = questObj[3][4];
                    var lop = type == 10 ? k + "" + m : k * m;
                    var rop = k * n;
                    var boo1 = (ife == ofe && ise == ose);
                    var boo2 = (ife == ose && ise == ofe);
                    var boo3 = (ifex == ofex && isex == osex);
                    var boo4 = (ifex == osex && isex == ofex);
                    if ((ife == ofe && ise == ose) || (ife == ose && ise == ofe)) {
                        sc = true;
                    } else if (boo3 || boo4) {
                        sc = 'format_samevar';
                    } else {
                        var nCoeff = checkforNCF(ifev, isev, itev, ofev, osev, otev);
                        if (nCoeff) {
                            sc = 'format_coeff';
                        } else {
                            sc = 'format';
                        }
                    }
                }
            }
        } else {
            sc = false;
        }
    }
    return sc;
    //
}
//
//-- scripts for topic COMBINE LIKE TERMS VALIDATION BEGIN-----------------------//
//-- SUPPORT FUNCTIONS -----------------------//
function uniformat(xp, vars) {
    var exp = xp;
    var sa = ['x', 'y'];
    var v = vars;
    var s, r;
    for (var i = 0; i < v.length; i++) {
        s = v[i];
        r = sa[i];
        if (exp.indexOf(s) > -1) {
            exp = exp.split(s).join(r);
        }
    }
    return exp;
}

function revformat(xp) {
    if (xp == 'x^2y') {
        return 'yx^2';
    }
    if (xp == 'xy^2') {
        return 'y^2x';
    }
    if (xp == 'xy') {
        return 'yx';
    }
    return xp;
}

function rearrangeExp(xp) {
    var exp = xp;
    var op = ['x^2y', 'xy^2', 'xy'];
    for (var i = 0; i < op.length; i++) {
        var s = op[i];
        var r = revformat(s);
        if (s != r) {
            exp = exp.split(r).join(s);
        }
    }
    return exp;
}

function revOp(xp) {
    var exp = clean(xp);
    var a = exp.split("-");
    for (var i = 0; i < a.length; i++) {
        a[i] = String(a[i]).split("+").join("-");
    }
    if (a[0] != '') {
        a[0] = '-' + a[0];
    }
    exp = a.join("+");
    return exp;
}

function expandExp(xp) {
    var exp = clean(xp);
    var ind = exp.indexOf("(");
    s = 0;
    var lstr, rstr, mstr, e;
    while (ind > -1) {
        e = exp.indexOf(")", ind);
        lstr = exp.substring(s, ind);
        rstr = exp.substring(e + 1);
        mstr = exp.substring(ind + 1, e);
        isneg = lstr.substring(lstr.length - 1) == '-';
        if (isneg) {
            lstr = lstr.substring(0, lstr.length - 1);
            mstr = revOp(mstr);
        }
        exp = lstr + mstr + rstr;
        s = e + 1;
        ind = exp.indexOf("(");
    }
    return exp;
}

function expToArr(xp) {
    var exp = xp;
    var a = exp.split("-");
    for (var i = 1; i < a.length; i++) {
        a[i] = String("-" + a[i]);
    }
    exp = a.join("+");
    if (exp.charAt(0) == '+') {
        exp = exp.substring(1);
    }
    return exp.split("+");
}
function stripOne(str){
var uno=parseFloat(str)===1||parseFloat(str)===-1
if(!uno){
return str
}
var re
if(str.indexOf('-1.0')>-1){
re="-"+str.substring(4);
}else if(str.indexOf('1.0')>-1){
re=str.substring(3);
}else if(str.indexOf('-1')>-1){
re="-"+str.substring(2);
}else if(str.indexOf('1')>-1){
re=str.substring(1);
}
return re
}
function stripOneCoeff(str,c){
//var n=(str).match(/^(\-)?([0-9])/g);
var arr=str.split(c);
if(isNaN(parseFloat(arr[0]))){
return str
}
return parseFloat(str)+c;
}
function sortByDeg(xp) {
    var a = [].concat(xp);
    var arr_x2y = [];
    var arr_y2x = [];
    var arr_xy = [];
    var arr_x2 = [];
    var arr_y2 = [];
    var arr_x = [];
    var arr_y = [];
    var arr_n = [];
    var val;
    for (var i = 0; i < a.length; i++) {
        if (a[i].indexOf('x^2y') > -1) {
            val = a[i];
            val = parseFloat(val) == 1 ? stripOne(val) : stripOneCoeff(val,'x^2y');
            val = parseFloat(val) == -1 ? stripOne(val) : stripOneCoeff(val,'x^2y');
            arr_x2y.push(val);
        } else if (a[i].indexOf('xy^2') > -1) {
            val = a[i];
            val = parseFloat(val) == 1 ? stripOne(val) : stripOneCoeff(val,'xy^2');
            val = parseFloat(val) == -1 ? stripOne(val) : stripOneCoeff(val,'xy^2');
            arr_y2x.push(val);
        } else if (a[i].indexOf('xy') > -1) {
            val = a[i];
            val = parseFloat(val) == 1 ? stripOne(val) : stripOneCoeff(val,'xy');
            val = parseFloat(val) == -1 ? stripOne(val) : stripOneCoeff(val,'xy');
            arr_xy.push(val);
        } else if (a[i].indexOf('x^2') > -1) {
            val = a[i];
            val = parseFloat(val) == 1 ? stripOne(val) : stripOneCoeff(val,'x^2');
            val = parseFloat(val) == -1 ? stripOne(val) : stripOneCoeff(val,'x^2');
            arr_x2.push(val);
        } else if (a[i].indexOf('y^2') > -1) {
            val = a[i];
            val = parseFloat(val) == 1 ? stripOne(val) : stripOneCoeff(val,'y^2');
            val = parseFloat(val) == -1 ? stripOne(val) : stripOneCoeff(val,'y^2');
            arr_y2.push(val);
        } else if (a[i].indexOf('x') > -1) {
            val = a[i];
            val = parseFloat(val) == 1 ? stripOne(val) : stripOneCoeff(val,'x');
            val = parseFloat(val) == -1 ? stripOne(val) : stripOneCoeff(val,'x');
            arr_x.push(val);
        } else if (a[i].indexOf('y') > -1) {
            val = a[i];
            val = parseFloat(val) == 1 ? stripOne(val) : stripOneCoeff(val,'y');
            val = parseFloat(val) == -1 ? stripOne(val) : stripOneCoeff(val,'y');
            arr_y.push(val);
        } else {
            val = parseFloat(a[i]);
            //val=parseFloat(val)==1?val.substring(1):parseFloat(val);
            arr_n.push(val);
        }
    }
    return [arr_x2y, arr_y2x, arr_xy, arr_x2, arr_y2, arr_x, arr_y, arr_n];
}

function addExp(a) {
    var a0 = a[0];
    var co = parseInt(a[0]);
    if (isNaN(co)) {
        if (a[0].indexOf("-") > -1) {
            a[0] = "-1" + (a[0].split("-").join(""));
            co = -1;
        } else {
            a[0] = "1" + a[0];
            co = 1;
        }
    }
    var exp;
    var sum = 0;
    if (String(co) == String(a[0])) {
        exp = '';
    } else {
        var te = a[0].split("^2").join("\u00b2");
        exp = String(te).split(String(co))[1];
        exp = exp.split("\u00b2").join("^2");
    }
    for (var i = 0; i < a.length; i++) {
        co = parseInt(a[i]);
        if (isNaN(co)) {
            if (a[i].indexOf("-") > -1) {
                co = -1;
            } else {
                co = 1;
            }
        }
        sum += co;
    }
    co = parseInt(a0);
    if (sum == 0) {
        return ""
    }
    if (exp != "") {
        sum = sum == 1 ? "" : sum;
        sum = sum == -1 ? "-" : sum;
    }
    return sum + exp;
}

function combineLike(xp) {
    var a = [].concat(xp);
    var na = [];
    for (var i = 0; i < a.length; i++) {
        if (a[i].length > 1) {
            na[i] = [addExp(a[i])];
        } else {
            na[i] = a[i];
        }
    }
    return na;
}

function compareExpArr(a1, a2) {
    var boo = true;
    var isNull1
    var isNull2
    var val1
    var val2
    var l = Math.max(a1.length, a2.length);
    for (var i = 0; i < l; i++) {
        console.log("COMP_EXP_ARR: " + a1[i][0] + ":" + a2[i][0] + ":" + i + ":" + l)
        isNull1 = a1[i][0] == undefined || a1[i][0].length == 0 || a1[i][0] == null || parseFloat(a1[i][0]) == 0
        isNull2 = a2[i][0] == undefined || a2[i][0].length == 0 || a2[i][0] == null || parseFloat(a2[i][0]) == 0
        val1 = String(a1[i][0]);
        val2 = String(a2[i][0]);
        if (val1.indexOf("x") > -1) {
            val1 = val1.split('x').join('w')
        }
        if (val2.indexOf("x") > -1) {
            val2 = val2.split('x').join('w')
        }
        var booL = a1[i].length == a2[i].length
        if ((a2[i][0] != a1[i][0])) {

            if (isNull2 && parseFloat(val1) == 0) {
                continue;
            } else if (isNull1 && parseFloat(val2) == 0) {
                continue;
            } else if (isNull1 && (a2[i][0] == null || a2[i][0] == "")) {
                continue;
            } else if (isNull2 && (a1[i][0] == null || a1[i][0] == "")) {
                continue;
            }
            boo = false;
            break;
        } else if ((a2[i].length != a1[i].length)) {
            boo = false;
            break;
        }
    }
    return boo;
}

function rearrangeCoeff(xp) {
    var op = ['x^2y', 'yx^2', 'xy^2', 'y^2x', 'xy', 'yx', 'x^2', 'y^2', 'x', 'y'];
    var a = [].concat(xp);
    var vv
    var cov
    for (var i = 0; i < a.length; i++) {
        vv = a[i][0]
        if (!isNaN(parseInt(vv))) {
            continue
        }
        if (vv == "" || vv === undefined) {
            continue
        }
        for (var j = 0; j < op.length; j++) {
            if (vv == op[j]) {
                break
            }
            if (vv.indexOf(op[j]) > -1) {
                aa = vv.split(op[j])
                aa[1] = String(aa[1]) == '1' ? "" : aa[1]
                a[i] = [(aa[0].length ? aa[0] : "") + aa[1] + "" + op[j]]
                break
            }
        }
    }
    return a
}

function prepareData(a, obj, boo) {
    var edata = a instanceof Array ? a : expToArr(rearrangeExp(uniformat(expandExp(a), obj.vars)));
    edata = sortByDeg(edata);
    edata = boo ? combineLike(edata) : edata;
    return edata;
}

//
function validate_Expressions_clt(input_val, questObj) {

    var val = input_val;
    var input = val.split(" ").join("");
    input = input.split("+\u2013").join("\u2013");
    input = input.split("\u00b2").join('^2');
    input = input.split("*").join('');
    var output = questObj[1];
    output = String(output).split(" ").join("");
    output = output.split("\u00b2").join('^2');
    var qoutput = prepareData(output, questObj[4], false);
    var coutput = prepareData(output, questObj[4], true);
    cinput = prepareData(input, questObj[4], false);
    var sinput = prepareData(input, questObj[4], true);
    var co_input = rearrangeCoeff(sinput);
    var sc
    console.log(cinput + ":" + coutput);
    console.log(co_input + ":" + coutput);
    if (compareExpArr(cinput, coutput)) {
        console.log("correct");
        sc = true;
    } else {
        if (compareExpArr(sinput, coutput)) {
            console.log("simplify-val");
            sc = "simplify_val";
        } else if (compareExpArr(co_input, coutput)) {
            console.log("format-coeff");
            sc = "format_coeff";
        } else {
            console.log("incorrect");
            sc = false;
        }
    }
    return sc
}

//-- scripts for topic COMBINE LIKE TERMS VALIDATION END-----------------------//        
// utility functions ends


/**
 * Each validation function has access to this._jsonObj which is the JSON
 * configuration object (ie, this._jsonObj.value)
 * 
 */
// VALIDATION FUNCTIONS START
// /////////////////////////////////////////////////////////////////////
function controlCheck(expectedValue,boo,obj){
    if(!obj.addCheckbox){
       return 'null';
    }else{
        var simplified = $get('widget_input_simplified');
        var icontrol = simplified && simplified.checked;
        if(boo){
         return icontrol
        }
        var eva=expectedValue.split("|");
        eva.pop()
        var econtrolS = simplified&&(expectedValue.split("|").pop() == 'true');
        var econtrolE = simplified&&(expectedValue.split("|").pop() == 'false');
        var alterS=icontrol&&econtrolS;
        var alterE=(!icontrol)&&econtrolE;
        if(econtrolS){
            if(eva[0]!=='null'){
                return 'null'
            }
            return alterS
        }
        if(econtrolE){
            return alterE?'null':false;
        }
    }
}
// -! type=number_integer
function validateNumberInteger() {
    var expectedValue = cm_unescape(this._jsonObj.value);
    var format = this._jsonObj.format;
    var af = this._jsonObj.ans_format;
    var inputValue = $get('widget_input_field_1').value;
    if(this._jsonObj.addCheckbox){
       var __break=controlCheck(expectedValue,false,this._jsonObj);
       if(!(__break==='null')){
            return __break
       }
       expectedValue=expectedValue.split("|");
       expectedValue.pop()
       expectedValue=expectedValue.join("|");
       var icchkd=controlCheck(expectedValue,true,this._jsonObj);
       if(!icchkd){
            verifyIsNotNullOrEmpty(inputValue);
       }
    }else{
     verifyIsNotNullOrEmpty(inputValue);
    }
    var pm=false;
    if(af=='plusminus'){
        var haspm=String(inputValue).indexOf('\u00b1')>-1;
        if(haspm){
            pm=true;
            inputValue=String(inputValue).split('\u00b1')[1];
        }
    }
    if (Number(inputValue) == Number(expectedValue)) {
        if(af=='plusminus'){
            if(!pm){
                //throw(MESSAGE_pm);
                return false;
            }
        }
        return true;
    } else {
        if (format == "money") {
            if (Number(inputValue) == Number(expectedValue.substring(1))) {
                throw (ERROR_UNITS);
            } else {
                return false;
            }
        } else {
            return false
        }
    }
}
HmFlashWidgetImplNumberInteger.prototype.processWidgetValidation = validateNumberInteger;



// -! type=number_decimal format=money
function validateNumberMoney() {
    var inputValue = $get('widget_input_field_1').value;
     //verifyIsNotNullOrEmpty(inputValue);
    var expectedValue = cm_unescape(this._jsonObj.value);
    if(this._jsonObj.addCheckbox){
       var __break=controlCheck(expectedValue,false,this._jsonObj);
       if(!(__break==='null')){
            return __break
       }
       expectedValue=expectedValue.split("|");
       expectedValue.pop()
       expectedValue=expectedValue.join("|");
       var icchkd=controlCheck(expectedValue,true,this._jsonObj);
       if(!icchkd){
            verifyIsNotNullOrEmpty(inputValue);
       }
    }else{
     verifyIsNotNullOrEmpty(inputValue);
    }
    var numVal = 0;
    var hasUnits = false;
    if (inputValue.substring(0, 1) == '$') {
        numVal = Number(inputValue.substring(1));
        hasUnits = true;
    } else numVal = Number(inputValue);

    /** strip off leading $ */
    var numExpect = Number(expectedValue.substring(1));
    if (numVal == numExpect) {
        if (!hasUnits) throw (ERROR_UNITS);
        return true;
    } else {
        return false;
    }
}
HmFlashWidgetImplNumberMoney.prototype.processWidgetValidation = validateNumberMoney;


/** check for null or empty string
 *  and throw an exception if found.
 * @param val
 */
function verifyIsNotNullOrEmpty(val,msg) {
    if(val == null || val == "") {
        //throw(msg?msg:"value must be specified");
        throw(msg?msg:"Enter Something!");
    }
}

// -! type=number_decimRA
function validateNumberDecimal() {
    var inputValue = $get('widget_input_field_1').value;
    //verifyIsNotNullOrEmpty(inputValue);
    var af = this._jsonObj.ans_format;
    var pm=false;
    if(af=='plusminus'){
        var haspm=String(inputValue).indexOf('\u00b1')>-1;
        if(haspm){
            pm=true;
            inputValue=String(inputValue).split('\u00b1')[1];
        }
    }
    var repF = $get('widget_input_field_rep_1');
    var repCont = $get('widget_input_rep_cont_1')
    var repV = "";
    var repD = 0;
    var sr = false;
    if (repF) {
        repV = repF.value;
        repV = repV === null || repV === undefined ? "" : repV;

        //inputValue=inputValue+String(repV);
        //repD=inputValue.split(".")[1];
        //repD=repD?repD.length:0;
    }

    var expectedValue = cm_unescape(this._jsonObj.value);
    if(this._jsonObj.addCheckbox){
       var __break=controlCheck(expectedValue,false,this._jsonObj);
       if(!(__break==='null')){
            return __break
       }
       expectedValue=expectedValue.split("|");
       expectedValue.pop()
       expectedValue=expectedValue.join("|");
       var icchkd=controlCheck(expectedValue,true,this._jsonObj);
       if(!icchkd){
            verifyIsNotNullOrEmpty(inputValue);
       }
    }else{
     verifyIsNotNullOrEmpty(inputValue);
    }
    if (String(expectedValue).indexOf("R") > -1) {
        var arr = String(expectedValue).split("R")
        var arrV = String(arr[1]);
        expectedValue = arr[0] + arr[1];
        var rv = arrV;
        //var lv=expectedValue.split(".")
        repD = repV.split(rv).join("")
        if (repD == "") {
            inputValue = inputValue + String(repV).substring(0, rv.length);
        } else {
            sr = true
        }
        if (repF && $(repCont).css('display') == 'none') {
            sr = true
        }
    } else {
        if (repF && $(repCont).css('display') == 'block') {
            sr = true
        }
    }
    if (sr) {
        return false
    }
    //Margin of error algorithm
    var moe = cm_unescape(this._jsonObj.moe);
    var moe_validity = cm_unescape(this._jsonObj.on_moe);
    var moe_msg = cm_unescape(this._jsonObj.on_moe_msg);
    var moe_exp = cm_unescape(this._jsonObj.moe_exp);
    //
    //console.log(inputValue+":"+expectedValue+":"+Number(inputValue)+":"+Number(expectedValue));
    if (Number(inputValue) == Number(expectedValue)) {
        if(af=='plusminus'){
            if(!pm){
                //throw(MESSAGE_pm);
                return false;
            }
        }
        return true;
    } else {
        if (widget_format == "money") {
            var iv = Number(inputValue)
            var ev = Number(expectedValue.substring(1))
            if (Number(inputValue) == Number(expectedValue.substring(1))) {
                throw (ERROR_UNITS);
            } else {
                if (moe) {
                   // dv = (ev - iv);
                    dv = (iv - ev);
                    dv=Math.fixTo(dv,8);
                    var range = String(moe).split("|");
                    var lowR = range.length == 1 ? 0 : Number(range[0]);
                    var hiR = range.length == 1 ? Number(range[0]) : Number(range[1])
                    console.log("ERROR_MARGIN: " + iv + ":" + ev + ":" + dv + ":" + moe);
                    if (moe_exp) {
                        var exp = moe_exp.split("|");
                        var expV = exp[0];
                        var expM = exp[1];
                        var ev1
                        if (expV.indexOf("R") > -1) {
                            expV = parseInt(expV.substring(1));
                            var p = Math.round(Math.log10(expV));
                            ev1 = Math.fixTo(ev, p);
                        } else {
                            ev1 = expV
                        }
                        if (iv == ev1) {
                            if (expM == 'correct') {
                                return true;
                            } else {
                                throw (expM)
                            }
                        }
                    }
                    if (dv >= lowR && dv <= hiR) {
                        throw (ERROR_UNITS);
                    }
                }
                return false;
            }
        } else {
            var iv = Number(inputValue)
            var ev = Number(expectedValue)
            if (moe) {
                //dv = (ev - iv);
                dv = (iv - ev);
                dv=Math.fixTo(dv,8);
                var range = String(moe).split("|");
                var lowR = range.length == 1 ? 0 : Number(range[0]);
                var hiR = range.length == 1 ? Number(range[0]) : Number(range[1]);
                if (moe_exp) {
                    var exp = moe_exp.split("|");
                    var expV = exp[0];
                    var expM = exp[1];
                    var ev1;
                    if (expV.indexOf("R") > -1) {
                        expV = parseInt(expV.substring(1));
                        var p = Math.round(Math.log10(expV));
                        ev1 = Math.fixTo(ev, p);
                    } else {
                        ev1 = expV
                    }
                    if (iv == ev1) {
                        if (expM == 'correct') {
                            if(af=='plusminus'){
                                if(!pm){
                                    //throw(MESSAGE_pm);
                                    return false;
                                }
                            }
                            return true;
                        } else {
                            throw (expM)
                        }
                    }
                }
                console.log("ERROR_MARGIN: " + iv + ":" + ev + ":" + dv + ":" + moe)
                if (dv >= lowR && dv <= hiR) {
                    if(af=='plusminus'){
                            if(!pm){
                                //throw(MESSAGE_pm);
                                return false;
                            }
                        }
                    if (moe_validity == 'correct') {
                        
                        return true;
                    } else {
                        throw (moe_msg)
                    }
                }
            }
            return false
        }
    }
}
HmFlashWidgetImplNumberDecimal.prototype.processWidgetValidation = validateNumberDecimal;




// -! type=number_simple_fraction
function validateNumberSimpleFraction() {
    var expectedValue = cm_unescape(this._jsonObj.value);
    var simplified = $get('widget_input_simplified');

    /** isSimplified field avaialbe and checked?
     * 
     */
    var isSimplified = simplified && simplified.checked;
    var ans_isSimplified = expectedValue.split("|")[1] == 'simplified'
    expectedValue = expectedValue.split("|")[0]
    if (expectedValue.indexOf("[") > -1) {
        var splitVal = expectedValue.split("]")
        var ewhole = splitVal[0].split("[")[1];
        splitVal = splitVal[1].split("/")
        var enumero = splitVal[0]
        var eden = splitVal[1]
        expectedValue = ((ewhole * eden) + Number(enumero)) + "/" + eden;
    }
    var eAns = eval(expectedValue);
    var inputValue = $get('widget_input_field_1').value;
    var isFrac = $get('widget_input_field_2').value != "";
    var fld3 = $get('widget_input_field_3');
    var isMixed = (fld3 != null && fld3.value != "");
    // alert($get('widget_input_field_2').value)
    isFrac = isMixed ? false : isFrac;
    if(!isSimplified){
     verifyIsNotNullOrEmpty(inputValue);
    }
    var num, den, whole
    if (isFrac) {
        num = inputValue
        den = $get('widget_input_field_2').value
        /*var d_isNeg=false
        if(String(den).indexOf("-")>-1){
        d_isNeg=true
        den=String(den).substring(1)
        }
        if(String(num).indexOf('-')>-1){
        num=d_isNeg?String(num).substring(1):num;
        }else{
        num=d_isNeg?'-'+num:num;
        }
        inputValue=num+"/"+den*/
        var d_isNeg = false;
        var n_isNeg = false;
        var num_t = num;
        var den_t = den;
        if (String(den).indexOf("-") > -1) {
            d_isNeg = true
            den_t = String(den).substring(1)
        }
        if (String(num).indexOf('-') > -1) {
            n_isNeg = true;
            num_t = d_isNeg ? String(num).substring(1) : num;
        } else {
            num_t = d_isNeg ? '-' + num : num;
        }
        if (d_isNeg && n_isNeg) {
            if (this._jsonObj.ans_format == 'lowest_term') {
                inputValue = num + "/" + den
            } else {
                inputValue = num_t + "/" + den_t
            }
        } else {
            inputValue = num_t + "/" + den_t
        }
        if (String(expectedValue).indexOf("/") == -1) {
            expectedValue = expectedValue + "/1"
        }
    }
    if (isMixed) {
        num = inputValue;
        den = $get('widget_input_field_2').value;
        whole = fld3.value;
        inputValue = ((whole * den) + Number(num)) + "/" + den
    }

    if (inputValue == expectedValue) {
        return true;
    } else {
        if (eAns == inputValue) {
            return true
        }
        if (isSimplified && ans_isSimplified) {
            return true;
        }
        if (eval(inputValue) == eval(expectedValue)) {
            throw (ERROR_SIMPLE_FRACTION);
        } else {
            return false
        }
    }
}
HmFlashWidgetImplSimpleFraction.prototype.processWidgetValidation = validateNumberSimpleFraction;



// -! type=number_fraction
/**
 * TODO: need widget for this
 * 
 * widget_input_simplified is avaiable
 * on text_simple.
 * 
 */
function validateNumberFraction() {
    var simplified = $get('widget_input_simplified');

    /** isSimplified field avaialbe and checked?
     * 
     */
    var isSimplified = simplified && simplified.checked;

    var expectedValue = cm_unescape(this._jsonObj.value);
    var ans_format = cm_unescape(this._jsonObj.ans_format);
    var msg = cm_unescape(this._jsonObj.ans_msg);
    if (expectedValue.indexOf("[") > -1) {
        var splitVal = expectedValue.split("]")
        var ewhole = splitVal[0].split("[")[1];
        splitVal = splitVal[1].split("/")
        var enumero = splitVal[0]
        var eden = splitVal[1]
        expectedValue = ((ewhole * eden) + Number(enumero)) + "/" + eden;
    }
    var inputValue = $get('widget_input_field_1').value;
    var isFrac = $get('widget_input_field_2').value != "";
    var fld3 = $get('widget_input_field_3');
    var isMixed = false;
    if (fld3) isMixed = fld3.value != "";


    isFrac = isMixed ? false : isFrac
    if(!isSimplified){
     verifyIsNotNullOrEmpty(inputValue);
    }
    var num, den, whole
    if (isFrac) {
        num = inputValue;
        den = $get('widget_input_field_2').value;
        var d_isNeg = false;
        var n_isNeg = false;
        var num_t = num;
        var den_t = den;
        if (String(den).indexOf("-") > -1) {
            d_isNeg = true
            den_t = String(den).substring(1)
        }
        if (String(num).indexOf('-') > -1) {
            n_isNeg = true;
            num_t = d_isNeg ? String(num).substring(1) : num;
        } else {
            num_t = d_isNeg ? '-' + num : num;
        }
        if (d_isNeg && n_isNeg) {
            if (ans_format == 'lowest_term') {
                inputValue = num + "/" + den
            } else {
                inputValue = num_t + "/" + den_t
            }
        } else {
            inputValue = num_t + "/" + den_t
        }
        if (String(expectedValue).indexOf("/") == -1) {
            expectedValue = expectedValue + "/1"
        }
    }
    if (isMixed) {
        num = inputValue;
        den = $get('widget_input_field_2').value;
        whole = fld3.value;
        inputValue = ((whole * den) + Number(num)) + "/" + den
    }

    if (inputValue == expectedValue) {
        return true;
    } else {
        if (eval(inputValue) == eval(expectedValue)) {
            if (ans_format == 'lowest_term') {
                throw (ERROR_SIMPLIFY);
            } else {
                if (ans_format == 'exact') {
                    throw (msg);
                } else {
                    return true;
                }
            }
        } else {
            return false;
        }
    }
}
HmFlashWidgetImplNumberIntegerFraction.prototype.processWidgetValidation = validateNumberFraction;





// -! type=number_rational
function validateNumberRational() {
    var expectedValue = cm_unescape(this._jsonObj.value);
    var ans_format = cm_unescape(this._jsonObj.ans_format);
    var type = cm_unescape(this._jsonObj.stype);
    console.log("VALIDATION_RATIONAL_0:" + type + ":" + expectedValue)
    //Margin of error algorithm
    var moe = cm_unescape(this._jsonObj.moe);
    var moe_validity = cm_unescape(this._jsonObj.on_moe);
    var moe_msg = cm_unescape(this._jsonObj.on_moe_msg);
    var moe_exp = cm_unescape(this._jsonObj.moe_exp);
    var isMixed_exp=false;
    var fraction_has_one=false;
    var fraction_has_zero=false;
    var whole_has_zero=false;
    //
    if(this._jsonObj.addCheckbox){
       var __break=controlCheck(expectedValue,false,this._jsonObj);
       if(!(__break==='null')){
            return __break
       }
       expectedValue=expectedValue.split("|");
       expectedValue.pop()
       expectedValue=expectedValue.join("|");
       
    }
    if (expectedValue.indexOf("[") > -1) {
        var splitVal = expectedValue.split("]")
        var ewhole = splitVal[0].split("[")[1];
        splitVal = splitVal[1].split("/")
        var enumero = splitVal[0]
        var eden = splitVal[1]
         var esign=""
        if(Number(ewhole)<0){
        esign="-"
        ewhole=Math.abs(ewhole)
        }
        expectedValue = esign+((ewhole * eden) + Number(enumero)) + "/" + eden;
        isMixed_exp=true
    }
    expectedValue = String(expectedValue);
    var isExpression_ans0 = expectedValue=='undefined'?false:regExpMatch('[a-z\u221A\u03c0]', expectedValue)
    if (expectedValue.indexOf('\u2212') > -1) {
        //alert('is a negative, removing unicode negative sign!');
        expectedValue = _replaceAll(expectedValue, '\u2212', '-');
    }
    if(isExpression_ans0||expectedValue=='undefined'){
    }else{
    expectedValue=Math.simpleFrac(expectedValue)
    }
    console.log("VALIDATION_RATIONAL_1:" + expectedValue)
    var inputValue = $get('widget_input_field_1').value;
   // verifyIsNotNullOrEmpty(inputValue);
   
    var undefinedCtrl = $get('widget_input_simplified_1')||$get('widget_input_simplified');
    var isUndefined=undefinedCtrl?undefinedCtrl.checked:false;
    var isFrac = isUndefined?false:$get('widget_input_field_2').value != "";
    var isFrac_exp=String(expectedValue).indexOf("/")>-1;
    var fld3 = $get('widget_input_field_3');
    var isMixed = fld3 != null && fld3.value != "";
    if(!isUndefined){
var fmsg=isFrac?'You need to enter a value in each blank space.':'Enter Something!';    
     verifyIsNotNullOrEmpty(inputValue,isMixed?'For a mixed number, you need to enter a number in each blank space.':fmsg);
     }    
    var ev_isperc = String(expectedValue).indexOf("%") > -1;
    var iv_isperc = String(inputValue).indexOf("%") > -1;
    expectedValue = String(expectedValue).split("%").join("");
    inputValue = String(inputValue).split("%").join("");
    if (!isNaN(Number(inputValue))) {
        inputValue = String(Number(inputValue));
        if(isUndefined){
        inputValue='undefined';
        }
    }
    //
    console.log("VALIDATION_RATIONAL_2:" + inputValue + ":" + expectedValue)
    // alert($get('widget_input_field_2').value)
    isFrac = isMixed ? false : isFrac
    var num, den, whole
    if (isFrac) {
        num = inputValue
        den = $get('widget_input_field_2').value
        den = den == "" || den == undefined ? '1' : den;
        if (!isNaN(Number(den))) {
            den = String(Number(den));
        }
        /*var d_isNeg=false
        if(String(den).indexOf("-")>-1){
        d_isNeg=true
        den=String(den).substring(1)
        }
        if(String(num).indexOf('-')>-1){
        num=d_isNeg?String(num).substring(1):num;
        }else{
        num=d_isNeg?'-'+num:num;
        }
        inputValue=num+"/"+den;*/
        var d_isNeg = false;
        var n_isNeg = false;
        var num_t = num;
        var den_t = den;
        if (String(den).indexOf("-") > -1) {
            d_isNeg = true
            den_t = String(den).substring(1)
        }
        if (String(num).indexOf('-') > -1) {
            n_isNeg = true;
            num_t = d_isNeg ? String(num).substring(1) : num;
        } else {
            num_t = d_isNeg ? '-' + num : num;
        }
        if (d_isNeg && n_isNeg) {
            if (ans_format == 'lowest_term') {
                inputValue = num + "/" + den
            } else {
                inputValue = num_t + "/" + den_t
            }
        } else {
            inputValue = num_t + "/" + den_t
        }
        if (String(den) == '1'&&!isFrac_exp) {
            inputValue = num;            
        }
        if (String(num) == '0') {
            inputValue = num;        
        }
        if (String(den) == '0') {
            throw(ERROR_den_0);            
        }
    }
    if (isMixed) {
        num = inputValue;
        den = $get('widget_input_field_2').value;
        if(!isUndefined){    
     verifyIsNotNullOrEmpty(den,'For a mixed number, you need to enter a number in each blank space.');
     }
        whole = fld3.value;
        whole=whole?whole:0;
        if (String(num).charAt(0) == '-'||String(den).charAt(0) == '-') {
            throw(ERROR_MIX_NUMDEN_NEG);            
        }
        var sign=""
        if(Number(whole)<0){
        sign="-"
        whole=Math.abs(whole)
        }
        inputValue = sign+((whole * den) + Number(num)) + "/" + den
        if (String(den) == '1') {
            inputValue = ((whole * den) + Number(num))            
        }
        if (String(den) == '0') {
            throw(ERROR_den_0);            
        }
        if (Number(num) > Number(den)) {
            if(Number(whole)===0){
            }else{
                inputValue = 'null';
                throw("The fractional part must be less than 1.");
            }
            //return false;
        }
        if (Number(num) === Number(den)) {
            fraction_has_one=true
        }
        if (Number(num) === 0) {
            fraction_has_zero=true
        }
        if (Number(whole) === 0) {
            whole_has_zero=true
        }
        
    }
    var isExpression_input = inputValue=='undefined'?false:regExpMatch('[a-z\u221A\u03c0]', inputValue)
    var isExpression_ans = expectedValue=='undefined'?false:regExpMatch('[a-z\u221A\u03c0]', expectedValue)
    var inputValue_simp = isFrac||isMixed ? (isExpression_input ? inputValue : Math.simpleFrac(inputValue)) : inputValue;
    var inputValue_mix = isMixed ? true : false;
    var has_psqr = false;
    var boo_1 = inputValue == expectedValue;
    var boo_2=true;
    if (ans_format == 'reduced_radical') {
        if(!boo_1&&(den&&den>1)){
        if(String(num).indexOf("\u221A")>-1){
        var rnum=String(num).split("\u221A")
        var rn=den==='1'?rnum[0]:(rnum[0]+"/"+den);
        var rs=String(Math.simpleFrac(rn))
        if(rs==rn){
        boo_1 = eval(rs)+"\u221A"+rnum[1] == expectedValue;        
        }else{
        boo_2=false
        }
        }
        }

    }
    if (isFrac||isMixed) {
    var numC=isNaN(num)?num:parseFloat(num);
    var denC=isNaN(den)?num:parseFloat(den);
    var doNotSimplify=(ans_format=='lowest_term'||ans_format=='lowest_mixed')
        inputValue_mix = isExpression_input ? false : numC > denC&&Number(denC)!==1;
        try{
        inputValue=isFrac_exp||isMixed_exp||doNotSimplify?inputValue:String(eval(inputValue))
        }catch(e){}
    }
    if (isFrac_exp||isMixed_exp) {
        
        try{
        if(!isExpression_ans){
        expectedValue=isFrac||isMixed?expectedValue:String(eval(expectedValue))
        }
        }catch(e){}
    }
    // alert(inputValue+":"+num+":"+den)\
    //
    // Regular expressions do not support unicode chars
    // unicode:
    // pi = \u03a0
    // sroot = \u221A

    
    console.log("VALIDATION_RATIONAL:" + inputValue + ":" + expectedValue + ":" + boo_1 + ":" + type)
    var isExpression_input = inputValue=='undefined'?false:regExpMatch('[a-z\u221A\u03c0]', inputValue)
    var isExpression_ans = expectedValue=='undefined'?false:regExpMatch('[a-z\u221A\u03c0]', expectedValue)


    //try {
    if (isExpression_input) {
        var x = 2
        var l = String(inputValue).split('\u221A')
        try {
            if(isFrac){
                if(String(inputValue).indexOf("/")>-1){
                    inputValue=String(inputValue).split("/");
                    inputValue="("+inputValue[0]+")/("+inputValue[1]+")";
                }
            }
            inputValue = inputValue.replace(/pi/g, PI_SYM)
            inputValue = inputValue.replace(/sqrt/g, SQUARE_ROOT_SYM)
            inputValue = applyUniqueVarXForEval(inputValue)
            inputValue = toMathFormat(inputValue)
            console.log("MATH_FORMAT:" + inputValue)
            inputValue = eval(inputValue);
        } catch (e) {
            throw (ERROR_INPUT);
            return
        }
    } else {
        //inputValue=eval(inputValue);

    }
    if (isExpression_ans) {
        var x = 2
        expectedValue = expectedValue.replace(/pi/g, PI_SYM)
        expectedValue = expectedValue.replace(/sqrt/g, SQUARE_ROOT_SYM)
        expectedValue = applyUniqueVarXForEval(expectedValue)
        expectedValue = toMathFormat(expectedValue)
        // alert(expectedValue)
        console.log("MATH_FORMAT:" + expectedValue)
        expectedValue = eval(expectedValue);
    } else {
        //expectedValue=eval(expectedValue)
    }
    // alert(expectedValue+":"+inputValue)
    /*if(inputValue==expectedValue){
            return true;
        }else{        
            return false;        
        }*/


    /** bug in IE:
            
            if expectedValue is a negative number, then eval will
            fail because it thinks it is a string .. so the parse
            will fail.  We must force into a Number in this case.
 
            TODO:  why does expectedValue contain unicode?
        */
    // alert('expected value: ' + expectedValue + ', ' + typeof(expectedValue) + ', ' + expectedValue.length + ', ' + expectedValue.charAt(0) + ' ' + expectedValue.indexOf('\u2212'));
    inputValue = String(inputValue);
    expectedValue = String(expectedValue);
    if (expectedValue.indexOf('\u2212') > -1) {
        //alert('is a negative, removing unicode negative sign!');
        expectedValue = _replaceAll(expectedValue, '\u2212', '-');
        expectedValue = Number(expectedValue);
    }


    console.log(inputValue + ":(" + inputValue_simp + "): " + expectedValue + ":" + ans_format + ":" + eval(inputValue) + ":" + eval(expectedValue) + ":" + (eval(inputValue) == eval(expectedValue)))
if(!isNaN(inputValue)){
inputValue=Math.fixTo(inputValue,10)
}
if(!isNaN(expectedValue)){
expectedValue=Math.fixTo(expectedValue,10)
}

    if (inputValue == expectedValue) {

        if ((ans_format == 'mixed' || ans_format == 'lowest_mixed') && !isMixed && inputValue_mix) {
            throw (ERROR_MIXED);
        } else if (ans_format == 'reduced_radical') {
            if (boo_1) {
                return true;
            } else {               
            if(!boo_2){
            throw (ERROR_SIMPLIFY);
            }else{
                throw (ERROR_REDUCE_RADICAL);
                }
            }
        } else {
            if (iv_isperc) {
                if (type && (String(type) == '4' || String(type) == '5')) {
                    return true;
                } else if (ev_isperc) {
                    return true;
                }
                return false;
            }
            if(fraction_has_one||fraction_has_zero){
            throw("Write the answer in simplest form!")
            }else if(whole_has_zero){
            throw (ERROR_SIMPLIFY);
            }
            return true;
        }
    } else if (inputValue_simp == expectedValue) {




        if ((ans_format == 'lowest_term' || ans_format == 'lowest_mixed')) {
            //console.log(ERROR_SIMPLE_FRACTION);
            if(fraction_has_one||fraction_has_zero){
            throw("Write the answer in simplest form!")
            }
            throw (ERROR_SIMPLIFY);
        } else {
            return true;
        }
    } else {
    /*
if(isNaN(inputValue)&&String(inputValue).indexOf("/")>-1){
var __inputValue=Math.fixTo(eval(inputValue),10)
}
if(isNaN(expectedValue)&&String(expectedValue).indexOf("/")>-1){
var __expectedValue=Math.fixTo(expectedValue,10)
}*/

        if (Math.fixTo(eval(inputValue),10) == Math.fixTo(expectedValue,10)) {
            if (ans_format == 'lowest_term') {
                //console.log(ERROR_SIMPLE_FRACTION);
                //throw(ERROR_SIMPLIFY); 
                return true;
            } else if (ans_format == 'mixed' && !isMixed) {
                throw (ERROR_MIXED);
            } else {
                return true;
            }
        }else if (Math.fixTo(eval(expectedValue),10) == Math.fixTo(inputValue,10)) {
            if (ans_format == 'lowest_term') {
                //console.log(ERROR_SIMPLE_FRACTION);
                //throw(ERROR_SIMPLIFY); 
                return true;
            } else if (ans_format == 'mixed' && !isMixed) {
                throw (ERROR_MIXED);
            } else {
                return true;
            }
        } else {
            var iv = eval(inputValue);
            var ev = eval(expectedValue);
            if (moe) {
               // dv = (ev - iv);
               dv = (iv - ev);
               dv=Math.fixTo(dv,8);
                var range = String(moe).split("|");
                var lowR = range.length == 1 ? 0 : Number(range[0]);
                var hiR = range.length == 1 ? Number(range[0]) : Number(range[1])
                console.log("ERROR_MARGIN: " + iv + ":" + ev + ":" + dv + ":" + moe)
                if (moe_exp) {
                    var exp = moe_exp.split("|");
                    var expV = exp[0];
                    var expM = exp[1];
                    var ev1
                    if (expV.indexOf("R") > -1) {
                        expV = parseInt(expV.substring(1));
                        var p = Math.round(Math.log10(expV));
                        ev1 = Math.fixTo(ev, p);
                    } else {
                        ev1 = expV
                    }
                    if (iv == ev1) {
                        if (expM == 'correct') {
                            return true;
                        } else {
                            throw (expM)
                        }
                    }
                }
                if (dv >= lowR && dv <= hiR) {
                    if (moe_validity == 'correct') {
                        return true;
                    } else {
                        throw (moe_msg)
                    }
                }
            }
            return false;
        }
    }
    //}   catch(ex) {
    // report error?
    // alert(ex);
    //return false;
    //}
}
HmFlashWidgetImplRational.prototype.processWidgetValidation = validateNumberRational;








// -! type=number_mixed_fraction
function validateNumberMixedFraction() {
    var expectedValue = cm_unescape(this._jsonObj.value);
    //console.log("DEBUG_MIXED_FRACTION_VALIDATION: expected value 1 "+expectedValue)
    var ans_format = cm_unescape(this._jsonObj.ans_format);
    if (expectedValue.indexOf("[") > -1) {
        var splitVal = expectedValue.split("]")
        var ewhole = splitVal[0].split("[")[1];
        splitVal = splitVal[1].split("/")
        var enumero = splitVal[0]
        var eden = splitVal[1]
         var esign=""
        if(Number(ewhole)<0){
        esign="-"
        ewhole=Math.abs(ewhole)
        }
        expectedValue = esign+((ewhole * eden) + Number(enumero)) + "/" + eden;
    }
    //console.log("DEBUG_MIXED_FRACTION_VALIDATION: expected value 2 "+expectedValue)
    var inputValue = $get('widget_input_field_1').value;
    var isFrac = $get('widget_input_field_2') != undefined;
    var isMixed = $get('widget_input_field_3') != undefined;
    if(true){
     verifyIsNotNullOrEmpty(inputValue,'For a mixed number, you need to enter a number in each blank space.');
      verifyIsNotNullOrEmpty($get('widget_input_field_2').value,'For a mixed number, you need to enter a number in each blank space.');
      verifyIsNotNullOrEmpty($get('widget_input_field_3').value,'For a mixed number, you need to enter a number in each blank space.');
    }
    var num, den, whole
    //console.log("DEBUG_MIXED_FRACTION_VALIDATION: isMixed "+isMixed+":"+isFrac)
    if (isFrac) {
        num = inputValue
        den = $get('widget_input_field_2').value
        inputValue = num + "/" + den
    }
    if (isMixed) {
        /** todo:
         *   If a mixed fraction, then inputValue 
         *   here would always be a string, ie. 1/5 ...
         *   because it is also a isFrac.
         */
        whole = $get('widget_input_field_1').value;
        num = $get('widget_input_field_2').value;
        den = $get('widget_input_field_3').value;
        if (String(num).charAt(0) == '-'||String(den).charAt(0) == '-') {
            throw(ERROR_MIX_NUMDEN_NEG);            
        }
         var sign=""
        if(Number(whole)<0){
        sign="-"
        whole=Math.abs(whole)
        }
        inputValue = sign+((Number(whole) * Number(den)) + Number(num)) + "/" + den
        if (Number(num) > Number(den)) {
            inputValue = 'null';
        }
        //console.log("DEBUG_MIXED_FRACTION_VALIDATION: input value "+whole+":"+num+":"+den+":"+inputValue)
    }

    if (inputValue == expectedValue||inputValue == Math.simpleFrac(expectedValue)) {
        if (ans_format == 'mixed' && !isMixed) {
            throw (ERROR_MIXED);
        } else {
            return true;
        }
    } else {
        if(Math.simpleFrac(inputValue)==expectedValue){
        throw (ERROR_SIMPLIFY);
        }else{
        return false;
        }
    }
}
HmFlashWidgetImplMixedFraction.prototype.processWidgetValidation = validateNumberMixedFraction;








// -! type=mChoice
function validateMChoice() {
var parent=$get('hm_widget_form')
    var expectedValue = cm_unescape(this._jsonObj.value).split("|");
    //expectedValue = eval(expectedValue[expectedValue.length - 1])-1;
    expectedValue = (expectedValue[expectedValue.length - 1]).split(",");
    var radioButtons = $('input',parent);
    //var inputValue = null;
    var inputValue = [];
    for (var i = 0, l = radioButtons.length; i < l; i++) {
        if (radioButtons.get(i).checked) {
            //inputValue = i;
            inputValue.push(i+1);
            //break;
        }
    }    
    if(true){
    // verifyIsNotNullOrEmpty(inputValue);
    }
    if (inputValue.join(",") == expectedValue.join(",")) {
        return true;
    } else {
        return false;
    }
}
HmFlashWidgetImplMulti.prototype.processWidgetValidation = validateMChoice;









// -! type=coordinates
/*function validateCoordinates() {
    widget_answer = cm_unescape(this._jsonObj.value);
    var expectedValue = widget_answer.indexOf(",") > -1 ? widget_answer.split(",") : widget_answer.split("|");

    var inputValue = [$get('widget_input_field_1').value, $get('widget_input_field_2').value]
    inputValue[0] = eval(inputValue[0]);
    inputValue[1] = eval(inputValue[1]);
    expectedValue[0] = eval(expectedValue[0]);
    expectedValue[1] = eval(expectedValue[1]);
    console.log(inputValue[0] + ":" + inputValue[1] + " || " + expectedValue[0] + ":" + expectedValue[1]);
    if (inputValue[0] == expectedValue[0] && inputValue[1] == expectedValue[1]) {
        return true;
    } else {
        return false;
    }
}
function validateCoordinates() {
    widget_answer = cm_unescape(this._jsonObj.value);
    var expectedValue = widget_answer.indexOf(",") > -1 ? widget_answer.split(",") : widget_answer.split("|");

    //var inputValue = [$get('widget_input_field_1').value, $get('widget_input_field_2').value]
    var boo1=validateNumberRational_mf(expectedValue[0], 1, this._jsonObj);
    var boo2=validateNumberRational_mf(expectedValue[1], 2, this._jsonObj);
    var boo=boo1&&boo2
    console.log(boo1 + ":" + boo2 + " || " + expectedValue[0] + ":" + expectedValue[1]);
    if (boo) {
        return true;
    } else {
        return false;
    }
}*/
function validateCoordinates() {
var parent=$get('hm_widget_form')
    widget_answer = cm_unescape(this._jsonObj.value);
    var expectedValue = widget_answer.indexOf("|") > -1 ? widget_answer.split("|") : widget_answer.split(",");
var checkControls=false;
var inputValue=null;
    var lastV=expectedValue[expectedValue.length-1]
    var boo
    var skipcheckForNull=false;
    if(lastV.indexOf("[")==0){
    checkControls=true;
    lastV=eval(lastV)
    if(lastV.length){
    var index=lastV[lastV.length-1]
    if(String(index)=='-1'){
    checkControls=false;
    }else{
    lastV.pop()
    expectedValue=lastV[index]
    }
    }
    }
    var controls=$('.simplified_wrapper input[type="checkbox"]',parent);
    var cl=controls.length
    
    for (var j = 1; j <= cl; j++) {
        var comb = 'widget_input_simplified_' + j;
        if($get(comb).checked){
        inputValue=$($get(comb).parentNode).text();
        break
        }
        }
    var f1=$get('widget_input_field_norm_' + 1).value
    var f2=$get('widget_input_field_norm_' + 2).value
    if(inputValue==null){
    verifyIsNotNullOrEmpty(f1)
    verifyIsNotNullOrEmpty(f2)
    }
    if(checkControls){
    
        boo=inputValue==expectedValue
    }else if(inputValue!=null){
    boo=false
    }else{
    //var inputValue = [$get('widget_input_field_1').value, $get('widget_input_field_2').value]
    var boo1=validateNumberRational_mf(expectedValue[0], 1, this._jsonObj);
    var boo2=validateNumberRational_mf(expectedValue[1], 2, this._jsonObj);
    boo=boo1&&boo2
    console.log(boo1 + ":" + boo2 + " || " + expectedValue[0] + ":" + expectedValue[1]);
    }
    
    if (boo) {
        return true;
    } else {
        return false;
    }
}
HmFlashWidgetImplCoord.prototype.processWidgetValidation = validateCoordinates;
// -! type=string&letter
//  ignore case 
function validateString() {
    var expectedValue = cm_unescape(this._jsonObj.value);
    var inputValue = $get('widget_input_field_1').value;
    expectedValue=expectedValue.split(" ").join("");
    inputValue=inputValue.split(" ").join("");
    if(true){
     verifyIsNotNullOrEmpty(inputValue);
    }
    if (inputValue.toLowerCase() == expectedValue.toLowerCase()) {
        return true;
    } else {
        return false;
    }
}
HmFlashWidgetImplLetter.prototype.processWidgetValidation = validateString;


// -! type=inequality
function validateIneqExpression(str){
var _str=String(str).replace(/&lt;/g,'<').replace(/&le;/g,'\u2264').replace(/&gt;/g,'>').replace(/&ge;/g,'\u2265').replace(/&ne;/g,'\u2260');
_str=String(_str).replace(/<=/g,'\u2264').replace(/>=/g,'\u2265');

if(_str.indexOf('and')>-1){
_str=_str.split('and')
}else if(_str.indexOf('or')>-1){
_str=_str.split('or')
}else{
_str=[_str];
}
if(_str.length>2){
return false;
}
var p1=/(\-?)[a-zA-Z0-9]+[\=\>\<\u2264\u2265\u2260](\-?)[a-zA-Z0-9]+/g
if(_str.length===2){
var boo1=String(_str[0]).match(p1);
var boo2=String(_str[1]).match(p1);
return boo1&&boo2
}else{
var p2=/(\-?)[a-zA-Z0-9]+[\=\>\<\u2264\u2265\u2260](\-?)[a-zA-Z0-9]+[\=\>\<\u2264\u2265\u2260](\-?)[a-zA-Z0-9]+/g
var isand=String(_str[0]).match(/[\=\>\<\u2264\u2265\u2260]/g).length===2
if(isand){
return String(_str[0]).match(p2);
}
return String(_str[0]).match(p1)||String(_str[0]).match(p2);
}
return false;
}
function checkIneqVars(i,e){
var p=/([a-z])(?!.*\1)/g
i=String(i).replace(/&lt;/g,'<').replace(/&le;/g,'\u2264').replace(/&gt;/g,'>').replace(/&ge;/g,'\u2265').replace(/&ne;/g,'\u2260');
i=String(i).replace(/<=/g,'\u2264').replace(/>=/g,'\u2265');
e=String(e).replace(/&lt;/g,'<').replace(/&le;/g,'\u2264').replace(/&gt;/g,'>').replace(/&ge;/g,'\u2265');
e=String(e).replace(/<=/g,'\u2264').replace(/>=/g,'\u2265');
var iarr=String(i).match(p);
iarr=iarr&&iarr.length?iarr.sort().join("|"):""
var earr=String(e).match(p);
earr=earr&&earr.length?earr.sort().join("|"):""

return iarr===earr
}
function checkForCompoundAndInEq(str){
    /*var p=/[\>\<\u2264\u2265]/g;
    var boo=String(str).replace(/\<\=/g,'\u2264').replace(/\>\=/g,'\u2265').split(p).length===3;
    return boo||String(str).toLowerCase().split('and').length===2;*/
    var p=/[\>\<\u2264\u2265\u2260]/g;
    var _str=String(str).replace(/&lt;/g,'<').replace(/&le;/g,'\u2264').replace(/&gt;/g,'>').replace(/&ge;/g,'\u2265').replace(/&ne;/g,'\u2260')
    var boo=String(_str).replace(/\<\=/g,'\u2264').replace(/\>\=/g,'\u2265').split(p).length===3;
    return boo||String(_str).toLowerCase().split('and').length===2;
}
function checkForCompoundOrInEq(str){
    var p='or';
    var boo=String(str).toLowerCase().split(p).length===2;
    return boo;
}
function checkForIntervalNotation(str){
var union=/\u222a/g;
var isCOR=str.match(union);
var _str=[str];
if(isCOR){
_str=_str[0].split(union);
}
var boo=true;
boo=_str[0].match(/^(\[|\().*?(\]|\))$/g)
if(_str[1]){
boo=boo&&_str[0].match(/^(\[|\().*?(\]|\))$/g)
}
return boo;
}
function checkForOverlap(e1,e2){
var p=/[\>\<\u2264\u2265]/g;
var _pi1=String(e1).split(p);
var _si1=String(e1).match(p);
var _pi2=String(e2).split(p);
var _si2=String(e2).match(p);
_si1=_si1.join("|").replace(/[\u2264]/g,'<=').replace(/[\u2265]/g,'>=').split("|");
_si2=_si2.join("|").replace(/[\u2264]/g,'<=').replace(/[\u2265]/g,'>=').split("|");
var tn
if(_pi1.length===2){
if(!isNaN(_pi1[0])){
_pi1.reverse();
_si1[0]=revSymb[_si1[0]]
}
tn=_pi1[1]*1;
tn=_si1[0].indexOf('=')>-1?tn:(_si1[0]=='<'?tn-1:tn+1);
}
if(_pi1.length==3){
tn=[_pi1[0]*1,_pi1[2]*1];
//tn=tn.sort(function(a, b){return a-b})
tn=(tn[0]+tn[1])/2;
}
var boo=false;
if(_pi2.length===2){
if(!isNaN(_pi2[0])){
_pi2.reverse();
_si2[0]=revSymb[_si2[0]]
}
var ev=tn+_si2[0]+_pi2[1]
boo=eval(ev);
}
if(_pi2.length===3){
var ev1=_pi2[0]+_si2[0]+tn
var ev2=tn+_si2[1]+_pi2[2]
boo=eval(ev1)&&eval(ev2);
}
return boo;
}
function convertINtoInEq(str){
    var union=/\u222a/g;
    var isCOR=str.match(union);
    var _str=[str];
    if(isCOR){
        _str=str.split(union);
    }
    var estr2="";
    var estr1="";
    //var s1=_str[0];
    function notation(s1){
    var cs=s1.charAt(0);
    var ce=s1.charAt(s1.length-1);
    s1=s1.substring(1,s1.length-1).split(",");
    var estr;
    if(s1[0].match(/-\u221e/g)){
        if(cs==='['){
            throw("\u221e cannot be used with a closed interval bracket.");
        }
        estr='x'+(ce===']'?'\u2264':'<')+s1[1];
    }else if(s1[0]==='\u221e'){
        throw("Check your input!");
    }else if(s1[1]==='\u221e'){
        if(cs===']'){
                throw("\u221e cannot be used with a closed interval bracket.");
        }
        estr='x'+(cs==='['?'\u2265':'>')+s1[0];
    }else if(s1[1]==='-\u221e'){
        throw("Check your input!");
    }else{
        estr=s1[0]+(cs==='['?'\u2264':'<')+'x'+(ce===']'?'\u2264':'<')+s1[1];
    }
    return estr;
    }
    estr1=notation(_str[0]);
    estr2=_str[1]?('or'+notation(_str[1])):"";
    return estr1+estr2
}
function validateCompundInEq(istr,estr,in_nt){
istr=String(istr).replace(/&lt;/g,'<').replace(/&le;/g,'\u2264').replace(/&gt;/g,'>').replace(/&ge;/g,'\u2265').replace(/&ne;/g,'\u2260').replace(/\<\=/g,'\u2264').replace(/\>\=/g,'\u2265');
estr=String(estr).replace(/&lt;/g,'<').replace(/&le;/g,'\u2264').replace(/&gt;/g,'>').replace(/&ge;/g,'\u2265').replace(/&ne;/g,'\u2260');
    var isCompOr_i=checkForCompoundOrInEq(istr);
    var isCompAnd_i=isCompOr_i?false:checkForCompoundAndInEq(istr);
    var isCompOr_e=checkForCompoundOrInEq(estr);
    var isCompAnd_e=isCompOr_e?false:checkForCompoundAndInEq(estr);
    var boo=true;
    if(isCompOr_e){
        if(isCompOr_i){
            var ieq=String(istr).toLowerCase().split('or');
            var ieq1=ieq[0];
            var ieq2=ieq[1];
            
            var eeq=String(estr).toLowerCase().split('or');
            var eeq1=eeq[0];
            var eeq2=eeq[1];
            
            var eeq1_isc=checkForCompoundAndInEq(eeq1);
            var eeq2_isc=checkForCompoundAndInEq(eeq2);
            if(!in_nt){
                var varseq=checkIneqVars(ieq1+ieq2,eeq1+eeq2)
                if(!varseq){
                    throw("Check your variable")
                }
            }
            //
            if(checkForOverlap(ieq1,ieq2)||checkForOverlap(ieq2,ieq1)){
             throw("Some of your intervals overlap. Simplify.")
            }
            //
            var val1=eeq1_isc?validateCompundInEq(ieq1,eeq1):checkInEq(ieq1,eeq1);
            var val2=eeq2_isc?validateCompundInEq(ieq2,eeq2):checkInEq(ieq2,eeq2);
            var val3=eeq2_isc?validateCompundInEq(ieq1,eeq2):checkInEq(ieq1,eeq2);
            var val4=eeq1_isc?validateCompundInEq(ieq2,eeq1):checkInEq(ieq2,eeq1);
            boo=(val1&&val2)||(val3&&val4);
        }else{
            boo=false;
        }
    }else if(isCompAnd_e){
        if(isCompAnd_i){
        var p=/[\>\<\u2264\u2265\u2260]/g;
            if(istr.match(/and|AND/g)){
                var ieq=String(istr).toLowerCase().split('and');
                var ieq1=ieq[0];
                var ieq2=ieq[1];
            }else{
                
                var _pi=String(istr).split(p);
                var _si=String(istr).match(p);
                _si=_si.join("|").replace(/[\u2264]/g,'<=').replace(/[\u2265]/g,'>=').split("|");
                var ieq1=_pi[0]+_si[0]+_pi[1];
                var ieq2=_pi[1]+_si[1]+_pi[2];
            }
            var _pe=String(estr).split(p);
            var _se=String(estr).match(p);
            _se=_se.join("|").replace(/[\u2264]/g,'<=').replace(/[\u2265]/g,'>=').split("|");
            var eeq1=_pe[0]+_se[0]+_pe[1];
            var eeq2=_pe[1]+_se[1]+_pe[2];
            //
             if(!in_nt){
                var varseq=checkIneqVars(ieq1+ieq2,eeq1+eeq2)
                if(!varseq){
                    throw("Check your variable")
                }
            }
            //
            var val1=checkInEq(ieq1,eeq1);
            var val2=checkInEq(ieq2,eeq2);
            var val3=checkInEq(ieq1,eeq2);
            var val4=checkInEq(ieq2,eeq1);
            boo=(val1&&val2)||(val3&&val4);
        }else{
            boo=false;
        }
    }else{
        boo= false
    }
    return {isComp:isCompOr_e||isCompAnd_e,isval:boo};
}
function checkInEq(inputValue,expectedValue){
var inIEq = splitAtInEq(inputValue);
    var outIEq = splitAtInEq(expectedValue);
    var olex = applyUniqueVarX(outIEq.lexp);
    var ilex = applyUniqueVarX(inIEq.lexp);
    var orex = applyUniqueVarX(outIEq.rexp);
    var irex = applyUniqueVarX(inIEq.rexp);
    if (outIEq.syeq == inIEq.syeq) {
    if(outIEq.syeq=='!='){
    return ((olex==ilex)&&(orex==irex))||((olex==irex)&&(orex==ilex))
    }
        if (olex == ilex&&orex == irex) {            
                return true;
            
        } else {
            //
            var x = 2;
            for(var i=0;i<26;i++){eval("var "+String.fromCharCode(97+i)+"="+(i+1))}
            try{
            var ole = eval(olex);
            var ile = eval(ilex);
            var ore = eval(orex);
            var ire = eval(irex);
            }catch(e){return false}
            if (ole == ile) {
                if (ore == ire) {
                    return true;
                }
            }
        }
    } else if (revSymb[outIEq.syeq] == inIEq.syeq) {
        if (orex == ilex&&olex == irex) {            
             return true;            
        } else {
            var x = 2;
            for(var i=0;i<26;i++){eval("var "+String.fromCharCode(97+i)+"="+(i+1))}
            try{
            var ole = eval(olex);
            var ile = eval(ilex);
            var ore = eval(orex);
            var ire = eval(irex);
            }catch(e){return false}
            if (ore == ile) {
                if (ole == ire) {
                    return true;
                }
            }
        }
    }
    return false;
}
function checkForUniSymbol(_i,_e){
var i,e;
i=String(_i).replace(/&lt;/g,'<').replace(/&le;/g,'\u2264').replace(/&gt;/g,'>').replace(/&ge;/g,'\u2265').replace(/&ne;/g,'\u2260');
i=String(i).replace(/<=/g,'\u2264').replace(/>=/g,'\u2265');
e=String(_e).replace(/&lt;/g,'<').replace(/&le;/g,'\u2264').replace(/&gt;/g,'>').replace(/&ge;/g,'\u2265');
e=String(e).replace(/<=/g,'\u2264').replace(/>=/g,'\u2265');
if(e.length===1){
return {uni:true,val:i===e}
}
return {uni:false,val:null}
}
function validateInequality() {
    var expectedValue = cm_unescape(this._jsonObj.value);
    var inputValue = $get('widget_input_field_1').value;
    if(true){
     verifyIsNotNullOrEmpty(inputValue);
    }
    inputValue=inputValue.split(" ").join("").toLowerCase();
    expectedValue=expectedValue.split(" ").join("").toLowerCase();
    var uniSymb=checkForUniSymbol(inputValue,expectedValue);
    if(uniSymb.uni){
        return uniSymb.val
    }
    var in_nt=false;
    if(checkForIntervalNotation(inputValue)){
        inputValue=convertINtoInEq(inputValue);
        in_nt=true;
    }
    if(checkForIntervalNotation(expectedValue)){
        expectedValue=convertINtoInEq(expectedValue);
    }
    inputValue=inputValue.split(" ").join("").toLowerCase();
    
    var strval=validateIneqExpression(inputValue);
    if(!strval){
        throw("We didn't understand your input. Try again.");
    }
    expectedValue=expectedValue.split(" ").join("").toLowerCase();
    
    
    /*
    var inIEq = splitAtInEq(inputValue);
    var outIEq = splitAtInEq(expectedValue);
    var olex = applyUniqueVarX(outIEq.lexp);
    var ilex = applyUniqueVarX(inIEq.lexp);
    var orex = applyUniqueVarX(outIEq.rexp);
    var irex = applyUniqueVarX(inIEq.rexp);
    if (outIEq.syeq == inIEq.syeq) {
        if (olex == ilex) {
            if (orex == irex) {
                return true;
            }
        } else {
            //
            var x = 2;
            var ole = eval(olex);
            var ile = eval(ilex);
            var ore = eval(orex);
            var ire = eval(irex);
            if (ole == ile) {
                if (ore == ire) {
                    return true;
                }
            }
        }
    } else if (revSymb[outIEq.syeq] == inIEq.syeq) {
        if (orex == ilex) {
            if (olex == irex) {
                return true;
            }
        } else {
            var x = 2;
            var ole = eval(olex);
            var ile = eval(ilex);
            var ore = eval(orex);
            var ire = eval(irex);
            if (ore == ile) {
                if (ole == ire) {
                    return true;
                }
            }
        }
    }
    return false;
    */
    if(checkForIntervalNotation(inputValue)){
        inputValue=convertINtoInEq(inputValue);
    }
    if(checkForIntervalNotation(expectedValue)){
        expectedValue=convertINtoInEq(expectedValue);
    }
    var cval=validateCompundInEq(inputValue,expectedValue,in_nt)
    if(cval.isComp){
        return cval.isval;
    }
    if(!in_nt){
    var varseq=checkIneqVars(inputValue,expectedValue)
    if(!varseq){
        throw("Check your variable")
    }
    }
    return checkInEq(inputValue,expectedValue);
}
HmFlashWidgetImplInequality.prototype.processWidgetValidation = validateInequality;






// -! type=inequality_exact
function validateInequalityExact() {
    var expectedValue = cm_unescape(this._jsonObj.value);
    var inputValue = $get('widget_input_field_1').value;
    if(true){
     verifyIsNotNullOrEmpty(inputValue);
    }
    inputValue = inptValue.replace(/[*()]/g, "");
    if (inputValue == expectedValue) {
        return true;
    } else {
        return false;
    }
}
HmFlashWidgetImplInequalityExact.prototype.processWidgetValidation = validateInequalityExact;



// -! type=power
function validatePower() {
    var expectedValue = cm_unescape(this._jsonObj.value).split("^");
    var stype=this._jsonObj.stype?this._jsonObj.stype:null;
    var inputValue
    if(stype==null){
        inputValue = [$get('widget_input_field_1').value, $get('widget_input_field_2').value];
        if(true){
     verifyIsNotNullOrEmpty(inputValue[0]);
    }
    }else{
        if(stype=='base'){
            inputValue = [$get('widget_input_field_1').value, $get('widget_input_field_2').innerHTML];    
            if(true){
     verifyIsNotNullOrEmpty(inputValue[0]);
    }
        }else{
        inputValue = [$get('widget_input_field_1').innerHTML, $get('widget_input_field_2').value];
        }
    }
    var x = 2;
    console.log('power ' + inputValue[0] + ":" + inputValue[1])
    var v1 = applyUniqueVarX(expectedValue[0]);
    var v2 = applyUniqueVarX(inputValue[0]);
    var v3 = applyUniqueVarX(expectedValue[1]);
    var v4 = applyUniqueVarX(inputValue[1]);
    //console.log(v2+":"+v4)
    var v5 = eval(v1);
    var v6 = eval(v2);
    var v7 = eval(v3);
    var v8 = eval(v4);
    //console.log(v6+":"+v8)
    var inp_eval = Math.pow(v6, v8);
    var exp_eval = Math.pow(v5, v7)
    if (v5 == v6 && v7 == v8) {
        return true;
    } else {
        if (inp_eval == exp_eval) {
            return true
        }
        return false;
    }
}
HmFlashWidgetImplPowerForm.prototype.processWidgetValidation = validatePower;




// -! type=scientific_notation
function validateScientificNotation() {
    var fld1 = $get('widget_input_field_1');
    var fld2 = $get('widget_input_field_2');
    widget_answer = cm_unescape(this._jsonObj.value);

    var expectedValue = widget_answer.indexOf("x10^") ? widget_answer.split("x10^") : widget_answer.split("|");
    var inputValue = [$get('widget_input_field_1').value, $get('widget_input_field_2').value];
    if(true){
     verifyIsNotNullOrEmpty(inputValue[0],"Enter a number in both boxes!");
     verifyIsNotNullOrEmpty(inputValue[1],"Enter a number in both boxes!");
    }
    if (inputValue[0] < 1 || inputValue[0] >= 10) {
        throw (ERROR_SCI_NOT);
    } else {
        if (inputValue[0] == expectedValue[0] && inputValue[1] == expectedValue[1]) {
            return true;
        } else {
            return false;
        }
    }
}
HmFlashWidgetImplSciNotation.prototype.processWidgetValidation = validateScientificNotation;






// -! type=point_slope
/*
function validtePointSlope() {
    var expectedValue = cm_unescape(this._jsonObj.value);
    var yval = $get('widget_input_field_1').value
    var slope = $get('widget_input_field_2').value
    var xval = $get('widget_input_field_3').value
    var inputValue = yval + "|" + slope + "|" + xval;
    var slope1 = (slope == "" || yval == undefined) ? "1" : (slope == "-" ? "-1" : slope);
    inputValue = yval + "|" + slope1 + "|" + xval;
    if (String(slope) == '0') {
        expectedValue = expectedValue.split("|")[0];
        inputValue = yval;
    }
    if (inputValue == expectedValue) {
        return true;
    } else {
        return false;
    }
}*/
function validatePointSlope() {
console.log("VALIDATE_START")
    var expectedValues = cm_unescape(this._jsonObj.value).split(",");
    var combo_for_pm=true;//cm_unescape(this._jsonObj.combo_for_pm);
    //combo_for_pm=combo_for_pm=='true'?true:false;
    var show_xcoeff=false;//cm_unescape(this._jsonObj.show_xcoeff);
    //show_xcoeff=show_xcoeff=='true'?true:false;
    var validate_useEqn=this._jsonObj.validate_useEqn;
    validate_useEqn=validate_useEqn=='true'||validate_useEqn===true?true:false;
    var a;
    var h_field_n = $get('widget_input_field_norm_2');
    var h_field_d = $get('widget_input_field_den_2');
    var k_field_n = $get('widget_input_field_norm_3');
    var k_field_d = $get('widget_input_field_den_3');
    var ishFrac = h_field_d != undefined && h_field_d.value != "";
    var iskFrac = k_field_d != undefined && k_field_d.value != "";
    console.log("VALIDATE_START step 0")
    if(true){
    var a_field_n = $get('widget_input_field_norm_1');
    var a_field_d = $get('widget_input_field_den_1');
    var isaFrac = a_field_d != undefined && a_field_d.value != "";
    var an = a_field_n.value;
    var ad = isaFrac ? a_field_d.value : 1;
    ad = ad === undefined || ad.length < 1 ? 1 : ad;
    if (an === undefined || an.length < 1) {
        an = String(1);
    }
    an=an=="-"?String(-1):an;
    a = Math.fixTo(an / ad, 12);
    }
    console.log("VALIDATE_START step 1")
    var n = (h_field_n.value);
    if (n === undefined || n.length < 1) {
    n=String(0)
    }
    
    n = Number(n);
    var d = 1;
    if (ishFrac) {
        d = (h_field_d.value);
        if (d === undefined || d.length < 1) {
            d = 1;
        }
        d = Number(d);
    }
    console.log("VALIDATE_START step 2")
    var h = Math.fixTo(n / d, 12);
    var bn = k_field_n.value;
    var bd = iskFrac ? k_field_d.value : 1;
    bd = bd === undefined || bd.length < 1 ? 1 : bd;
    if (bn === undefined || bn.length < 1) {
        bn=String(0);
    }
    var k = Math.fixTo(bn / bd, 12);
    var ea=Math.fixTo(eval(expectedValues[0]),12);
    var eh=eval(expectedValues[1]);
    var ek=eval(expectedValues[2]);
    console.log("VALIDATE_START step 3")
    if(combo_for_pm){
        var combo_h = $get("icombo_1");
        var combo_k = $get("icombo_2");
        var combo_h_val = combo_h.options[combo_h.selectedIndex].value;
        var combo_k_val = combo_k.options[combo_k.selectedIndex].value;
        var s1=combo_h_val;
        var s2=combo_k_val;
        if(s1=='+'){
        h=h<0?Math.abs(h):-h;
        }
        if(s2=='+'){
        k=k<0?Math.abs(k):-k;
        }
        if(!show_xcoeff){
         var combo_a = $get("icombo_0");
         var combo_a_val = combo_a.options[combo_a.selectedIndex].value;
         var s0=combo_a_val;
         if(s0=='-'){
        a=a<0?Math.abs(a):-a;
        }
        }
    }
    console.log("VALIDATE_START step 4")
    if(show_xcoeff){
    a=ea
    }
    var inputValue = a+","+h+","+k;
    var expectedValue=ea+","+eh+","+ek;
    var exp_eqn="("+ea+")*(x-("+eh+"))+("+ek+")"
    
    console.log("VALIDATION_RESULT: "+inputValue+":"+expectedValue);
    if (inputValue == expectedValue) {
        return true;
    } else {
    if(validate_useEqn){
    var x=h;
    var y=eval(exp_eqn);
    y=Math.fixTo(y,12)
    console.log("VALIDATION_RESULT_EQN: "+exp_eqn+" ==> "+x+":"+y+" = "+k+"||"+a+" = "+ea);
    if((y==k)&&(a==ea)){
    return true;
    }
    }
        return false;
    }
}
HmFlashWidgetImplPointSlopeForm.prototype.processWidgetValidation = validatePointSlope;


// -! type=odds
function validateOdds() {
    var ans_format = cm_unescape(this._jsonObj.ans_format);
    var expectedValue = cm_unescape(this._jsonObj.value);
    var inputValue = $get('widget_input_field_1').value;
    if(true){
     verifyIsNotNullOrEmpty(inputValue);
    }
    var ans = {};
    var inp = {};
    if (expectedValue.indexOf("/") != -1) {
        ans = expectedValue.split("/");
    } else if (expectedValue.indexOf(":") != -1) {
        ans = expectedValue.split(":");
    } else if (expectedValue.indexOf("to") != -1) {
        ans = expectedValue.split("to");
    }
    var prob = eval(ans[0]) + eval(ans[1]);
    if (inputValue.indexOf("/") != -1) {
        inp = inputValue.split("/");
    } else if (inputValue.indexOf(":") != -1) {
        inp = inputValue.split(":");
    } else if (inputValue.indexOf("to") != -1) {
        inp = inputValue.split("to");
    }
    if (inputValue == expectedValue) {
        return true;
    } else {
        if (eval(ans[0]) == eval(inp[0]) && eval(ans[1]) == eval(inp[1])) {
            return true;
        } else if (eval(ans[0]) == eval(inp[0]) && (eval(inp[1]) == prob)) {
            throw (ERROR_ODDS)
        } else {
            if(ans_format=='ratio'){
                var inp_1=inp.join("/")
                var simp=Math.simpleFrac(inp_1);
                var ans_1=Math.simpleFrac(ans.join("/"));
                if((ans_1==simp1)){
                    throw (ERROR_SIMPLIFY)
                }else{
                    return false;
                }
            }else{
                return false;
            }
        }
    }
}
HmFlashWidgetImplOdds.prototype.processWidgetValidation = validateOdds;

// -! type=ratio
function validateRatio() {
    var ans_format = 'ratio';
    var expectedValue = cm_unescape(this._jsonObj.value);
    var inputValue1 = $get('widget_input_field_1').value;
    var inputValue2 = $get('widget_input_field_2').value;
    if(true){
     verifyIsNotNullOrEmpty(inputValue1);
     verifyIsNotNullOrEmpty(inputValue2);
    }
    var inputValue=inputValue1+":"+inputValue2
    var ans = {};
    var inp = {};
    if (expectedValue.indexOf("/") != -1) {
        ans = expectedValue.split("/");
    } else if (expectedValue.indexOf(":") != -1) {
        ans = expectedValue.split(":");
    } else if (expectedValue.indexOf("to") != -1) {
        ans = expectedValue.split("to");
    }
    
    if (inputValue.indexOf("/") != -1) {
        inp = inputValue.split("/");
    } else if (inputValue.indexOf(":") != -1) {
        inp = inputValue.split(":");
    } else if (inputValue.indexOf("to") != -1) {
        inp = inputValue.split("to");
    }
    if (inputValue == expectedValue) {
        return true;
    } else {
        if (eval(ans[0]) == eval(inp[0]) && eval(ans[1]) == eval(inp[1])) {
            return true;       
        } else {
            if(ans_format=='ratio'){
                var inp_1=inp.join("/")
                var simp=Math.simpleFrac(inp_1);
                var ans_1=Math.simpleFrac(ans.join("/"));
                if((ans_1==simp)){
                    throw (ERROR_SIMPLIFY)
                }else{
                    return false;
                }
            }else{
                return false;
            }
        }
    }
}
HmFlashWidgetImplRatio.prototype.processWidgetValidation = validateRatio;


// -! type=slope_intercept
function validateSlopeIntercept() {
    var expectedValue = cm_unescape(this._jsonObj.value);
    var slope_field_n = $get('widget_input_field_1');
    var slope_field_d = $get('widget_input_field_2');
    var int_field_n = $get('widget_input_field_3');
    var int_field_d = $get('widget_input_field_4');
    var isFrac = slope_field_d != undefined && slope_field_d.value != "";
    var isIFrac = int_field_d != undefined && int_field_d.value != "";
    var combo=$get('icombo_1');
    var int_sign=combo.options[combo.selectedIndex].value
    
    var n = (slope_field_n.value)
    if (n === undefined || n.length < 1) {
        n = 1;
    }
    n = Number(n);
    var d = 1;
    if (isFrac) {
        d = (slope_field_d.value);
        if (d === undefined || d.length < 1) {
            d = 1;
        }
        d = Number(d);
    }
    var m = Math.fixTo(n / d, 12);
    var bn = $get('widget_input_field_3').value
    var bd = isIFrac ? $get('widget_input_field_4').value : 1;
    bd = bd === undefined || bd.length < 1 ? 1 : bd
    if (bn === undefined || bn.length < 1) {
        bn = String(0);
    }
    var int_b=bn/bd;
    if(int_sign=='-'){
    int_b=-1*int_b;
    }
    var b = Math.fixTo(int_b, 12);
    
    var inputValue = "(" + m + ")x" + "+(" + b + ")";
    console.log(inputValue + ":" + expectedValue)
    if (inputValue == expectedValue) {
        return true;
    } else {
        return false;
    }
}
HmFlashWidgetImplSlopeInterceptForm.prototype.processWidgetValidation = validateSlopeIntercept;
// -! type=Expressions
//  ignore case 
function validateExpressions() {
    var expectedValue = this._jsonObj.questObj;

    var type = expectedValue ? expectedValue[8] : undefined;
    type = type ? type : (this._jsonObj.value[3]=='factor_form'?this._jsonObj.value[3]:"general");
    var inputValue = String($get('widget_input_field_1').value).toLowerCase();
    if(true){
     verifyIsNotNullOrEmpty(inputValue);
    }
    var valid_str;
    console.log("EXPRESSIONS: questObj --> " + expectedValue);
    console.log("Validation: type --> " + type);
    if (type == "DP") {
        valid_str = String(validate_Expressions_dp(inputValue, expectedValue));
    } else if (type == "CLT") {
        valid_str = String(validate_Expressions_clt(inputValue, expectedValue));
    } else if (type == "factor_form") {
        valid_str = String(validate_Expressions_ff(inputValue, this._jsonObj.value));
    } else {
        expectedValue = cm_unescape(this._jsonObj.value);
        if (inputValue.toLowerCase() == expectedValue.toLowerCase()) {
            valid_str = 'true';
        } else {
            valid_str = 'false';
        }
    }
    console.log("Validation: result --> " + valid_str);
    if (valid_str == 'true') {
        console.log("Validation: result return --> " + true);
        return true;
    } else if (valid_str == 'false') {
        console.log("Validation: result return --> " + false);
        return false;
    } else {
        console.log("Validation: result return --> " + (eval("MESSAGE_" + valid_str)));
        throw (eval("MESSAGE_" + valid_str));
    }
}
HmFlashWidgetImplExpressions.prototype.processWidgetValidation = validateExpressions;
// -! type=combo_input
//
function validateComboInput() {
    console.log("validateComboInput Called! " + this._jsonObj.value);
    var expval = (this._jsonObj.value);
    var expval_arr = String(expval).split("|");
    var inp_format = (this._jsonObj.format);
    var arr = eval(expval_arr[1]);
    var ind = arr.pop();
    //Margin of error algorithm
    var moe = cm_unescape(this._jsonObj.moe);
    var moe_validity = cm_unescape(this._jsonObj.on_moe);
    var moe_msg = cm_unescape(this._jsonObj.on_moe_msg);
    var moe_exp = cm_unescape(this._jsonObj.moe_exp);
    //
    var combo_val_e = arr[ind];
    var eVal = expval_arr[3];
    var expectedValue = combo_val_e + "|" + eVal;
    var combo = $get("icombo");
    var combo_val = combo.options[combo.selectedIndex].value;
    var inp_val = $get('widget_input_field_1').value;
    if (inp_format == "percent_inc_dec") {
        if (Number(inp_val) < 0) {
            combo_val = combo.options[(combo.selectedIndex + 1) % 2].value;
            inp_val = Math.abs(inp_val);
        }
    }
    if (inp_format == "time") {
        var dotformat=String(inp_val).indexOf(":")>-1;
        var t=String(inp_val).split(":");
        var hr=parseFloat(t[0]);
        var min=t[1]?":"+parseFloat(t[1]):":0";
        if(dotformat){
        if(!t[1]||(t[1]&&t[1].length===1)){
        throw("Expected time format h:mm, hh:mm");
        }
        }
        inp_val=hr+min
        var et=String(eVal).split(":");
        var ehr=parseFloat(et[0]);
        var emin=et[1]?":"+parseFloat(et[1]):":0";
        expectedValue = combo_val_e + "|" + (ehr+emin);
    }
    if (expval_arr[3].indexOf(",") > -1) {
        inp_val += "," + $get('widget_input_field_2').value;
    }
    var inputValue = combo_val + "|" + inp_val
    console.log(inputValue + ":" + expectedValue)
    if (inputValue == expectedValue) {
        return true;
    } else {
        if (moe && combo_val == combo_val_e) {
            var iv = inp_val
            var ev = eVal
            //dv = (ev - iv);
            dv = (iv - ev);
            var range = String(moe).split("|");
            var lowR = range.length == 1 ? 0 : Number(range[0]);
            var hiR = range.length == 1 ? Number(range[0]) : Number(range[1])
            console.log("ERROR_MARGIN: " + iv + ":" + ev + ":" + dv + ":" + moe)
            if (dv >= lowR && dv <= hiR) {
                if (moe_validity == 'correct') {
                    return true;
                } else {
                    throw (moe_msg)
                }
            }
        }
        return false;
    }
}
HmFlashWidgetImplComboInput.prototype.processWidgetValidation = validateComboInput;

// -! type=multi_yesno
function validateMYesNo() {
var parent=$get('hm_widget_form')
    var expectedValue_a = cm_unescape(this._jsonObj.value).split("|");
    var expectedValue_arr = [];
    var len = expectedValue_a.length;
    for (var i = 0; i < len; i++) {
        var item = eval(expectedValue_a[i])
        var val = item[1][item[2]]
        expectedValue_arr.push(val)
    }
    var expectedValue = expectedValue_arr.join("|");
    var inputControls = $get('hm_widget_form');
    var inputValue_arr = [];
var nullC=0
    for (var j = 0; j < len; j++) {
        var gname = 'widget_value_' + j
        var node=$('input[name="' + gname + '"]:checked',parent)
        if (node) {
            inputValue_arr.push(node.val());

        } else {
        nullC++
            inputValue_arr.push('');
        }
    }
    /*if(nullC===len){
     verifyIsNotNullOrEmpty(null);
    }*/
    var inputValue = inputValue_arr.join("|");
    console.log("INPUT_EXPECTED:" + inputValue + ":" + expectedValue)
    if (inputValue == expectedValue) {
        return true;
    } else {
        return false;
    }
}
HmFlashWidgetImplMultiYesNo.prototype.processWidgetValidation = validateMYesNo;

// -! type=multi_field
function validateMultiField() {
var inputOnSelect=this._jsonObj.input_format;
inputOnSelect=inputOnSelect?inputOnSelect:"";
    var noca = this._jsonObj.expected_num_ans;

    var expectedValue_a = cm_unescape(this._jsonObj.value).split("|");
    if(inputOnSelect.indexOf('input_onselect')>-1){
        if(expectedValue_a[0]==='null'||expectedValue_a[0]==='no'){
        if($(".multifield-cont").is(":visible")){
            return false
        }else{
            return true
        }
        }
    }
    var match_fields = this._jsonObj.match_fields;
    var input_field_count = (this._jsonObj.input_field_count);
    var result_arr = [];
    var len = expectedValue_a.length;
    noca = noca ? parseInt(noca) : len;
    input_field_count = input_field_count ? input_field_count : len;
    var ifc = parseInt(input_field_count);
    var allowSameVal=(this._jsonObj.allow_same_val);
    var tutorWrapper = TutorManager.getActiveTutorWrapper().tutorDomNode;
    console.log("ARRAY:" + expectedValue_a);
    console.log("LENGHT:" + len);
    var mfnodes = $("form .mfnode",tutorWrapper);
    if (!match_fields) {

        var hasSameValues = allowSameVal?false:checkForSameValues(ifc);
        if (hasSameValues) {
            throw (MESSAGE_sameVal)
            return
        }
        for (var j = 0; j < ifc; j++) {
            var indx = j + 1;
            var boo = false;
            if(mfnodes.get(j).style.display==="none"){
                continue;
                }
            for (var i = 0; i < len; i++) {
                
                var item = eval(expectedValue_a[i]);
                var val = item[1];
                var type = item[3];

                console.log("SUB-ARRAY: UN_MATCH" + j + ":" + i + ":" + item);
                console.log("VAL:" + val);
                if (type == 'string') {
                    boo = validateString_mf(val, indx, this._jsonObj);
                }else if (type == 'decimal'||type=='integer') {
                    boo = validateNumberDecimal_mf(val, i + 1, this._jsonObj);
                } else if (type == 'set') {
                    boo = validateSet_mf(val, indx, this._jsonObj);
                } else if (type == 'mChoice') {
                    boo = validateMChoice_mf(val, indx, this._jsonObj);
                } else if (type == 'coordinates') {
                    boo = validateCoordinates_mf(val, indx, this._jsonObj);
                } else if (type == 'inequality') {
                    boo = validateInequality_mf(val, indx, this._jsonObj);
                } else if (type == 'exponent_form') {
                    boo = validateExponentForm_mf(val, indx, this._jsonObj);
                } else {
                    boo = validateNumberRational_mf(val, indx, this._jsonObj);
                }
                console.log("RESULT: " + type + ": " + boo);
                if (boo) {
                    break;
                }
            }
            result_arr.push(boo);
        }
    } else {

        //var expected_num_ans=cm_unescape(this._jsonObj.expected_num_ans);
        //expected_num_ans=expected_num_ans?expected_num_ans:'all';
        //expected_num_ans=expected_num_ans==''||expected_num_ans==null||expected_num_ans=='null'?'all':expected_num_ans;
verifyIsNotNullOrEmpty
        for (var i = 0; i < len; i++) {
            if(mfnodes.get(i).style.display==="none"){
                continue;
                }
            var item = eval(expectedValue_a[i]);
            var val = item[1];
            var type = item[3];
            var format = item[4]
            var boo = false;
            console.log("SUB-ARRAY:" + item);
            console.log("VAL:" + val);
            if(type=='graph'){
            var gdata=HmFlashWidgetImplMultiField.multi_type_data.data[i];
            var plot=gdata.graph.inst_plot
            boo=plot.validateInput(false,true);
            }else if (type == 'string') {
                boo = validateString_mf(val, i + 1, this._jsonObj);
            }else if (type == 'decimal'||type=='integer') {
                    boo = validateNumberDecimal_mf(val, i + 1, this._jsonObj);
            } else if (type == 'set') {
                var no_sol
                if(format=='set_with_nosolution'){
                    no_sol=true
                }
                boo = validateSet_mf(val, i + 1, this._jsonObj,no_sol);
            } else if (type == 'mChoice') {
                boo = validateMChoice_mf(val, i+1, this._jsonObj);    
            } else if (type == 'coordinates') {
                boo = validateCoordinates_mf(val, i+1, this._jsonObj);
            } else if (type == 'inequality') {
                    boo = validateInequality_mf(val, i+1, this._jsonObj);    
            } else if (type == 'exponent_form') {
                    boo = validateExponentForm_mf(val, i+1, this._jsonObj);
            } else {
                boo = validateNumberRational_mf(val, i + 1, this._jsonObj);
            }
            console.log("RESULT: " + type + ": " + boo);
            result_arr.push(boo);
        }
    }
    var c_ans_count = 0;
    for (var j = 0; j < result_arr.length; j++) {
        if (result_arr[j]) {
            c_ans_count++
        }
    }
    var re = result_arr.join("|")
    var all_corr = re.indexOf("false") == -1&&c_ans_count==noca;
    var partial = all_corr ? false : (re.indexOf("false") > -1 && re.indexOf("true") > -1);
    if (partial) {
        if (c_ans_count == noca) {
            showIndividualFieldResult(result_arr);
            all_corr = true;
        }
        showIndividualFieldResult(result_arr);
    }
    HmFlashWidgetImplMultiField.prototype.partialanswers=result_arr.length-c_ans_count;
    if (all_corr) {
        return true;
    } else if (partial) {
        return 'partial';
    } else {
        return false;
    }
}

function checkForSameValues(ifc) {
    var iarr = []
    for (var i = 0; i < ifc; i++) {
        var ival = getInputValue(i + 1);
        var boo = iarr.pushUnique(ival);
        if (!boo) {
            return true
        }
    }
    return false;
}

function showIndividualFieldResult(arr) {
    var len = arr.length;
    for (var i = 0; i < len; i++) {
        var n = i + 1
        var t = ("sub_field_indicator_" + n)
        var img = arr[i] ? 'widget_correct' : 'widget_incorrect';
        var indicator = $get(t);
        indicator.innerHTML = "<img src='/tutor/widget/images/" + img + ".png' width='25px' style='position:absolute;right:50px;'/>";
        indicator.style.display = 'block';
    }
}
function validateExponentForm_mf(val,idy,jo) {
    var expectedValue = cm_unescape(val).split("^");
    var stype=jo.stype?jo.stype:null;
    var inputValue,base,exp,ans;
    function checkForNumber(val){
    var boo=true;
    try{
    var re=eval(val)
    }catch(e){
    boo=false
    }
    return boo;
    }
    function _get(name){
      var p=$get('widget_input_field_base_' + idy);
      var el=$(p).find("input[name="+name+"]");
      return el.get(0);
    }
    if(stype==null){
        inputValue = [_get('widget_input_field_norm_'+idy).value, _get('widget_input_field_den_'+idy).value,$get('widget_input_field_exp_'+idy).value];
        if(true){
            verifyIsNotNullOrEmpty(inputValue[0]);
            verifyIsNotNullOrEmpty(inputValue[2]);            
        }
        var base_n=inputValue[0]
        var base_d=inputValue[1]
        var baseIsNumber,expIsNumber,ansIsNumber;
        var ebaseIsNumber,eexpIsNumber,eansIsNumber;
        base=base_n;        
        if(base_d&&base_d!='null'){
        base=base+"/"+base_d;        
        }
        exp=inputValue[2];        
        var ans;
        base=checkForNumber(base)?Math.fixTo(eval(base),8):base;
        exp=checkForNumber(exp)?Math.fixTo(eval(exp),8):exp;
        ans=1;
    }else{
        
    }
    var v1=String(expectedValue[0]);
    var v2=String(expectedValue[1]);
    var ebase=checkForNumber(v1)?Math.fixTo(eval(v1),8):v1
        var eexp=checkForNumber(v2)?Math.fixTo(eval(v2),8):v2
        var eans=1;//checkForNumber(v3)?Math.fixTo(eval(v3),8):v3
    
    var inp_eval = base+"|"+exp+"|"+ans;
    var exp_eval = ebase+"|"+eexp+"|"+eans;
    if (inp_eval == exp_eval) {
        return true
    }else{
        return false;
    }
}
function validateInequality_mf(val, idy, jo) {
    var expectedValue = cm_unescape(val);
    var inputValue = $get('widget_input_field_' + idy).value;
    if(true){
     verifyIsNotNullOrEmpty(inputValue,MESSAGE_mf);
    }
    var in_nt=!true;
    if(checkForIntervalNotation(inputValue)){
        inputValue=convertINtoInEq(inputValue);
        in_nt=true;
    }
    if(checkForIntervalNotation(expectedValue)){
        expectedValue=convertINtoInEq(expectedValue);
    }
    inputValue=inputValue.split(" ").join("").toLowerCase();
    var strval=validateIneqExpression(inputValue);
    if(!strval){
        throw("We didn't understand your input. Try again.");
    }
    
    expectedValue=expectedValue.split(" ").join("").toLowerCase();
    /*
    var inIEq = splitAtInEq(inputValue);
    var outIEq = splitAtInEq(expectedValue);
    var olex = applyUniqueVarX(outIEq.lexp);
    var ilex = applyUniqueVarX(inIEq.lexp);
    var orex = applyUniqueVarX(outIEq.rexp);
    var irex = applyUniqueVarX(inIEq.rexp);
    if (outIEq.syeq == inIEq.syeq) {
        if (olex == ilex) {
            if (orex == irex) {
                return true;
            }
        } else {
            //
            var x = 2;
            var ole = eval(olex);
            var ile = eval(ilex);
            var ore = eval(orex);
            var ire = eval(irex);
            if (ole == ile) {
                if (ore == ire) {
                    return true;
                }
            }
        }
    } else if (revSymb[outIEq.syeq] == inIEq.syeq) {
        if (orex == ilex) {
            if (olex == irex) {
                return true;
            }
        } else {
            var x = 2;
            var ole = eval(olex);
            var ile = eval(ilex);
            var ore = eval(orex);
            var ire = eval(irex);
            if (ore == ile) {
                if (ole == ire) {
                    return true;
                }
            }
        }
    }
    return false;
    */
    /*if(checkForIntervalNotation(inputValue)){
        inputValue=convertINtoInEq(inputValue);
    }
    if(checkForIntervalNotation(expectedValue)){
        expectedValue=convertINtoInEq(expectedValue);
    }
    return validateCompundInEq(inputValue,expectedValue)||checkInEq(inputValue,expectedValue);*/
    var cval=validateCompundInEq(inputValue,expectedValue,in_nt);
    if(cval.isComp){
        return cval.isval;
    }
    if(!in_nt){
    var varseq=checkIneqVars(inputValue,expectedValue)
    if(!varseq){
        throw("Check your variable")
    }
    }
    return checkInEq(inputValue,expectedValue);
}
function validateCoordinates_mf(value,fid,jo) {
var parent=$get('hm_widget_form')
    var widget_answer = (value);
    var expectedValue = widget_answer.indexOf("|") > -1 ? widget_answer.split("|") : widget_answer.split(",");
var checkControls=false;
var inputValue=null;
    var lastV=expectedValue[expectedValue.length-1]
    var boo
    var skipcheckForNull=false;
    if(lastV.indexOf("[")==0){
    checkControls=true;
    lastV=eval(lastV)
    if(lastV.length){
    var index=lastV[lastV.length-1]
    if(String(index)=='-1'){
    checkControls=false;
    }else{
    lastV.pop()
    expectedValue=lastV[index]
    }
    }
    }
    var controls=$('.simplified_wrapper input[type="checkbox"]',parent);
    var cl=controls.length
    
    for (var j = 1; j <= cl; j++) {
        var comb = 'widget_input_simplified_' + j+"_"+fid;
        if($get(comb).checked){
        inputValue=$($get(comb).parentNode).text();
        break
        }
        }
    var f1=$get('widget_input_field_norm_' + 1+"_"+fid).value
    var f2=$get('widget_input_field_norm_' + 2+"_"+fid).value
    if(inputValue==null){
    verifyIsNotNullOrEmpty(f1,MESSAGE_mf)
    verifyIsNotNullOrEmpty(f2,MESSAGE_mf)
    }
    if(checkControls){
    
        boo=inputValue==expectedValue
    }else if(inputValue!=null){
    boo=false
    }else{
    //var inputValue = [$get('widget_input_field_1').value, $get('widget_input_field_2').value]
    var boo1=validateNumberRational_mf(expectedValue[0], 1+"_"+fid, jo);
    var boo2=validateNumberRational_mf(expectedValue[1], 2+"_"+fid, jo);
    boo=boo1&&boo2
    console.log(boo1 + ":" + boo2 + " || " + expectedValue[0] + ":" + expectedValue[1]);
    }
    
    if (boo) {
        return true;
    } else {
        return false;
    }
}
function validateMChoice_mf(value,id,jo) {
var parent=$get('hm_widget_form')
    var expectedValue = value;
    expectedValue = (expectedValue[expectedValue.length - 1]);
     var radioButtons = $('input[name=mchoice_'+id+']',parent);
    //var inputValue = null;
    var inputValue = [];
    for (var i = 0, l = radioButtons.length; i < l; i++) {
        if (radioButtons.get(i).checked) {
            //inputValue = i;
            inputValue.push(i+1);
            //break;
        }
    }    
    if(!inputValue.length){
    verifyIsNotNullOrEmpty("",MESSAGE_mf);
    }
    if (inputValue.join(",") == expectedValue.join(",")) {
        return true;
    } else {
        return false;
    }
}
function validateNumberDecimal_mf(val, idy, jo) {
    var expectedValue = cm_unescape(val);
    var inputValue = $get('widget_input_field_' + idy).value;
    if(true){
     verifyIsNotNullOrEmpty(inputValue,MESSAGE_mf);
    }
    if (Number(inputValue) == Number(expectedValue)) {
        return true;
    }else {
        return false;
    }
}
function validateString_mf(val, idy, jo) {
    var expectedValue = cm_unescape(val);
    var inputValue = $get('widget_input_field_' + idy).value
    if(true){
     verifyIsNotNullOrEmpty(inputValue,MESSAGE_mf);
    }
    if (inputValue.toLowerCase() == expectedValue.toLowerCase()) {
        return true;
    } else {
        return false;
    }
}

function validateSet_mf(val, idy, jo,no_sol) {
    var expectedValue = cm_unescape(val);
    if(no_sol){
     var nosolution = $get('widget_input_simplified_'+idy);
        var hasNosolution = nosolution && nosolution.checked;
        var ans_hasNoSolution = expectedValue == 'nosolution';
        if (hasNosolution && ans_hasNoSolution) {
            return true;
        }
    }

    var inputValue = $get('widget_input_field_' + idy).value;
    if(!hasNosolution){
     verifyIsNotNullOrEmpty(inputValue,MESSAGE_mf);
    }
    expectedValue = String(expectedValue).split(" ").join("");
    inputValue = String(inputValue).split(" ").join("");
    inputValue =fixMinus(inputValue);
    var isSetN=jo.ans_format&&jo.ans_format.indexOf('set_notation')>-1;
    var tstr=String(inputValue);
    var ob=tstr.charAt(0)==='{';
    var cb=tstr.charAt(tstr.length-1)==='}';
    var inSetN=cb&&ob
    if(isSetN){        
        
        if(!inSetN){
            throw("Write braces { } around your set!");
        }else{
            inputValue=tstr.substring(1,tstr.length-1);
        }
    }else if(inSetN){
        inputValue=tstr.substring(1,tstr.length-1);
    }
    var exp_arr = String(expectedValue).split(",");
    var inp_arr = String(inputValue).split(",");
    var exp_l = exp_arr.length;
    var inp_l = inp_arr.length;
    var numberset
    if(jo.ans_format&&jo.ans_format.indexOf('number')>-1){
        numberset=true;
    }
    var inp_arr_t = [];
    for(var a=0;a<inp_l;a++){
        if(numberset){
            if(isNaN(inp_arr[a])){
                return false;                
            }
            inp_arr_t.pushUnique(Number(inp_arr[a]))
        }else{
            inp_arr_t.pushUnique(inp_arr[a])
        }
    }
    if(inp_arr_t.length!==inp_l){
        throw("The list contains duplicate values.");
    }
    var boo = true;
    console.log("VALIDATE_SET_0: " + exp_arr + ":" + inp_arr)
    if (expectedValue == 'null' || expectedValue == undefined || expectedValue == '') {
        if (inputValue == 'null' || inputValue == undefined || inputValue == '' || inputValue.toLowerCase().indexOf('no') > -1) {
            return true
        }
    }
    if (exp_l == inp_l) {
        var cor = true;
        for (var k = 0; k < inp_l; k++) {
            var comp = false
            for (var l = 0; l < exp_l; l++) {
                if (inp_arr[k] == exp_arr[l]) {
                    comp = true
                }
                if (!isNaN(exp_arr[l])&&(parseFloat(inp_arr[k]) == parseFloat(exp_arr[l]))) {
                    comp = true
                }
            }
            console.log("VALIDATE_SET_1: " + boo + ":" + comp)
            if (!comp) {
                return false
            }
        }
    } else {
        return false
    }
    console.log("VALIDATE_SET_2: " + boo)
    if (boo) {
        return true;
    } else {
        return false;
    }
}

function getInputValue(idy) {
    var inputValue = $get('widget_input_field_norm_' + idy).value;
    var isFrac = $get('widget_input_field_den_' + idy).value != ""
    var fld3 = $get('widget_input_field_whole_' + idy);
    var isMixed = fld3 != null && fld3.value != "";
    if (!isNaN(Number(inputValue))) {
        inputValue = String(Number(inputValue));
    }
    isFrac = isMixed ? false : isFrac
    var num, den, whole
    if (isFrac) {
        num = inputValue
        den = $get('widget_input_field_den_' + idy).value
        den = den == "" || den == undefined ? '1' : den;
        if (!isNaN(Number(den))) {
            den = String(Number(den));
        }
        var d_isNeg = false;
        var n_isNeg = false;
        var num_t = num;
        var den_t = den;
        if (String(den).indexOf("-") > -1) {
            d_isNeg = true
            den_t = String(den).substring(1)
        }
        if (String(num).indexOf('-') > -1) {
            n_isNeg = true;
            num_t = d_isNeg ? String(num).substring(1) : num;
        } else {
            num_t = d_isNeg ? '-' + num : num;
        }
        inputValue = num_t + "/" + den_t;
        if (String(den) == '1') {
            inputValue = num;
        }
    }
    if (isMixed) {
        num = inputValue;
        den = $get('widget_input_field_den_' + idy).value
        den = den == "" || den == undefined ? '1' : den;
        if (!isNaN(Number(den))) {
            den = String(Number(den));
        }
        whole = fld3.value;
        whole = whole == undefined || whole == null || whole == "" ? 0 : whole
        inputValue = "[" + whole + "]" + num + "/" + den
    }
    return inputValue;
}
/*
function validateNumberRational_mf(val, idy, jo) {
    var expectedValue = cm_unescape(val);
    var ans_format = cm_unescape(jo.ans_format);
    var type = cm_unescape(jo.stype);
    console.log("VALIDATION_RATIONAL_0:" + type + ":" + expectedValue + ":" + ans_format)
    //Margin of error algorithm
    var moe = cm_unescape(jo.moe);
    var moe_validity = cm_unescape(jo.on_moe);
    var moe_msg = cm_unescape(jo.on_moe_msg);
    var moe_exp = cm_unescape(jo.moe_exp);
    //
    if (expectedValue.indexOf("[") > -1) {
        var splitVal = expectedValue.split("]")
        var ewhole = splitVal[0].split("[")[1];
        splitVal = splitVal[1].split("/")
        var enumero = splitVal[0]
        var eden = splitVal[1]
        expectedValue = ((ewhole * eden) + Number(enumero)) + "/" + eden;
    }
    console.log("VALIDATION_RATIONAL_1:" + expectedValue)
    var inputValue = $get('widget_input_field_norm_' + idy).value;
    var isFrac = $get('widget_input_field_den_' + idy).value != "";
    var isFrac_exp=String(expectedValue).indexOf("/")>-1;
    var fld3 = null;
    var isMixed = false;
    if(true){
     verifyIsNotNullOrEmpty(inputValue,MESSAGE_mf);
    }
    var ev_isperc = String(expectedValue).indexOf("%") > -1;
    var iv_isperc = String(inputValue).indexOf("%") > -1;
    expectedValue = String(expectedValue).split("%").join("");
    inputValue = String(inputValue).split("%").join("");
    if (!isNaN(Number(inputValue))) {
        inputValue = String(Number(inputValue));
    }
    //
    console.log("VALIDATION_RATIONAL_2:" + inputValue + ":" + expectedValue)
    // alert($get('widget_input_field_2').value)
    isFrac = isMixed ? false : isFrac
    var num, den, whole
    if (isFrac) {
        num = inputValue
        den = $get('widget_input_field_den_' + idy).value
        den = den == "" || den == undefined ? '1' : den;
        if (!isNaN(Number(den))) {
            den = String(Number(den));
        }
        var d_isNeg = false;
        var n_isNeg = false;
        var num_t = num;
        var den_t = den;
        if (String(den).indexOf("-") > -1) {
            d_isNeg = true
            den_t = String(den).substring(1)
        }
        if (String(num).indexOf('-') > -1) {
            n_isNeg = true;
            num_t = d_isNeg ? String(num).substring(1) : num;
        } else {
            num_t = d_isNeg ? '-' + num : num;
        }
        if (d_isNeg && n_isNeg) {
            if (ans_format == 'lowest_term') {
                inputValue = num + "/" + den
            } else {
                inputValue = num_t + "/" + den_t
            }
        } else {
            inputValue = num_t + "/" + den_t
        }
        if (String(den) == '1') {
            inputValue = num;
        }
    }
    if (isMixed) {
        num = inputValue;
        den = 1;
        whole = fld3.value;
        inputValue = ((whole * den) + Number(num)) + "/" + den
    }
    var isExpression_input = regExpMatch('[a-z\u221A\u03c0]', inputValue)
    var isExpression_ans = regExpMatch('[a-z\u221A\u03c0]', expectedValue)
    var inputValue_simp = isFrac ? isExpression_input ? inputValue : Math.simpleFrac(inputValue) : inputValue;
    var inputValue_mix = isMixed ? true : false;
    var has_psqr = false
    var boo_1 = inputValue == expectedValue;
    var boo_2=true;
    if (ans_format == 'reduced_radical') {
        if(!boo_1&&(den&&den>1)){
        if(String(num).indexOf("\u221A")>-1){
        var rnum=String(num).split("\u221A")
        var rn=den==='1'?rnum[0]:(rnum[0]+"/"+den);
        var rs=String(Math.simpleFrac(rn))
        if(rs==rn){
        boo_1 = eval(rs)+"\u221A"+rnum[1] == expectedValue;        
        }else{
        boo_2=false
        }
        }
        }

    }
    if (isFrac||isMixed) {
    var numC=isNaN(num)?num:parseFloat(num);
    var denC=isNaN(den)?num:parseFloat(den);
    var doNotSimplify=(ans_format=='lowest_term'||ans_format=='lowest_mixed')
        inputValue_mix = isExpression_input ? false : numC > denC&&Number(denC)!==1;
        try{
        inputValue=isFrac_exp||isMixed_exp||doNotSimplify?inputValue:String(eval(inputValue))
        }catch(e){}
    }
    if (isFrac_exp||isMixed_exp) {
        
        try{
        if(!isExpression_ans){
        expectedValue=isFrac||isMixed?expectedValue:String(eval(expectedValue))
        }
        }catch(e){}
    }
    console.log("VALIDATION_MF:" + inputValue + ":" + expectedValue)
    if (ans_format == 'equivalent') {
        var expV = String(expectedValue).split("/");
        var e_num = expV[0];
        var e_den = expV[1] ? expV[1] : 1;
        console.log("VALIDATION_EQUIV:" + e_num + ":" + e_den + " || " + num + ":" + den)
        if (e_num == num && e_den == den) {
            return false;
        }
        var expV_simp = Math.simpleFrac(e_num + "/" + e_den);
        console.log("VALIDATION_SIMP:" + expV_simp + ":" + inputValue_simp)
        if (expV_simp == inputValue_simp) {
            return true;
        } else {
            return false;
        }
    }
    //var boo_1 = inputValue == expectedValue;
    console.log("VALIDATION_MF:" + inputValue + ":" + expectedValue + ":" + boo_1 + ":" + type);
    var isExpression_input = regExpMatch('[a-z\u221A\u03c0]', inputValue);
    var isExpression_ans = regExpMatch('[a-z\u221A\u03c0]', expectedValue);
    //try {
    if (isExpression_input) {
        var x = 2
        var l = String(inputValue).split('\u221A')
        try {
        if(isFrac){
            if(String(inputValue).indexOf("/")>-1){
                inputValue=String(inputValue).split("/");
                inputValue="("+inputValue[0]+")/"+inputValue[1];
            }
        }
            inputValue = inputValue.replace("pi", PI_SYM)
            inputValue = inputValue.replace("sqrt", SQUARE_ROOT_SYM)
            inputValue = applyUniqueVarX(inputValue)
            inputValue = toMathFormat(inputValue)
            console.log("MATH_FORMAT:" + inputValue)
            inputValue = eval(inputValue);
        } catch (e) {
            throw (ERROR_INPUT);
            return
        }
    } else {
        //inputValue=eval(inputValue);

    }
    if (isExpression_ans) {
        var x = 2
        expectedValue = expectedValue.replace("pi", PI_SYM)
        expectedValue = expectedValue.replace("sqrt", SQUARE_ROOT_SYM)
        expectedValue = applyUniqueVarX(expectedValue)
        expectedValue = toMathFormat(expectedValue)

        console.log("MATH_FORMAT:" + expectedValue)
        expectedValue = eval(expectedValue);
    } else {

    }

    inputValue = String(inputValue);
    expectedValue = String(expectedValue);
    if (expectedValue.indexOf('\u2212') > -1) {

        expectedValue = _replaceAll(expectedValue, '\u2212', '-');
        expectedValue = Number(expectedValue);
    }


    console.log(inputValue + ":(" + inputValue_simp + "): " + expectedValue + ":" + ans_format + ":" + eval(inputValue) + ":" + eval(expectedValue) + ":" + (eval(inputValue) == eval(expectedValue)))
if(!isNaN(inputValue)){
inputValue=Math.fixTo(inputValue,10)
}
if(!isNaN(expectedValue)){
expectedValue=Math.fixTo(expectedValue,10)
}

    if (inputValue == expectedValue) {

        if ((ans_format == 'mixed' || ans_format == 'lowest_mixed') && !isMixed && inputValue_mix) {
            throw (ERROR_MIXED);
        } else if (ans_format == 'reduced_radical') {
            if (boo_1) {
                return true;
            } else {            
                if(!boo_2){
                    throw (ERROR_SIMPLIFY);
                }else{
                    throw (ERROR_REDUCE_RADICAL);
                }
            }
        } else {
            if (iv_isperc) {
                if (type && (String(type) == '4' || String(type) == '5')) {
                    return true;
                } else if (ev_isperc) {
                    return true;
                }
                return false;
            }
            return true;
        }
    } else if (inputValue_simp == expectedValue) {
        if ((ans_format == 'lowest_term' || ans_format == 'lowest_mixed')) {
            throw (ERROR_SIMPLIFY);
        } else {
            return true;
        }
    } else {
        if (Math.fixTo(eval(inputValue),10) == Math.fixTo(expectedValue,10)) {
            if (ans_format == 'lowest_term') {
                return true;
            } else if (ans_format == 'mixed' && !isMixed) {
                throw (ERROR_MIXED);
            } else {
                return true;
            }
        }else if (Math.fixTo(eval(expectedValue),10) == Math.fixTo(inputValue,10)) {
            if (ans_format == 'lowest_term') {
                //console.log(ERROR_SIMPLE_FRACTION);
                //throw(ERROR_SIMPLIFY); 
                return true;
            } else if (ans_format == 'mixed' && !isMixed) {
                throw (ERROR_MIXED);
            } else {
                return true;
            }
        } else {
            var iv = eval(inputValue);
            var ev = eval(expectedValue);
            if (moe) {
               // dv = (ev - iv);
               dv = (iv - ev);
               dv=Math.fixTo(dv,8);
                var range = String(moe).split("|");
                var lowR = range.length == 1 ? 0 : Number(range[0]);
                var hiR = range.length == 1 ? Number(range[0]) : Number(range[1])
                console.log("ERROR_MARGIN: " + iv + ":" + ev + ":" + dv + ":" + moe);
                if (moe_exp) {
                    var exp = moe_exp.split("|");
                    var expV = exp[0];
                    var expM = exp[1];
                    var ev1
                    if (expV.indexOf("R") > -1) {
                        expV = parseInt(expV.substring(1));
                        var p = Math.round(Math.log10(expV));
                        ev1 = Math.fixTo(ev, p);
                    } else {
                        ev1 = expV
                    }
                    if (iv == ev1) {
                        if (expM == 'correct') {
                            return true;
                        } else {
                            throw (expM)
                        }
                    }
                }
                if (dv >= lowR && dv <= hiR) {
                    if (moe_validity == 'correct') {
                        return true;
                    } else {
                        throw (moe_msg)
                    }
                }
            }
            return false;
        }
    }
}*/
function validateNumberRational_mf(val, idy, jo,nca) {
    var expectedValue = cm_unescape(val);
    var ans_format = cm_unescape(jo.ans_format);
    var type = cm_unescape(jo.stype);
    console.log("VALIDATION_RATIONAL_0:" + type + ":" + expectedValue + ":" + ans_format)
    //Margin of error algorithm
    var moe = cm_unescape(jo.moe);
    var moe_validity = cm_unescape(jo.on_moe);
    var moe_msg = cm_unescape(jo.on_moe_msg);
    var moe_exp = cm_unescape(jo.moe_exp);
    var isMixed_exp=false;
    var fraction_has_one=false;
    var fraction_has_zero=false;
    var whole_has_zero=false;
    //
    if (expectedValue.indexOf("[") > -1) {
        var splitVal = expectedValue.split("]")
        var ewhole = splitVal[0].split("[")[1];
        splitVal = splitVal[1].split("/")
        var enumero = splitVal[0]
        var eden = splitVal[1]
        expectedValue = ((ewhole * eden) + Number(enumero)) + "/" + eden;
    }
    expectedValue = String(expectedValue);
    var isExpression_ans0 = expectedValue=='undefined'?false:regExpMatch('[a-z\u221A\u03c0]', expectedValue)
    if (expectedValue.indexOf('\u2212') > -1) {
        //alert('is a negative, removing unicode negative sign!');
        expectedValue = _replaceAll(expectedValue, '\u2212', '-');
    }
    if(isExpression_ans0||expectedValue=='undefined'||ans_format=='equivalent'){
    }else{
    expectedValue=Math.simpleFrac(expectedValue)
    }
    console.log("VALIDATION_RATIONAL_1:" + expectedValue)
    var inputValue = $get('widget_input_field_norm_' + idy).value;
   // verifyIsNotNullOrEmpty(inputValue);
   
    var undefinedCtrl = $get('widget_input_simplified_1');
    var isUndefined=undefinedCtrl?undefinedCtrl.checked:false;
    var isFrac = isUndefined?false:$get('widget_input_field_den_' + idy).value != "";//var isFrac = $get('widget_input_field_den_' + idy).value != "";
    var isFrac_exp=String(expectedValue).indexOf("/")>-1;
    var fld3 = null;
    var isMixed = fld3 != null && fld3.value != "";
    if(!isUndefined){ 
        if(!nca){
            verifyIsNotNullOrEmpty(inputValue,isMixed?'For a mixed number, you need to enter a number in each blank space.':MESSAGE_mf);
        }
     }    
    if(true){
     //verifyIsNotNullOrEmpty(inputValue,MESSAGE_mf);
    }
    var ev_isperc = String(expectedValue).indexOf("%") > -1;
    var iv_isperc = String(inputValue).indexOf("%") > -1;
    expectedValue = String(expectedValue).split("%").join("");
    inputValue = String(inputValue).split("%").join("");
    if (!isNaN(Number(inputValue))) {
        inputValue = String(Number(inputValue));
        if(isUndefined){
        inputValue='undefined';
        }
    }
    //
    console.log("VALIDATION_RATIONAL_2:" + inputValue + ":" + expectedValue)
    // alert($get('widget_input_field_2').value)
    isFrac = isMixed ? false : isFrac
    var num, den, whole
    if (isFrac) {
        num = inputValue
        den = $get('widget_input_field_den_' + idy).value
        den = den == "" || den == undefined ? '1' : den;
        if (!isNaN(Number(den))) {
            den = String(Number(den));
        }
        var d_isNeg = false;
        var n_isNeg = false;
        var num_t = num;
        var den_t = den;
        if (String(den).indexOf("-") > -1) {
            d_isNeg = true
            den_t = String(den).substring(1)
        }
        if (String(num).indexOf('-') > -1) {
            n_isNeg = true;
            num_t = d_isNeg ? String(num).substring(1) : num;
        } else {
            num_t = d_isNeg ? '-' + num : num;
        }
        if (d_isNeg && n_isNeg) {
            if (ans_format == 'lowest_term') {
                inputValue = num + "/" + den
            } else {
                inputValue = num_t + "/" + den_t
            }
        } else {
            inputValue = num_t + "/" + den_t
        }
        if (String(den) == '1'&&!isFrac_exp) {
            inputValue = num;            
        }
        if (String(num) == '0') {
            inputValue = num;        
        }
        if (String(den) == '0') {
            throw(ERROR_den_0);            
        }
    }
    if (isMixed) {
        num = inputValue;
        den = 1;
         if(!isUndefined){    
     verifyIsNotNullOrEmpty(den,'For a mixed number, you need to enter a number in each blank space.');
     }
        whole = fld3.value;
        whole=whole?whole:0;
        if (String(num).charAt(0) == '-'||String(den).charAt(0) == '-') {
            throw(ERROR_MIX_NUMDEN_NEG);            
        }
        var sign=""
        if(Number(whole)<0){
        sign="-"
        whole=Math.abs(whole)
        }
        inputValue = sign+((whole * den) + Number(num)) + "/" + den
        if (String(den) == '1') {
            inputValue = ((whole * den) + Number(num))            
        }
        if (String(den) == '0') {
            throw(ERROR_den_0);            
        }
        if (Number(num) > Number(den)) {
            if(Number(whole)===0){
            }else{
                inputValue = 'null';
                throw("The fractional part must be less than 1.");
            }
            //return false;
        }
        if (Number(num) === Number(den)) {
            fraction_has_one=true
        }
        if (Number(num) === 0) {
            fraction_has_zero=true
        }
        if (Number(whole) === 0) {
            whole_has_zero=true
        }
        
    }
    var isExpression_input = inputValue=='undefined'?false:regExpMatch('[a-z\u221A\u03c0]', inputValue)
    var isExpression_ans = expectedValue=='undefined'?false:regExpMatch('[a-z\u221A\u03c0]', expectedValue)
    var inputValue_simp = isFrac||isMixed ? (isExpression_input ? inputValue : Math.simpleFrac(inputValue)) : inputValue;
    var inputValue_mix = isMixed ? true : false;
    var has_psqr = false
    var boo_1 = inputValue == expectedValue;
    var boo_2=true;
    if (ans_format == 'reduced_radical') {
        if(!boo_1&&(den&&den>1)){
        if(String(num).indexOf("\u221A")>-1){
        var rnum=String(num).split("\u221A")
        var rn=den==='1'?rnum[0]:(rnum[0]+"/"+den);
        var rs=String(Math.simpleFrac(rn))
        if(rs==rn){
        boo_1 = eval(rs)+"\u221A"+rnum[1] == expectedValue;        
        }else{
        boo_2=false
        }
        }
        }

    }
    if (isFrac||isMixed) {
    var numC=isNaN(num)?num:parseFloat(num);
    var denC=isNaN(den)?num:parseFloat(den);
    var doNotSimplify=(ans_format=='lowest_term'||ans_format=='lowest_mixed')
        inputValue_mix = isExpression_input ? false : numC > denC&&Number(denC)!==1;
        try{
        inputValue=isFrac_exp||isMixed_exp||doNotSimplify?inputValue:String(eval(inputValue))
        }catch(e){}
    }
    if (isFrac_exp||isMixed_exp) {
        
        try{
        if(!isExpression_ans){
        expectedValue=isFrac||isMixed?expectedValue:String(eval(expectedValue))
        }
        }catch(e){}
    }
    console.log("VALIDATION_MF:" + inputValue + ":" + expectedValue)
    if (ans_format == 'equivalent') {
        var expV = String(expectedValue).split("/");
        var e_num = expV[0];
        var e_den = expV[1] ? expV[1] : 1;
        console.log("VALIDATION_EQUIV:" + e_num + ":" + e_den + " || " + num + ":" + den)
        if (e_num == num && e_den == den) {
            throw("Enter a different fraction than the given one.");
            //return false;
        }
        var expV_simp = Math.simpleFrac(e_num + "/" + e_den);
        console.log("VALIDATION_SIMP:" + expV_simp + ":" + inputValue_simp)
        if (expV_simp == inputValue_simp) {
            return true;
        } else {
            return false;
        }
    }
    //var boo_1 = inputValue == expectedValue;
    console.log("VALIDATION_MF:" + inputValue + ":" + expectedValue + ":" + boo_1 + ":" + type);
    var isExpression_input = inputValue=='undefined'?false:regExpMatch('[a-z\u221A\u03c0]', inputValue)
    var isExpression_ans = expectedValue=='undefined'?false:regExpMatch('[a-z\u221A\u03c0]', expectedValue)
    //try {
    if (isExpression_input) {
        var x = 2
        var l = String(inputValue).split('\u221A')
        try {
            if(isFrac){
                if(String(inputValue).indexOf("/")>-1){
                    inputValue=String(inputValue).split("/");
                    inputValue="("+inputValue[0]+")/("+inputValue[1]+")";
                }
            }
            inputValue = inputValue.replace(/pi/g, PI_SYM)
            inputValue = inputValue.replace(/sqrt/g, SQUARE_ROOT_SYM)
            inputValue = applyUniqueVarXForEval(inputValue)
            inputValue = toMathFormat(inputValue)
            console.log("MATH_FORMAT:" + inputValue)
            inputValue = eval(inputValue);
        } catch (e) {
            throw (ERROR_INPUT);
            return
        }
    } else {
        //inputValue=eval(inputValue);

    }
    if (isExpression_ans) {
        var x = 2
        expectedValue = expectedValue.replace(/pi/g, PI_SYM)
        expectedValue = expectedValue.replace(/sqrt/g, SQUARE_ROOT_SYM)
        expectedValue = applyUniqueVarXForEval(expectedValue)
        expectedValue = toMathFormat(expectedValue)
        // alert(expectedValue)
        console.log("MATH_FORMAT:" + expectedValue)
        expectedValue = eval(expectedValue);
    } else {

    }

    inputValue = String(inputValue);
    expectedValue = String(expectedValue);
    if (expectedValue.indexOf('\u2212') > -1) {

        expectedValue = _replaceAll(expectedValue, '\u2212', '-');
        expectedValue = Number(expectedValue);
    }


    console.log(inputValue + ":(" + inputValue_simp + "): " + expectedValue + ":" + ans_format + ":" + eval(inputValue) + ":" + eval(expectedValue) + ":" + (eval(inputValue) == eval(expectedValue)))
if(!isNaN(inputValue)){
inputValue=Math.fixTo(inputValue,10)
}
if(!isNaN(expectedValue)){
expectedValue=Math.fixTo(expectedValue,10)
}

    if (inputValue == expectedValue) {

        if ((ans_format == 'mixed' || ans_format == 'lowest_mixed') && !isMixed && inputValue_mix) {
            throw (ERROR_MIXED);
        } else if (ans_format == 'reduced_radical') {
            if (boo_1) {
                return true;
            } else {            
                if(!boo_2){
                    throw (ERROR_SIMPLIFY);
                }else{
                    throw (ERROR_REDUCE_RADICAL);
                }
            }
        } else {
            if (iv_isperc) {
                if (type && (String(type) == '4' || String(type) == '5')) {
                    return true;
                } else if (ev_isperc) {
                    return true;
                }
                return false;
            }
            if(fraction_has_one||fraction_has_zero){
            throw("Write the answer in simplest form!")
            }else if(whole_has_zero){
            throw (ERROR_SIMPLIFY);
            }
            return true;
        }
    } else if (inputValue_simp == expectedValue) {
        if ((ans_format == 'lowest_term' || ans_format == 'lowest_mixed')) {
            //console.log(ERROR_SIMPLE_FRACTION);
            if(fraction_has_one||fraction_has_zero){
            throw("Write the answer in simplest form!")
            }
            throw (ERROR_SIMPLIFY);
        } else {
            return true;
        }
    } else {
        if (Math.fixTo(eval(inputValue),10) == Math.fixTo(expectedValue,10)) {
            if (ans_format == 'lowest_term') {
                return true;
            } else if (ans_format == 'mixed' && !isMixed) {
                throw (ERROR_MIXED);
            } else {
                return true;
            }
        }else if (Math.fixTo(eval(expectedValue),10) == Math.fixTo(inputValue,10)) {
            if (ans_format == 'lowest_term') {
                //console.log(ERROR_SIMPLE_FRACTION);
                //throw(ERROR_SIMPLIFY); 
                return true;
            } else if (ans_format == 'mixed' && !isMixed) {
                throw (ERROR_MIXED);
            } else {
                return true;
            }
        } else {
            var iv = eval(inputValue);
            var ev = eval(expectedValue);
            if (moe) {
               // dv = (ev - iv);
               dv = (iv - ev);
               dv=Math.fixTo(dv,8);
                var range = String(moe).split("|");
                var lowR = range.length == 1 ? 0 : Number(range[0]);
                var hiR = range.length == 1 ? Number(range[0]) : Number(range[1])
                console.log("ERROR_MARGIN: " + iv + ":" + ev + ":" + dv + ":" + moe);
                if (moe_exp) {
                    var exp = moe_exp.split("|");
                    var expV = exp[0];
                    var expM = exp[1];
                    var ev1
                    if (expV.indexOf("R") > -1) {
                        expV = parseInt(expV.substring(1));
                        var p = Math.round(Math.log10(expV));
                        ev1 = Math.fixTo(ev, p);
                    } else {
                        ev1 = expV
                    }
                    if (iv == ev1) {
                        if (expM == 'correct') {
                            return true;
                        } else {
                            throw (expM)
                        }
                    }
                }
                if (dv >= lowR && dv <= hiR) {
                    if (moe_validity == 'correct') {
                        return true;
                    } else {
                        throw (moe_msg)
                    }
                }
            }
            return false;
        }
    }
}
HmFlashWidgetImplMultiField.prototype.processWidgetValidation = validateMultiField;
// -! type=set
function validateSet() {
    var expectedValue = cm_unescape(this._jsonObj.value);
    var nosolution = $get('widget_input_simplified');

    /** isSimplified field avaialbe and checked?
     * 
     */
    var hasNosolution = nosolution && nosolution.checked;
    var ans_hasNoSolution = expectedValue.split("|")[1] == 'nosolution';
    if (hasNosolution && ans_hasNoSolution) {
        return true;
    }
    expectedValue = expectedValue.split("|")[0];
    var inputValue = $get('widget_input_field_1').value;
    if(!hasNosolution){
     verifyIsNotNullOrEmpty(inputValue);
    }
    expectedValue = String(expectedValue).split(" ").join("");
    inputValue = String(inputValue).split(" ").join("");
    inputValue =fixMinus(inputValue);
    var isSetN=this._jsonObj.ans_format&&this._jsonObj.ans_format.indexOf('set_notation')>-1;
    var tstr=String(inputValue);
    var ob=tstr.charAt(0)==='{';
    var cb=tstr.charAt(tstr.length-1)==='}';
    var inSetN=cb&&ob
    if(isSetN){
        if(!inSetN){
            throw("Write braces { } around your set!");
        }else{
            inputValue=tstr.substring(1,tstr.length-1);
        }
    }else if(inSetN){
        inputValue=tstr.substring(1,tstr.length-1);
    }
    var exp_arr = String(expectedValue).split(",");
    var inp_arr = String(inputValue).split(",");
    var exp_l = exp_arr.length;
    var inp_l = inp_arr.length;
    var numberset=false;
    if(this._jsonObj.ans_format&&this._jsonObj.ans_format.indexOf('number')>-1){
        numberset=true;
    }
    var inp_arr_t = [];
    for(var a=0;a<inp_l;a++){
        if(numberset){
            if(isNaN(inp_arr[a])){
                return false;                
            }
            inp_arr_t.pushUnique(Number(inp_arr[a]))
        }else{
            inp_arr_t.pushUnique(inp_arr[a])
        }
    }
    if(inp_arr_t.length!==inp_l){
        throw("The list contains duplicate values.");
    }
    var boo = true;    
    console.log("VALIDATE_SET_0: " + exp_arr + ":" + inp_arr)
    if (expectedValue == 'null' || expectedValue == undefined || expectedValue == '') {
        if (inputValue == 'null' || inputValue == undefined || inputValue == '' || inputValue.toLowerCase().indexOf('no') > -1) {
            return true
        }
    }
    if (exp_l == inp_l) {
        var cor = true;
        for (var k = 0; k < inp_l; k++) {
            var comp = false
            for (var l = 0; l < exp_l; l++) {
                if(numberset){
                    if(isNaN(inp_arr[k])){
                        comp=false;
                        break
                    }
                    if (Number(inp_arr[k]) == Number(exp_arr[l])) {
                        comp = true
                    }
                }else{
                    if (inp_arr[k] == exp_arr[l]) {
                        comp = true
                    }
                }
            }
            console.log("VALIDATE_SET_1: " + boo + ":" + comp)
            if (!comp) {
                return false
            }
        }
    } else {
        return false
    }
    console.log("VALIDATE_SET_2: " + boo)
    if (boo) {
        return true;
    } else {
        return false;
    }
}
HmFlashWidgetImplSet.prototype.processWidgetValidation = validateSet;
// -! type=QEVertexForm
function validateQEVertexForm() {
console.log("VALIDATE_START")
    var expectedValues = cm_unescape(this._jsonObj.value).split(",");
    var combo_for_pm=cm_unescape(this._jsonObj.combo_for_pm);
    combo_for_pm=combo_for_pm=='true'?true:false;
    var show_xcoeff=cm_unescape(this._jsonObj.show_xcoeff);
    show_xcoeff=show_xcoeff=='true'?true:false;
    var a;
    var h_field_n = $get('widget_input_field_norm_2');
    var h_field_d = $get('widget_input_field_den_2');
    var k_field_n = $get('widget_input_field_norm_3');
    var k_field_d = $get('widget_input_field_den_3');
    var ishFrac = h_field_d != undefined && h_field_d.value != "";
    var iskFrac = k_field_d != undefined && k_field_d.value != "";
    console.log("VALIDATE_START step 0")
    if(!show_xcoeff){
    var a_field_n = $get('widget_input_field_norm_1');
    var a_field_d = $get('widget_input_field_den_1');
    var isaFrac = a_field_d != undefined && a_field_d.value != "";
    var an = a_field_n.value;
    var ad = isaFrac ? a_field_d.value : 1;
    ad = ad === undefined || ad.length < 1 ? 1 : ad;
    if (an === undefined || an.length < 1) {
        an = String(1);
    }
    an=an=="-"?String(-1):an;
    a = Math.fixTo(an / ad, 12);
    }
    console.log("VALIDATE_START step 1")
    var n = (h_field_n.value);
    if (n === undefined || n.length < 1) {
    n=String(0)
    }
    
    n = Number(n);
    var d = 1;
    if (ishFrac) {
        d = (h_field_d.value);
        if (d === undefined || d.length < 1) {
            d = 1;
        }
        d = Number(d);
    }
    console.log("VALIDATE_START step 2")
    var h = Math.fixTo(n / d, 12);
    var bn = k_field_n.value;
    var bd = iskFrac ? k_field_d.value : 1;
    bd = bd === undefined || bd.length < 1 ? 1 : bd;
    if (bn === undefined || bn.length < 1) {
        bn=String(0);
    }
    var k = Math.fixTo(bn / bd, 12);
    var ea=Math.fixTo(eval(expectedValues[0]),12);
    var eh=eval(expectedValues[1]);
    var ek=eval(expectedValues[2]);
    console.log("VALIDATE_START step 3")
    if(combo_for_pm){
        var combo_h = $get("icombo_1");
        var combo_k = $get("icombo_2");
        var combo_h_val = combo_h.options[combo_h.selectedIndex].value;
        var combo_k_val = combo_k.options[combo_k.selectedIndex].value;
        var s1=combo_h_val;
        var s2=combo_k_val;
        if(s1=='+'){
        h=h<0?Math.abs(h):-h;
        }
        if(s2=='+'){
        k=k<0?Math.abs(k):-k;
        }
        if(!show_xcoeff){
         var combo_a = $get("icombo_0");
         var combo_a_val = combo_a.options[combo_a.selectedIndex].value;
         var s0=combo_a_val;
         if(s0=='-'){
        a=a<0?Math.abs(a):-a;
        }
        }
    }
    console.log("VALIDATE_START step 4")
    if(show_xcoeff){
    a=ea
    }
    var inputValue = a+","+h+","+k;
    var expectedValue=ea+","+eh+","+ek;
    console.log("VALIDATION_RESULT: "+inputValue+":"+expectedValue);
    if (inputValue == expectedValue) {
        return true;
    } else {
        return false;
    }
}
HmFlashWidgetImplQEVertexForm.prototype.processWidgetValidation = validateQEVertexForm;
// -! type=QEStandardForm
function validateQEStandardForm() {
    var expectedValues = cm_unescape(this._jsonObj.value).split(",");
    var combo_for_pm=cm_unescape(this._jsonObj.combo_for_pm);
    combo_for_pm=combo_for_pm=='true'?true:false;
    var a_field_n = $get('widget_input_field_norm_1');
    var a_field_d = $get('widget_input_field_den_1');
    var h_field_n = $get('widget_input_field_norm_2');
    var h_field_d = $get('widget_input_field_den_2');
    var k_field_n = $get('widget_input_field_norm_3');
    var k_field_d = $get('widget_input_field_den_3');
    var isaFrac = a_field_d != undefined && a_field_d.value != "";
    var ishFrac = h_field_d != undefined && h_field_d.value != "";
    var iskFrac = k_field_d != undefined && k_field_d.value != "";
    var n = (h_field_n.value);
    if (n === undefined || n.length < 1) {
      n=1
    }
    n=n=="-"?String(-1):n;
    n = Number(n);
    var d = 1;
    if (ishFrac) {
        d = (h_field_d.value);
        if (d === undefined || d.length < 1) {
            d = 1;
        }
        d = Number(d);
    }
    
    var h = Math.fixTo(n / d, 12);
    var bn = $get('widget_input_field_norm_3').value;
    var bd = iskFrac ? $get('widget_input_field_den_3').value : 1;
    bd = bd === undefined || bd.length < 1 ? 1 : bd;
    if (bn === undefined || bn.length < 1) {
        bn = String(0);
    }
    bn=bn=="-"?String(-1):bn;
    var k = Math.fixTo(bn / bd, 12);
    var an = $get('widget_input_field_norm_1').value;
    var ad = isaFrac ? $get('widget_input_field_den_1').value : 1;
    ad = ad === undefined || ad.length < 1 ? 1 : ad;
    if (an === undefined || an.length < 1) {
        an = String(1);
    }
    an=an=="-"?String(-1):an;
    var a = Math.fixTo(an / ad, 12);
    var ea=Math.fixTo(eval(expectedValues[0]),12);
    var eh=eval(expectedValues[3]);
    var ek=eval(expectedValues[4]);
    
    if(combo_for_pm){
        var combo_h = $get("icombo_1");
        var combo_k = $get("icombo_2");
        var combo_h_val = combo_h.options[combo_h.selectedIndex].value;
        var combo_k_val = combo_k.options[combo_k.selectedIndex].value;
        var s1=combo_h_val;
        var s2=combo_k_val;
        if(s1=='+'){
        h=h<0?Math.abs(h):-h;
        }
        if(s2=='-'){
        k=k<0?k:-k;
        }
    }
    
         var combo_a = $get("icombo_0");
         var combo_a_val = combo_a.options[combo_a.selectedIndex].value;
         var s0=combo_a_val;
         if(s0=='-'){
        a=a<0?Math.abs(a):-a;
        }
        
    var inputValue =a+","+ h+","+k;
    var expectedValue=ea+","+eh+","+ek;
    console.log("VALIDATION_RESULT: "+inputValue+":"+expectedValue);
    if (inputValue == expectedValue) {
        return true;
    } else {
        return false;
    }
}
HmFlashWidgetImplQEStandardForm.prototype.processWidgetValidation = validateQEStandardForm;
// -! type=QEFactoredForm
function validateQEFactoredForm() {
    var expectedValues = cm_unescape(this._jsonObj.value).split(",");
    var combo_for_pm=cm_unescape(this._jsonObj.combo_for_pm);
    combo_for_pm=combo_for_pm=='true'?true:false;
    var a_field_n = $get('widget_input_field_norm_1');
    var a_field_d = $get('widget_input_field_den_1');
    var h_field_n = $get('widget_input_field_norm_2');
    var h_field_d = $get('widget_input_field_den_2');
    var k_field_n = $get('widget_input_field_norm_3');
    var k_field_d = $get('widget_input_field_den_3');
    var isaFrac = a_field_d != undefined && a_field_d.value != "";
    var ishFrac = h_field_d != undefined && h_field_d.value != "";
    var iskFrac = k_field_d != undefined && k_field_d.value != "";
    var n = (h_field_n.value);
    if (n === undefined || n.length < 1) {
      n=1
    }
    n=n=="-"?String(-1):n;
    n = Number(n);
    var d = 1;
    if (ishFrac) {
        d = (h_field_d.value);
        if (d === undefined || d.length < 1) {
            d = 1;
        }
        d = Number(d);
    }
    
    var h = Math.fixTo(n / d, 12);
    var bn = $get('widget_input_field_norm_3').value;
    var bd = iskFrac ? $get('widget_input_field_den_3').value : 1;
    bd = bd === undefined || bd.length < 1 ? 1 : bd;
    if (bn === undefined || bn.length < 1) {
        bn = String(0);
    }
    bn=bn=="-"?String(-1):bn;
    var k = Math.fixTo(bn / bd, 12);
    var an = $get('widget_input_field_norm_1').value;
    var ad = isaFrac ? $get('widget_input_field_den_1').value : 1;
    ad = ad === undefined || ad.length < 1 ? 1 : ad;
    if (an === undefined || an.length < 1) {
        an = String(1);
    }
    an=an=="-"?String(-1):an;
    var a = Math.fixTo(an / ad, 12);
    var ea=Math.fixTo(eval(expectedValues[0]),12);
    var eh=eval(expectedValues[1]);
    var ek=eval(expectedValues[2]);
    if(combo_for_pm){
        var combo_h = $get("icombo_1");
        var combo_k = $get("icombo_2");
        var combo_h_val = combo_h.options[combo_h.selectedIndex].value;
        var combo_k_val = combo_k.options[combo_k.selectedIndex].value;
        var s1=combo_h_val;
        var s2=combo_k_val;
        if(s1=='+'){
        h=h<0?Math.abs(h):-h;
        }
        if(s2=='+'){
        k=k<0?Math.abs(k):-k;
        }
    }
    
    var inputValue =a+","+ h+","+k;
    var expectedValue=ea+","+eh+","+ek;
    var expectedValue2=ea+","+ek+","+eh;
    console.log("VALIDATION_RESULT: "+inputValue+":"+expectedValue);
    if (inputValue == expectedValue||inputValue == expectedValue2) {
        return true;
    } else {
        return false;
    }
}
HmFlashWidgetImplQEFactoredForm.prototype.processWidgetValidation = validateQEFactoredForm;
//
// -! type=exponent_form
function validateExponentForm() {
    var expectedValue = cm_unescape(this._jsonObj.value).split("|");
    var stype=this._jsonObj.stype?this._jsonObj.stype:null;
    var inputValue,base,exp,ans;
    function checkForNumber(val){
    var boo=true;
    try{
    var re=eval(val)
    }catch(e){
    boo=false
    }
    return boo;
    }
    if(stype==null){
        inputValue = [$get('widget_input_field_norm_1').value, $get('widget_input_field_den_1').value,$get('widget_input_field_exp').value,$get('widget_input_field_norm_3').value, $get('widget_input_field_den_3').value];
        if(true){
            verifyIsNotNullOrEmpty(inputValue[0]);
            verifyIsNotNullOrEmpty(inputValue[2]);
            verifyIsNotNullOrEmpty(inputValue[3]);
        }
        var base_n=inputValue[0]
        var base_d=inputValue[1]
        var baseIsNumber,expIsNumber,ansIsNumber;
        var ebaseIsNumber,eexpIsNumber,eansIsNumber;
        base=base_n;        
        if(base_d&&base_d!='null'){
        base=base+"/"+base_d;        
        }
        exp=inputValue[2];        
        var ans_n=inputValue[3];
        var ans_d=inputValue[4];
        ans=ans_n;        
        if(ans_d&&ans_d!='null'){
        ans=ans+"/"+ans_d;
        
        }
        base=checkForNumber(base)?Math.fixTo(eval(base),8):base;
        exp=checkForNumber(exp)?Math.fixTo(eval(exp),8):exp;
        ans=checkForNumber(ans)?Math.fixTo(eval(ans),8):ans;
    }else{
        
    }
    var v1=String(expectedValue[0]);
    var v2=String(expectedValue[1]);
    var v3=String(expectedValue[2]);
    var ebase=checkForNumber(v1)?Math.fixTo(eval(v1),8):v1
        var eexp=checkForNumber(v2)?Math.fixTo(eval(v2),8):v2
        var eans=checkForNumber(v3)?Math.fixTo(eval(v3),8):v3
    
    var inp_eval = base+"|"+exp+"|"+ans;
    var exp_eval = ebase+"|"+eexp+"|"+eans;
    console.log(inp_eval+" ===> "+exp_eval)
        if (inp_eval == exp_eval) {
            return true
        }else{
        return false;
    }
}
HmFlashWidgetImplExponentForm.prototype.processWidgetValidation = validateExponentForm;
//
//Logarithmic
// -! type=log_form
function validateLogarithmicForm() {
    var expectedValue = cm_unescape(this._jsonObj.value).split("|");
    var stype=this._jsonObj.stype?this._jsonObj.stype:null;
    var inputValue,base,exp,ans;
    function checkForNumber(val){
    var boo=true;
    try{
    var re=eval(val)
    }catch(e){
    boo=false
    }
    return boo;
    }
    if(stype==null){
        inputValue = [$get('widget_input_field_norm_1').value, $get('widget_input_field_den_1').value,$get('widget_input_field_exp').value,$get('widget_input_field_norm_3').value, $get('widget_input_field_den_3').value];
        if(true){
            verifyIsNotNullOrEmpty(inputValue[0]);
            verifyIsNotNullOrEmpty(inputValue[2]);
            verifyIsNotNullOrEmpty(inputValue[3]);
        }
        var base_n=inputValue[0]
        var base_d=inputValue[1]
        var baseIsNumber,expIsNumber,ansIsNumber;
        var ebaseIsNumber,eexpIsNumber,eansIsNumber;
        base=base_n;        
        if(base_d&&base_d!='null'){
        base=base+"/"+base_d;        
        }
        exp=inputValue[2];        
        var ans_n=inputValue[3];
        var ans_d=inputValue[4];
        ans=ans_n;        
        if(ans_d&&ans_d!='null'){
        ans=ans+"/"+ans_d;
        
        }
        base=checkForNumber(base)?Math.fixTo(eval(base),8):base;
        exp=checkForNumber(exp)?Math.fixTo(eval(exp),8):exp;
        ans=checkForNumber(ans)?Math.fixTo(eval(ans),8):ans;
    }else{
        
    }
    var v1=String(expectedValue[0]);
    var v2=String(expectedValue[1]);
    var v3=String(expectedValue[2]);
    var ebase=checkForNumber(v1)?Math.fixTo(eval(v1),8):v1
        var eexp=checkForNumber(v2)?Math.fixTo(eval(v2),8):v2
        var eans=checkForNumber(v3)?Math.fixTo(eval(v3),8):v3
    
    var inp_eval = exp+"|"+ans+"|"+base;
    var exp_eval = ebase+"|"+eexp+"|"+eans;
    console.log(inp_eval+" ===> "+exp_eval)
        if (inp_eval == exp_eval) {
            return true
        }else{
        return false;
    }
}
HmFlashWidgetImplLogarithmicForm.prototype.processWidgetValidation = validateLogarithmicForm;
// -! type=PolynomialForm
function validatePolynomialForm() {
    var expectedValues = cm_unescape(this._jsonObj.value).split(",");
    var len=expectedValues.length
    var l=HmFlashWidgetImplPolynomialForm.count;
    var input_arr=[];
    var ind=0;
    var zeroError=[]
    for(var i=0;i<len;i++){
    if(String(expectedValues[i])=='null'){
    continue
    }
    var field_n = $get('widget_input_field_norm_'+(ind+1));
    var field_d = $get('widget_input_field_den_'+(ind+1));
    var isFrac = field_d != undefined && field_d.value != "";
    var combo_val = $get("icombo_"+ind);
    var n = (field_n.value);
    if (n === undefined || n.length < 1) {
      n=i===l-1?0:1
      if(!isFrac&&(i<l-1)){
        zeroError.push(i);
      }
    }
    n=n=="-"?(i===l-1?"er":String(-1)):n;
    if(n=='er'){
    throw(ERROR_INPUT);
    return
    }else{
    n = Number(n);
    }
    //
    var d = 1;
    if (isFrac) {
        d = (field_d.value);
        if (d === undefined || d.length < 1) {
            d = 1;
        }
        d = Number(d);
    }
    var val = Math.fixTo(n / d, 12);
    var s = combo_val.options[combo_val.selectedIndex].value;
         var s0=s;
         if(s0=='-'){
        val=val<0?Math.abs(val):-val;
        }
        input_arr.unshift(val)
        ind++
    }
    var expect_arr=[]
    for(var j=0;j<expectedValues.length;j++){
    if(String(expectedValues[j])!=='null'){
    expect_arr.push(Math.fixTo(eval(expectedValues[j]),12))
    }
   }
    var zinputValue;
    if(zeroError.length){
    zinputValue=input_arr.slice();
        for(var s=0;s<zeroError.length;s++){
            zinputValue[zeroError[s]]=0
        }
      zinputValue=zinputValue.join(",");  
    }
    var inputValue =input_arr.join(",");
    var expectedValue=expect_arr.join(",");
    console.log("VALIDATION_RESULT: "+inputValue+":"+expectedValue);
    if (inputValue == expectedValue) {
        return true;
    } else {
        if(zinputValue == expectedValue){
            throw("If you don't write a coefficient for a term, the coefficient is assumed to be 1.")
        }
        return false;
    }
}
HmFlashWidgetImplPolynomialForm.prototype.processWidgetValidation = validatePolynomialForm;
// -! type=PolynomialMVForm
function validatePolynomialmvForm() {
    var earr = this._jsonObj.value;
    var len=earr.length;
    var num=$get('widget_input_field_1').value;
    var den=$get('widget_input_field_2').value||"";
    var op="";
    if(den){
    op="/";
    }
    var inputValue=num+op+den;
    var vars=this._jsonObj.variable;
    var ipoly=new parsePoly(inputValue,vars);
    var boo=ipoly.validate(earr);
    return boo;
}
HmFlashWidgetImplPolynomialMVForm.prototype.processWidgetValidation = validatePolynomialmvForm;
// -! type=MatrixForm
function validateMatrixForm() {
    var expectedValues = this._jsonObj.value;
    if(this._jsonObj.addCheckbox){
        var _expectedValue=String(expectedValues[0]);
       var chkd=controlCheck(_expectedValue,true,this._jsonObj);
       if((_expectedValue.toLowerCase()==='undefined')){
            return chkd;
       }
              
    }
    var matrix_row=expectedValues.length;
var matrix_col=expectedValues[0].length;
var __r=matrix_row;
var __c=matrix_col;
var boo=true
    for(var i=0;i<__r;i++){
for(var j=0;j<__c;j++){
var _r=i+1;
var _c=j+1;
var id=_r+'_'+_c;
var uhtml='widget_input_field_' + id;
var val=$($get(uhtml)).val();
var expval=expectedValues[i][j];
if(Number(val)!==Number(expval)){
 boo=false;
 i=__r+1
 break
}
}

}
    if (boo) {
        return true;
    } else {
        return false;
    }
}
HmFlashWidgetImplMatrixForm.prototype.processWidgetValidation = validateMatrixForm;

// -! type=TableForm
function validateTableForm() {
    var expectedValues = this._jsonObj.value;
    var matrix_row=expectedValues.length;
var matrix_col=expectedValues[0].length;
var __r=matrix_row;
var __c=matrix_col;
var boo=true
    for(var i=0;i<__r;i++){
for(var j=0;j<__c;j++){
var _r=i+1;
var _c=j+1;
var id=_r+'_'+_c;
var uhtml = 'widget_input_cont_' + id;
var isInput=$($get(uhtml));
isInput=isInput&&isInput.length;
if(isInput){
var expval=expectedValues[i][j];
expval=expval.split("|")[1]
if(!validateNumberRational_mf(expval, id, this._jsonObj)){
 boo=false;
 i=__r+1
 break
}
}
}

}
    if (boo) {
        return true;
    } else {
        return false;
    }
}
HmFlashWidgetImplTableForm.prototype.processWidgetValidation = validateTableForm;
//
function validateConicSection() {
console.log("VALIDATE_START")
    var expectedValues = cm_unescape(this._jsonObj.value).split(",");
    var combo_for_pm=true;
    var stype=this._jsonObj.stype;
    var isCircle=stype==='circle';
    var isEllipse=stype==='ellipse';
    var isHyperbola=stype==='hyperbola';
    var esign=isHyperbola?(expectedValues.length===5?expectedValues.pop():""):"";
    esign=esign==='-1'?"-+":"+-";
    var isign="";
    var a,b,aid,bid;
    var h_field_n = $get('widget_input_field_norm_1');
    var h_field_d = $get('widget_input_field_den_1');
    var k_field_n = $get('widget_input_field_norm_2');
    var k_field_d = $get('widget_input_field_den_2');
    var ishFrac = h_field_d != undefined && h_field_d.value != "";
    var iskFrac = k_field_d != undefined && k_field_d.value != "";
    console.log("VALIDATE_START step 0")
    if(isCircle){
        aid=3
    }else{
        aid=4;
        bid=5
    }
        var a_field_n = $get('widget_input_field_norm_'+aid);
        var a_field_d = $get('widget_input_field_exp_'+aid);
        var isaPow = a_field_d != undefined && a_field_d.value != "";
        var an = a_field_n.value;
        verifyIsNotNullOrEmpty(an)
        var ad = isaPow ? a_field_d.value : 1;
        ad = ad === undefined || ad.length < 1 ? 1 : ad;
        
        
        a = Math.fixTo(Math.pow(an,ad), 12);
    if(!isCircle){
        var b_field_n = $get('widget_input_field_norm_'+bid);
        var b_field_d = $get('widget_input_field_exp_'+bid);
        var isbPow = b_field_d != undefined && b_field_d.value != "";
        var bn = b_field_n.value;
        verifyIsNotNullOrEmpty(bn)
        var bd = isbPow ? b_field_d.value : 1;
        bd = bd === undefined || bd.length < 1 ? 1 : bd;        
        b = Math.fixTo(Math.pow(bn,bd), 12);
    }
    console.log("VALIDATE_START step 1")
    var n = (h_field_n.value);
    if (n === undefined || n.length < 1) {
    n=String(0)
    }
    
    n = Number(n);
    var d = 1;
    if (ishFrac) {
        d = (h_field_d.value);
        if (d === undefined || d.length < 1) {
            d = 1;
        }
        d = Number(d);
    }
    console.log("VALIDATE_START step 2")
    var h = Math.fixTo(n / d, 12);
    var bn = k_field_n.value;
    var bd = iskFrac ? k_field_d.value : 1;
    bd = bd === undefined || bd.length < 1 ? 1 : bd;
    if (bn === undefined || bn.length < 1) {
        bn=String(0);
    }
    var k = Math.fixTo(bn / bd, 12);
    var eh=Math.fixTo(eval(expectedValues[0]),8);
    var ek=Math.fixTo(eval(expectedValues[1]),8);
    var ea=Math.fixTo(eval(expectedValues[2]),8);
    var eb=Math.fixTo(eval(expectedValues[3]),8);
    console.log("VALIDATE_START step 3")
    if(combo_for_pm){
        var combo_h = $get("icombo_1");
        var combo_k = $get("icombo_2");
        var combo_h_val = combo_h.options[combo_h.selectedIndex].value;
        var combo_k_val = combo_k.options[combo_k.selectedIndex].value;
        var s1=combo_h_val;
        var s2=combo_k_val;
        if(s1=='+'){
        h=h<0?Math.abs(h):-h;
        }
        if(s2=='+'){
        k=k<0?Math.abs(k):-k;
        }
        
    }    
    var inputValue = isCircle?h+","+k+","+a:h+","+k+","+a+","+b;
    var expectedValue=isCircle?eh+","+ek+","+ea:eh+","+ek+","+ea+","+eb;
    console.log("VALIDATION_RESULT: "+inputValue+":"+expectedValue);
    if(isHyperbola){
        var combo_p = $get("icombo_3");
        var combo_s = $get("icombo_4");
        var s = combo_s.options[combo_s.selectedIndex].value;
        var p = combo_p.options[combo_p.selectedIndex].value;
        isign=p+s
        if(esign!==isign){
            return false;
        }
    }
    if (inputValue == expectedValue) {
        return true;
    } else {
        return false;
    }
}
HmFlashWidgetImplConicSection.prototype.processWidgetValidation = validateConicSection;
//
// -! type=Fraction Model
function validateFractionModel() {
    var expectedValues = this._jsonObj.value;
    var set=HmFlashWidgetImplFractionModel.settings;
    var p=set.containerDiv;
    var boo=p.data('correct')
    if (boo) {
        return true;
    } else {
        return false;
    }
}
HmFlashWidgetImplFractionModel.prototype.processWidgetValidation = validateFractionModel;
// -! type=Fraction Model
function processForPrimeFactors(arr){
var l=arr.length
var v=[];
var needExpand=false
for(var i=0;i<l;i++){
var _val=clean(String(arr[i]));
var _pf=Math.getPrimeFactors(parseInt(_val));
var u
if(_pf.length>1){
needExpand=true;
u=_pf
}else{
u=expandPowerForm(_val);
}
v=v.concat(u);
}
return {value:v.join(","),expand:needExpand}
}
function expandPowerForm(str){
if(str.indexOf("^")==-1){
return [cleanExtra(str)]
}
var _str=cleanExtra(str)
var _arr=_str.split("^")
var v=[]
for(var i=0;i<_arr[1];i++){
v.push(_arr[0])
}
return v
}
function sortNumber(a,b) {
    return a - b;
}
function validatePrimeFactors() {    
    var boo=false;
    var expectedValues = this._jsonObj.value;
    var inputValue = String($get('widget_input_field_1').value).toLowerCase();
    if(true){
     verifyIsNotNullOrEmpty(inputValue);
    }
    var params=String(inputValue).split("*")
    for(var s=0;s<params.length;s++){
        verifyIsNotNullOrEmpty(params[s],"Invalid Input");
    }
    var pros_inp=processForPrimeFactors(params)
    var ival=pros_inp.value
    var sval=String(ival).split(",").sort(sortNumber).join(",");
    var needExpand=pros_inp.expand;
    var boo_1=expectedValues===ival&&!needExpand;
    var boo_2=expectedValues===ival&&needExpand;
    var boo_3=expectedValues===sval&&!needExpand;
    var boo_4=expectedValues===sval&&needExpand;
    if (boo_1) {
        return true;
    } else {
        if(boo_2||boo_4){
            //throw( "Make sure you use only prime factors")
            return false;
        }else if(boo_3){
            throw( "Correct! Now write the primes in increasing order");
        }
        return false;
    }
}
HmFlashWidgetImplPrimeFactors.prototype.processWidgetValidation = validatePrimeFactors;
//
function onlyUnique(value, index, self) { 
    return self.indexOf(value) === index;
}
function validateSigma() {    
    var boo=false;
    var expectedValues = this._jsonObj.value;
    var expectedValue = this._jsonObj.value[0];
    var efrom= this._jsonObj.value[1];
    var eto=this._jsonObj.value[2];
    var inputValue = String($get('widget_input_field_1').value).toLowerCase();
    var from = $get("sigma-limit-from").value;
    var to = $get("sigma-limit-to").value;
    
    if(true){
     verifyIsNotNullOrEmpty(inputValue);
     verifyIsNotNullOrEmpty(from);
     verifyIsNotNullOrEmpty(to);
    }
    if(isNaN(from)||isNaN(to)||from>to){
        throw("Check the limits!")
    }
    var ivar=this._jsonObj.indexvar?this._jsonObj.indexvar:"i";
    var vars=String(inputValue).match(/[a-z]/g).filter( onlyUnique );//str.match(eval('/'+ind+'/g')).filter( onlyUnique );
    var hasvars=String(inputValue).indexOf(ivar)>-1;
    if(!(hasvars&&vars.length===1)){
        throw("Check the variable used!")
    }
    var iexp=applyUniqueVarXForEval(inputValue);
    var iarr=[]
    for(var x=from;x<=to;x++){
        iarr.push(eval(iexp))
    }
    var eexp=applyUniqueVarXForEval(expectedValue);
    var earr=[]
    for(var x=efrom;x<=eto;x++){
        earr.push(eval(eexp))
    }
    var boo_1=iarr.join(",")===earr.join(",")
    if (boo_1) {
        return true;
    } else {
        
        return false;
    }
}
HmFlashWidgetImplSigma.prototype.processWidgetValidation = validateSigma;
//
// -! type=complex_number
function validateComplexNumber() {
    var expectedValue = cm_unescape(this._jsonObj.value);
    var slope_field_n = $get('widget_input_field_1');
    var slope_field_d = $get('widget_input_field_2');
    var int_field_n = $get('widget_input_field_3');
    var int_field_d = $get('widget_input_field_4');
    var isFrac = slope_field_d != undefined && slope_field_d.value != "";
    var isIFrac = int_field_d != undefined && int_field_d.value != "";
    var combo=$get('icombo_1');
    var int_sign=combo.options[combo.selectedIndex].value
    
    var n = (slope_field_n.value)
    if (n === undefined || n.length < 1) {
        n = 1;
    }
    n = Number(n);
    var d = 1;
    if (isFrac) {
        d = (slope_field_d.value);
        if (d === undefined || d.length < 1) {
            d = 1;
        }
        d = Number(d);
    }
    var m = Math.fixTo(n / d, 12);
    var mgcd=Math.getGCD(n,d)
    var bn = $get('widget_input_field_3').value
    var bd = isIFrac ? $get('widget_input_field_4').value : 1;
    bd = bd === undefined || bd.length < 1 ? 1 : bd
    if (bn === undefined || bn.length < 1) {
        bn = String(0);
    }
    var int_b=bn/bd;
    if(int_sign=='-'){
    int_b=-1*int_b;
    }
    var b = Math.fixTo(int_b, 12);
    var bgcd=Math.getGCD(bn,bd)
    var inputValue = "(" + m + ")" + "+(" + b + ")i";
    console.log(inputValue + ":" + expectedValue)
    if (inputValue == expectedValue) {
    var msimp=mgcd!==1&&d!==1;
    var bsimp=bgcd!==1&&bd!==1;
    var simp=(msimp||bsimp)&&this._jsonObj.ans_format == 'lowest_term';
    if(simp){
        throw (ERROR_SIMPLIFY);
    }else{
        return true;
        }
    } else {
        return false;
    }
}
HmFlashWidgetImplComplexNumber.prototype.processWidgetValidation = validateComplexNumber;

// -! type=Trigonometry
function validateTrigonometry() {
    var expectedValue = cm_unescape(this._jsonObj.value);
    var ans_format = cm_unescape(this._jsonObj.ans_format);
    var type = cm_unescape(this._jsonObj.stype);
    
    var isMixed_exp=false;
    var fraction_has_one=false;
    var fraction_has_zero=false;
    var whole_has_zero=false;
    //
    if(this._jsonObj.addCheckbox){
       var __break=controlCheck(expectedValue,false,this._jsonObj);
       if(!(__break==='null')){
            return __break
       }
       expectedValue=expectedValue.split("|");
       expectedValue.pop()
       expectedValue=expectedValue.join("|");
       
    }
    expectedValue = String(expectedValue);
    var isExpression_ans0 = expectedValue=='undefined'?false:regExpMatch('[a-z\u221A\u03c0]', expectedValue)
    if (expectedValue.indexOf('\u2212') > -1) {
        //alert('is a negative, removing unicode negative sign!');
        expectedValue = _replaceAll(expectedValue, '\u2212', '-');
    }
    var inputValue = $get('widget_input_field_1').value;   
    var undefinedCtrl = $get('widget_input_simplified_1')||$get('widget_input_simplified');
    var isUndefined=undefinedCtrl?undefinedCtrl.checked:false;
    var isFrac = isUndefined?false:$get('widget_input_field_2').value != "";
    var isFrac_exp=String(expectedValue).indexOf("/")>-1;
    var fld3 = $get('widget_input_field_3');
    var isMixed = fld3 != null && fld3.value != "";
    if(!isUndefined){
        var fmsg=isFrac?'You need to enter a value in each blank space.':'Enter Something!';    
        verifyIsNotNullOrEmpty(inputValue,isMixed?'For a mixed number, you need to enter a number in each blank space.':fmsg);
     }    
    if (!isNaN(Number(inputValue))) {
        inputValue = String(Number(inputValue));
        if(isUndefined){
        inputValue='undefined';
        }
    }
    isFrac = isMixed ? false : isFrac
    var num, den, whole
    if (isFrac) {
        num = inputValue
        den = $get('widget_input_field_2').value
        den = den == "" || den == undefined ? '1' : den;
        if (!isNaN(Number(den))) {
            den = String(Number(den));
        }
        var d_isNeg = false;
        var n_isNeg = false;
        var num_t = num;
        var den_t = den;
        if (String(den).indexOf("-") > -1) {
            d_isNeg = true
            den_t = String(den).substring(1)
        }
        if (String(num).indexOf('-') > -1) {
            n_isNeg = true;
            num_t = d_isNeg ? String(num).substring(1) : num;
        } else {
            num_t = d_isNeg ? '-' + num : num;
        }
        if (d_isNeg && n_isNeg) {
            if (ans_format == 'lowest_term') {
                inputValue = num + "|" + den
            } else {
                inputValue = num_t + "|" + den_t
            }
        } else {
            inputValue = num_t + "|" + den_t
        }
        if (String(den) == '1'&&!isFrac_exp) {
            inputValue = num;            
        }
        if (String(num) == '0') {
            inputValue = num;        
        }
        if (String(den) == '0') {
            throw(ERROR_den_0);            
        }
    }
    expectedValue=expectedValue.split(")/(").join(")|(");
    var boo_1 = inputValue == expectedValue;
    var boo_2=true;
    inputValue = String(inputValue);
    expectedValue = String(expectedValue);
    boo_2=compareTrigFunc(inputValue,expectedValue);
    if(boo_2){
       return true;
    }else{
        return false;
    }
     

}
HmFlashWidgetImplTrig.prototype.processWidgetValidation = validateTrigonometry;
//
// parse polynomial mv widget input for validation
//
function parsePoly(str,vr){
    this.polyarr=[];
    var __this=this;
    function clone(o){
        var obj={};
        for(var m in o){
            obj[m]=o[m];
        }
        return obj;
    }
    function processunit(str){
        var unit=[];
        var hasM=str.indexOf("*")>-1;
        var hasF=str.indexOf("/")>-1;
        if(hasM){
            var a=str.split("*");
            str=(formatCoeff(a));
            console.log(str);
        }
        if(hasF){
        var fr=str.split("/");
        var nu=parseUnit(fr[0]);
        var den=parseUnit(fr[1]);
        var cstr=parseFloat(den[0])>1?nu[0]+"/"+den[0]:nu[0];
        var vstr="";
        for(var x=0;x<nu[1].length;x++){
            var a=add(nu[1][x],den[1][x]*-1);
            vstr+=a?(__this.vari[x]+"^"+a):"";
        }
        str=cstr+vstr;
        console.log(str);
        }
        unit=parseUnit(str);
        return unit;
    }
    function formatCoeff(a){
        var arr=[];
        for(var i=0,l=a.length;i<l;i++){
            var u=a[i];
            if(!isNaN(u)){
               arr.unshift(u)
            }else{
               arr.push(u) 
            }
        }
        return arr.join("");
    }
    function parseUnit(s){
        var _s=s.replace(/[a-z]\^\-?[0-9]/g,"").replace(/[a-z]/g,"");
        
        var co='1';
        var v=[]
        if(false){
            v=rearrangeVar(s);
            v=arrangebyDeg(v);
        }else if(String(s)===String(_s)){
            co=s;
            v=arrangebyDeg([]);
        }else{
            var pre=String(_s);
            var l=pre.length;
            var pos=s.substring(l);
            _s=_s==="-"?"-1":_s;
            _s=_s===""?"1":_s;
            co=_s;
            v=rearrangeVar(pos);
            v=arrangebyDeg(v);
        }
        return [co,v];
    }
    function arrangebyDeg(arr){

        var vobj={};
        var vr=__this.vari;
        for(var z=0;z<vr.length;z++){
            vobj[vr[z]]='0';
        }
        for(var i=0,l=arr.length;i<l;i++){
            var u=arr[i];
            u=u.split("^");
            if(u[0]){
                var xv=parseFloat(vobj[u[0]]);
                var nv=parseFloat(u[1]||'1');
                vobj[u[0]]=xv+nv;
            }
        }
        var _a=[]
        for(var n in vobj){
            _a.push(vobj[n]);
        }
        return _a;
    }
    function rearrangeVar(str){
        var s=str;
        var arr=s.match(/[a-z]\^\-?[0-9]/g);
        if(arr){
        for(var i=0,l=arr.length;i<l;i++){
            s=s.split(arr[i]).join("");
        }
        }else{
        arr=[]
        }
        if(s){
        arr=(s.match(/[a-z]/g)||[]).concat(arr);
        
        }
        arr.sort();
        return arr;
    }
    this.init=function(str,vs){
        this.ps=str;
        this.vari=vs;
        
        var _str=str.split("-").join("+-");
        this.temparr=_str.split("+");
        var pre=this.temparr[0];
        pre=pre.split(" ").join("");
        if(pre===""){
        this.temparr.shift();
        }
        this.processpolyunits();
    }
    this.simplify=function(){
        var arr=[].concat(this.polyarr);
        var narr=[]
        while(arr.length){
            var node=arr.shift();
            combine(node,arr);
            narr.push(node)
        }
        this.polyarr=narr;
        console.log(this.polyarr);
    }
    function combine(a1,arr){
        var a=a1[0];
        var b=a1[1].join("|");
        for(var i=0;i<arr.length;i++){
            var u=arr[i];
            var c=u[0];
            var d=u[1].join("|");
            if(d===b){
            a=add(a,c);
            arr.splice(i,1);
            i=i-1;
            }
        }
        a1[0]=a;
    }
    function compare(a1,arr){
        var a=String(a1[0]);
        var b=a1[1].join("|");
        for(var i=0;i<arr.length;i++){
            var u=arr[i];
            var c=String(u[0]);
            var d=u[1].join("|");
            if(c===a&&d===b){
                return i;
            }
        }
        return -1; 
    }
    function add(a,b){
        var s=eval(String(a))+eval(String(b));
        return String(s);
    }
    this.processpolyunits=function(){
        var l=this.temparr?this.temparr.length:0;
        for(var i=0;i<l;i++){
            var unit=processunit(this.temparr[i]);
            this.polyarr.push(unit);
        }
        
        console.log(this.polyarr);
    }
    this.validate=function(arr){
        var earr=this.polyarr;
        var iarr=arr;
        var idx;
        var boo=false;
        for(var i=0;i<iarr.length;i++){
            if(String(iarr[i][0])=="0"){
                boo=true;
                continue;
            }
            idx=compare(iarr[i],earr);
            if(idx>-1){
                boo=true;
                earr.splice(idx,1);
            }else{
                boo=false;
                break;
            }
        }
        return boo;
    }
    
    this.init(str,vr);
}
var Base64={_keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",encode:function(C){var A="";var J,H,F,I,G,E,D;var B=0;C=Base64._utf8_encode(C);while(B<C.length){J=C.charCodeAt(B++);H=C.charCodeAt(B++);F=C.charCodeAt(B++);I=J>>2;G=((J&3)<<4)|(H>>4);E=((H&15)<<2)|(F>>6);D=F&63;if(isNaN(H)){E=D=64}else{if(isNaN(F)){D=64}}A=A+this._keyStr.charAt(I)+this._keyStr.charAt(G)+this._keyStr.charAt(E)+this._keyStr.charAt(D)}return A},decode:function(C){var A="";var J,H,F;var I,G,E,D;var B=0;C=C.replace(/[^A-Za-z0-9\+\/\=]/g,"");while(B<C.length){I=this._keyStr.indexOf(C.charAt(B++));G=this._keyStr.indexOf(C.charAt(B++));E=this._keyStr.indexOf(C.charAt(B++));D=this._keyStr.indexOf(C.charAt(B++));J=(I<<2)|(G>>4);H=((G&15)<<4)|(E>>2);F=((E&3)<<6)|D;A=A+String.fromCharCode(J);if(E!=64){A=A+String.fromCharCode(H)}if(D!=64){A=A+String.fromCharCode(F)}}A=Base64._utf8_decode(A);return A},_utf8_encode:function(B){B=B.replace(/\r\n/g,"\n");var A="";for(var D=0;D<B.length;D++){var C=B.charCodeAt(D);if(C<128){A+=String.fromCharCode(C)}else{if((C>127)&&(C<2048)){A+=String.fromCharCode((C>>6)|192);A+=String.fromCharCode((C&63)|128)}else{A+=String.fromCharCode((C>>12)|224);A+=String.fromCharCode(((C>>6)&63)|128);A+=String.fromCharCode((C&63)|128)}}}return A},_utf8_decode:function(A){var B="";var C=0;var D=c1=c2=0;while(C<A.length){D=A.charCodeAt(C);if(D<128){B+=String.fromCharCode(D);C++}else{if((D>191)&&(D<224)){c2=A.charCodeAt(C+1);B+=String.fromCharCode(((D&31)<<6)|(c2&63));C+=2}else{c2=A.charCodeAt(C+1);c3=A.charCodeAt(C+2);B+=String.fromCharCode(((D&15)<<12)|((c2&63)<<6)|(c3&63));C+=3}}}return B}};String.prototype.groupDigits=function(){var C=this;var B=C.length;var E="";if(B>3){var A=C.split("");var F=0;for(var D=B-1;D>=0;D--){E=A[D]+E;F++;if(F%3==0){if(B>F){E=","+E}}}}else{E=C}return E};String.groupDigits=function(G){var C=String(G);var B=C.length;var E="";if(B>3){var A=C.split("");var F=0;for(var D=B-1;D>=0;D--){E=A[D]+E;F++;if(F%3==0){if(B>F){E=","+E}}}}else{E=C}return E};Array.prototype.shuffle=function(E){var A=this.length;var C=E?E:A;while(C--){var D=parseInt(String(Math.random()*A));var B=this[C];this[C]=this[D];this[D]=B}};Array.prototype.pushUnique=function(C,G){var A=true;var F;var D;var E=this;for(var B=0;B<E.length;B++){if(G){F=E[B][G];D=C[G]}else{F=E[B];D=C}if(D==F){A=!true;break}}A?E.push(C):"";return A};Array.prototype.randomNumbers=function(G,F,D,E){var B;var C;var A=E==undefined?true:E;while(this.length<D){B=Math.round(Math.random()*(G-F))+F;if(A){C=this.pushUnique(B)}else{this.push(B)}}return this};Array.randomNumberArray=function(H,G,E,F){var C;var D;var B=F==undefined?true:F;var A=[];while(A.length<E){C=Math.round(Math.random()*(H-G))+G;if(B){D=A.pushUnique(C)}else{A.push(C)}}return A};Array.shuffleArray=function(B,E){var A=B.length;var F=[];var C=[];F.randomNumbers(0,A-1,A,true);if(E==undefined){E=A}for(var D=0;D<E;D++){C.push(B[F[D]])}return C};Array.prototype.getIndex=function(C,D){for(var A=0;A<this.length;A++){var B=D==undefined?this[A]:this[A][D];if(B==C){return A}}return null};Array.joinWith=function(A,B){return A.join(B)};Array.arrayOf=function(D,B){var A=[];for(var C=0;C<B;C++){A.push(D)}return A};Math.spl_comma=function(A){var C=new String();var B;C=String(A).split(",");B=C.join("<br/>");return B};Math.getcommonfactors=function(H,G){var E=H;var B=G;if(isNaN(E)||isNaN(B)){return("Please enter valid number values")}if(E==0||B==0){return("No common factors")}E=Math.abs(E);B=Math.abs(B);var D=[],A;for(var A=1;Math.min(E,B)>A;A++){var F=E/A;if(F==Math.round(F)){var C=B/A;if(C==Math.round(C)){D.push(A)}}}return(D)};Math.getmultiple=function(F){var H=F;var G=Math.getPrimeFactors(H);var K=[1];for(var D=0;G.length>D;D++){K.pushUnique(G[D])}var E=[];var I=[];for(var C=0;K.length>C;C++){var A=K[C];var J=H/A;var B="<math><mrow><mn>"+H+"</mn><mo>=</mo><mn>"+A+"</mn><mo>\u00D7</mo><mn>"+J+"</mn></mrow></math>";E.push([B])}return E.join("<br/>")};Math.multiple=function(A,E){var B="";var D="";var C=A;for(i=1;i<E;i++){B+="<mn>"+A+"</mn><mo>&times;</mo>";C=C*A;D+="<math><mrow>"+B+"<mn>"+A+"</mn><mo>=</mo><mn>"+C+"</mn></mrow></math><br/>"}return(D)};Math.leMultiple=function(A,G,F){var C="";var E="";var D=A;var B;for(i=1;i<G;i++){C+="<mn>"+A+"</mn><mo>&times;</mo>";D=D*(A);B=D.toFixed(F);E+="<math><mrow>"+C+"<mn>"+A+"</mn><mo>=</mo><mn>"+D+"</mn></mrow></math><br/>"}return(E)};Math.reMultiple=function(B,D,H){var J="";var I="";var G="";var E="";var L=B;var K=D;var C="<math><mrow>";var A="</mrow></math>";var F="";for(i=1;i<H;i++){J+=C+"<mfrac><mtext>"+B+"</mtext><mtext>"+D+"</mtext></mfrac>"+A+" &times; ";G+=B+" &times; ";E+=D+" &times; ";L=L*(B);K=K*(D);I+=J+C+"<mfrac><mtext>"+B+"</mtext><mtext>"+D+"</mtext></mfrac>"+A+" = "+C+"<mfrac><mtext>"+G+B+"</mtext><mtext>"+E+D+"</mtext></mfrac>"+A+" = "+C+"<mfrac><mtext>"+L+"</mtext><mtext>"+K+"</mtext></mfrac>"+A+"<br/>"}return(I)};Math.randomNumber=function(G,F){var C;var D;var B=true;var A=[];var E=F-G;while(A.length<E){C=Math.round(Math.random()*(G-F))+F;if(B){D=A.pushUnique(C)}else{A.push(C)}}A.shuffle();return A[0]};Math.fixTo=function(D,B,A){if(Number(D)==Number.NaN){return D}if(A==undefined){A=true}var C;C=Math.pow(10,B)*D;if(A){C=Math.round(C)}else{C=Math.floor(C)}C=C/Math.pow(10,B);return C};Math.addFrac=function(H,G){var M=H.split("/");var K=G.split("/");var E,J,F,L,I,D,A;L=M[0];I=K[0];D=M[1]?M[1]:1;A=K[1]?K[1]:1;F=Math.getLCM(D*1,A*1);J=F;L=(F/D)*L;I=(F/A)*I;E=L+I;var C=E+"/"+J;var B=Math.simpleFrac(C);return{frac:C,val:B}};Math.simpleFrac=function(A){var D=String(A).indexOf("/")!=-1?true:false;var F=String(A).indexOf(".")!=-1?true:false;var B,E;var I=A;if(D){}else{if(F){I=Math.convertToFrac(A).val}else{return A}}var C=String(I).split("/");B=C[0];E=C[1];var H=B.indexOf("-")>-1?"-":"";var G=E.indexOf("-")>-1?"-":"";B=B.split("-").join("");E=E.split("-").join("");gcd=Math.getGCD(B,E);B=B/gcd;E=E/gcd;B=Math.fixTo(B,8);E=Math.fixTo(E,8);var J=(H=="-"&&G=="-")?"":(H=="-"||G=="-"?"-":"");if(E==1){return J+""+B}return J+""+B+"/"+E};Math.convertToFrac=function(C){var G,B;var E={};var F=String(C).indexOf("/")!=-1?true:false;var H=String(C).indexOf(".")!=-1?true:false;if(F){var D=String(C).split("/");E.n=D[0];E.d=D[1];E.val=String(C);return E}if(!H){E.n=C;E.d=1;E.val=String(C)}else{var I=String(C).split(".")[1].length;var A=true;var K=0;var J;while(A){K++;J=(C*K);if(I>=4){J=Math.fixTo(J,3)}else{J=Math.fixTo(J,8)}if(J==parseInt(J)||K>10000){E.n=J;E.d=K;E.val=J+"/"+K;A=false}}}return E};Math.getGCD=function(){var E=arguments.length;var C;if(E<2){var B=String(arguments[0]);if(Number(B)!=Number.NaN){return arguments[0]}else{if(B.indexOf("/")==-1){return arguments[0]}else{var A=B.split("/");var F=A[0];var D=A[1];return Math.getGCD(F,D)}}}else{if(E>2){return null}else{if(arguments[1]==0){return arguments[0]}else{return Math.getGCD(arguments[1],Math.fixTo(arguments[0]%arguments[1],8))}}}};Math.getLCM=function(){var F=arguments.length;var D;var C;if(F<2){var B=String(arguments[0]);if(Number(B)!=Number.NaN){return arguments[0]}else{if(B.indexOf("/")==-1){return arguments[0]}else{var A=B.split("/");var G=A[0];var E=A[1];return getLCM(G,E)}}}else{if(F>2){return null}else{if(arguments[1]==0){return arguments[0]}else{C=Math.getGCD(arguments[0],arguments[1]);D=(arguments[0]*arguments[1])/C;return D}}}};Math.rand=function(D,A){var C,B;B=A;C=D;if(!A){B=D;C=0}return Math.floor(Math.random()*(B-C+1))+C};Math.getProduct=function(B){var A=1;for(var C=0;C<B.length;C++){A=A*B[C]}return A};Math.primeStr="~2~3~5~7~11~13~17~19~23~29~31~37~41~43~47~53~59~61~67~71~73~79~83~89~97~101~103~107~109~113~127~131~137~139~149~151~157~163~167~173~179~181~191~193~197~199~211~223~227~229~233~239~241~251~257~263~269~271~277~281~283~293~307~311~313~317~331~337~347~349~353~359~367~373~379~383~389~397~401~409~419~421~431~433~439~443~449~457~461~463~467~479~487~491~499~503~509~521~523~541~547~557~563~569~571~577~587~593~599~601~607~613~617~619~631~641~643~647~653~659~661~673~677~683~691~701~709~719~727~733~739~743~751~757~761~769~773~787~797~809~811~821~823~827~829~839~853~857~859~863~877~881~883~887~907~911~919~929~937~941~947~953~967~971~977~983~991~997~";Math.primeArr=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997];Math.isPrime=function(B){var A="~"+B+"~";return Math.primeStr.indexOf(A)!=-1};Math.getFirstPrimeFact=function(C){var A=Math.primeArr.length;for(var B=0;B<A;B++){if(C%Math.primeArr[B]==0){return Math.primeArr[B]}}};Math.log10=function(A){return Math.log(A)/Math.log(10)};Math.getPrimeFactors=function(C){var B=[];var A;if(C<2){return[C]}console.log("FLASH_CARD_MNGR_CALLING GET PRIME FACTORS "+C+":"+Math.isPrime(C));while(!Math.isPrime(C)){A=Math.getFirstPrimeFact(C);B.push(A);C=C/A}B.push(C);return B};Math.getUniquePrimeFactors=function(C){var B=[];var A;if(C<2){return[C]}console.log("FLASH_CARD_MNGR_CALLING GET PRIME FACTORS "+C+":"+Math.isPrime(C));while(!Math.isPrime(C)){A=Math.getFirstPrimeFact(C);B.pushUnique(A);C=C/A}B.pushUnique(C);return B};Math.getCommonPrimeFactors=function(){function A(T,Q,M){var P=[].concat(M);var S=T+" = ";var O;for(var N=0;N<Q.length;N++){O=false;for(var R=0;R<P.length;R++){if(Q[N]==P[R]){O=true;P.splice(R,1);break}}if(N==Q.length-1){op=""}else{op="*"}if(O){if(Q[N]=="1"){S+="<b>"+Q[N]+"</b>"+op}else{S+="<b><font color='red'>"+Q[N]+"</font></b>"+op}}else{S+=Q[N]+op}}S=S.split("*").join(" \u00d7 ");return S}var C,J,I,F;C=arguments[0];J=arguments[1];if(arguments.length==3){F=arguments[2]}else{I=arguments[2];F=arguments[3]}var G=Math.getPrimeFactors(C);var D=Math.getPrimeFactors(J);var H=I?Math.getPrimeFactors(I):null;var B=Math.getPrimeFactors(F);var E=A(C,G,B);var L=A(J,D,B);var K=H==null?null:A(I,H,B);if(G.length==1){if(String(C)=="1"){E=E+""}else{E=E+" <b>("+C+" is prime)</b>"}}if(D.length==1){if(String(J)=="1"){L=L+""}else{L=L+" <b>("+J+" is prime)</b>"}}if(H&&H.length==1){if(String(I)=="1"){K=K+""}else{K=K+" <b>("+I+" is prime)</b>"}}console.log(E+":"+L+":"+K);if(H){return[E,L,K,G,D,B,H]}else{return[E,L,G,D,B]}};Math.displayPrimeMultiples=function(D){var A=Math.getmultiple(D);var C="";for(var B=0;A.length>B;B++){C+=A[B]+"<br/>"}return C};Math.getAllMultiples=function(E){var G=E;var F=Math.factors(G);var J=[];for(var C=0;F.length>C;C++){if(F[C]<=Math.round(Math.sqrt(G))){J.push(F[C])}}var D=[];var H=[];for(var B=0;J.length>B;B++){var A=J[B];var I=G/A;D.push([G+" = "+A+"\u00D7"+I])}return D.join("<br/>")};Math.factors=function(A){var C=[],B;for(B=1;B<=Math.floor(Math.sqrt(A));B+=1){if(A%B===0){C.push(B);if(A/B!==B){C.push(A/B)}}}C.sort(function(E,D){return E-D});return C};var Display_mngr=(function(){var dm={};dm.checkForRepeater=function(p){var str=String(p);var l=str.length;var pstr="";var ind;var pObj={};pObj.repeat=false;var r=new RegExp();for(var i=0;i<l;i++){pstr=str.charAt(i);for(var j=i+1;j<l;j++){ind=str.indexOf(pstr,j);if(ind==i+pstr.length){sub=str.substring(i);m=sub.length%pstr.length;sub=sub.substr(0,sub.length-m);rc=sub.length/pstr.length;if(sub.length<pstr.length){break}if(sub.length<=2){break}r.compile("("+pstr+"){"+rc+"}");pObj.repeat=r.test(sub);if(pObj.repeat){pObj.s=i;pObj.l=pstr.length;pObj.str=pstr;pObj.repeat=true;return pObj}}pstr+=str.charAt(j)}}return pObj};dm.display_longDivision=function(eqn,div,w,h,fcol,fsize){var eqn;var dHold;var graphic;var deciPlaces;var stopAt;var trimAt;var fontSize;var fontColor;var step_total;var ret_ref;var cstep;var step_scope;var step_obj;var cells_created;var cw,ch;var xoff=40;var yoff=35;var canvasHeight=0;var adddeciwidth=false;var deciwidthadded=false;var deciwidth,decipos,spos;var r=new RegExp();deciPlaces=6;stopAt=8;trimAt=4;trace("DISPLAY_LONG_DIV:",eqn,div);function trace(){var args=arguments;var str="";for(var i=0;i<args.length;i++){str+=args[i]+" "}console.log(str)}function getWidth(arr){var w=0;var ctx=graphic;ctx.textBaseline="bottom";ctx.font=""+fontSize+'pt STIXGeneral, "Times New Roman", Times, serif';ctx.fillStyle=fontColor;for(var i=0;i<arr.length;i++){var tw=ctx.measureText(arr[i]).width;if(String(arr[i]).length&&tw==0){tw=Math.round(fontSize/2)+1;tw=tw*String(arr[i]).length}w+=tw}return w}function createCells(scope,n,arr,e,a){var cell;var pcell;var xp=scope.lastChild?scope.lastChild.x+scope.lastChild.width:scope.x;var yp=scope.y+5;pcell=scope.lastChild;cells_created=[];var l=0;var al=100;if(scope.numChild){l=scope.numChild}var emp=e?e:0;var wd=0;if(pcell){wd=scope.id==pcell.parent?scope.width:0}var ctx=graphic;ctx.textBaseline="bottom";ctx.font=""+fontSize+'pt STIXGeneral, "Times New Roman", Times, serif';ctx.fillStyle=fontColor;var dw=ctx.measureText("0").width;if(dw==0){tw=Math.round(fontSize/2)+1}var sw=0;for(var z=0;z<emp;z++){sw+=dw}if(adddeciwidth){adddeciwidth=false;deciwidthadded=true}for(var i=0;i<n;i++){cell={};cell.parent=scope.id;cell.text=arr[i]?arr[i]:"0";cell.x=xp+sw;cell.y=yp;cell.alpha=al;cell.width=ctx.measureText(cell.text).width;if(String(cell.text).length&&cell.width==0){cell.width=Math.round(fontSize/2)+1;cell.width=cell.width*String(cell.text).length;if(cell.text=="."){cell.width=Math.round(fontSize/3)}}var cx=cell.x;if(cell.text=="."){deciwidth=cell.width;decipos=cell.x}else{if(!(pcell&&(pcell.parent==="qt"||pcell.parent==="divd"))){var dc=cell.x-decipos;if(dc>=-0.5){cx=cx+deciwidth}}}xp=xp+cell.width;wd+=cell.width;pcell=cell;ctx.fillText(cell.text,cx,cell.y);cells_created.push(cell)}scope.width=wd;scope.lastChild=cell;scope.numChild=l+n}function drawLine(x,y,w,h,d){var ctx=graphic;ctx.strokeStyle="BLACK";ctx.lineWidth=2;ctx.beginPath();ctx.moveTo(x,y);if(d=="vertical"){ctx.lineTo(x,y+h)}else{ctx.lineTo(x+w,y)}ctx.stroke();ctx.closePath()}function display(obj,mc){var divd=obj.dividend;var divr=obj.divisor;var dL=obj.steps.length;var divUnit={};var divd={x:xoff+5,y:31,height:20,width:0,id:"divd"};var qt={id:"qt"};var roof={x:xoff,y:31,width:10,id:"roof"};var wall={x:xoff,y:31,height:20,id:"wall"};var step=0;divUnit.divd=divd;divUnit.qt=qt;divUnit.roof=roof;divUnit.wall=wall;divUnit.divd.x=divUnit.roof.x+5;divUnit.divd.y=divUnit.roof.y+(fontSize*1.5)-4;divUnit.qt.x=divUnit.divd.x;divUnit.qt.y=divUnit.roof.y-5;canvasHeight=divUnit.divd.y;var ref=divUnit.divd;var ctx=graphic;ctx.textBaseline="bottom";ctx.font=""+fontSize+'pt STIXGeneral, "Times New Roman", Times, serif';ctx.fillStyle=fontColor;var tw=ctx.measureText(String(divr)).width;var mob=ctx.measureText(String(divr));if(String(divr).length&&tw==0){tw=Math.round(fontSize/2)+1;tw=tw*String(divr).length}ctx.fillText(divr,roof.x-tw-3,roof.y+(fontSize*1.5)+1);drawLine(roof.x,roof.y,roof.width+15);drawWall(ctx,wall.x,wall.y,wall.x,wall.y+wall.height);createCells(divUnit.divd,obj.dLength,obj.digits,undefined,100);while(dL){ref=renderStep(step,obj,divUnit,ref);if(step===0){spos=ref.x}if(ref==undefined){break}step++;dL--}divUnit.roof.width=Math.max(50,divUnit.divd.width+7);drawLine(divUnit.roof.x,divUnit.roof.y,divUnit.roof.width+5)}function renderStep(step,obj,unit,pos){var fpos=pos;var rObj=obj.steps[step];var shifted=false;var shiftC=0;currentStep=rObj.step;if(step==obj.steps.length-1&&rObj.step=="bringDown"){trace("END_OF_LONG_DIVISION_RENDERING "+fpos.y);if(obj.repeater&&step==obj.repeater.stopAt){createCells(unit.qt,1,["..."])}return }else{if(obj.repeater&&step==obj.repeater.stopAt){trace("END_OF_LONG_DIVISION_RENDERING "+fpos.y);createCells(unit.qt,1,["..."]);return }else{if(step==obj.stopAt){trace("END_OF_LONG_DIVISION_RENDERING "+fpos.y);canvasHeight=fpos.y;return }}}if(rObj.step=="divide"){var emp;if(step==0){var v1=String(rObj.value*obj.divisor).length;var v2=String(obj.digits[0]).length;if(v1>1){emp=v1-1;shifted=true;shiftC=0}else{if(v2>1){emp=v2-1;shifted=true;shiftC=0}else{if(String(rObj.value)=="0"&&Number(obj.dividend)<Number(obj.divisor)){emp=String(obj.dividend).length-1;shifted=true;shiftC=emp}}}}createCells(unit.qt,1,[rObj.value],emp)}if(rObj.step=="multiply"){dy=0;if(step==1){var v1=String(rObj.value).length;var v2=String(obj.digits[0]).length;if(String(rObj.value)=="0"&&Number(obj.dividend)<Number(obj.divisor)){emp=String(obj.dividend).length-1;shiftC=emp}else{if(v2>v1){emp=v2-v1;shiftC=emp}}dy=6}var w=100;var h=35;var floorF;floorF=unit["s_"+step]={};var val=String(rObj.value);var arr=val.split("");for(var z=0;z<shiftC;z++){arr.unshift("0")}floorF.width=getWidth(arr);floorF.height=fontSize+5;floorF.id="multiply";var xpos=fpos.x+fpos.width-floorF.width;var ypos=fpos.y+fpos.height-dy;floorF.x=fpos.id=="divd"?fpos.x:xpos;floorF.y=ypos+2;createCells(floorF,arr.length,arr);fpos=floorF;canvasHeight=fpos.y}if(rObj.step=="subtract"){var rF=step==2?fpos:unit["s_"+(step-4)];var xpos=rF.x;var ypos=fpos.y;var w=100;var h=35;var dx=0;var dw=0;if(decipos){if((xpos<decipos)&&(xpos+rF.width>decipos+deciwidth)){dx=0;dw=deciwidth}else{if((xpos+rF.width>decipos+deciwidth)){dx=deciwidth;dw=0}}}var rf=drawLine(xpos+dx,ypos+3,rF.width+dw);var floorF;floorF=unit["s_"+step]={};var val=String(rObj.value);var arr=val.split("");floorF.width=getWidth(arr);floorF.height=fontSize;floorF.id="subtract";xpos=fpos.x+fpos.width-floorF.width;floorF.x=xpos;floorF.y=ypos+floorF.height+7;createCells(floorF,arr.length,arr);fpos=floorF;canvasHeight=fpos.y}if(rObj.step=="bringDown"){if(rObj.place=="deci"&&!deciwidthadded){adddeciwidth=deciwidthadded?false:true}if(rObj.addDeci){createCells(unit.qt,1,["."]);createCells(unit.divd,1,["."])}if(rObj.place=="deci"){createCells(unit.divd,1,["0"])}createCells(fpos,1,[rObj.value]);trace("bringDown "+fpos.y);canvasHeight=fpos.y}return fpos}function divide(n,d){var resultObj={};resultObj.dividend=n;resultObj.divisor=d;resultObj.approx=false;resultObj.repeater=false;var resultArr=[];var digits=String(n).split("");var reminder="";var quotient="";var cDigits;var divisor=Number(d);var stepObj;var limit=deciPlaces;var position=0;var quo="";var dPlace="int";resultObj.dPlace=dPlace;var rePattern="";var fdig=digits.shift()*1;var dc=0;while(fdig<divisor){if(!digits.length){boo=false;break}fdig=(fdig+digits.shift())*1}digits.unshift(String(fdig));resultObj.digits=digits;var dLength=digits.length;resultObj.dLength=dLength;var step=0;var d2explore=dLength;cDigits=reminder+digits[step];while(d2explore){quotient=String(parseInt(String(cDigits/divisor)));reminder=String(Number(cDigits)%divisor);step++;if(reminder!=="0"&&d2explore===1){digits.push(0);position++}else{d2explore--}if(dPlace=="deci"&&d2explore===1){rePattern+=quotient}genDMSStep();if(position>limit){if(d2explore!==0){resultObj.approx=!false}break}}pObj=checkForRepeater(rePattern,d);pObj.position=resultArr.length;if(pObj.repeat){pObj.stopAt=resultObj.dpos+(pObj.s*4)+(stopAt);pObj.trimAt=resultObj.dpos+(pObj.s*4)+(trimAt);resultObj.repeater=pObj}else{resultObj.stopAt=resultObj.dpos+12}resultObj.dresult=trimQuotient(resultObj);return resultObj;function genDMSStep(){stepObj={};stepObj.step="divide";stepObj.value=quotient;stepObj.digits=cDigits;resultArr.push(stepObj);quo+=quotient;stepObj={};stepObj.step="multiply";stepObj.value=quotient*d;stepObj.digits=cDigits;resultArr.push(stepObj);stepObj={};stepObj.step="subtract";stepObj.value=reminder;stepObj.digits=cDigits;resultArr.push(stepObj);resultObj.reminder=reminder;if(d2explore!==0){stepObj={};stepObj.step="bringDown";stepObj.value=digits[step];cDigits=reminder+digits[step];stepObj.addDeci=!true;stepObj.place=dPlace;if(dPlace=="int"&&position==1){dPlace="deci";stepObj.place=dPlace;stepObj.addDeci=true;quo+=".";resultObj.dPlace=dPlace;resultObj.dpos=resultArr.length}stepObj.digits=cDigits;resultArr.push(stepObj)}resultObj.quotient=quo;resultObj.steps=resultArr}}function trimQuotient(obj){if(!obj.repeat){return obj.quotient}var q=obj.quotient;var s=obj.repeater.s;var qstr=q.split(".")[1];var tstr=qstr.substr(s,obj.repeater.l);var rstr=q.split(".")[0]+"."+qstr.substr(0,s)+tstr+"...";return rstr}function checkForRepeater(p){var str=String(p);var l=str.length;var pstr="";var ind;var pObj={};pObj.repeat=false;for(var i=0;i<l;i++){pstr=str.charAt(i);for(var j=i+1;j<l;j++){ind=str.indexOf(pstr,j);if(ind==i+pstr.length){sub=str.substring(i);m=sub.length%pstr.length;sub=sub.substr(0,sub.length-m);rc=sub.length/pstr.length;if(sub.length<pstr.length){break}if(sub.length<=2){break}r.compile("("+pstr+"){"+rc+"}");pObj.repeat=r.test(sub);if(pObj.repeat){pObj.s=i;pObj.l=pstr.length;pObj.str=pstr;pObj.repeat=true;return pObj}}pstr+=str.charAt(j)}}return pObj}function drawWall(context,x0,y0,x1,y1){context.strokeStyle="BLACK";context.lineWidth=2;context.beginPath();context.moveTo(x0,y0);context.quadraticCurveTo(x0+5,y0+(y1-y0)/2,x1,y1);context.stroke();context.closePath()}function displayLongDivision(eqn,div,w,h,fcol,fsize){var n,d;dHold=document.createElement("canvas");dHold.width=cw=w?w:150;dHold.height=ch=h?h:300;div.appendChild(dHold);var isIE=false;try{if(typeof G_vmlCanvasManager!="undefined"){G_vmlCanvasManager.initElement(dHold);isIE=true}else{console.log("DEBUG_IE: G_vmlCanvasManager not available")}}catch(error){console.log("DEBUG_IE:"+error)}graphic=dHold.getContext("2d");if(isIE){graphic.fillStyle="#777777";graphic.fillRect(0,0,cw,ch)}fontSize=fsize?fsize:14;fontColor=fontColor?fontColor:"BLACK";var eqn=String(eqn).split("/");n=eqn[0];d=eqn[1];var pObj=checkForRepeater(n/d);if(pObj.repeat){deciPlaces=Math.max(6,(pObj.l*2));trimAt=Math.max(4,pObj.l*2);stopAt=trimAt*2}var re=divide(n,d);var mc=display(re,dHold);if(!isIE){var dcanvas=document.createElement("canvas");dcanvas.width=w?w:150;dcanvas.height=h?h:canvasHeight+10;try{if(typeof G_vmlCanvasManager!="undefined"){G_vmlCanvasManager.initElement(dcanvas)}else{console.log("DEBUG_IE: G_vmlCanvasManager not available")}}catch(error){console.log("DEBUG_IE:"+error)}var dcontext=dcanvas.getContext("2d");dcontext.drawImage(dHold,0,0,dcanvas.width,dcanvas.height,0,0,dcanvas.width,dcanvas.height);div.appendChild(dcanvas);div.removeChild(dHold)}}displayLongDivision(eqn,div,w,h,fcol,fsize)};dm.display_verticalOperations=function(oprn,_l_op,_r_op,div,w,h,fm,fsize){var ctx;var w,h,dHold,fsize,fontColor,_m_arr,cw,ch;var fontFamily=fm?fm:'STIXGeneral, "Times New Roman", Times, serif';var isIE=false;function getWidth(txt){var tw=ctx.measureText(txt).width;console.log("GET_WIDTH: "+txt+"  -  width:"+tw);return tw}function formatDigitDisp(n,c,o,b){var str;var rect=_m_arr[n];var sfsize=Math.round(fontSize*0.8);var sspace=Math.round(fontSize*0.85);var cfsize=Math.round(fontSize*0.7);if(o!==""&&o!==null){var ostr=1;ostr=1;if(b){ostr=2}if(c){ctx.strokeStyle="black";ctx.lineWidth=1;ctx.beginPath();ctx.moveTo(rect[0]+rect[2]-2,rect[1]+2);ctx.lineTo(rect[0]+2,rect[1]+rect[3]+8);ctx.stroke();ctx.closePath();setFont(ctx,sfsize);dw=getWidth(0);var xp=rect[0]+(rect[2]-dw)/2;var yp=rect[1]-sspace;ctx.fillText(o,xp,yp);dw=getWidth(c);yp=rect[1]-3;ctx.fillText(c,rect[0]-dw/7,yp);if(ostr==2){console.log("AAA");setFont(ctx,cfsize);var xp0=rect[0];var yp0=rect[1]-(fontSize+1);dw=getWidth(b);ctx.fillText(b,xp0-dw,yp0)}}else{ctx.strokeStyle="black";ctx.lineWidth=1;ctx.beginPath();ctx.moveTo(rect[0]+rect[2]-2,rect[1]+2);ctx.lineTo(rect[0]+2,rect[1]+rect[3]+8);ctx.stroke();ctx.closePath();setFont(ctx,sfsize);dw=getWidth(0);var xp=rect[0]+(rect[2]-dw)/2;var yp=rect[1]-sspace;ctx.fillText(o,xp,yp);if(ostr==2){console.log("BBB",ctx.font);setFont(ctx,cfsize);dw=getWidth(b);var xp0=rect[0];var yp0=rect[1]-(fontSize+1);ctx.fillText(b,xp0-dw/3,yp0)}}}else{if(b){setFont(ctx,sfsize);console.log(ctx.font);dw=getWidth(c);var xp=rect[0]+(rect[2]-dw)/2;var yp=rect[1]-sspace;ctx.fillText(c,xp,yp)}else{console.log("CCC: "+c);setFont(ctx,sfsize);var xp=rect[0];var yp=rect[1]-sspace;dw=getWidth(c);yp=rect[1]-(fontSize*0.2);ctx.fillText(c,xp-dw/5,yp)}}return ctx}function setFont(ctx,f,c){var fp=f?f:fontSize;ctx.textBaseline="top";ctx.font=""+fp+"pt "+fontFamily;ctx.fillStyle=c?c:fontColor;console.log("setFont: "+fp+":"+ctx.font)}function parseData(oprs){var opr="+";if(oprs=="subtract"){opr="-"}var d_pl_l=String(_l_op).split(".")[1];d_pl_l=d_pl_l?d_pl_l.length:0;var d_pl_r=String(_r_op).split(".")[1];d_pl_r=d_pl_r?d_pl_r.length:0;var d_pl=Math.max(d_pl_l,d_pl_r);var fix=d_pl?d_pl:8;var _ans_e=Math.fixTo(eval(_l_op+opr+_r_op),fix);var d_pl_a=String(_ans_e).split(".")[1];d_pl_a=d_pl_a?d_pl_a.length:0;var d_pl_dif=d_pl-d_pl_a;var d_pl_difL=d_pl-d_pl_l;var d_pl_difR=d_pl-d_pl_r;for(var z=0;z<d_pl_dif;z++){_ans_e+="0"}for(var z=0;z<d_pl_difL;z++){_l_op+="0"}for(var z=0;z<d_pl_difR;z++){_r_op+="0"}var _l_op_d=_l_op.split("");var _r_op_d=_r_op.split("");var _a_op_d=String(_ans_e).split("");var _l_op_d_L=_l_op_d.length;var _r_op_d_L=_r_op_d.length;var _a_op_d_L=_a_op_d.length;var _len=Math.max(_l_op_d_L,_r_op_d_L,_a_op_d_L);var _l_dl=_len-_l_op_d_L;var _r_dl=_len-_r_op_d_L;var _a_dl=_len-_a_op_d_L;var offX=20;var offY=20;var startPosX=offX;var startPosY=offX;var cPosX=offX;var cPosY=offX;for(var i=0;i<_l_dl;i++){_l_op_d.unshift("")}for(var i=0;i<_r_dl;i++){_r_op_d.unshift("")}for(var i=0;i<_a_dl;i++){_a_op_d.unshift("")}var _l_disp,_r_disp,_a_disp,_l_calc,_l_dig;_l_disp=[];_r_disp=[];_a_disp=[];_l_calc=[];_l_dig=[];_m_arr=[];dHold=document.createElement("canvas");dHold.width=cw=w?w:150;dHold.height=ch=h?h:120;div.appendChild(dHold);try{if(typeof G_vmlCanvasManager!="undefined"){G_vmlCanvasManager.initElement(dHold);isIE=true}else{console.log("DEBUG_IE: G_vmlCanvasManager not available")}}catch(error){console.log("DEBUG_IE:"+error)}var graphic=dHold.getContext("2d");if(isIE){}fontSize=fsize?fsize:14;fontColor=fontColor?fontColor:"BLACK";ctx=graphic;console.log(ctx+":"+ctx.measureText);setFont(ctx,fontSize,fontColor);var dtxt=".9 ";var tw=getWidth(dtxt)-5;var th=fontSize;var lineW=2;var y1=offX;var y2=y1+fontSize+5;var y3=y2+fontSize+15;var y4=y3+lineW+5;for(var i=0;i<_len;i++){var lrow=_l_op_d[i];var rrow=_r_op_d[i];var arow=_a_op_d[i];console.log(lrow+":"+rrow+":"+arow);var rect=[cPosX,y1,tw,th];console.log("rect  "+rect);var dw=getWidth(lrow);var xp=rect[0]+(tw-dw)/2;var yp=y1;console.log("1  "+lrow+":"+xp+":"+yp);ctx.fillText(lrow,xp,yp);yp=y2;console.log("2  "+rrow+":"+xp+":"+yp);ctx.fillText(rrow,xp,yp);yp=y4-5;console.log("3  "+arow+":"+xp+":"+yp);ctx.fillText(arow,xp,yp);cPosX=cPosX+tw;_m_arr.push(rect)}dw=getWidth(opr);ctx.fillText(opr,(offX-dw)/2,y2);ctx.strokeStyle="black";ctx.lineWidth=lineW;ctx.beginPath();ctx.moveTo((offX-dw)/2,y3);ctx.lineTo(cPosX,y3);ctx.stroke();ctx.closePath();for(var j=_len-1;j>=0;j--){var d1=_l_op_d[j];var d2=_r_op_d[j];if(d1=="."){continue}var d1c=d1==""?0:d1*1;var d2c=d2==""?0:d2*1;if(_l_calc[j]&&_l_calc[j][1]!==null){if(opr=="+"){d1c=(d1*1)+(1*_l_calc[j][1])}else{if(opr=="-"){if(_l_calc[j][2]===null){d1c=(d1*1)+10}else{d1c=(d1*1)}}}}if(opr=="-"&&(d1c<d2c)){var s=j-1;var pp=_l_op_d[s];while(pp==0||pp=="."){s--;if(s<0){break}pp=_l_op_d[s]}if(s<0){}else{for(var k=s;k<=j-1;k++){var d1k=_l_op_d[k];if(d1k=="."){continue}d1kc=d1k==""?0:d1k*1;if(k==s){if(_l_disp[k]){_l_disp[k]=formatDigitDisp(k,1,_l_dig[k][2]);_l_calc[k][1]=1}else{_l_disp[k]=formatDigitDisp(k,null,d1kc-1);_l_calc[k]=[d1k,null,d1kc-1];_l_op_d[k]=d1kc-1;_l_dig[k]=[d1k,null,d1kc-1]}}else{if(_l_disp[k]){_l_disp[k]=formatDigitDisp(k,1,_l_dig[k][2]);_l_calc[k][1]=1}else{d1kc=d1kc+10;_l_disp[k]=formatDigitDisp(k,1,d1kc-1);_l_calc[k]=[d1k,1,d1kc-1];_l_op_d[k]=d1kc-1;_l_dig[k]=[d1k,1,d1kc-1]}}}if(_l_disp[j]){if(_l_dig[j][2]||_l_dig[j][2]===0){_l_disp[j]=formatDigitDisp(j,_l_dig[j][1],_l_dig[j][2],1);d1c=d1c+10}else{_l_disp[j]=formatDigitDisp(j,1,_l_dig[j][2]);_l_calc[j][1]=1}}else{_l_disp[j]=formatDigitDisp(j,1,null);_l_calc[j]=[d1,1,null];_l_dig[j]=[d1,1,null];d1c=d1c+10}}}var r=String(eval(d1c+opr+d2c)).split("");if(!_l_disp[j]){_l_disp[j]=[];_l_calc[j]=[d1,null,null];_l_dig[j]=[d1,null,null]}if(r.length>1&&j>0){r.pop();var plc=1;var prd=_l_op_d[j-plc];if(prd=="."){plc=2;prd=_l_op_d[j-plc]}prd=prd==""?0:prd;if(j==_len-_l_op_d_L){_l_disp[j-plc]=[]}else{_l_disp[j-plc]=formatDigitDisp(j-plc,r.join(""),"",true)}_l_calc[j-plc]=[prd,r.join(""),""];_l_dig[j-plc]=[prd,r.join(""),""]}}}parseData(oprn)};return dm}());if(typeof console==="undefined"){console={log:function(A){}}}function getNodeName(A){var B=A.getAttribute("name");return B?B:""}function jEscape(A){A=A.replace("$","\\$");return A.replace(/(:|\.|\[|\])/g,"\\$1")}function $get(B,E){if(!E){var D=TutorManager.getActiveTutorWrapper();if(D){E=D.tutorDomNode}else{E=document.body}}var F=null;var A='[name="'+B+'"]';var F=$(A,E);var C=null;if(F.length>0){console.log("$get: name="+B);C=F.get(0)}else{console.log("$get: id="+B);A="#"+jEscape(B);F=$(A,E);if(F.length>0){C=F.get(0)}}if(!C){console.log("$get: name/id not found="+B)}return C}function loadjscssfile(A,B){if(B=="js"){var C=document.createElement("script");C.setAttribute("type","text/javascript");C.setAttribute("src",A)}else{if(B=="css"){var C=document.createElement("link");C.setAttribute("rel","stylesheet");C.setAttribute("type","text/css");C.setAttribute("href",A)}}if(typeof C!="undefined"){document.getElementsByTagName("head")[0].appendChild(C)}}var GraphWidget={name:"graph",initialize:function(widgetDom,config){if(config.gtype=="x"){widgetDom.className="widget_graph_x"}else{widgetDom.className="widget_graph_xy"}for(var m in config){console.log(m+" --> "+config[m])}var board=widgetDom;this.graph=new Graph(document,board,config.gtype,config.xmin,config.xmax,config.ymin,config.ymax,config.xinc,config.yinc,config.interactive,config.showZoom,config.show_axis_label,config.width,config.height,config.show_axis,config.show_grid,config.show_half_grid);if(config.plot_data){this.plot=new Plotter(this.graph,"point",{data:config.plot_data},config.snap,config.cntrls,config.autoShift,config.nudge_top,config.labelPlot)}if(config.rerender){this.graph.setAxis(config.xaxis,config.yaxis);this.graph.scaleGraph(config.xscale,config.yscale);new Plotter(this.graph,"point",{data:config.plot_data},config.snap,config.cntrls,false,config.nudge_top,config.labelPlot)}var thatPlot=this.plot;var thatGraph=this.graph;return{type:"graph",inst_graph:thatGraph,inst_plot:thatPlot,getWidgetValue:function(){return thatPlot.getInputData()},setWidgetValue:function(jsonString,doValidate){var _config=eval("("+jsonString+")");if(_config&&_config.plot_data){thatGraph.setAxis(_config.xaxis,_config.yaxis);thatGraph.scaleGraph(_config.xscale,_config.yscale);thatPlot.setAxisDatas();thatPlot.renderData({data:_config.plot_data},_config.labelPlot,_config.node_data,doValidate,_config.actions)}else{if(_config){console.log("INPUT DATA NOT AVAILABLE")}else{console.log("jsonString NOT AVAILABLE")}}},formatWidgetCorrectValue:function(){var p=thatPlot;var g=thatGraph;p.setAxisDatas();var _data=p.getGraphData();_data.rerender=true;_data.autoShift=false;_data.actions=p.actions;_data.node_data=p.nodes;var iplot_data=eval(p.plot_datas);iplot_data.shift();iplot_data[0]=iplot_data[0]=="inequality"?"function":iplot_data[0];iplot_data[2]=true;iplot_data[3]="green";if(iplot_data[0]=="line"){var obj=iplot_data[0];var slope=iplot_data[1][0]=="slope";if(slope){var s=iplot_data[1][1].split("/");var ri=parseInt(s[0]);var ru=(s[1]?s[1]:1);var v=Math.abs(ri);var h=Math.abs(ru);var p1=[-3,(ri>=0)?-3:3];var p2=[p1[0]+h,(ri>=0)?p1[1]+v:p1[1]-v];iplot_data[1]=[p1,p2];iplot_data[4]=true;iplot_data[5]=true}}_data.plot_data=convertObjToString(iplot_data);var jstr=convertObjToString(_data);return jstr},showWidgetCorrectValue:function(){var _val=this.formatWidgetCorrectValue();this.setWidgetValue(_val,false)}}},setWidgetValue:function(jsonString){var _config=eval("("+jsonString+")");this.graph.setAxis(_config.xaxis,_config.yaxis);this.graph.scaleGraph(_config.xscale,_config.yscale);new Plotter(this.graph,"point",{data:_config.plot_data},_config.snap,_config.cntrls,false,_config.nudge_top,config.labelPlot)},getWidgetValue:function(){var A=this.plot.getInputData();return A},formatWidgetCorrectValue:function(){var p=this.plot;var g=this.graph;p.setAxisDatas();var _data=p.getGraphData();_data.rerender=true;_data.autoShift=false;var iplot_data=eval(p.plot_datas);iplot_data.shift();_data.plot_data=convertObjToString(iplot_data);var jstr=convertObjToString(_data);return jstr},showWidgetCorrectValue:function(){var A=this.formatWidgetCorrectValue();this.setWidgetValue(A,false)}};var AuthorApi=(function(){var theApi={};theApi.sayHello=function(from){alert("say hello: "+from)};theApi.getRandomInt=function(amount){return Math.floor(Math.random()*Number(amount))};theApi.getMultiplesOf=function(lcm,d1){var l1=2*(lcm/d1);var txt="";for(var i=1;i<=l1;i++){if(i*d1==lcm){txt+="["+(i*d1)+"], "}else{if(i==l1){txt+=(i*d1)+", ..."}else{txt+=(i*d1)+", "}}}return txt};theApi.formatDisplay=function(n){var str=n;var neg="\u2212";var multi="\u00D7";var div="\u00F7";str=String(str).split("-").join(neg);str=String(str).split("*").join(multi);return str};theApi.formatFractionDisplay=function(n,d,ntype){var node=ntype?ntype:"full";var str_s=node=="part"?"":"<math><mrow>";var str_e=node=="part"?"":"</mrow></math>";var str="";var _n=isNaN(n)?"<mi >"+n+"</mi>":"<mn >"+n+"</mn>";var _d=isNaN(d)?"<mi >"+d+"</mi>":"<mn >"+d+"</mn>";if(d==1||d==undefined||d==""){str=_n}else{str="<mfrac>"+_n+_d+"</mfrac>"}return str_s+str+str_e};theApi.formatExponentDisplay=function(n,d,ntype){var node=ntype?ntype:"full";var str_s=node=="part"?"":"<math><mrow>";var str_e=node=="part"?"":"</mrow></math>";var str="";var _n=isNaN(n)?"<mi >"+n+"</mi>":"<mn >"+n+"</mn>";var _d=isNaN(d)?"<mi >"+d+"</mi>":"<mn >"+d+"</mn>";if(d==undefined||d==""){str=_n}else{str="<msup>"+n+d+"</msup>"}return str_s+str+str_e};theApi.getMathML=function(val,type,ntype){var node=ntype?ntype:"full";var str_s=node=="part"?"":"<math><mrow>";var str_e=node=="part"?"":"</mrow></math>";var str="";val=String(val);if(type=="text"){var _n=isNaN(val)?"<mtext>"+val+"</mtext>":"<mn >"+val+"</mn>";if(String(val).length==1){_n=isNaN(val)?"<mi >"+val+"</mi>":"<mn >"+val+"</mn>"}str=_n}else{if(type=="op"){str="<mo>"+val+"</mo>"}else{if(type=="frac"){var arr=val.split("/");arr[1]=arr[1]==undefined?"1":arr[1];var _n=isNaN(arr[0])?"<mi >"+arr[0]+"</mi>":"<mn >"+arr[0]+"</mn>";var _d=isNaN(arr[1])?"<mi >"+arr[1]+"</mi>":"<mn >"+arr[1]+"</mn>";str="<mfrac>"+_n+_d+"</mfrac>"}else{if(type=="sqrt"){var _val=isNaN(val)?"<mi >"+val+"</mi>":"<mn >"+val+"</mn>";str='<msqrt linethickness="1">'+_val+"</msqrt>"}else{if(type=="rational"){var op="";if(String(val).indexOf("-")==0){op=str="<mtext >&#x2212;</mtext>";val=String(val).substring(1)}if(val.indexOf("|")>-1){var arr=val.split("|");var w="<mn >"+arr[0]+"</mn>";var frac=this.getMathML(arr[1],"frac","part");str=w+frac}else{if(val.indexOf("[")>-1){var arr=val.split("]");arr[0]=String(arr[0]).substring(1);var w="<mn >"+arr[0]+"</mn>";var frac=this.getMathML(arr[1],"frac","part");str=w+frac}else{if(val.indexOf("sqrt")>-1){val=val.split("sqrt")[1];var l=val.length;val=val.substring(1,l-1);str=this.getMathML(val,"sqrt","part")}else{if(val.indexOf("/")>-1){str=this.getMathML(val,"frac","part")}else{str=this.getMathML(val,"text","part")}}}}str=op+str}else{if(type=="repeating_deci"){var n=String(val).split(".");n[1]=n[1]===undefined?"0":n[1];var rep=Display_mngr.checkForRepeater(n[1]);var str="<mn >"+n[0]+".";function trimRepeatingDigit(s){var c=String(s).charAt(0);var a=String(s).split("");var boo=true;for(var n=1;n<a.length;n++){if(a[n]!=c){boo=false;break}}if(boo){return c}else{return s}}if(n[1].length>8){str+=n[1].substring(0,rep.s)+"</mn>";str+="<mrow><mover><mn >"+trimRepeatingDigit(rep.str)+'</mn><mo stretchy="true">&UnderBar;</mo></mover></mrow>'}else{str="<mn >"+n.join(".")+"</mn>";if(n[1]=="0"){str="<mn >"+n[0]+"</mn>"}}}else{if(type=="concat"){var tstr=val.split("|");var str="";for(var i=0;i<tstr.length;i++){var sub=String(tstr[i]);var sub_1=sub.split("<math><row>");var str_1=sub_1[1]?sub_1[1]:sub_1[0];var sub_2=str_1.split("<math>");var str_2=sub_2[1]?sub_2[1]:sub_2[0];var sub_3=str_2.split("</row></math>");var str_3=sub_3[0];var sub_4=str_3.split("</math>");var str_4=sub_4[0];str+=String(str_4)}}}}}}}}return str_s+str+str_e};theApi.getFlashCardProblem=function(id){Flashcard_mngr.getProblem(id)};theApi.deleteStep=function(x){deleteStep(x)};theApi.gotoStep=function(x){gotoStep(x)};theApi.gotoStepUnit=function(x){gotoStepUnit(x)};theApi.widgets=[GraphWidget];theApi.showAdditionalInfo=function(id,obj){$get(id).style.display="block";obj.style.display="none"};theApi.widgets=[GraphWidget];var widgetInstances;theApi.initializeWidgets=function(){widgetInstances=[];var tutorHead=$get("tutoroutput");if(tutorHead){var ht=tutorHead.innerHTML;var numWidgetsOnPage=0;var widgets=tutorHead.getElementsByTagName("div");var firstWidget=null;for(var i=0,t=widgets.length;i<t;i++){var widgetDom=widgets[i];var widgetType=widgetDom.getAttribute("widget");if(widgetType){}else{continue}numWidgetsOnPage++;console.log("creating tutor widget: "+widgetType);var args=widgetDom.innerHTML;widgetDom.innerHTML="";for(var w=0,wt=theApi.widgets.length;w<wt;w++){if(theApi.widgets[w].name===widgetType){var config="";try{if(args&&args.length>1){config=eval("("+args+")")}}catch(e){alert("Error creating widget configuration: "+e)}try{var theWidgetValueAdapter=theApi.widgets[w].initialize(widgetDom,config);if(numWidgetsOnPage==1){theWidgetValueAdapter.cont=widgetDom;firstWidget=theWidgetValueAdapter;TutorSolutionWidgetValues.setActiveWidget(theWidgetValueAdapter,true)}}catch(e){console.log("initializing tutor widget ERROR: "+e);alert("error initializing widget: "+e)}}}widgets=tutorHead.getElementsByTagName("div");t=widgets.length}var iwidget=firstWidget;var plot=iwidget?iwidget.inst_plot:null;if(plot){if(plot.plot_type=="interactive"){if(!$get("widget_submit")){var submit="<input type='submit' name='widget_submit' class='sexybutton sexysimple sexylarge sexyred' disabled='true' value='"+_tutorConfiguration.submitButtonText+"'/>";$(iwidget.cont).after(submit)}$($get("widget_submit")).click(function(){plot.validateInput()})}}}};theApi.getWidgetValues=function(){var json="{interactive_widgets: [";for(var i=0,t=widgetInstances.length;i<t;i++){var widIns=widgetInstances[i];var widJson=widIns.getWidgetValue();json+=widJson}json+="]}";return json};HmEvents.eventTutorInitialized.subscribe(function(x){theApi.initializeWidgets()});return theApi}());var Plotter=function(G,B,E,C,F,A,H,I){this.pInf=Number.POSITIVE_INFINITY;this.nInf=Number.NEGATIVE_INFINITY;this.fArr=["sin","cos","tan","asin","acos","atan","log","abs","sqrt","ln","cot","sec","csc"];this.graphObj=G;this.graphObj.plotObj=this;this.plot_type=B;this.plot_input=E;this.graph_type=this.graphObj.graph_type;this.numberLine=this.graph_type=="x"?true:false;this.snapTo=C?C:"none";this.nodeArr=[];this.cntrls=F===undefined?true:F;this.autoShift=A!==undefined?A:true;this.lastAction=null;this.lastRenderCol=null;this.actions=null;this.enableWheel=true;this.isIE=false;this.pos_top=this.graph_type=="x"?(H?H:0):0;this.document=this.graphObj.document;this.alphacanvas=this.graphObj.document.createElement("canvas");this.alphacanvas.width=this.graphObj.width;this.alphacanvas.height=this.graphObj.height;this.graphObj.board.appendChild(this.alphacanvas);try{if(typeof G_vmlCanvasManager!="undefined"){G_vmlCanvasManager.initElement(this.alphacanvas)}else{}}catch(D){console.log("DEBUG_IE:"+D)}this.alphacontext=this.alphacanvas.getContext("2d");this.alphacanvas.style.position="absolute";this.alphacanvas.style.top=-this.pos_top+"px";this.alphacanvas.style.left=0;this.canvas=this.graphObj.document.createElement("canvas");this.canvas.width=this.graphObj.width;this.canvas.height=this.graphObj.height;this.graphObj.board.appendChild(this.canvas);try{if(typeof G_vmlCanvasManager!="undefined"){G_vmlCanvasManager.initElement(this.canvas);this.isIE=true}else{}}catch(D){console.log("DEBUG_IE:"+D)}this.context=this.canvas.getContext("2d");this.canvas.style.position="absolute";this.canvas.style.top=-this.pos_top+"px";this.canvas.style.left=0;this.icanvas=this.graphObj.document.createElement("canvas");this.icanvas.width=this.graphObj.width;this.icanvas.height=this.graphObj.height;this.graphObj.board.appendChild(this.icanvas);try{if(typeof G_vmlCanvasManager!="undefined"){G_vmlCanvasManager.initElement(this.icanvas)}else{}}catch(D){console.log("DEBUG_IE:"+D)}this.icontext=this.icanvas.getContext("2d");this.icanvas.style.position="absolute";this.icanvas.style.top=-this.pos_top+"px";this.icanvas.style.left=0;this.isTouchDevice="ontouchstart" in window;this.hasGesture="ongesturestart" in window;console.log("HAS_GESTURE:"+this.hasGesture);console.log("IS_TOUCH_ENABLED:"+this.isTouchDevice);this.offX=0;this.offY=0;this.getCanvasOffSet();this.cpos=this.coordToCanvasPoint(0,0);EqParser.init();this.getPlots();console.log("PLOTTER_CREATION_COMPLETE");if(I){this.labelData=I;this.labelPoints(I);if(I.lengthLabels){this.labelLengths(I)}}};Plotter.prototype.id=function(A){this.id=A?A:this.id;return this.id};Plotter.prototype.renderData=function(data,labelPlot,node_data,doValidate,act){var temp=this.plot_input;this.plot_input=data;console.log("ACTIONS");console.log(act);this.actions=[];this.actions=act?act:this.actions;this.getPlots();if(labelPlot){this.labelData=labelPlot;this.labelPoints(labelPlot);if(labelPlot.lengthLabels){this.labelLengths(labelPlot)}}this.plot_input=temp;this.getPlotInputs();var temp1=this.plot_datas.split("|");for(var i=0;i<temp1.length;i++){var pointdata=eval(temp1[i]);this.plot_type=pointdata.shift();this.plot_data=pointdata}if(node_data){this.node_data=node_data}if(doValidate){this.validateInput(true)}this.node_count=this.actions.length;this.totalNodes=this.totalNodes||this.node_count};Plotter.prototype.createZoomCanvas=function(){if(!this.isTouchDevice){return }this.zcanvas=this.graphObj.document.createElement("canvas");this.zcanvas.width=120;this.zcanvas.height=60;this.zcanvas.style.position="absolute";this.zcanvas.style.top=-60+"px";this.zcanvas.style.left=0+"px";this.graphObj.board.appendChild(this.zcanvas);try{if(typeof G_vmlCanvasManager!="undefined"){G_vmlCanvasManager.initElement(this.zcanvas);this.zcontext=this.zcanvas.getContext("2d")}else{this.zcontext=this.zcanvas.getContext("2d")}}catch(A){console.log("DEBUG_IE:"+A)}};Plotter.prototype.renderZoomCanvas=function(K,H){if(!this.zcontext){return }this.zcontext.clearRect(0,0,this.zcanvas.width,this.zcanvas.height);var D=this.graphObj.context;var J=this.context;var O=this.graphObj.width;var F=this.graphObj.height;var B=15;var A=this.zcanvas.width;var C=this.zcanvas.height;var E=A/2;var L=C/2;var N=K-E;var M=H-C-B;if(N<0){N=K}else{if(N+A>O){N=K-A}}if(M<0){M=H+(B);N=K;if(N<0){N=K}else{if(N+A>O){N=K-A}}}else{if(M>F){}}var I,G;I=K<E/2?0:K-(E/2);I=K>O-(E/2)?O-E:I;G=H<L/2?0:H-(L/2);G=H>F-(L/2)?F-L:G;this.zcanvas.style.top=M+"px";this.zcanvas.style.left=N+"px";this.zcontext.fillStyle="white";this.zcontext.lineWidth=2;this.zcontext.beginPath();this.zcontext.fillRect(0,0,A,C);this.zcontext.strokeRect(0,0,A,C);this.zcontext.closePath();this.zcontext.drawImage(this.graphObj.canvas,I,G,E,L,0,0,A,C);this.zcontext.drawImage(this.canvas,I,G,E,L,0,0,A,C);this.zcontext.drawImage(this.icanvas,I,G,E,L,0,0,A,C)};Plotter.prototype.clear=function(A){var B=A?A:this.context;B.clearRect(0,0,this.canvas.width,this.canvas.height);this.alphacontext.clearRect(0,0,this.canvas.width,this.canvas.height)};Plotter.prototype.getCanvasOffSet=function(){var F=this.canvas.getBoundingClientRect();var G=this.document.body;var B=this.document.documentElement;var A=window.pageYOffset||B.scrollTop||G.scrollTop;var D=window.pageXOffset||B.scrollLeft||G.scrollLeft;var E=B.clientTop||G.clientTop||0;var H=B.clientLeft||G.clientLeft||0;var I=F.top+A-E;var C=F.left+D-H;this.offX=Math.round(C);this.offY=Math.round(I);return{top:this.offY,left:this.offX}};Plotter.prototype.getCursorPos=function(C,A){this.getCanvasOffSet();var B=C?C:window.event;this.isTouchEnabled=false;if(B.type){this.isTouchEnabled=B.type.indexOf("touch")>-1;B=this.isTouchEnabled?B.changedTouches[0]:B}var D={x:0,y:0};if(B.pageX!==undefined){D.x=B.pageX-this.offX;D.y=B.pageY-this.offY}else{D.x=B.clientX-this.offX;D.y=B.clientY-this.offY}D=A?this.roundTo(D,this.snapTo):D;return D};Plotter.prototype.getCoordinatePos=function(B,A){var C=this.getCursorPos(B);C=A?this.roundTo(C,this.snapTo):C;C=canvasPosToCoords(C.x,C.y);C={x:Math.fixTo(C.x,8),y:Math.fixTo(C.y,8)};return C};Plotter.prototype.validateFunc=function(){var C=true;var D=this.fn;var F,A,B;for(var E=0;E<this.fArr.length;E++){A=this.fArr[E].length;F=D.indexOf(this.fArr[E]);if(F==-1){continue}else{B=D.substr(F+A,1);if(B!="("){C=false;break}}}return C};Plotter.prototype.getDval=function(D,A,B){var C=this.fixTo(A+B,4);return this.evalFor(D,C)};Plotter.prototype.sign=function(A){if(A*1<0){return"-"}else{return"+"}};Plotter.prototype.setFunctionDatas=function(){this.fn=this.funcObj[0][0];this.fncol=this.funcObj[2];this.fneql=this.funcObj[0][2];this.fand=this.funcObj[0][3];this.fof=this.funcObj[0][1];this.fof=this.fof?this.fof:"x";this.fneql=this.fneql?this.fneql:"eq";if(this.fand===undefined){if(this.fneql.indexOf("_")>-1&&this.fn.indexOf("_")>-1){this.fand=true}}};Plotter.prototype.getStdFormOfParabola=function(fof,type,params){var x=fof;var y=x=="x"?"y":"x";var eqn="";var a=params[0];var h=parseInt(params[1]);var k=parseInt(params[2]);var ah,c;var an=eval(a);ah=2*an*h;c=(an*(h*h))+k;ah=Math.fixTo(ah,12);c=Math.fixTo(c,12);var s1=ah<0?"+":"-";var s2=c<0?"-":"+";var dah=Math.abs(ah);var dc=Math.abs(c);eqn="("+a+")*x^2"+s1+dah+"*x"+s2+dc;console.log("PARAMS:"+params+" :EQN: "+eqn);if(type=="vtx"){}else{if(type=="std"){}else{if(type=="factored"){}}}return eqn};Plotter.prototype.coordToCanvasPoint=function(A,D){var B=this.graphObj.axisYpos+A*(this.graphObj.scaleX/this.graphObj.xinc);var C=this.graphObj.axisXpos-D*(this.graphObj.scaleY/this.graphObj.yinc);return[B,C]};Plotter.prototype.canvasPosToCoords=function(B,C){var A=(B-this.graphObj.axisYpos)/(this.graphObj.scaleX/this.graphObj.xinc);var D=(-C+this.graphObj.axisXpos)/(this.graphObj.scaleY/this.graphObj.yinc);return[A,D]};Plotter.prototype.fixTo=function(A,C){var B=Math.pow(10,C);return Math.round(B*A)/B};Plotter.prototype.evalFor=function(B,A){return EqParser.evalEq(B,A)};Plotter.prototype.getPlots=function(){this.getPlotInputs();var temp1=this.plot_datas.split("|");for(var i=0;i<temp1.length;i++){var pointdata=eval(temp1[i]);this.plot_type=pointdata.shift();this.plot_data=pointdata;this.drawPlot()}};Plotter.prototype.renderPlot=function(A){if(A=="point"){this.plotPoint()}else{if(A=="function"){this.plotFunction()}else{if(A=="line"){this.close_path=false;this.plotLine()}else{if(A=="polygon"){this.close_path=true;this.plotPolygon()}else{if(A=="path"){this.close_path=false;this.plotPolygon()}else{if(A=="pointer"){this.close_path=false;this.plotPointer()}else{if(A=="circle"){this.plotCircle()}else{if(A=="rectangle"){this.plotRect()}}}}}}}}this.lastAction=null};Plotter.prototype.drawPlot=function(){if(this.plot_type=="point"){this.lastAction=this.plotPoint;this.plotPoint()}else{if(this.plot_type=="function"){this.lastAction=this.plotFunction;this.plotFunction()}else{if(this.plot_type=="line"){this.close_path=false;this.lastAction=this.plotLine;this.plotLine()}else{if(this.plot_type=="polygon"){this.close_path=true;this.lastAction=this.plotPolygon;this.plotPolygon()}else{if(this.plot_type=="path"){this.close_path=false;this.lastAction=this.plotPolygon;this.plotPolygon()}else{if(this.plot_type=="pointer"){this.close_path=false;this.lastAction=this.plotPointer;this.plotPointer()}else{if(this.plot_type=="circle"){this.lastAction=this.plotCircle;this.plotCircle()}else{if(this.plot_type=="rectangle"){this.lastAction=this.plotRect;this.plotRect()}else{if(this.plot_type=="interactive"){this.lastAction=null;this.actions=[];this.autoShift=false;var V=this.graphObj.support_data.showZoom;var P=this.graphObj.support_data.allowGraphTrans;var N=this.cntrls;V=V?V:false;this.allowGraphTrans=P?P:{mouse:true,key:true,gesture:true,controls:this.cntrls};this.graphObj.inter_obj={zoom:V};this.iplot_type=this.plot_data[0];this.node_count=0;if(this.allowGraphTrans.controls){this.graphObj.addGraphUI()}if(this.iplot_type=="point"){if(Object.prototype.toString.call(this.plot_data[1][0])==="[object Array]"){this.totalNodes=this.plot_data[1].length}else{this.totalNodes=1}}else{if(this.iplot_type=="parabola"){this.totalNodes=1;this.allowGraphTrans={mouse:false,key:false,gesture:false,controls:this.cntrls};if(this.plot_data[1][3]){this.plotParabola()}}else{if(this.iplot_type=="line"||this.iplot_type=="segment"){this.totalNodes=2}else{if(this.iplot_type=="path"||this.iplot_type=="polygon"){this.totalNodes=this.plot_data[1].length}else{if(this.iplot_type=="inequality"){var S=function(){this.scope.totalNodes=1;this.scope.fand=false};var R=function(){this.scope.totalNodes=1;this.scope.fand=false};var Q=function(){this.scope.totalNodes=1;this.scope.fand=false};var O=function(){this.scope.totalNodes=1;this.scope.fand=false};var M=function(){this.scope.totalNodes=2;this.scope.fand=true};var L=function(){this.scope.totalNodes=2;this.scope.fand=true};var K=function(){this.scope.totalNodes=2;this.scope.fand=true};var J=function(){this.scope.totalNodes=2;this.scope.fand=true};var I={type:"button",id:"btn_lt",label:"lt",img_norm_src:"in_lt_norm_n.png",img_sel_src:"in_lt_sel_n.png",callfunc:S,scope:this};var H={type:"button",id:"btn_le",label:"le",img_norm_src:"in_le_norm_n.png",img_sel_src:"in_le_sel_n.png",callfunc:R,scope:this};var G={type:"button",id:"btn_gt",label:"gt",img_norm_src:"in_gt_norm_n.png",img_sel_src:"in_gt_sel_n.png",callfunc:Q,scope:this};var F={type:"button",id:"btn_ge",label:"ge",img_norm_src:"in_ge_norm_n.png",img_sel_src:"in_ge_sel_n.png",callfunc:O,scope:this};var E={type:"button",id:"btn_gt_lt",label:"gt_lt",img_norm_src:"in_gt_lt_norm_n.png",img_sel_src:"in_gt_lt_sel_n.png",callfunc:M,scope:this};var D={type:"button",id:"btn_ge_le",label:"ge_le",img_norm_src:"in_ge_le_norm_n.png",img_sel_src:"in_ge_le_sel_n.png",callfunc:L,scope:this};var C={type:"button",id:"btn_gt_le",label:"gt_le",img_norm_src:"in_gt_le_norm_n.png",img_sel_src:"in_gt_le_sel_n.png",callfunc:K,scope:this};var B={type:"button",id:"btn_ge_lt",label:"ge_lt",img_norm_src:"in_ge_lt_norm_n.png",img_sel_src:"in_ge_lt_sel_n.png",callfunc:J,scope:this};var U=this.plot_data[1][4];U=String(U)=="false"?false:true;var A=[I,H,G,F,E,D,C,B];var T=42;if(!U){A=[I,H,G,F];T=21}this.graphObj.createTools(A,{x:0,y:this.canvas.height-T})}}}}}this.createZoomCanvas();this.startListeners();if(this.allowGraphTrans.gesture){this.initGestureListeners()}}}}}}}}}}this.lastAction=null};Plotter.prototype.startListeners=function(){console.log("START_LISTENERS");this.initMouseListeners();if(this.allowGraphTrans.key){this.graphObj.init_graph_transformListeners()}console.log("END_OF_START_LISTENERS")};Plotter.prototype.getPlotInputs=function(){this.plot_datas=this.plot_input.data;this.fn_color=this.plot_input.fn_color;this.fn_color=this.fn_color?this.fn_color:"#0000ff"};Plotter.prototype.plotParabola=function(B){var A=this.plot_data[1][0];var D=this.plot_data[1][1];var E=this.plot_data[1][2];var C=this.getStdFormOfParabola(D,A,E);this.plotFunction([[C,D,"eq",false],false,B?B:"blue"])};Plotter.prototype.labelPoints=function(H){console.log("LABEL_POINTS_CALLED");var I=H.pointLabels?H.pointLabels:[];var B=H.labelPos?H.labelPos:[];console.log("LABEL_POINTS_NAME: "+I);var N=H.coords;var G=H.show_coords;G=G?G:false;var A=[];var L;console.log("LABEL_POINTS_COORDS: "+N);for(var O=0;O<N.length;O++){var C=N[O];var E=C[0];var D=C[1];var L=this.coordToCanvasPoint(E,D);var M=I[O];M=M?M:"";A.push(L);var F=L[0];var P=L[1];var K=B[O];this.context.textBaseline="bottom";this.context.font="bold 12px sans-serif";var J,R,Q;var S=this.context.measureText("9").width;if(this.isIE&&S==0){S=this.graphObj.measureText("9",this.context.font)}if(this.graph_type=="xy"){J=G?"("+E+", "+D+")":"";J=M+J;S=this.context.measureText(J).width;if(this.isIE&&S==0){S=this.graphObj.measureText(J,this.context.font)}if(K=="T"){R=F-(S/2);Q=P-6}else{if(K=="TL"){R=F-(S);Q=P-6}else{if(K=="TR"){R=F;Q=P-6}else{if(K=="B"){this.context.textBaseline="top";R=F-(S/2);Q=P+6}else{if(K=="BL"){this.context.textBaseline="top";R=F-(S);Q=P+6}else{if(K=="BR"){this.context.textBaseline="top";R=F;Q=P+6}else{if(K=="M"){this.context.textBaseline="middle";R=F-(S/2);Q=P+6}else{if(K=="ML"){this.context.textBaseline="middle";R=F-(S);Q=P+6}else{if(K=="MR"){this.context.textBaseline="middle";R=F;Q=P+6}}}}}}}}}}else{J=G?""+E+"":"";J=M+J;S=this.context.measureText(J).width;if(this.isIE&&S==0){S=this.graphObj.measureText(J,this.context.font)}R=F-(S/2);Q=P-6}console.log("LABEL_POINTS_RENDER: "+J+":"+R+":"+Q);this.context.fillText(J,R,Q)}};Plotter.prototype.labelLengths=function(B){if(!B.lengthLabels||!B.lengthLabels.length){return }var h=B.lengthLabels;console.log("LABEL_LENGTH_NAME: "+h);var G=B.coords;var I=[];var F;var O=G.length;for(var g=0;g<G.length;g++){var N=G[g];var T=N[0];var S=N[1];var U=this.coordToCanvasPoint(T,S);I.push(U)}var o=0;for(var e=0;e<I.length;e++){var Z=String(h[o]);o++;var d=e;var b=e+1;b=b==I.length?0:b;var a=b+1;a=a==I.length?0:a;console.log("D:"+Z+":"+d+":"+b+":"+a);var R=I[d];var Q=I[b];var P=I[a];var M=R[0];var s=R[1];var L=Q[0];var q=Q[1];var K=P[0];var p=P[1];var J=M-K>0?1:-1;var H=s-p>0?1:-1;var A=this.angle({x:M,y:s},{x:L,y:q});var D=A.r;var C=A.ra;var Y=Math.round(A.a);var V=D/2;console.log(e+":--> "+Z+" ("+M+":"+s+"):("+L+":"+q+"):("+K+":"+p+"):"+D+":"+Y+":"+V+":"+J+":"+H);this.context.textBaseline="middle";this.context.font="bold 12px sans-serif";var E,X,W;var f=this.context.measureText("9").width;E=Z;f=this.context.measureText(E).width;if(this.isIE&&f==0){f=this.graphObj.measureText(E,this.context.font)}if(O==3){if(Math.abs(Y)==0){X=M+V-(f/2);W=s+(12*H)}else{if((Y)==180){X=M-V-(f/2);W=s+(12*H)}else{if((Y)==-90){X=M;X=J==1?X+6:X-f-6;W=s-V}else{if((Y)==90){X=M;X=J==1?X+6:X-f-6;W=s+V}else{X=M+V*Math.cos(C);W=s+V*Math.sin(C);X=X+(J==1?f/2:-f);W=W+((6)*H)}}}}}else{X=M+V*Math.cos(C);W=s+V*Math.sin(C);X=X+(J==1?f/2:-f);W=W+((6)*H)}console.log("LABEL_LENGTH_RENDER: "+E+":"+X+":"+W);this.context.fillText(E,X,W)}};Plotter.prototype.plotCircle=function(){var D,B,A,J,E;if(this.plot_data[0].length==1){D=0;B=0;A=this.plot_data[0][0];J=A*2;E=J}else{if(this.plot_data[0].length==2){D=0;B=0;J=this.plot_data[0][0];E=this.plot_data[0][1]}else{D=this.plot_data[0][0];B=this.plot_data[0][1];A=this.plot_data[0][2];J=A*2;E=J}}var K=this.coordToCanvasPoint(D,B);A=A*this.graphObj.scaleX;var I=this.plot_data[1];var C=this.plot_data[2];var F=C[0];var H=C[1];var G=C[2]?C[2]:0.6;if(H){var G=C[2]?C[2]:0.6;H=this.hex2rgb(H,G)}this.drawCircle(K[0],K[1],A,true,F,G,H)};Plotter.prototype.plotRect=function(){var D,B,A,J,E;if(this.plot_data[0].length==1){D=0;B=0;J=this.plot_data[0][0];E=this.plot_data[0][1]}else{if(this.plot_data[0].length==2){D=0;B=0;J=this.plot_data[0][0];E=this.plot_data[0][1]}else{D=this.plot_data[0][0];B=this.plot_data[0][1];J=this.plot_data[0][2];E=this.plot_data[0][3]}}var K=this.coordToCanvasPoint(D,B);J=J*this.graphObj.scaleX;E=E*this.graphObj.scaleY;K[0]=K[0]-J/2;K[1]=K[1]-E/2;var I=this.plot_data[1];var C=this.plot_data[2];var F=C[0];var H=C[1];if(H){var G=C[2]?C[2]:0.6;H=this.hex2rgb(H,G)}this.drawRect(K[0],K[1],J,E,true,F,G,H)};Plotter.prototype.plotPolygon=function(){var L=this.plot_data[0];var H=this.plot_data[1];var A=this.plot_data[2];var D=this.plot_data[3]?this.plot_data[3]:false;var C=this.plot_data[4]?this.plot_data[4]:false;C=L.length==2?C:false;var M=this.plot_data[5]?this.plot_data[5]:0;var E=A[0]?A[0]:"BLUE";var G=A[1];var J=this.close_path;if(!J){E=A;G=undefined}if(G){var F=A[2]?A[2]:0.6;G=this.hex2rgb(G,F)}var I=this.context;I.save();I.translate(0,M);if(this.autoShift){for(var B=0;B<L.length;B++){var K=this.coordToCanvasPoint(L[B][0],L[B][1]);this.checkForShift(L[B][0],L[B][1],K)}}I.lineWidth=2;I.strokeStyle=E;I.beginPath();for(var B=0;B<L.length;B++){var K=this.coordToCanvasPoint(L[B][0],L[B][1]);if(B==0){I.moveTo(K[0],K[1])}else{I.lineTo(K[0],K[1])}}if(J){K=this.coordToCanvasPoint(L[0][0],L[0][1]);I.lineTo(K[0],K[1])}if(true){I.stroke()}if(J&&F){I.fill()}I.closePath();if(H){for(var B=0;B<L.length;B++){this.plotPoint([[L[B][0],L[B][1]],D,E])}}if(C){this.drawSlopeTri(L[0],L[1],I)}I.restore()};Plotter.prototype.plotPointer=function(){var P=this.plot_data[0];var K=this.plot_data[1];var D=this.plot_data[2];var Q=this.plot_data[5]?this.plot_data[5]:0;var G=D?D:"BLUE";var H=G;var E=this.canvas.width;var A=this.canvas.height;var N=this.context;N.save();N.translate(0,Q);N.lineWidth=2;N.strokeStyle=G;N.fillStyle=G;N.beginPath();for(var F=0;F<P.length;F++){var O=this.coordToCanvasPoint(P[F][0],P[F][1]);if(F==0){N.moveTo(O[0],O[1])}else{N.lineTo(O[0],O[1])}}N.stroke();N.closePath();var C,B,J,I;var M=this.coordToCanvasPoint(P[0][0],P[0][1]);var L=this.coordToCanvasPoint(P[1][0],P[1][1]);C=M[0];B=L[0];J=M[1];I=L[1];N.beginPath();if(B>C){N.moveTo((B),I);N.lineTo((B)-10,I+4);N.lineTo((B)-10,I-4);N.lineTo((B),I);N.fill()}else{N.beginPath();N.moveTo((B),I);N.lineTo((B)+10,I+4);N.lineTo((B)+10,I-4);N.lineTo((B),I);N.fill()}N.stroke();N.closePath();N.restore()};Plotter.prototype.plotLine=function(){var b=this.plot_data[0];var J=this.plot_data[1];var T=this.plot_data[2];var X=this.plot_data[3]?this.plot_data[3]:false;var C=this.plot_data[4]?this.plot_data[4]:false;var Y=T[0]?T[0]:"BLUE";var F=T[1];var N=this.close_path;var E=this.canvas.width;var L=this.canvas.height;if(!N){Y=T;F=undefined}if(F){var R=T[2]?T[2]:0.6;F=this.hex2rgb(F,R)}var A=this.context;if(this.autoShift){for(var U=0;U<b.length;U++){var Q=this.coordToCanvasPoint(b[U][0],b[U][1]);this.checkForShift(b[U][0],b[U][1],Q)}}A.lineWidth=2;A.strokeStyle=Y;A.beginPath();for(var U=0;U<b.length;U++){var Q=this.coordToCanvasPoint(b[U][0],b[U][1]);if(U==0){A.moveTo(Q[0],Q[1])}else{A.lineTo(Q[0],Q[1])}}var W,V,D,B;var K=this.coordToCanvasPoint(b[0][0],b[0][1]);var I=this.coordToCanvasPoint(b[1][0],b[1][1]);W=K[0];V=I[0];D=K[1];B=I[1];var S=(B-D)/(V-W);var G=Math.atan(S);var H=Math.PI-G;G=Math.PI+H;var M=Math.sqrt((E*E)+(L*L));var P=W+M*Math.cos(H);var a=D-M*Math.sin(H);var O=V+M*Math.cos(G);var Z=B-M*Math.sin(G);A.moveTo(P,a);A.lineTo(W,D);A.moveTo(V,B);A.lineTo(O,Z);if(true){A.stroke()}A.closePath();if(J){for(var U=0;U<b.length;U++){this.plotPoint([[b[U][0],b[U][1]],X,Y])}}if(C){this.drawSlopeTri(b[0],b[1],A)}};Plotter.prototype.plotPoints=function(){var temp1=this.plot_data.split("|");for(var i=0;i<temp1.length;i++){var pointdata=eval(temp1[i]);if(pointdata[0].length==1){this.plotPoint(pointdata[0][0],0,pointdata[1],pointdata[2])}else{this.plotPoint(pointdata[0][0],pointdata[0][1],pointdata[1],pointdata[2])}}};Plotter.prototype.checkForShift=function(I,H,F){var L=this.graphObj.incX;var G=this.graphObj.incY;var M,K;M=0;K=0;var D=this.canvas.width;var A=this.canvas.height;var E=D-L;var B=L;var C=A-G;var J=G;console.log("CHECK_FOR_SHIFT:"+I+" : "+H+" : "+F+":"+(D-L));if(F[0]>E||F[0]<B){M=F[0]<B?-F[0]+L:E-F[0];M=Math.round(M/L)*L;console.log("DX 1: "+M);if(M!=0){M=M>0?M+L:M-L}console.log("DX 2: "+M)}if(F[1]>C||F[1]<J){K=F[1]<G?-F[1]+G:C-F[1];K=Math.round(K/G)*G;console.log("DY 1: "+K);if(K!=0){K=K>0?K+G:K-G}console.log("DY 2: "+K)}if(M!=0||K!=0){this.graphObj.shiftAxis(M,K);this.setAxisDatas()}};Plotter.prototype.plotPoint=function(F){var J=F?F:this.plot_data;var M=J[0][0];var K=J[0][1];K=K?K:0;var L=J[1];var C=J[2];var B=J[3];B=B?B:false;if(this.autoShift){if(this.graph_type=="xy"){this.checkForShift(M,K,this.coordToCanvasPoint(M,K))}else{this.showPointOn_nl(M)}}var N=this.coordToCanvasPoint(M,this.graph_type=="xy"?K:0);var D=N[0];var A=N[1];this.drawPoint(D,A,C?C:this.fn_color,undefined,B);if(L){this.context.textBaseline="bottom";this.context.font="bold 12px sans-serif";var E,I,H;var G=this.context.measureText("9").width;if(this.isIE&&G==0){G=this.graphObj.measureText("9",this.context.font)}if(this.graph_type=="xy"){E="("+M+", "+K+")";G=this.context.measureText(E).width;if(this.isIE&&G==0){G=this.graphObj.measureText(E,this.context.font)}I=D-(G/2);H=A-6}else{E=""+M+"";G=this.context.measureText(E).width;if(this.isIE&&G==0){G=this.graphObj.measureText(E,this.context.font)}I=D-(G/2);H=A-6}this.context.fillText(E,I,H)}};Plotter.prototype.plotFunctions=function(){var temp1=this.plot_data.split("|");for(var i=0;ihilength;i++){var fndata=eval(temp1[i]);this.plotFunction(fndata)}};Plotter.prototype.plotFunction=function(A){this.funcObj=A?A:this.plot_data;this.getPointsFromEq()};Plotter.prototype.drawPoint=function(O,M,E,B,C,D,N,P,F,A){var Q=D?D:this.context;var J=C?C:false;var L=B?B:4;if(!J){Q.fillStyle=E}else{Q.strokeStyle=E}Q.beginPath();Q.arc(O,M,L,0,2*Math.PI,false);if(!J){Q.fill()}else{Q.stroke()}Q.closePath();if(N){this.context.textBaseline="bottom";this.context.font="bold 12px sans-serif";var G,K,I;var H=this.context.measureText("9").width;G=P;H=this.context.measureText(G).width;if(this.isIE&&H==0){H=this.graphObj.measureText(G,this.context.font)}K=F;I=A;this.context.fillText(G,K,I)}};Plotter.prototype.drawCircle=function(E,D,C,G,B,H,F,I){var A=I?I:this.context;if(G){A.lineWidth=2;A.strokeStyle=B}if(H){A.fillStyle=F}A.beginPath();A.arc(E,D,C,0,2*Math.PI,false);if(G){A.stroke()}if(H){A.fill()}A.closePath()};Plotter.prototype.drawRect=function(E,D,F,C,I,B,J,G,H){var A=H?H:this.context;if(I){A.lineWidth=2;A.strokeStyle=B}if(J){A.fillStyle=G}A.beginPath();if(J){A.fillRect(E,D,F,C)}if(I){A.strokeRect(E,D,F,C)}A.closePath()};Plotter.prototype.roundRect=function(D,C,H,E,B,A,G,F){if(typeof F=="undefined"){F=true}if(typeof A==="undefined"){A=5}D.beginPath();D.moveTo(C+A,H);D.lineTo(C+E-A,H);D.quadraticCurveTo(C+E,H,C+E,H+A);D.lineTo(C+E,H+B-A);D.quadraticCurveTo(C+E,H+B,C+E-A,H+B);D.lineTo(C+A,H+B);D.quadraticCurveTo(C,H+B,C,H+B-A);D.lineTo(C,H+A);D.quadraticCurveTo(C,H,C+A,H);D.closePath();if(F){D.stroke()}if(G){D.fill()}};Plotter.prototype.getPointsFromEq=function(){var W=this.pInf;var c=this.nInf;this.setFunctionDatas();this.setAxisDatas();if(this.numbLine){return this.plotNumberLine()}var V=this.fn;var T=this.fneql;var h=this.fof;if(h=="y"){return this.getPointsFromEqY()}this.graph_color=this.fncol;if(V==""||V==undefined){return null}var X=[];var F=this.eqnObj=EqParser.convertTo_JSEq(this.fn);var B=this.eqSy=T;var O=0.1;var U=this.xscale;var C=this.yscale;var Y=this.graphObj.axisYpos;var J=this.graphObj.axisXpos;var K=[];var j=this.xMin;var S=this.xMax;var M=this.yMin;var L=this.yMax;var a,I,A,H,k;var Q,g,D,d,R,G,i,P,N;this.doPlot=true;var Z=this.fixTo;var E=this.getDval;O=Math.abs(S-j)/200;O=this.fixTo(O,4);for(var b=j;b<=S;b+=O){b=Z(b,4);a=-this.evalFor(F,b);I=b-O;I=Z(I,8);A=-this.evalFor(F,I);H=b+O;H=Z(H,8);k=-this.evalFor(F,H);if(Number(a)){Q=b*U+Y;g=a*C+J;D=I*U+Y;d=A*C+J;R=H*U+Y;G=k*C+J;if(g>-2880&&g<2880){Q=Z(Q,2);g=Z(g,2);K.push({x:Q,y:g,l:"line"})}else{if(g==c){if(d!=c&&G!=c&&d!=W&&G!=W&&Number(d)!=Number.NaN&&Number(G)!=Number.NaN){P=this.getDval(F,I,O/10);if(d<this.yh&&d>this.yl){if(P>A){i=this.yh}else{i=this.yl}}else{i=d}K.push({x:D,y:i,l:"line"});K.push({x:Q,y:i,l:"line"});K.push({x:Q,y:-i,l:"move"});N=this.getDval(F,H,-O/10);if(G<this.yh&&G>this.yl){if(N>k){i=this.yh}else{i=this.yl}}else{i=G}K.push({x:R,y:i,l:"move"})}else{K.push({x:Q,y:c,l:"move"})}}else{if(g==W){if(d!=c&&G!=c&&d!=W&&G!=W&&Number(d)!=Number.NaN&&Number(G)!=Number.NaN){P=this.getDval(F,I,O/10);if(d<this.yh&&d>this.yl){if(P>A){i=this.yh}else{i=this.yl}}else{i=d}K.push({x:D,y:i,l:"line"});K.push({x:Q,y:i,l:"line"});K.push({x:Q,y:-i,l:"move"});N=this.getDval(F,H,-O/10);if(G<this.yh&&G>this.yl){if(N>k){i=this.yh}else{i=this.yl}}else{i=G}K.push({x:R,y:i,l:"line"})}else{K.push({x:Q,y:W,l:"move"})}}else{X.push(a)}}}}}K=this.asymFix(K);var e;if(K.length<2){if(X.length<2){if(this.validateFunc()){alert("Message from Plotter: Error in function Data!")}else{alert("Message from Plotter: Check your input function!")}}else{alert("Message from Plotter: Cannot plot the given function!")}return null}else{e=this.getNodeDetails(K);return this.drawFunction(e,K)}};Plotter.prototype.getNodeDetails=function(B){var F=this.pInf;var C=this.nInf;var A={};var E={};var D={};for(var G=0;G<B.length;G++){if(G==0){if(this.fof=="x"){if(B[G].y==this.pInf){B[G].y=yh;B[G].l="line"}if(B[G].y==this.nInf){B[G].y=yl;B[G].l="line"}}if(this.fof=="y"){if(B[G].x==this.pInf){B[G].x=xh;B[G].l="line"}if(B[G].x==this.nInf){B[G].x=xl;B[G].l="line"}}}else{if(this.fof=="x"){if(B[G].y==this.pInf||B[G].y==this.nInf){B[G].l="move";B[G+1].l="move"}}if(this.fof=="y"){if(B[G].x==this.pInf||B[G].x==this.nInf){B[G].l="move";B[G+1].l="move"}}}}A.pt=B[0];A.dir=this.getDir(A.pt);E.pt=B[B.length-1];E.dir=this.getDir(E.pt);D.s=A;D.e=E;return D};Plotter.prototype.getGraphData=function(){var B=this.graphObj;var A={};A.gtype=B.graph_type;A.xmin=Math.fixTo(this.xMin,4);A.xmax=Math.fixTo(this.xMax,4);A.ymin=Math.fixTo(this.yMin,4);A.ymax=Math.fixTo(this.yMax,4);A.xscale=Math.fixTo(this.xscale,4);A.yscale=Math.fixTo(this.yscale,4);A.xaxis=Math.fixTo(this.xaxis,4);A.yaxis=Math.fixTo(this.yaxis,4);A.xinc=Math.fixTo(B.xinc,4);A.yinc=Math.fixTo(B.yinc,4);A.width=Math.fixTo(B.width,4);A.height=Math.fixTo(B.height,4);A.show_axis_label=B.show_axis_label;return A};Plotter.prototype.setAxisDatas=function(){var A=this.graphObj;this.numbLine=A.graph_type=="x"?true:false;this.midX=A.width/2;this.midY=A.height/2;this.xMin=(A.xmin-A.xinc);this.xMax=(A.xmax+A.xinc);this.yMin=(A.ymin-A.yinc);this.yMax=(A.ymax+A.yinc);this.xscale=A.scaleX/A.xinc;this.yscale=A.scaleY/A.yinc;this.xaxis=A.axisYpos;this.yaxis=A.axisXpos;if(A.labType=="pi"){this.xMin=Math.round((xMin)*Math.PI);this.xMax=Math.round((xMax)*Math.PI);this.xscale=xscale/Math.PI}if(A.ylabType=="pi"){this.yMin=Math.round((yMin)*Math.PI);this.yMax=Math.round((yMax)*Math.PI);this.yscale=yscale/Math.PI}this.xl=0;this.xh=this.midX*2;this.yl=0;this.yh=this.midY*2};Plotter.prototype.getDir=function(L){var K=this.pInf;var F=this.nInf;var A=this.xscale;var E=this.yscale;var J=this.xaxis;var H=this.yaxis;var I=this.xh;var G=this.xl;var D=this.yh;var B=this.yl;var C="C";if(L.y>=D&&(L.x<=I&&L.x>=G)){C="N"}if(L.y<=B&&(L.x<=I&&L.x>=G)){C="S"}if(L.x>=I&&(L.y<=D&&L.y>=B)){C="E"}if(L.x<=G&&(L.y<=D&&L.y>=B)){C="W"}if(L.y>=D&&L.x>=I){C="NE"}if(L.y<=B&&L.x>=I){C="SE"}if(L.y>=D&&L.x<=G){C="NW"}if(L.y<=B&&L.x<=G){C="SW"}return C};Plotter.prototype.plotPath=function(G,N,S){var D=this.pInf;var B=this.nInf;var M,A,E;var I=this.eqSy;var L=this.xh;var H=this.xl;var R=this.yh;var Q=this.yl;var C=this.fof;if(I=="eq"||N.dir=="C"||G.dir=="C"){return false}if(I=="ge"||I=="gt"){if(C=="y"){M="S-SE-E-NE-N-NW-W-SW-S";E="+"}else{M="N-NE-E-SE-S-SW-W-NW-N";E="-"}}if(I=="le"||I=="lt"){if(C=="y"){M="N-NE-E-SE-S-SW-W-NW-N";E="-"}else{M="S-SE-E-NE-N-NW-W-SW-S";E="+"}}A=M.split("-");var F,P;var O=false;var K="C";for(var J=0;J<A.length;J++){K=A[J];if(N.dir==K){F=N.pt.x;P=N.pt.y;S.moveTo(F,P);O=true;if(N.dir==G.dir){if((E=="-"&&K=="S")||(E=="+"&&K=="N")){F=G.pt.x;P=G.pt.y;S.lineTo(F,P);O=!true;break}}continue}if(O&&K.length==2){if(A[J]==G.dir){S.lineTo(G.pt.x,G.pt.y);O=false;break}else{switch(K){case"NE":if(E=="-"){F=L}else{if(G.dir=="N"){P=G.pt.y}else{P=R}}S.lineTo(F,P);break;case"SE":if(E=="-"){P=Q}else{F=L}S.lineTo(F,P);break;case"SW":if(E=="-"){F=H}else{P=Q}S.lineTo(F,P);break;case"NW":if(E=="-"){P=R}else{F=H}S.lineTo(F,P);break}}}else{if(O){if(A[J]==G.dir){S.lineTo(G.pt.x,G.pt.y);O=false;break}}}}return true};Plotter.prototype.drawFunction=function(P,A){var H=this.pInf;var B=this.nInf;var G=this.eqSy;var J=1;var Q=this.context;var S;var N=this.xh;var L=this.xl;var V=this.yh;var T=this.yl;var H=this.pInf;var B=this.nInf;var C=this.fof;var F=false;var U=this.sign;this.overFlowObj={};if(G=="lt"||G=="gt"||G=="neq"){J=0}if(G!="eq"&&G!="neq"){Q.lineWidth=0;Q.strokeStyle=this.hex2rgb(this.graph_color,0);Q.fillStyle=this.hex2rgb(this.graph_color,0.15);Q.beginPath();this.fill=this.plotPath(P.s,P.e,Q);F=true;Q.stroke();if(!this.fill){F=false;Q.fill();Q.closePath()}}else{if(G=="neq"){Q.fillStyle=this.hex2rgb(this.graph_color,0.15);Q.beginPath();Q.moveTo(L,T);Q.lineTo(N,T);Q.lineTo(N,V);Q.lineTo(L,V);Q.lineTo(L,T);Q.fill();Q.closePath()}}var R;if(G!="neq"){Q.lineWidth=2;Q.strokeStyle=this.hex2rgb(this.graph_color,J);if(!F){Q.beginPath()}for(var M=0;M<A.length;M++){if(M>0){var E={x:A[M].x,y:A[M].y};var D=R;if(E.x==H||E.x==B||E.y==H||E.y==B||D.x==H||D.x==B||D.y==H||D.y==B){Q.lineWidth=2;Q.strokeStyle=this.hex2rgb("#ff0000",J);if(G=="eq"){Q.lineWidth=2;Q.strokeStyle=this.hex2rgb("#ff0000",0)}}else{var O=(this.distance(E,D));if(C=="x"){if(O>=(this.xh)&&U(E.y)!=U(D.y)){Q.lineWidth=2;Q.strokeStyle=this.hex2rgb("#ff0000",J);if(G=="eq"){Q.lineWidth=2;Q.strokeStyle=this.hex2rgb("#ff0000",0);Q.moveTo(A[M].x,A[M].y)}}else{Q.lineWidth=2;Q.strokeStyle=this.hex2rgb(this.graph_color,J)}}if(C=="y"){if(O>=(this.yh)&&this.sign(E.x)!=this.sign(D.x)){Q.lineWidth=2;Q.strokeStyle=this.hex2rgb(this.graph_color,J);if(G=="eq"){Q.lineWidth=2;Q.strokeStyle=this.hex2rgb(this.graph_color,0);Q.moveTo(A[M].x,A[M].y)}}else{Q.lineWidth=2;Q.strokeStyle=this.hex2rgb(this.graph_color,J)}}R={x:A[M].x,y:A[M].y}}}else{R={x:A[M].x,y:A[M].y}}if(M==0&&(G=="eq"||!this.fill)){Q.moveTo(A[M].x,A[M].y)}else{if(G=="eq"){if(A[M].l=="line"){Q.lineTo(A[M].x,A[M].y)}else{if(A[M].l=="move"){Q.moveTo(A[M].x,A[M].y)}}}else{Q.lineTo(A[M].x,A[M].y)}}}Q.stroke()}if(G!="eq"){Q.fill()}Q.closePath();if(J==0){Q.beginPath();for(var M=0;M<A.length;M++){if(M<A.length-1){var E={x:A[M].x,y:A[M].y};var D={x:A[M+1].x,y:A[M+1].y};if(E.x==H){E.x=N}else{if(E.x==B){E.x=L}}if(E.y==H){E.y=V}else{if(E.y==B){E.y=T}}if(D.x==H){D.x=N}else{if(D.x==B){D.x=L}}if(D.y==H){D.y=V}else{if(D.y==B){D.y=T}}var O=(this.distance(E,D));var K,I;Q.lineWidth=1;Q.strokeStyle=this.hex2rgb(this.graph_color,1);if(O>=4){K=1;I=3;if(C=="x"){if(O>=(this.xh)&&this.sign(E.y)!=this.sign(D.y)){Q.lineWidth=1;Q.strokeStyle=this.hex2rgb("#ff0000",1)}}if(C=="y"){if(O>=(this.yh)&&this.sign(E.x)!=this.sign(D.x)){Q.lineWidth=1;Q.strokeStyle=this.hex2rgb("#ff0000",1)}}}else{K=3;I=3}K=3;I=3;this.dashTo(E.x,E.y,D.x,D.y,K,I,this,Q);Q.stroke()}}}Q.closePath();return Q};Plotter.prototype.getPointsFromEqY=function(){var X=this.pInf;var d=this.nInf;var j=function(m){return Number(m)==Number.NaN};this.setFunctionDatas();this.setAxisDatas();this.graph_color=this.fncol;var W=this.fn;var U=this.fneql;var O=this.fncol;if(W==""||W==undefined){return null}var Y=[];var D=this.eqnObj=EqParser.convertTo_JSEq(this.fn);this.eqSy=this.fneql;var P=0.1;var V=this.xscale;var B=this.yscale;var Z=this.xaxis;var H=this.yaxis;var I=[];var k=this.xMin;var T=this.xMax;var L=this.yMin;var K=this.yMax;var e=this.xh;var a=this.xl;var N=this.yh;var J=this.yl;var c,G,A,F,l;var R,h,C,f,S,E,i,Q,M;this.doPlot=true;var b=this.fixTo;P=(K-L)/200;P=this.fixTo(P,4);for(var c=L;c<=K;c+=P){c=b(c,4);x=this.evalFor(D,-c);A=-(c-P);G=this.evalFor(D,A);l=-(c+P);F=this.evalFor(D,l);if(Number(x)){R=x*V+Z;h=c*B+H;C=G*V+Z;f=A*B+H;S=F*V+Z;E=l*B+H;if(R>-2880&&R<2880){R=b(R,2);h=b(h,2);I.push({x:R,y:h,l:"line"})}else{if(R==d){if(C!=d&&S!=d&&C!=X&&S!=X&&!j(C)&&!j(S)){dx0=this.getDval(D,A,P/10);if(C<e&&C>a){if(dx0>G){xcomp=e}else{xcomp=a}}else{xcomp=C}I.push({y:f,x:xcomp,l:"line"});I.push({y:h,x:xcomp,l:"line"});I.push({y:h,x:-xcomp,l:"move"});dx1=this.getDval(D,l,-P/10);if(S<e&&S>a){if(dx1>F){xcomp=e}else{xcomp=a}}else{xcomp=S}I.push({y:E,x:xcomp,l:"move"})}else{I.push({y:h,x:d,l:"move"})}}else{if(R==X){if(C!=d&&S!=d&&C!=X&&S!=X&&!j(C)&&!j(S)){dx0=this.getDval(D,A,P/10);if(C<midX&&C>-midX){if(dx0>G){xcomp=e}else{xcomp=a}}else{xcomp=C}I.push({y:f,x:xcomp,l:"line"});I.push({y:h,x:xcomp,l:"line"});I.push({y:h,x:-xcomp,l:"move"});dx1=this.getDval(D,l,-P/10);if(S<e&&S>a){if(dx1>F){xcomp=e}else{xcomp=a}}else{xcomp=S}I.push({y:E,x:xcomp,l:"line"})}else{I.push({y:h,x:X,l:"move"})}}else{Y.push(x)}}}}}I=this.asymFix(I);var g;if(I.length<2){if(Y.length<2){if(this.validateFunc()){}else{alert("Check your input function!")}}else{alert("Cannot plot the given function!")}return null}else{g=this.getNodeDetails(I);return this.drawFunction(g,I)}};Plotter.prototype.plotNumberLine=function(){var H=this.pInf;var C=this.nInf;var R=this.context;this.setAxisDatas();if(this.fand){return this.plotNumberLineAnd()}var S=this.fn;var B=this.fneql;if(S==""||S===undefined){return null}var J=4;var G=EqParser.convertTo_JSEq(S);var F=B;var O=this.evalFor(G,0);var D=0;var M;M=this.coordToCanvasPoint(O,D);if(this.autoShift){console.log("PLOT_NUMBER_LINE: debug_a "+this.autoShift);this.checkForShift(O,D,M)}M=this.coordToCanvasPoint(O,D);var P=F=="lt"||F=="gt";var K=this.fncol?this.fncol:"RED";R.lineWidth=2;this.drawPoint(M[0],M[1],K,J,P);var E=M[0];R.closePath();R.lineWidth=3;R.strokeStyle=K;R.fillStyle=K;var I,N,L,A;N=this.yaxis;A=this.yaxis;var Q;if(F=="eq"){}else{if(F=="le"){I=E-J;L=0+10;Q="w"}else{if(F=="lt"){I=E-J;L=0+10;Q="w"}else{if(F=="ge"){I=E+J;L=this.xh-10;Q="e"}else{if(F=="gt"){I=E+J;L=this.xh-10;Q="e"}}}}}R.beginPath();R.moveTo(I,N);R.lineTo(L,A);R.stroke();R.closePath();if(Q=="e"){R.beginPath();R.moveTo((this.xh),this.yaxis);R.lineTo((this.xh)-10,this.yaxis+4);R.lineTo((this.xh)-10,this.yaxis-4);R.lineTo((this.xh),this.yaxis);R.fill()}else{if(Q=="w"){R.beginPath();R.moveTo((0),this.yaxis);R.lineTo((0)+10,this.yaxis+4);R.lineTo((0)+10,this.yaxis-4);R.lineTo((0),this.yaxis);R.fill()}}R.closePath();return R};Plotter.prototype.plotNumberLineAnd=function(){var K=this.pInf;var C=this.nInf;var W=this.context;this.setAxisDatas();this.xscale=this.fixTo(this.xscale,8);var N=this.fn.split("_");var D=N[0];var X=N[1];if(D==""||D==undefined||X==""||X==undefined){return null}var J=this.eqSy=this.fneql.split("_");var U=J[0];var P=J[1];var T=this.evalFor(EqParser.convertTo_JSEq(D),0);var G=0;var S=this.evalFor(EqParser.convertTo_JSEq(X),0);var E=0;var M=4;var I=this.coordToCanvasPoint(T,G);var H=this.coordToCanvasPoint(S,E);if(this.autoShift){console.log("PLOT_NUMBER_LINE_AND: debug_a "+this.autoShift);this.checkForShift(T,G,I);this.checkForShift(S,E,H)}I=this.coordToCanvasPoint(T,G);H=this.coordToCanvasPoint(S,E);var A=U=="lt"||U=="gt";var Y=P=="lt"||P=="gt";var O=this.fncol?this.fncol:"RED";W.lineWidth=2;this.drawPoint(I[0],I[1],O,M,A);this.drawPoint(H[0],H[1],O,M,Y);var F=I[0];W.closePath();W.lineWidth=3;W.strokeStyle=O;W.fillStyle=O;var L,R,Q,B;R=this.yaxis;B=this.yaxis;var V;T=I[0];S=H[0];if(T<S){L=T+M;Q=S-M}else{L=S+M;Q=T-M}W.beginPath();W.moveTo(L,R);W.lineTo(Q,B);W.stroke();W.closePath();return W};Plotter.prototype.checkAsym=function(B,A){var D;for(var C=B+0.01;C<A;C=this.fixTo(C+0.01,2)){D=this.getDval(this.eqnObj,C,0);if(Math.abs(D)>10000){return C}}return null};Plotter.prototype.fixAsym=function(A,Q){var K=this.pInf;var B=this.nInf;var U=this.xscale;var Z=this.yscale;var I=this.xaxis;var V=this.yaxis;var R=this.xh;var P=this.xl;var c=this.yh;var a=this.yl;var T=A.length;var S=A[T-2].x;var J=A[T-2].y;var W=A[T-1].x;var L=A[T-1].y;var Y=(S-I)/U;var H=(J-V)/Z;var X=(W-I)/U;var G=(L-V)/Z;var F=Q*U+I;var D=Q*Z+V;var N,M,O,E,C,b;if(fof=="x"){N=this.getDval(this.eqnObj,Y,0.01);if(J<c&&J>a){if(N>H){O=c}else{O=a}}else{O=J}A.splice(T-1,0,{x:S,y:O,l:"line"});A.splice(T,0,{x:F,y:O,l:"line"});A.splice(T+1,0,{x:F,y:-O,l:"line"});M=this.getDval(this.eqnObj,X,-0.01);if(L<c&&L>a){if(M>G){O=c}else{O=a}}else{O=L}A.splice(T+2,0,{x:W,y:O,l:"move"})}if(fof=="y"){E=this.getDval(this.eqnObj,H,0.01);if(S<R&&S>P){if(E>Y){b=R}else{b=P}}else{b=S}A.splice(T-1,0,{y:J,x:b,l:"line"});A.splice(T,0,{y:D,x:b,l:"line"});A.splice(T+1,0,{y:D,x:-b,l:"line"});C=this.getDval(this.eqnObj,G,-0.01);if(W<R&&W>P){if(C>X){b=R}else{b=P}}else{b=W}A.splice(T+2,0,{y:L,x:b,l:"move"})}};Plotter.prototype.asymFix=function(A){var H=this.pInf;var B=this.nInf;var Q=this.xscale;var S=this.yscale;var E=this.xaxis;var R=this.yaxis;var M=this.xh;var J=this.xl;var W=this.yh;var T=this.yl;var V=this.sign;var I=A.length;var P=[];var G;var C=this.fof;for(var U=0;U<A.length;U++){var N=A[U];var L=(N.x-E)/Q;var K=(N.y-R)/S;P.push(A[U]);if(U!=0){if(C=="x"){if(O&&(V(O.y)!=V(N.y))){G=this.checkAsym(F,L);if(G!=null){this.fixAsym(P,G)}}}if(C=="y"){if(O&&(V(O.x)!=V(N.x))){G=this.checkAsym(D,K);if(G!=null){this.fixAsym(P,G)}}}}var O=A[U];var F=L;var D=K}return P};Plotter.prototype.hex2rgb=function(D,C){var F,E,B;var G;var A=this.context.strokeStyle;this.context.strokeStyle=D;G=this.context.strokeStyle;this.context.strokeStyle=A;if(G.charAt(0)=="#"){G=G.substr(1)}F=G.charAt(0)+""+G.charAt(1);E=G.charAt(2)+""+G.charAt(3);B=G.charAt(4)+""+G.charAt(5);F=parseInt(F,16);E=parseInt(E,16);B=parseInt(B,16);if(C!==undefined){return"rgba("+F+","+E+","+B+","+C+")"}else{return"rgb("+F+","+E+","+B+")"}};Plotter.prototype.distance=function(G,F){var B=G.x;var A=F.x;var D=G.y;var C=F.y;var E=Math.pow((A-B),2)+Math.pow((C-D),2);return Math.sqrt(E)};Plotter.prototype.angle=function(){var F={};var E=arguments;var D=arguments.length;var C,B,H,G;var L={};var K,J;if(D==2){C=E[0].x;B=E[1].x;H=E[0].y;G=E[1].y;K=B-C;J=G-H;var A=Math.sqrt((K)*(K)+(J)*(J));var I=Math.atan2((J),(K));L.r=A;L.ra=I;L.a=I*180/Math.PI}return L};function delegate(B,A){return function(){return A.apply(B,arguments)}}Plotter.prototype.initGestureListeners=function(){if(this.hasGesture){var A=this.icanvas;this.gesture_start=delegate(this,this.ev_ongesturestart);this.gesture_change=delegate(this,this.ev_ongesturechange);this.gesture_end=delegate(this,this.ev_ongestureend);A.addEventListener("gesturestart",this.gesture_start,false)}};Plotter.prototype.initMouseListeners=function(){console.log("initMouseListeners_START");var B=this.icanvas;var A=function(D){D.preventDefault()};var C=A;this.mouse_down=delegate(this,this.ev_onmousedown);this.mouse_move=delegate(this,this.ev_onmousemove);this.mouse_up=delegate(this,this.ev_onmouseup);if(this.document.addEventListener){B.addEventListener("mousedown",this.mouse_down,false);B.addEventListener("touchstart",A,false);B.addEventListener("touchmove",C,false);B.addEventListener("touchstart",this.mouse_down,false)}else{B.attachEvent("onmousedown",this.mouse_down);B.attachEvent("touchstart",A);B.attachEvent("touchmove",C);B.attachEvent("touchstart",this.mouse_down)}console.log("initMouseListeners_END")};Plotter.prototype.killListeners=function(){this.killMouseListeners();this.killTouchListeners();console.log("LISTENERS_KILLED")};Plotter.prototype.killMouseListeners=function(){var A=this.icanvas;if(this.document.addEventListener){A.removeEventListener("mousedown",this.mouse_down,false);document.removeEventListener("mouseup",this.mouse_up,false);A.removeEventListener("mousemove",this.mouse_move,false)}else{A.detachEvent("onmousedown",this.mouse_down);document.detachEvent("onmouseup",this.mouse_up);A.detachEvent("onmousemove",this.mouse_move)}};Plotter.prototype.killTouchListeners=function(){var A=this.icanvas;if(this.document.addEventListener){A.removeEventListener("touchstart",this.mouse_down,false);A.removeEventListener("touchmove",this.mouse_move,false);document.removeEventListener("touchend",this.mouse_up,false)}else{A.detachEvent("touchstart",this.mouse_down);A.detachEvent("touchmove",this.mouse_move);document.detachEvent("touchend",this.mouse_up)}};Plotter.prototype.drawSlopeTri=function(D,C,R){var H=D;var G=C;var O=this;var I=(this.plot_data[4])=="true"?"normal":"origin";var J=12;var Q=R;this.alphacontext.fillStyle=this.hex2rgb("#ffffff",0.75);this.alphacontext.fillRect(0,0,this.graphObj.width,this.graphObj.height);Q.textBaseline="bottom";Q.font="bold 12px sans-serif";Q.fillStyle="BLUE";var V=Number(H[0]);var F=Number(H[1]);var U=Number(G[0]);var E=Number(G[1]);var K=[V,U];var S=[F,E];if(I=="normal"&&V>U){V=K[1];U=K[0];F=S[1];E=S[0]}this.setAxisDatas();var N=V*O.xscale+O.xaxis;var A=-F*O.yscale+O.yaxis;var L=U*O.xscale+O.xaxis;var W=-E*O.yscale+O.yaxis;var M=L-N;var T=Math.abs(W-A);Q.strokeStyle="blue";Q.lineWidth=2;Q.beginPath();Q.moveTo(L,W);Q.lineTo(N,W);Q.lineTo(N,A);Q.stroke();Q.closePath();var B={};B.text=E-F;B.height=J;B.width=Q.measureText(B.text).width;if(this.isIE&&B.width==0){B.width=this.graphObj.measureText(B.text,Q.font)}var P={};P.text=U-V;P.height=J;P.width=Q.measureText(P.text).width;if(this.isIE&&P.width==0){P.width=this.graphObj.measureText(P.text,Q.font)}P.y=F>E?W+P.height+4:W-4;P.x=N+(M-P.width)/2;B.y=F>E?A+(T/2)+(J/2):A-(T/2)+(J/2);B.x=N-(B.width)-5;if(I=="origin"){B.x=N+(M>0?-B.width-5:5)}if(B.text!="0"){Q.fillText(B.text,B.x,B.y)}if(P.text!="0"){Q.fillText(P.text,P.x,P.y)}};Plotter.prototype.setInputData=function(A){this.input_data=A};Plotter.prototype.getInputData=function(){var A=this.input_data;if(!A){A={setup:null};return convertObjToString(A);if(this.plot_type=="interactive"){}else{A=this.getGraphData();A.rerender=true;A.autoShift=false;var B=this.plot_datas;A.plot_data=B}}return convertObjToString(A)};Plotter.prototype.setWidgetValue=function(jsonString){var _config=eval("("+jsonString+")");this.graphObj.setAxis(_config.xaxis,_config.yaxis);this.graphObj.scaleGraph(_config.xscale,_config.yscale);new Plotter(this.graphObj,"point",{data:_config.plot_data},_config.snap,_config.cntrls,false,_config.nudge_top)};Plotter.prototype.getWidgetValue=function(){return this.getInputData()};Plotter.prototype.validateInput=function(callFromSWV,doNotFire){console.log("VALIDATE_INPUT_CALLED "+callFromSWV);if(this.plot_type!="interactive"){return }var type=this.iplot_type;var boo=false;var mesg="";var nodes=this.nodeArr;var inVal_msg="";var input_data=this.getGraphData();input_data.rerender=true;input_data.autoShift=false;var iplot_data="[";var input_saved_values=null;var submit_mode=(_tutorConfiguration.indicateWidgetStatus=="INDICATE_SUBMIT_ONLY");var none_mode=(_tutorConfiguration.indicateWidgetStatus=="NONE");var assignment_mode=submit_mode||none_mode;if(callFromSWV){nodes=eval(this.node_data)}if(!nodes||!nodes.length){throw (callFromSWV?"Error in correct value!":"Plot something in graph!")}if(type=="point"&&nodes.length==1){var coords=nodes[0][1];var apos=this.plot_data[1][0]+","+this.plot_data[1][1];var ipos=coords[0]+","+coords[1];boo=apos==ipos;if(this.graph_type=="x"){boo=String(this.plot_data[1][0])==String(coords[0])}console.log("RESULT: "+boo+":"+this.plot_data[1][0]+":"+coords[0]);inVal_msg=coords;iplot_data+="'point',";iplot_data+="["+coords[0]+","+coords[1]+"],";iplot_data+="true,";iplot_data+=(boo&&!assignment_mode?"'green'":"'red'")}else{if(type=="point"||type=="path"||type=="polygon"){var icoords=nodes;var ecoords=this.plot_data[1];var coords=[];var pos=[];var cl=icoords.length;iplot_data+="'"+type+"',";iplot_data+="[";for(var c=0;c<cl;c++){coords.push(icoords[c][1]);var sep=c<cl-1?",":"";iplot_data+="["+coords[c][0]+","+coords[c][1]+"]"+sep}iplot_data+="],";if(icoords.length==ecoords.length){for(c=0;c<ecoords.length;c++){pos.push(ecoords[c])}var a,i;for(c=0;c<cl;c++){a=coords[c].toString();for(var d=0;d<pos.length;d++){i=pos[d].toString();if(a==i){pos.splice(d,1);continue}}}boo=pos.length>0?false:true}else{boo=false}console.log("RESULT: "+boo+":"+this.plot_data[1]+":"+coords);inVal_msg=coords.join("|");iplot_data+="true,";iplot_data+=(boo&&!assignment_mode?"'green'":"'red'")}else{if(type=="parabola"){var pos=nodes[nodes.length-1][0];var coords=nodes[nodes.length-1][1];var apos=this.plot_data[1][2];var exp=apos[4]+":"+apos[5];var ipos=coords[0]+":"+coords[1];boo=exp==ipos;console.log("RESULT: "+boo+":"+exp+":"+ipos);inVal_msg=coords;this.clear();this.plotParabola(boo?"green":"red");var lab="("+coords[0]+", "+coords[1]+")";var tw=this.context.measureText(lab).width;if(this.isIE&&tw==0){tw=this.graphObj.measureText(lab,this.context.font)}var xp=pos[0]-tw/2;var yp=parseInt(String(apos[0]))<0?pos[1]-6:pos[1]+18;if(this.fof=="y"){xp=parseInt(String(apos[0]))<0?pos[0]+6:pos[0]-tw-6;yp=pos[1]+6}var $h=this.fof=="y"?coords[1]:coords[0];var $k=this.fof=="y"?coords[0]:coords[1];iplot_data+="'function',";var $val=this.getStdFormOfParabola(this.fof,this.plot_data[1][0],[apos[0],$h,$k]);var $ieql="eq";var and=false;iplot_data+="['"+$val+"','"+this.fof+"','"+$ieql+"',"+and+"],";iplot_data+="false,";iplot_data+=(boo&&!assignment_mode?"'green'":"'red'");this.drawPoint(pos[0],pos[1],boo?"green":"#ff0000",4,false,this.context,true,lab,xp,yp)}else{if(type=="line"){var subtype=this.plot_data[1][0];var data=this.plot_data[1][1];if(subtype=="slope"){var pt1=nodes[0][1];var pt2=nodes[1][1];var x1,x2,y1,y2;x1=pt1[0];x2=pt2[0];y1=pt1[1];y2=pt2[1];var rise=y2-y1;var run=x2-x1;var s1=rise<0?"-":"";var s2=run<0?"-":"";var r1=Math.abs(rise);var r2=Math.abs(run);var s=((s1=="-")&&(s2==""))?"-":"";s=((s1=="")&&(s2=="-"))?"-":s;var inpVal=run==0?"undefined":(rise==0?"0":s+Math.simpleFrac(r1+"/"+r2));var expVal=String(data).indexOf("/")>-1?Math.simpleFrac(data):data;boo=inpVal==expVal;if(true){this.drawSlopeTri(pt1,pt2,this.context);this.showing_slt=true}}else{if(subtype=="slope_intercept_y"){var pt1=nodes[0][1];var pt2=nodes[1][1];var data_arr=(data);var x1,x2,y1,y2;x1=pt1[0];x2=pt2[0];y1=pt1[1];y2=pt2[1];var rise=y2-y1;var run=x2-x1;var mval=rise/run;var s1=rise<0?"-":"";var s2=run<0?"-":"";var r1=Math.abs(rise);var r2=Math.abs(run);var s=((s1=="-")&&(s2==""))?"-":"";s=((s1=="")&&(s2=="-"))?"-":s;console.log("SLOPE_LINE_VALIDATOR_DATA:"+x1+":"+y1+":"+x2+":"+y2+":"+mval);var inpVal_s=run==0?"undefined":(rise==0?"0":s+Math.simpleFrac(r1+"/"+r2));var inpVal_y=(-1*mval*x1)+y1;var expVal_s=String(data_arr[0]).indexOf("/")>-1?Math.simpleFrac(data_arr[0]):data_arr[0];var expVal_y=String(data_arr[1]);boo=(inpVal_s==expVal_s)&&(inpVal_y==expVal_y);console.log("SLOPE_LINE_VALIDATOR:"+subtype+":"+inpVal_s+":"+inpVal_y+":"+expVal_s+":"+expVal_y+":"+boo);if(true){this.drawSlopeTri(pt1,pt2,this.context);this.showing_slt=true}}else{if(subtype=="slope_intercept_x"){var pt1=nodes[0][1];var pt2=nodes[1][1];var data_arr=(data);var x1,x2,y1,y2;x1=pt1[0];x2=pt2[0];y1=pt1[1];y2=pt2[1];var rise=y2-y1;var run=x2-x1;var mval=rise/run;var s1=rise<0?"-":"";var s2=run<0?"-":"";var r1=Math.abs(rise);var r2=Math.abs(run);var s=((s1=="-")&&(s2==""))?"-":"";s=((s1=="")&&(s2=="-"))?"-":s;console.log("SLOPE_LINE_VALIDATOR_DATA:"+x1+":"+y1+":"+x2+":"+y2+":"+mval);var inpVal_s=run==0?"undefined":(rise==0?"0":s+Math.simpleFrac(r1+"/"+r2));var inpVal_x=-1*((-1*mval*x1)+y1)/mval;var expVal_s=String(data_arr[0]).indexOf("/")>-1?Math.simpleFrac(data_arr[0]):data_arr[0];var expVal_x=String(data_arr[1]);boo=(inpVal_s==expVal_s)&&(inpVal_x==expVal_x);console.log("SLOPE_LINE_VALIDATOR:"+subtype+":"+inpVal_s+":"+inpVal_x+":"+expVal_s+":"+expVal_x+":"+boo);if(true){this.drawSlopeTri(pt1,pt2,this.context);this.showing_slt=true}}else{if(subtype=="intercept_xy"){var pt1=nodes[0][1];var pt2=nodes[1][1];var data_arr=(data);var x1,x2,y1,y2;x1=pt1[0];x2=pt2[0];y1=pt1[1];y2=pt2[1];var rise=y2-y1;var run=x2-x1;var mval=rise/run;var s1=rise<0?"-":"";var s2=run<0?"-":"";var r1=Math.abs(rise);var r2=Math.abs(run);var s=((s1=="-")&&(s2==""))?"-":"";s=((s1=="")&&(s2=="-"))?"-":s;var inpVal_y=(-1*mval*x1)+y1;var inpVal_x=-1*((-1*mval*x1)+y1)/mval;var expVal_x=String(data_arr[0]);var expVal_y=String(data_arr[1]);boo=(inpVal_y==expVal_y)&&(inpVal_x==expVal_x);if(true){}}else{if(subtype=="intercept_x"){var pt1=nodes[0][1];var pt2=nodes[1][1];var data_arr=(data);var x1,x2,y1,y2;x1=pt1[0];x2=pt2[0];y1=pt1[1];y2=pt2[1];var rise=y2-y1;var run=x2-x1;var mval=rise/run;var s1=rise<0?"-":"";var s2=run<0?"-":"";var r1=Math.abs(rise);var r2=Math.abs(run);var s=((s1=="-")&&(s2==""))?"-":"";s=((s1=="")&&(s2=="-"))?"-":s;var inpVal_y=(-1*mval*x1)+y1;var inpVal_x=-1*((-1*mval*x1)+y1)/mval;var expVal_x=String(data_arr);var expVal_y=String(data_arr);boo=(inpVal_x==expVal_x);if(true){this.drawPoint(inpVal_x,0,"#ff0000",4,false,this.context)}}else{if(subtype=="intercept_y"){var pt1=nodes[0][1];var pt2=nodes[1][1];var data_arr=(data);var x1,x2,y1,y2;x1=pt1[0];x2=pt2[0];y1=pt1[1];y2=pt2[1];var rise=y2-y1;var run=x2-x1;var mval=rise/run;var s1=rise<0?"-":"";var s2=run<0?"-":"";var r1=Math.abs(rise);var r2=Math.abs(run);var s=((s1=="-")&&(s2==""))?"-":"";s=((s1=="")&&(s2=="-"))?"-":s;var inpVal_y=(-1*mval*x1)+y1;var inpVal_x=-1*((-1*mval*x1)+y1)/mval;var expVal_x=String(data_arr);var expVal_y=String(data_arr);boo=(inpVal_y==expVal_y);if(true){}}else{if(subtype=="withPt"){var pt1=nodes[0][1];var pt2=nodes[1][1];var data_arr=(data);var x1,x2,y1,y2;x1=pt1[0];x2=pt2[0];y1=pt1[1];y2=pt2[1];var rise=y2-y1;var run=x2-x1;var mval=rise/run;var s1=rise<0?"-":"";var s2=run<0?"-":"";var r1=Math.abs(rise);var r2=Math.abs(run);var s=((s1=="-")&&(s2==""))?"-":"";s=((s1=="")&&(s2=="-"))?"-":s;console.log("SLOPE_LINE_VALIDATOR_DATA:"+x1+":"+y1+":"+x2+":"+y2+":"+mval+":"+data_arr[0]+":"+data_arr[1]);var inpVal=mval*data_arr[0]-(mval*x1)+y1;var boo=inpVal==data_arr[1];console.log("SLOPE_LINE_VALIDATOR:"+subtype+":"+inpVal+":"+boo)}else{if(subtype=="eqn"){}else{if(subtype=="points"){}}}}}}}}}var p1="["+x1+","+y1+"]";var p2="["+x2+","+y2+"]";iplot_data+="'line',";iplot_data+="["+p1+","+p2+"],";iplot_data+="true,";iplot_data+=(boo&&!assignment_mode?"'green'":"'red'");inVal_msg=inpVal}else{if(type=="inequality"){var val=this.plot_data[1][0];var eql=this.plot_data[1][2];var vals=String(val).split("_");var eqls=String(eql).split("_");var $val;var $ineq;if(vals[1]){expVal=vals[0]+"_"+eqls[0]+"_x_"+eqls[1]+"_"+vals[1]}else{expVal="x_"+eql+"_"+val}var and=nodes.length>1;var pts=and?[nodes[0][1],nodes[1][1]]:[nodes[0][1]];var ieql=this.fneql;var x1,x2,dx,inpVal;x1=pts[0][0];x2=x1+1;dx=x2-x1;if(and){x2=pts[1][0];dx=x2-x1;var ieqls=ieql.split("_");var le=ieqls[0];var re=ieqls[1];if(dx<0){le=ieqls[1];re=ieqls[0]}inpVal=x1+"_"+le+"_x_"+re+"_"+x2;inVal_msg=x1+" &"+le+"; <i>x</i> &"+re+"; "+x2;$val=x1+"_"+x2;$ineq=le+"_"+re}else{inpVal="x_"+ieql+"_"+x1;inVal_msg="<i>x</i> &"+ieql+"; "+x1;$val=x1;$ineq=ieql}console.log(inpVal+":"+expVal);boo=inpVal==expVal;iplot_data+="'function',";iplot_data+="['"+$val+"','x','"+$ineq+"',"+and+"],";iplot_data+="false,";iplot_data+=(boo&&!assignment_mode?"'green'":"'red'")}}}}}iplot_data+="]";input_data.plot_data=iplot_data;input_data.node_data=nodes;input_data.actions=this.actions;this.setInputData(input_data);console.log("RESULT: "+iplot_data);if(doNotFire){return boo?true:false}try{HmEvents.eventTutorWidgetComplete.fire({correct:boo?true:false,widget:this,value:inVal_msg,inputData:{type:"graph",data:input_data}});if(_tutorConfiguration.indicateWidgetStatus=="NONE"){$("#widget_result").html("")}else{if(_tutorConfiguration.indicateWidgetStatus=="INDICATE_SUBMIT_ONLY"){$("#widget_result").html("Submitted");$get("widget_result").style.color="#F94600"}else{$("#widget_result").html(boo?"Correct!":"Try again, or click the 'Next' button!");$get("widget_result").style.color=boo?"GREEN":"#F94600"}}showWidgetSubmit(false);if(!callFromSWV){if(assignment_mode){}else{this.clear();this.node_count=0;this.reRender(boo?"#008000":"#ff0000")}return ;var _config=eval(input_data);this.clear();this.renderData({data:_config.plot_data},_config.labelPlot,_config.node_data,false,_config.actions)}}catch(error){console.log(error)}if(this.allowGraphTrans.mouse&&!this.enableWheel){this.enableWheel=true;this.graphObj.init_graph_transformListeners()}};Plotter.prototype.ev_ongesturestart=function(A){var B=this.icanvas;A.preventDefault();this.ges_scale_s=event.scale;this.ges_scale_p=null;this.gestureAction=true;B.addEventListener("gesturechange",this.gesture_change,false);B.addEventListener("gestureend",this.gesture_end,false)};Plotter.prototype.ev_ongesturechange=function(A){A.preventDefault();this.ges_scale_e=event.scale;var F=this.ges_scale_e-(this.ges_scale_p?this.ges_scale_p:this.ges_scale_e);this.ges_scale_p=this.ges_scale_e;var B=this.graphObj;var C=B.scaleX/25;if(F>0){var E=B.scaleX+C;var D=B.graph_type=="x"?B.scaleY:B.scaleY+C;if(E<=55000){B.ScaleFromPt(E,D);this.setAxisDatas();this.reRender()}}else{if(F<0){var E=B.scaleX-C;var D=B.graph_type=="x"?B.scaleY:B.scaleY-C;if(E>=0.009){B.ScaleFromPt(E,D);this.setAxisDatas();this.reRender()}}}};Plotter.prototype.ev_ongestureend=function(A){A.preventDefault()};Plotter.prototype.ev_onmousedown=function(B){var D=B?B:window.event;this.isTouchEnabled=D.type.indexOf("touch")>-1;var A=false;if(this.isIE){A=D.button===1}else{A=D.button===0}if(this.isTouchEnabled){A=true}if(!A){return }if(this.node_count==0){this.nodeArr=[];showWidgetSubmit(false)}this.showing_slt=false;this.dragged=false;var C=this.icanvas;this.mousePos="down";if(this.isTouchEnabled){this.killMouseListeners();if(this.document.addEventListener){C.addEventListener("touchmove",this.mouse_move,false);document.addEventListener("touchend",this.mouse_up,false)}else{C.attachEvent("touchmove",this.mouse_move);document.attachEvent("touchend",this.mouse_up)}}else{if(this.document.addEventListener){document.addEventListener("mouseup",this.mouse_up,false);C.addEventListener("mousemove",this.mouse_move,false)}else{document.attachEvent("onmouseup",this.mouse_up);C.attachEvent("onmousemove",this.mouse_move)}}this.node_count++;console.log("ON_MOUSE_DOWN: "+this.node_count+":"+this.totalNodes);if(this.node_count>this.totalNodes){this.finishRendering=false;this.node_count=1;this.nodeArr=[];this.actions=[];this.clear();if(this.graphObj.canvas.style.opacity<1){this.graphObj.canvas.style.opacity=1}}if(this.node_count==this.totalNodes){this.finishRendering=true}else{this.finishRendering=false}this.showCursorPos=false;var E=this.getCursorPos(B);this.mouse_down_pos=[E.x,E.y];this.mouse_last_pos=[E.x,E.y];this.enableWheel=false;if(!this.allowGraphTrans.mouse){this.render(B);this.reRender()}if(!this.allowGraphTrans.key){this.graphObj.stop_graph_transformListeners()}};Plotter.prototype.ev_onmouseup=function(B){console.log("ON_MOUSE_UP: "+this.finishRendering);this.mousePos="up";if(this.gestureAction){this.gestureAction=false;this.killListeners();this.initMouseListeners();return }var F=this.getCursorPos(B);this.mouse_up_pos=[F.x,F.y];var C=F.x-this.mouse_down_pos[0];var A=F.y-this.mouse_down_pos[1];var E=Math.sqrt(C*C+A*A);if(!this.dragged){if(this.plot_data[0]=="inequality"){if(!this.fneql){this.killListeners();this.initMouseListeners();return }}this.showCursorPos=true;if(this.plot_data[0]=="parabola"){this.showCursorPos=false}var G=this.render(B,true);console.log("ON_MOUSE_UP: "+this.finishRendering+":"+G[0]+":"+G[1]+":"+this.nodeArr.length);var D=this.canvasPosToCoords(G[0],G[1]);D[0]=Math.fixTo(D[0],4);D[1]=Math.fixTo(D[1],4);this.nodeArr.push([G,D]);if(this.graphObj.canvas.style.opacity<=1){this.graphObj.canvas.style.opacity=1}if(this.finishRendering){showWidgetSubmit(true);setWidgetMessage("")}this.lastNode=G;if(this.zcontext){this.zcontext.clearRect(0,0,this.zcanvas.width,this.zcanvas.height);this.zcanvas.style.top=-60+"px";this.zcanvas.style.left=0+"px"}}this.killListeners();this.initMouseListeners()};Plotter.prototype.ev_onmousemove=function(B){if(this.gestureAction){return }var F=this.getCursorPos(B);this.mouse_move_pos=[F.x,F.y];var C=F.x-this.mouse_down_pos[0];var A=F.y-this.mouse_down_pos[1];var E=Math.sqrt(C*C+A*A);var D=true;if(!this.allowGraphTrans.mouse){this.render(B);D=false}if(D&&(E>1||this.dragged)){var C=F.x-this.mouse_last_pos[0];var A=F.y-this.mouse_last_pos[1];this.graphObj.shiftAxis(C,this.numberLine?0:A);this.reRender();this.mouse_last_pos[0]=F.x;this.mouse_last_pos[1]=F.y;this.dragged=true}if(this.zcontext){}this.mousePos="move"};Plotter.prototype.resetInputData=function(){this.finishRendering=false;this.node_count=0;this.nodeArr=[];this.actions=[];if(this.graphObj.canvas.style.opacity<1){this.graphObj.canvas.style.opacity=1}};Plotter.prototype.reRender=function(A){if(!this.actions||this.actions.length==0){return }var E=(A?A:(this.lastRenderCol?this.lastRenderCol:"#ff0000"));this.totalNodes=this.actions.length;for(var B=0;B<this.actions.length;B++){var D=this.actions[B];this.node_count++;this.showCursorPos=D[3]=="inequality"?false:D[4];var F=this.render(D[0],D[1],true,D[2],E);var C=this.canvasPosToCoords(F[0],F[1]);C[0]=Math.fixTo(C[0],1);C[1]=Math.fixTo(C[1],1);this.nodeArr[B]=[F,C];this.lastNode=F}if(this.showing_slt){this.drawSlopeTri(this.nodeArr[0][1],this.nodeArr[1][1],this.context)}};Plotter.prototype.render=function(p,T,S,F,G){var i=G?G:"#ff0000";this.lastRenderCol=i;var a=T?T:false;var Y=this.getCursorPos(p);var g=[Y.x,Y.y];if(S){g=this.coordToCanvasPoint(F[0],F[1])}this.graphObj.getRatio();this.setAxisDatas();if(!S){g=this.roundTo(g,this.snapTo)}g[1]=this.numberLine?this.cpos[1]:g[1];var V=this.canvas.width;var f=this.canvas.height;var R=a?this.context:this.icontext;this.clear(this.icontext);this.point_open=false;if(this.plot_data[0]=="inequality"){var A=this.fneql.split("_");if(this.fneql=="lt"||this.fneql=="gt"){this.point_open=true}if(A[this.node_count-1]=="lt"||A[this.node_count-1]=="gt"){this.point_open=true}}var C=this.point_open;if(a){this.icontext.clearRect(0,0,V,f)}if((this.plot_data[0]=="point")||this.plot_data[0]=="parabola"||this.plot_data[0]=="segment"||this.plot_data[0]=="line"||this.plot_data[0]=="polygon"||this.plot_data[0]=="path"||(this.plot_data[0]=="inequality"&&this.fand)){if((this.plot_data[0]=="point"&&this.totalNodes==1)||this.plot_data[0]=="parabola"){this.clear()}if(this.plot_data[0]=="parabola"){var Z=this.plot_data[1][0];var B=this.plot_data[1][2];var o=this.plot_data[1][1];var b=this.roundTo(this.mouse_down_pos,this.snapTo);console.log(g[0]+":"+g[1]);var I=this.canvasPosToCoords(g[0],g[1]);I[0]=Math.fixTo(I[0],1);I[1]=Math.fixTo(I[1],1);console.log("PARA_EQN: "+g[0]+":"+g[1]+":"+I[0]+":"+I[1]);if(o=="x"){B[1]=I[0];B[2]=I[1]}else{B[1]=I[1];B[2]=I[0]}this.plot_data[1][2]=B;var N=this.getStdFormOfParabola(o,Z,B);console.log("EQN:"+N);this.plotFunction([[N,o,"eq",false],false,i])}else{this.drawPoint(g[0],g[1],i,4,C,R)}}if(this.plot_data[0]=="segment"||this.plot_data[0]=="line"||this.plot_data[0]=="polygon"||this.plot_data[0]=="path"||(this.plot_data[0]=="inequality"&&this.fand)){if(this.lastNode&&this.node_count>1){var P=this.lastNode[0];var t=this.lastNode[1];var O=g[0];var s=g[1];R.strokeStyle=i;R.lineWidth=2;R.beginPath();R.moveTo(P,t);R.lineTo(O,s);R.stroke()}}if(this.plot_data[0]=="line"){if(this.lastNode&&this.node_count>1){var H=(s-t)/(O-P);var J=Math.atan(H);var L=Math.PI-J;J=Math.PI+L;var k=Math.sqrt((V*V)+(f*f));var d=P+k*Math.cos(L);var M=t-k*Math.sin(L);var c=O+k*Math.cos(J);var K=s-k*Math.sin(J);R.strokeStyle=i;R.lineWidth=2;R.beginPath();R.moveTo(d,M);R.lineTo(P,t);R.moveTo(O,s);R.lineTo(c,K);R.stroke()}}var I=this.canvasPosToCoords(g[0],g[1]);I[0]=Math.fixTo(I[0],4);I[1]=Math.fixTo(I[1],4);var q="type|changedTouches|pageX|clientX|pageY|clientY|screenX|screenY";if(S){}else{var W={};var U=false;for(var l in p){if(q.indexOf(l)>-1){if(l=="changedTouches"){U=true}else{W[l]=p[l]}}}if(U){var X=p.changedTouches[0];W.changedTouches=[{clientX:X.clientX,clientY:X.clientY,pageX:X.pageX,pageY:X.pageY}]}this.actions.push([W,T,I,this.plot_data[0],this.showCursorPos])}if(this.iplot_type=="inequality"){if(this.totalNodes==1){this.fn=String(I[0]);this.clear();this.fncol=i;this.plotNumberLine()}}if(S&&this.showCursorPos){var j=this.graph_type=="x"?String(I[0]):"("+I[0]+", "+I[1]+")";R.textBaseline="bottom";R.font="bold 12px sans-serif";R.fillStyle="BLACK";var n=R.measureText(j).width;if(this.isIE&&n==0){n=this.graphObj.measureText(String(j),R.font)}var h=g[0]-n;var Q=g[1]-2;if(h+n>V){var E=h+n-V;h=h-E}if(h<0){var E=h;h=h-E}if(Q-12<0){var D=Q;Q=12}if(this.graph_type=="x"){h=g[0]-(n/2)}if(this.iplot_type=="inequality"&&this.mousePos=="up"){return g}R.fillText(j,h,Q)}return g};Plotter.prototype.roundTo=function(L,P){var B=[];var K=P?P:"GridToGrid";var U={x:L[0],y:L[1]};if(K=="none"){return L}var N=this.graphObj.scaleX;var R=this.graphObj.scaleY;var C=this.graphObj.incX/N;var H=this.graphObj.incY/R;var A=5;var E=this.canvasPosToCoords(U.x,U.y);var D={x:E[0],y:E[1]};var Q=A/N;var O=A/R;var T,S;var J,I,F,M;if(K=="GridToGrid"){T=C;S=H;D.x=Math.round(D.x/T)*T;D.y=Math.round(D.y/S)*S}else{if(K=="hGridTohGrid"){T=C/2;S=H/2;D.x=Math.round(D.x/T)*T;D.y=Math.round(D.y/S)*S}else{if(K=="ToGrid"){T=C;S=H;F=Math.round(D.x/T)*T;M=Math.round(D.y/S)*S;J=Math.abs(D.x-F);I=this.numbLine?0:Math.abs(D.y-M);if(J<Q&&I<O){D.x=F;D.y=M}}else{if(K=="TohGrid"){T=C/2;S=H/2;F=Math.round(D.x/T)*T;M=Math.round(D.y/S)*S;J=Math.abs(D.x-F);I=this.numbLine?0:Math.abs(D.y-M);if(J<Q/2&&I<O/2){D.x=F;D.y=M}}else{if(K=="round"){D.x=Math.round(D.x);D.y=Math.round(D.y)}else{D.x=(D.x);D.y=(D.y)}}}}}var G=this.coordToCanvasPoint(D.x,D.y);B=[G[0],G[1]];return B};Plotter.prototype.showCorrectAnswerAnim_nl=function(K){var F;var N=100;var L=100;this.setAxisDatas();var G=this.anim_val=K*1;var B=this.xscale;var O=this.xaxis;var M=this.coordToCanvasPoint(G,0);var E=this;var D=this.graphObj;var J=this.canvas.width;var Q=J/2;var A=this.canvas.height;var P=M[0];function H(S,R,U){var T;if(S<0){D.scrollLeft();T=E.coordToCanvasPoint(R,0);if(T[0]>=J/2){D.setAxis(Q-(S-Q));clearInterval(F);F=setInterval(C,L)}}else{if(S>0){D.scrollRight();T=E.coordToCanvasPoint(R,0);if(T[0]<=J/2){D.setAxis(Q-(S-Q));clearInterval(F);F=setInterval(C,L)}}else{clearInterval(F);F=setInterval(H,L)}}}function I(){var S=E.anim_val;var R=D.incX;var V=D.incY;var X=E.coordToCanvasPoint(S,0);if(X[0]>J-R||X[0]<R){var W=D.scaleX;var T=W-(W/2);try{D.scaleGraph(T)}catch(U){console.log(U)}}else{clearInterval(F);E.showCorrectAnswerAnim_nl(E.anim_val)}}function C(){E.setAxisDatas();var S=E.anim_val;var R=1/D.divX;var U=1/D.divY;var Y=D.xaxis;var W=Math.fixTo((S/R)*1,6);var X=E.coordToCanvasPoint(S,0);if(parseInt(W)!=W){var V=E.xscale;var T=V+(V/2);X=E.coordToCanvasPoint(S,0);D.ScaleFromPt(T,X[0]);R=1/D.divX;W=Math.fixTo((S/R)*1,6)}else{E.setAxisDatas();clearInterval(F)}}if(Math.abs(M[0])>2000){F=setInterval(I,N)}else{F=setInterval(H,N,P,G,O)}};Plotter.prototype.showPointOn_nl=function(J){this.setAxisDatas();var F=this.anim_val=J*1;var B=this.xscale;var L=this.xaxis;var K=this.coordToCanvasPoint(F,0);var E=this;var D=this.graphObj;var I=this.canvas.width;var N=I/2;var A=this.canvas.height;var M=K[0];function G(O){if(true){D.setAxis(N-(O-N));C()}}function H(){var P=E.anim_val;var U=E.coordToCanvasPoint(P,0);var O=D.incX;var R=D.incY;var T=0;while(U[0]>I-O||U[0]<O){var S=D.scaleX;var Q=S-(S/2);D.scaleGraph(Q);U=E.coordToCanvasPoint(P,0);O=D.incX;T++;if(T>100){break}}E.showPointOn_nl(E.anim_val)}function C(){E.setAxisDatas();var P=E.anim_val;var O=1/D.divX;var R=1/D.divY;var V=D.xaxis;var T=Math.fixTo((P/O)*1,6);var U=E.coordToCanvasPoint(P,0);while(parseInt(T)!=T){var S=D.scaleX;var Q=S+(S/2);U=E.coordToCanvasPoint(P,0);D.ScaleFromPt(Q,U[0]);O=1/D.divX;T=Math.fixTo((P/O)*1,6)}E.setAxisDatas()}if(Math.abs(K[0])>2000){H()}else{G(M,F,L)}};Plotter.prototype.dashTo=function(N,K,W,U,Y,E,A,Q){if(arguments.length<6){return }var L={x:N,y:K};var T={x:W,y:U};var S=A.distance(L,T);S=A.fixTo(S,2);var M=A.angle(L,T).ra;var Z=Y+E;var O=0;Q.moveTo(N,K);var J,V,C,X,I,G,H,F,D,B;var R=false;J=N;V=K;if(A.overFlowObj.boo){O=A.overFlowObj.len;R=(O-S)>=0;if(R){segL=S}else{segL=A.overFlowObj.len}J=N+segL*Math.cos(M);V=K+segL*Math.sin(M);J=A.fixTo(J,2);V=A.fixTo(V,2);if(A.overFlowObj.type=="gap"){Q.moveTo(J,V);if(R){A.overFlowObj.boo=true;A.overFlowObj.type="gap";A.overFlowObj.len=O-S;if(A.overFlowObj.len<0){A.overFlowObj.boo=!true;A.overFlowObj.len=0}return }}else{Q.lineTo(J,V);if(R){A.overFlowObj.boo=true;A.overFlowObj.type="line";A.overFlowObj.len=O-S;if(A.overFlowObj.len<0){A.overFlowObj.boo=!true;A.overFlowObj.len=0}return }else{segL=S-segL;if(segL>E){O+=E;J=J+E*Math.cos(M);V=V+E*Math.sin(M);J=A.fixTo(J,2);V=A.fixTo(V,2);Q.moveTo(J,V);A.overFlowObj.type="gap"}else{A.overFlowObj.boo=true;A.overFlowObj.type="gap";A.overFlowObj.len=E-segL;if(A.overFlowObj.len<=0){A.overFlowObj.boo=!true;A.overFlowObj.len=0}return }}}}S=A.distance({x:J,y:V},T);S=A.fixTo(S,2);C=(S)/Z;X=Math.abs(C-parseInt(C))*Z;C=Math.floor(C);I=Math.cos(M)*Z;G=Math.sin(M)*Z;I=A.fixTo(I,2);G=A.fixTo(G,2);H=J;F=V;for(var P=0;P<C;P++){Q.moveTo(H,F);D=H+Math.cos(M)*Y;B=F+Math.sin(M)*Y;D=A.fixTo(D,2);B=A.fixTo(B,2);Q.lineTo(D,B);H+=I;F+=G;remLength=A.distance({x:H,y:F},T);A.overFlowObj.boo=true;A.overFlowObj.type="gap"}if(X>=0.1){if(!A.overFlowObj.boo){A.overFlowObj.type="gap"}A.overFlowObj.boo=true;if(A.overFlowObj.type=="gap"){A.overFlowObj.type=X>=Y?"gap":"line";A.overFlowObj.len=A.overFlowObj.type=="gap"?E-(X-Y):(Y-X);if(A.overFlowObj.type=="line"){Q.moveTo(H,F);D=H+Math.cos(M)*X;B=F+Math.sin(M)*X;D=A.fixTo(D,2);B=A.fixTo(B,2);Q.lineTo(H+Math.cos(M)*X,F+Math.sin(M)*X)}else{Q.moveTo(H,F);D=H+Math.cos(M)*Y;B=F+Math.sin(M)*Y;D=A.fixTo(D,2);B=A.fixTo(B,2);Q.lineTo(H+Math.cos(M)*Y,F+Math.sin(M)*Y)}}else{if(A.overFlowObj.type=="line"){A.overFlowObj.type=X>=E?"line":"gap";A.overFlowObj.len=A.overFlowObj.type=="line"?Y-(X-E):(E-X);if(A.overFlowObj.type=="line"){D=H+Math.cos(M)*X;B=F+Math.sin(M)*X;lx1=H+Math.cos(M)*E;ly1=F+Math.sin(M)*E;D=A.fixTo(D,2);B=A.fixTo(B,2);lx1=A.fixTo(lx1,2);ly1=A.fixTo(ly1,2);Q.moveTo(lx1,ly1);Q.lineTo(D,B)}else{Q.moveTo(H,F);lx1=H+Math.cos(M)*X;ly1=F+Math.sin(M)*X;lx1=A.fixTo(lx1,2);ly1=A.fixTo(ly1,2)}}}}else{A.overFlowObj.boo=!true}};var EqParser=(function(){var parser={};parser.init=function(){console.log("EqParser --> PARSER_INITED!");this.operators=["^","*","/","+","-"];this.a_arr=["exp","sinh","cosh","tanh","csch","sech","coth","arccsc","arcsec","arccot","log","abs","e","arcsin","arccos","arctan","sin","cos","tan","sqrt","pi","csc","sec","cot"];this.b_arr=["Σ","δ","ε","ζ","η","ι","κ","λ","μ","ν","!","@","#","$","%%","^^","&","<","?","}","α","Ø","γ"];this.ioperators=["^","*","/","+","-",","];this.m_fn=["exp","sinh","cosh","tanh","csch","sech","coth","arccsc","arcsec","arccot","log","abs","arcsin","arccos","arctan","sin","cos","tan","sqrt","pow","csc","sec","cot"]};parser.convertTo_JSEq=function(str){this.input_str=str;var has_spl_char=false;for(var n=0;n<this.b_arr.length;n++){if(str.indexOf(this.b_arr[n])>-1){has_spl_char=true;break}}if(has_spl_char){return"0"}this.input_str=this.formatMulti();this.input_str=this.formatPow();return this.input_str};parser.findandreplace=function(input,search,replace){return input.split(search).join(replace)};parser.fandr=function(input,search,replace,ipos){var my=input;var pos=my.indexOf(search,ipos);for(var i=ipos;i<my.length;i++){if(pos==-1||search==replace){break}var startstr=my.substr(0,pos);var restr=replace;var endstr=my.substr(pos+search.length);my=startstr+restr+endstr;break}return my};parser.formatMulti=function(){var my_str=String(this.input_str);my_str=my_str.split(" ").join("");if(my_str.length<2||!isNaN(my_str)){return my_str}var npos;var a_arr=this.a_arr;var b_arr=this.b_arr;for(var j=0;j<a_arr.length;j++){npos=my_str.indexOf(a_arr[j],0);if(npos!=-1){my_str=this.findandreplace(my_str,a_arr[j],b_arr[j])}}var brac=my_str.indexOf(")(",0);if(brac!=-1){my_str=this.findandreplace(my_str,")(",")*(")}for(var i=0;i<my_str.length;i++){for(var j=97;j<=122;j++){if(my_str.charCodeAt(i)==j){for(var k=97;k<=122;k++){if(my_str.charCodeAt(i-1)==k){my_str=this.fandr(my_str,my_str.charAt(i),"*"+my_str.charAt(i),i)}}for(var k=97;k<=122;k++){if(my_str.charCodeAt(i+1)==k){my_str=this.fandr(my_str,my_str.charAt(i),my_str.charAt(i)+"*",i)}}for(var k=48;k<=57;k++){if(my_str.charCodeAt(i-1)==k){my_str=this.fandr(my_str,my_str.charAt(i),"*"+my_str.charAt(i),i)}}for(var k=48;k<=57;k++){if(my_str.charCodeAt(i+1)==k){my_str=this.fandr(my_str,my_str.charAt(i),my_str.charAt(i)+"*",i)}}if(my_str.charAt(i-1)==")"){my_str=this.fandr(my_str,my_str.charAt(i),"*"+my_str.charAt(i),i)}if(my_str.charAt(i+1)=="("){my_str=this.fandr(my_str,my_str.charAt(i),my_str.charAt(i)+"*",i)}}}}try{for(var i=0;i<my_str.length;i++){for(var j=0;j<b_arr.length;j++){if(my_str.charAt(i)==b_arr[j]){for(var k=97;k<=122;k++){if(my_str.charCodeAt(i-1)==k){my_str=this.fandr(my_str,my_str.charAt(i),"*"+my_str.charAt(i),i)}}for(var k=97;k<=122;k++){if(my_str.charCodeAt(i+1)==k){my_str=this.fandr(my_str,my_str.charAt(i),my_str.charAt(i)+"*",i)}}for(var k=48;k<=57;k++){if(my_str.charCodeAt(i-1)==k){my_str=this.fandr(my_str,my_str.charAt(i),"*"+my_str.charAt(i),i)}}for(var k=48;k<=57;k++){if(my_str.charCodeAt(i+1)==k){my_str=this.fandr(my_str,my_str.charAt(i),my_str.charAt(i)+"*",i)}}if(my_str.charAt(i)=="~"){if(my_str.charAt(i-1)==")"){my_str=this.fandr(my_str,my_str.charAt(i),"*"+my_str.charAt(i),i)}if(my_str.charAt(i+1)=="("){my_str=this.fandr(my_str,my_str.charAt(i),my_str.charAt(i)+"*",i)}for(var k=0;k<b_arr.length;k++){if(my_str.charAt(i+1)==b_arr[k]){my_str=this.fandr(my_str,my_str.charAt(i),my_str.charAt(i)+"*",i)}if(my_str.charAt(i-1)==b_arr[k]){my_str=this.fandr(my_str,my_str.charAt(i),"*"+my_str.charAt(i),i)}}}if(my_str.charAt(i)==";"){if(my_str.charAt(i-1)==")"){my_str=this.fandr(my_str,my_str.charAt(i),"*"+my_str.charAt(i),i)}}}if(my_str.charAt(i)==")"){for(var k=0;k<b_arr.length;k++){if(my_str.charAt(i+1)==b_arr[k]){my_str=this.fandr(my_str,my_str.charAt(i),my_str.charAt(i)+"*",i)}}}}}}catch(error){}for(var i=0;i<my_str.length;i++){for(var j=48;j<=57;j++){if(my_str.charCodeAt(i)==j){for(var k=97;k<=122;k++){if(my_str.charCodeAt(i-1)==k){my_str=this.fandr(my_str,my_str.charAt(i),"*"+my_str.charAt(i),i)}}for(var k=97;k<=122;k++){if(my_str.charCodeAt(i+1)==k){my_str=this.fandr(my_str,my_str.charAt(i),my_str.charAt(i)+"*",i)}}if(my_str.charAt(i-1)==")"){my_str=this.fandr(my_str,my_str.charAt(i),"*"+my_str.charAt(i),i)}if(my_str.charAt(i+1)=="("){my_str=this.fandr(my_str,my_str.charAt(i),my_str.charAt(i)+"*",i)}}}}for(var j=0;j<b_arr.length;j++){npos=my_str.indexOf(b_arr[j],0);if(npos!=-1){my_str=this.findandreplace(my_str,b_arr[j],a_arr[j])}}return my_str};parser.formatPow=function(){var equ=this.input_str;var ioperators=this.ioperators;var m_fn=this.m_fn;var rcount=0;var lcount=0;var rrcount=0;var rlcount=0;var pow_pos=equ.indexOf("^",0);var neg,lt_str,rt_str,base,lbase,mflag,mlen,check_cp;for(i=0;i<equ.length;i++){if(pow_pos==-1){break}lt_str=equ.substr(0,pow_pos);rt_str=equ.substr(pow_pos+1);if(rt_str.charAt(0)=="-"){rt_str=rt_str.substr(1,rt_str.length);neg=true}if(lt_str.indexOf(")",lt_str.length-1)!=lt_str.length-1){for(var ij=lt_str.length-1;ij>=0;ij--){for(var j=0;j<ioperators.length;j++){if(lt_str.charAt(ij)==ioperators[j]){base=lt_str.substr(ij+1,lt_str.length);lbase=lt_str.indexOf(0,ij);if(lt_str.indexOf("(",ij)!=-1){base=findandreplace(base,"(","")}ij=-1;break}else{if(lt_str.indexOf("(",ij)!=-1){base=lt_str.substr(ij+1,lt_str.length);ij=-1;break}if(ij==0){base=lt_str}}}}}else{mflag=false;for(var ii=lt_str.length-1;ii>=0;ii--){if(lt_str.charAt(ii)==")"){rcount++}if(lt_str.charAt(ii)=="("){mlen=ii;for(var j=0;j<m_fn.length;j++){if(lt_str.substr(ii-m_fn[j].length,m_fn[j].length)==m_fn[j]){mflag=true;mlen=ii-m_fn[j].length;break}}lcount++}if(lcount==rcount){check_cp=lt_str.charAt(ii-1);if(ii!=0&&check_cp!="("){for(var iii=ii;iii>=0;iii--){for(var j=0;j<ioperators.length;j++){if(lt_str.charAt(iii)==ioperators[j]){base=lt_str.substr(iii+1,lt_str.length);lbase=lt_str.substr(0,lt_str_pos-1);iii=-1;ii=-1;break}}}if(mflag==true){ii=mlen}for(var iii=ii;iii>=0;iii--){for(var j=0;j<m_fn.length;j++){if(lt_str.indexOf(m_fn[j],iii)!=-1){base=lt_str.substr(iii,lt_str.length);iii=-1;ii=-1;break}}}}else{base=lt_str.substr(ii,lt_str.length);break}}}}var pdl="";var pdr,power,rpower;for(var j=0;j<m_fn.length;j++){if(rt_str.indexOf(m_fn[j],0)==0){pdl=rt_str.substr(0,m_fn[j].length);pdr=rt_str.substr(m_fn[j].length,rt_str.length);rt_str=pdr}}if(rt_str.indexOf("(",0)!=0){for(var i=0;i<rt_str.length;i++){for(var j=0;j<ioperators.length;j++){if(rt_str.charAt(i)==ioperators[j]){power=rt_str.substr(0,i);rpower=rt_str.substr(i+1,rt_str.length-1);i=rt_str.length;break}if(i==rt_str.length-1){power=rt_str}}}if(power.indexOf(")",0)!=-1){}}else{for(var ii=0;ii<rt_str.length;ii++){if(rt_str.charAt(ii)=="("){rlcount++}if(rt_str.charAt(ii)==")"){rrcount++}if((rlcount==rrcount)&&(rrcount!=0)){check_p=rt_str.charAt(ii+1);if(ii!=(rt_str.length-1)&&check_p!=")"){for(var iii=ii;iii<rt_str.length;iii++){for(var j=0;j<ioperators.length;j++){if(rt_str.charAt(iii)==ioperators[j]){power=(rt_str.substr(0,iii));iii=rt_str.length;ii=rt_str.length;break}}}}else{power=rt_str.substr(0,ii+1);break}}}}power=pdl+power;if(neg==true){power="-"+power}var find=base+"^"+power;var replace="pow("+base+","+power+")";equ=this.fandr(equ,find,replace,0);pow_pos=equ.indexOf("^",pow_pos)}return equ};parser.evalEq=function(str,val){var floor=Math.floor;var ceil=Math.ceil;var round=Math.round;var Pi=Math.PI;var PI=Math.PI;var pI=Math.PI;var pi=Math.PI;var E=Math.E;var e=Math.E;var x=val;var y=val;var inequ=str;function findandreplace(inputVal,searchVal,replaceVal){var mystr=inputVal.split(searchVal).join(replaceVal);return mystr}function sin(x){return Math.sin(x)}function cos(x){return Math.cos(x)}function tan(x){return Math.tan(x)}function sec(x){return 1/Math.cos(x)}function csc(x){return 1/Math.sin(x)}function cot(x){return 1/Math.tan(x)}function arcsin(x){return Math.asin(x)}function arccos(x){return Math.acos(x)}function arctan(x){return Math.atan(x)}function arccsc(x){return Math.asin(1/x)}function arcsec(x){return Math.acos(1/x)}function arccot(x){return(pi/2)-Math.atan(x)}function sinh(x){return(exp(x)-exp(-x))/2}function cosh(x){return(exp(x)+exp(-x))/2}function tanh(x){return(sinh(x)/cosh(x))}function csch(x){return 1/sinh(x)}function sech(x){return 1/cosh(x)}function coth(x){return 1/tanh(x)}function pow(ba,p){var pchek=Math.pow(ba,p);var estr,pstr,psub,psup;if(isFinite(pchek)){return pchek}else{estr=inequ;estr=estr.split("^");pstr=estr[1].split("/");psub=parseInt(pstr[1]);psup=findandreplace(pstr[0],"(","");if(psub%2==1&&psup%2==1){if(ba<0){ba=-ba;pchek=-Math.pow(ba,p)}else{pchek=Number.NaN}}else{if(psub%2==1&&psup%2==0){ba=-ba;pchek=Math.pow(ba,p)}else{pchek=Number.NaN}}return pchek}}function log(x,base){if(base==""||base==undefined){base=10}return(Math.log(x)/Math.log(base))}function sqrt(x){return Math.sqrt(x)}function abs(x){return Math.abs(x)}function exp(x){return Math.pow(e,x)}this.input_str=str;return eval(this.input_str)};return parser}());function convertObjToString(C){try{var B=stringify(C);return B}catch(A){alert("error converting object to string: "+A);console.log(A.name+":"+A.message+":"+A.location+":"+A.text)}}Math.fixTo=function(D,B,A){if(Number(D)==Number.NaN){return D}if(A==undefined){A=true}var C;C=Math.pow(10,B)*D;if(A){C=Math.round(C)}else{C=Math.floor(C)}C=C/Math.pow(10,B);return C};function stringify(E){if("JSON" in window){return JSON.stringify(E)}var D=typeof (E);if(D!="object"||E===null){if(D=="string"){E='"'+E+'"'}return String(E)}else{var F,B,C=[],A=(E&&E.constructor==Array);for(F in E){B=E[F];D=typeof (B);if(E.hasOwnProperty(F)){if(D=="string"){B='"'+B+'"'}else{if(D=="object"&&B!==null){B=stringify(B)}}C.push((A?"":'"'+F+'":')+String(B))}}return(A?"[":"{")+String(C)+(A?"]":"}")}}function cloneObject(B){var C={};for(var A in B){C[A]=B[A]}return C}function cloneArray(B){var C=[];for(var A=0;A<B.length;A++){C[A]=B[A]}return C};if(typeof console==="undefined"){console={log:function(A){}}}var Graph=function(T,K,B,G,I,M,O,D,F,N,R,C,J,H,S,P,E){console.log("GRAPH_INIT: "+B+":"+G+":"+I+":"+M+":"+O+":"+D+":"+F+":"+N+":"+R);this._imageBaseDir="/js/images/dynamic_widgets/";this.document=T;this.board=K;this.graph_type=B?B:"xy";this.width=J?J:300;this.height=H?H:(this.graph_type=="xy"?300:150);this.xmin=G?G*1:-5;this.xmax=I?I*1:5;this.ymin=M?M*1:-5;this.ymax=O?O*1:5;this.xinc=D?(D=="pi"?1:D*1):1;this.yinc=F?(F=="pi"?1:F*1):1;this.inter_obj=N;this.support_data={showZoom:(R?R:false)};this.show_axis=S!==undefined?S:true;this.show_axis_label=C!==undefined?C:true;this.show_axis_label_alt=false;this.trans_rate=250;if(String(C).indexOf("alternate")>-1){this.show_axis_label=true;this.show_axis_label_alt=true;var A=String(C).split("|");var Q=A[1]?A[1]:2;this.skipLabel=Q}this.show_grid=P!==undefined?P:true;this.show_half_grid=E!==undefined?E:false;this.scaleUnits=[1,2,5,10,20,25,50,100,200,250,500,1000];this.scaleX=this.width/((Math.abs((this.xmax+this.xinc)-(this.xmin-this.xinc)))/this.xinc);this.scaleY=this.height/((Math.abs((this.ymax+this.yinc)-(this.ymin-this.yinc)))/this.yinc);this.paxisYpos=this.axisYpos=(this.width)-(((this.xmax+this.xinc)/this.xinc)*(this.scaleX));this.paxisXpos=this.axisXpos=(this.height)-(((this.ymax+this.yinc)/this.yinc)*(this.scaleY));this.xPscale=this.scaleX;this.yPscale=this.scaleY;this.xWscale=this.width/((Math.abs((this.xmax+1)-(this.xmin-1)))/1);this.yWscale=this.height/((Math.abs((this.ymax+1)-(this.ymin-1)))/1);this.showZoom=false;this.btn_width=45;this.canvas=this.document.createElement("canvas");this.canvas.width=this.width;this.canvas.height=this.height;this.board.appendChild(this.canvas);try{if(typeof G_vmlCanvasManager!="undefined"){G_vmlCanvasManager.initElement(this.canvas);this.isIE=true}else{console.log("DEBUG_IE: G_vmlCanvasManager not available");this.isIE=false}}catch(L){console.log("DEBUG_IE:"+L)}this.context=this.canvas.getContext("2d");this.canvas.style.position="absolute";this.canvas.style.top=0;this.canvas.style.left=0;this.plotObj=null;if(this.inter_obj){this.addGraphUI()}this.getRatio();this.zmpt_pos={px:this.axisYpos,py:this.axisXpos,sx:this.axisYpos,sy:this.axisXpos,cx:this.axisYpos,cy:this.axisXpos,nx:this.axisYpos,ny:this.axisXpos,dx:0,dy:0};this.dummyNode=$('<span style="position:absolute;top:-20000px;left:0;padding:0;margin:0;border:none;white-space:pre;"></span>');this.drawGraph();console.log("SHOW_GRID:"+this.show_grid+":"+P)};Graph.prototype.hide=function(){this.canvas.style.display="none"};Graph.prototype.show=function(){this.canvas.style.display="block"};Graph.prototype.resetGraph=function(){this.plotObj.node_count=0;this.plotObj.actions=[];this.scaleX=this.xPscale;this.scaleY=this.yPscale;this.axisYpos=this.paxisYpos;this.axisXpos=this.paxisXpos;this.getRatio();this.drawGraph();if(this.canvas.style.opacity<1){this.canvas.style.opacity=1}};Graph.prototype.addGraphUI=function(){console.log("addGraphUI_START");this.gtool_div=this.document.createElement("div");this.gtool_div.width=this.width;this.board.appendChild(this.gtool_div);this.gtool_div.style.position="absolute";this.gtool_div.style.top=1+"px";this.gtool_div.style.left=this.width+"px";var A=this;try{var I=this.createGTool("reset");var E=function(){A.clearGraph();A.resetGraph();if(A.zmpt){A.zmpt.style.top=A.axisXpos+"px";A.zmpt.style.left=A.axisYpos-(A.zmpt.width/2)+"px"}A.zmpt_pos={px:A.axisYpos,py:A.axisXpos,sx:A.axisYpos,sy:A.axisXpos,cx:A.axisYpos,cy:A.axisXpos,nx:A.axisYpos,ny:A.axisXpos,dx:0,dy:0};A.plotObj.enableWheel=true;A.init_graph_transformListeners()}}catch(G){console.log("addGraphUI_ERROR_1 "+G)}I.onmousedown=function(){E()};var J=this.createGTool("shift_l");var H=this.createGTool("shift_r");this.gtool_div.appendChild(J);this.gtool_div.appendChild(H);if(this.graph_type=="xy"){var D=this.createGTool("shift_u");var B=this.createGTool("shift_d");this.gtool_div.appendChild(D);this.gtool_div.appendChild(B)}if("ontouchstart" in window){J.ontouchend=function(K){K.preventDefault()};H.ontouchend=function(K){K.preventDefault()};J.ontouchstart=function(K){K.preventDefault();A.scrollLeft();clearInterval(A.t);A.t=setInterval(function(){A.scrollLeft()},A.trans_rate)};H.ontouchstart=function(K){K.preventDefault();A.scrollRight();clearInterval(A.t);A.t=setInterval(function(){A.scrollRight()},A.trans_rate)};if(this.graph_type=="xy"){D.ontouchend=function(K){K.preventDefault()};B.ontouchend=function(K){K.preventDefault()};D.ontouchstart=function(K){K.preventDefault();A.scrollTop();clearInterval(A.t);A.t=setInterval(function(){A.scrollTop()},A.trans_rate)};B.ontouchstart=function(K){K.preventDefault();A.scrollBottom();clearInterval(A.t);A.t=setInterval(function(){A.scrollBottom()},A.trans_rate)}}}else{J.onmousedown=function(K){K.preventDefault();A.scrollLeft();clearInterval(A.t);A.t=setInterval(function(){A.scrollLeft()},A.trans_rate)};H.onmousedown=function(K){K.preventDefault();A.scrollRight();clearInterval(A.t);A.t=setInterval(function(){A.scrollRight()},A.trans_rate)};if(this.graph_type=="xy"){D.onmousedown=function(K){K.preventDefault();A.scrollTop();clearInterval(A.t);A.t=setInterval(function(){A.scrollTop()},A.trans_rate)};B.onmousedown=function(K){K.preventDefault();A.scrollBottom();clearInterval(A.t);A.t=setInterval(function(){A.scrollBottom()},A.trans_rate)}}}J.onmouseup=function(K){K.preventDefault();clearInterval(A.t)};H.onmouseup=function(K){K.preventDefault();clearInterval(A.t)};if(this.graph_type=="xy"){D.onmouseup=function(K){K.preventDefault();clearInterval(A.t)};B.onmouseup=function(K){K.preventDefault();clearInterval(A.t)}}document.onmouseup=function(){clearInterval(A.t)};if("ontouchstart" in window){document.ontouchend=function(){clearInterval(A.t)}}if(this.inter_obj&&this.inter_obj.zoom){this.zmpt_pos={px:this.axisYpos,py:this.axisXpos,sx:this.axisYpos,sy:this.axisXpos,cx:this.axisYpos,cy:this.axisXpos,nx:this.axisYpos,ny:this.axisXpos,dx:0,dy:0};var C=this.createGTool("zm_plus");var F=this.createGTool("zm_minus");if("ontouchstart" in window){console.log("APPLY_BTN_ACTION_ONTOUCHSTART");C.ontouchend=function(K){K.preventDefault()};F.ontouchend=function(K){K.preventDefault()};C.ontouchstart=function(L){L.preventDefault();var K=A;console.log("ZOOM_IN: "+setInterval);K.zoomIn();clearInterval(A.t);A.t=setInterval(function(){K.zoomIn()},A.trans_rate)};F.ontouchstart=function(L){L.preventDefault();var K=A;K.zoomOut();clearInterval(A.t);A.t=setInterval(function(){K.zoomOut()},A.trans_rate)}}else{console.log("APPLY_BTN_ACTION_ONMOUSE");C.onmousedown=function(L){L.preventDefault();var K=A;K.zoomIn();clearInterval(A.t);A.t=setInterval(function(){K.zoomIn()},A.trans_rate)};F.onmousedown=function(L){L.preventDefault();var K=A;K.zoomOut();clearInterval(A.t);A.t=setInterval(function(){K.zoomOut()},A.trans_rate)}}C.onmouseup=function(K){K.preventDefault();clearInterval(A.t)};F.onmouseup=function(K){K.preventDefault();clearInterval(A.t)};this.gtool_div.appendChild(C);this.gtool_div.appendChild(F);if(this.graph_type=="x"){}}this.gtool_div.appendChild(I);this.init_graph_transformListeners();console.log("addGraphUI_END")};Graph.prototype.addZoomPointer=function(){if(this.zmpt){}else{this.zmtool_div=this.document.createElement("div");this.zmtool_div.width=this.width;this.zmtool_div.height=this.height;this.board.appendChild(this.zmtool_div);this.zmtool_div.style.position="absolute";this.zmtool_div.style.top=0+"px";this.zmtool_div.style.left=0+"px";this.zmpt=this.document.createElement("canvas");this.zmpt.setAttribute("name","cbtn_zmptr");this.zmpt.width=20;this.zmpt.height=35;this.zmtool_div.appendChild(this.zmpt);var F=this.zmpt;F.style.position="absolute";F.style.top=this.axisXpos+"px";F.style.left=this.axisYpos-(this.zmpt.width/2)+"px";try{if(typeof G_vmlCanvasManager!="undefined"){G_vmlCanvasManager.initElement(this.zmpt)}else{}}catch(C){console.log("DEBUG_IE:"+C)}this.zmpt_cntx=F.getContext("2d");this.renderZoomPointer();this.zmpt_pos={px:this.axisYpos,py:this.axisXpos,sx:this.axisYpos,sy:this.axisXpos,cx:this.axisYpos,cy:this.axisXpos,nx:this.axisYpos,ny:this.axisXpos,dx:0,dy:0};var A=this;var B=function(G){G.preventDefault()};var E=B;if(this.document.addEventListener){this.zmpt.addEventListener("touchstart",B,false);this.zmpt.addEventListener("touchmove",E,false)}else{this.zmpt.attachEvent("touchstart",B);this.zmpt.attachEvent("touchmove",E)}F.ontouchstart=F.onmousedown=function(G){var H=A.plotObj.getCursorPos(G);A.zmpt_pos.sx=H.x;A.zmpt_pos.sy=H.y;F.ontouchmove=this.onmousemove=A.zmtool_div.onmousemove=function(I){var J=A.plotObj.getCursorPos(I);A.zmpt_pos.cx=J.x;A.zmpt_pos.cy=J.y;A.zmpt_pos.dx=A.zmpt_pos.cx-A.zmpt_pos.sx;A.zmpt_pos.dy=A.zmpt_pos.cy-A.zmpt_pos.sy;A.zmpt_pos.nx=A.zmpt_pos.sx+A.zmpt_pos.dx;A.zmpt_pos.ny=A.zmpt_pos.sy+A.zmpt_pos.dy;D()};F.ontouchend=this.onmouseup=A.zmtool_div.onmouseup=function(I){var J=A.plotObj.getCursorPos(I);A.zmpt_pos.cx=J.x;A.zmpt_pos.cy=J.y;A.zmpt_pos.dx=A.zmpt_pos.cx-A.zmpt_pos.sx;A.zmpt_pos.dy=A.zmpt_pos.cy-A.zmpt_pos.sy;A.zmpt_pos.nx=A.zmpt_pos.sx+A.zmpt_pos.dx;A.zmpt_pos.ny=A.zmpt_pos.sy+A.zmpt_pos.dy;D();F.ontouchmove=A.onmousemove=this.onmousemove=null;F.ontouchend=A.onmouseup=this.onmouseup=null}};function D(){var G=A.zmpt_pos;A.zmpt.style.top=A.graph_type=="x"?(G.py)+"px":G.ny+"px";A.zmpt.style.left=(G.nx-A.zmpt.width/2)+"px"}}};Graph.prototype.renderZoomPointer=function(){var D=10;var J=0;var C=D-3;var I=J+7.5;var B=D+3;var H=I;var A=D;var G=I;var L=D;var F=I+7.5;var K=D;var E=F+10;this.zmpt_cntx.strokeStyle="RED";this.zmpt_cntx.fillStyle="RED";this.zmpt_cntx.lineWidth=1;this.zmpt_cntx.beginPath();this.zmpt_cntx.moveTo(D,J);this.zmpt_cntx.lineTo(C,I);this.zmpt_cntx.lineTo(B,H);this.zmpt_cntx.lineTo(D,J);this.zmpt_cntx.fill();this.zmpt_cntx.closePath();this.zmpt_cntx.strokeStyle="RED";this.zmpt_cntx.lineWidth=1;this.zmpt_cntx.beginPath();this.zmpt_cntx.moveTo(A,G);this.zmpt_cntx.lineTo(L,F);this.zmpt_cntx.stroke();this.zmpt_cntx.closePath();this.plotObj.drawPoint(K,E,"#ff0000",10,false,this.zmpt_cntx)};Graph.prototype.createGTool=function(K){try{var B=K;var D=35;var M=this.document.createElement("canvas");M.setAttribute("name","cbtn_"+B);M.width=this.btn_width;M.height=D;this.gtool_div.appendChild(M);try{if(typeof G_vmlCanvasManager!="undefined"){G_vmlCanvasManager.initElement(M)}else{}}catch(J){console.log("DEBUG_IE:"+J)}var E=M.getContext("2d");if(E.createLinearGradient){E.shadowOffsetX=2;E.shadowOffsetY=2;E.shadowBlur=10;E.shadowColor="rgba(100, 100, 100, 0.5)";E.strokeStyle="#eeeeee";E.lineWidth=2;E.fillStyle="#999999";E.fillRect(0,0,this.btn_width,D);E.strokeRect(0,0,this.btn_width,D);E.closePath()}if(K=="XRESET"){E.textBaseline="top";E.font="bold 12px sans-serif";E.fillStyle="#000000";var L=E.measureText(B);var F=L.width;var A=12;var H=(this.btn_width-F)/2;var G=(D-A)/2}else{var C=this;var I=new Image();I.onload=function(){var N=this.width;var O=this.height;C.btn_img_x=(C.btn_width-N)/2;C.btn_img_y=(D-O)/2;E.drawImage(I,C.btn_img_x,C.btn_img_y)};I.src=this._imageBaseDir+K+".png"}return M}catch(J){console.log("createGTool_ERROR "+J)}};Graph.prototype.createTools=function(B,D){this.tool_div=this.document.createElement("div");this.tool_div.width=this.width;this.board.appendChild(this.tool_div);this.tool_div.style.position="absolute";this.tool_div.style.top=D.y+"px";this.tool_div.style.left=D.x+"px";this.btn_height=20;this.btn_offsetX=this.width;this.btn_offsetY=0;this.tool_row=1;this.tool_arr=[];var A=B.length;for(var C=0;C<A;C++){this.createTool(B[C],C)}};Graph.prototype.createTool=function(K,J){var P=K.type;var F=K.id;var C=K.label;var A=K.img_norm_src?"image":"text";var O=this.document.createElement("canvas");O.setAttribute("name","cbtn_"+F);O.width=this.btn_width;O.height=this.btn_height;O.style.position="absolute";this.tool_div.appendChild(O);this.btn_offsetX-=(this.btn_width+2);if(J==4){this.btn_offsetX=this.width-(this.btn_width+2);this.btn_offsetY+=this.btn_height+2;this.tool_row++}O.style.top=this.btn_offsetY+"px";O.style.left=this.btn_offsetX+"px";try{if(typeof G_vmlCanvasManager!="undefined"){G_vmlCanvasManager.initElement(O)}else{}}catch(L){console.log("DEBUG_IE:"+L)}var E=O.getContext("2d");E.strokeStyle="#cccccc";E.lineWidth=2;E.fillStyle="#999999";E.fillRect(0,0,this.btn_width,this.btn_height);E.strokeRect(0,0,this.btn_width,this.btn_height);E.closePath();var D=this;var G;if(A=="image"){var I=new Image();I.onload=function(){var Q=this.width;var R=this.height;I.btn_img_x=(D.btn_width-Q)/2;I.btn_img_y=(D.btn_height-R)/2;console.log("Tool_IMAGE_POS:"+C+":"+Q+":"+R+":"+I.width+":"+I.height);E.drawImage(I,I.btn_img_x,I.btn_img_y)};I.src=this._imageBaseDir+K.img_norm_src;var M=new Image();M.src=this._imageBaseDir+K.img_sel_src;G={ctx:E,labelType:A,img_norm:I,img_sel:M,w:O.width,h:O.height,id:F,x:D.btn_img_x,y:D.btn_img_y}}else{E.textBaseline="bottom";E.font="bold 12px sans-serif";E.fillStyle="WHITE";var N=E.measureText(C);var H=N.width;var B=N.height;D.btn_img_x=(D.btn_width-H)/2;D.btn_img_y=(D.btn_height-B)/2;E.fillText(C,D.btn_img_x,D.btn_img_y);G={ctx:E,labelType:A,label:C,w:O.width,h:O.height,id:F,x:D.btn_img_x,y:D.btn_img_y}}O.scope=this;O.onmousedown=function(){this.scope.resetTools();this.scope.plotObj.killListeners();if(G.id==this.scope.current_tool){this.scope.current_tool=null;this.scope.init_graph_transformListeners();return }this.scope.plotObj.clear();this.scope.current_tool=G.id;this.scope.selTool(G);this.scope.plotObj.fneql=C;this.scope.plotObj.resetInputData();this.scope.plotObj.initMouseListeners();this.scope.stop_graph_transformListeners();K.callfunc()};this.tool_arr.push(G)};Graph.prototype.resetTools=function(){var A=this.tool_arr.length;var C;var D;for(var B=0;B<A;B++){D=this.tool_arr[B];C=D.ctx;C.clearRect(0,0,D.w,D.h);C.strokeStyle="#cccccc";C.lineWidth=2;C.fillStyle="#999999";C.fillRect(0,0,this.btn_width,this.btn_height);C.strokeRect(0,0,this.btn_width,this.btn_height);if(D.labelType=="image"){C.drawImage(D.img_norm,D.img_norm.btn_img_x,D.img_norm.btn_img_y)}else{C.fillStyle="WHITE";C.fillText(D.label,D.x,D.y)}}};Graph.prototype.selTool=function(B){var A=B.ctx;A.clearRect(0,0,B.w,B.h);A.strokeStyle="#cccccc";A.lineWidth=2;A.fillStyle="#999999";A.fillRect(0,0,this.btn_width,this.btn_height);A.strokeRect(0,0,this.btn_width,this.btn_height);if(B.labelType=="image"){A.drawImage(B.img_sel,B.img_norm.btn_img_x,B.img_norm.btn_img_y)}else{A.fillStyle="GREEN";A.fillText(B.label,B.x,B.y)}};Graph.prototype.measureText=function(A,B){var C=$('<span style="position:absolute;top:-20000px;left:0;padding:0;margin:0;border:none;white-space:pre;font:'+B+'">'+String(A)+"</span>");$("body").append(C);var D=C.width();C.remove();return D};Graph.prototype.drawGraph=function(){var H;var I=function(Y){return Number(Y)==Number.NaN};if(this.graph_type=="xy"){H=I(this.axisYpos)||I(this.axisXpos)||I(this.incX1)||I(this.incY1)}else{H=I(this.axisYpos)||I(this.incX1)}if(H){alert("ERROR cannot plot the given axis range!");return }var B=this.context;var C=0;var R;var G;var L=15;var A=this.graph_type=="xy"?0:3;var S=this.graph_type=="xy"?0:this.axisXpos-5;var N=this.graph_type=="xy"?this.height:this.axisXpos+5;B.lineWidth=1;B.strokeStyle=this.graph_type=="xy"?"rgb(190, 190, 190)":"BLACK";var V,J;B.textBaseline="bottom";B.font="bold 11px sans-serif";B.fillStyle="BLACK";this.dummyNode.css("font","bold 11px sans-serif");this.dispX=1;this.dispY=1;if(this.xWscale!=this.xPscale){this.dispX=this.xinc}if(this.yWscale!=this.yPscale){this.dispY=this.yinc}var P=Math.floor((0-this.axisYpos)/this.incX);var Q=Math.floor((this.width-this.axisYpos)/this.incX);var X=P/this.divX;var W=Q/this.divX;var M=Math.max(this.context.measureText(X).width,this.context.measureText(W).width);if(this.isIE&&M==0){var K=$('<span style="position:absolute;top:-20000px;left:0;padding:0;margin:0;border:none;white-space:pre;">'+String(X)+"</span>");$("body").append(K);var U=K.width();K.remove();K=$('<span style="position:absolute;top:-20000px;left:0;padding:0;margin:0;border:none;white-space:pre;">'+String(W)+"</span>");$("body").append(K);var T=K.width();K.remove();console.log("NEW_CALC:"+X+":"+W);console.log(K);console.log("NEW_CALC:"+U+":"+T);M=Math.max(U,T)}if(this.incX<(M+2)){this.show_axis_label_alt=true;this.skipLabel=2}else{this.show_axis_label_alt=false}var E=(this.axisYpos)/this.incX;var F=parseInt(E);var O=(E-F)*this.incX;var D=this.axisYpos<0?O:this.axisYpos;if(this.axisYpos<0){C=Math.abs(F)}if(!this.show_grid){B.strokeRect(0,0,this.width,this.height);return }for(R=D;R<=this.width;R+=this.incX){B.beginPath();B.moveTo(R,S);B.lineTo(R,N);B.stroke();if(this.show_axis_label){if(C>0&&(R<this.width)){if(this.show_axis_label_alt&&C%this.skipLabel!=0){C++;continue}G=(C*this.dispX)/(this.divX);V=this.context.measureText(G).width;if(this.isIE&&String(G).length&&V==0){V=this.measureText(String(G),B.font)}J=R-(V/2);B.fillText(G,J,this.axisXpos+L)}}C++}C=0;var E=(this.axisYpos-this.width)/this.incX;var F=parseInt(E);var O=(E-F)*this.incX;var D=this.axisYpos>this.width?this.width-(this.incX-O):this.axisYpos;if(this.axisYpos>this.width){C=Math.abs(F)+1}for(R=D;R>0;R-=this.incX){B.beginPath();B.moveTo(R,S);B.lineTo(R,N);B.stroke();if(this.show_axis_label){if(C>0&&(R>0)){if(this.show_axis_label_alt&&C%this.skipLabel!=0){C++;continue}G=-(C*this.dispX)/(this.divX);V=this.context.measureText(String(G)).width;if(this.isIE&&String(G).length&&V==0){V=this.measureText(String(G),B.font)}J=R-(V/2);console.log("TEXT-ALIGN:"+G+":"+V+":"+J);B.fillText(G,J,this.axisXpos+L)}}C++}if(this.graph_type=="xy"){C=0;for(R=this.axisXpos;R<=this.height;R+=this.incY){B.beginPath();B.moveTo(0,R);B.lineTo(this.width,R);B.stroke();if(this.show_axis_label){if(C>0&&(R<this.height)){if(this.show_axis_label_alt&&C%this.skipLabel!=0){C++;continue}G=-(C*this.dispY)/(this.divY);B.fillText(G,this.axisYpos+5,R+5)}}C++}C=0;for(R=this.axisXpos;R>0;R-=this.incY){B.beginPath();B.moveTo(0,R);B.lineTo(this.width,R);B.stroke();if(this.show_axis_label){if(C>0&&(R>0)){if(this.show_axis_label_alt&&C%this.skipLabel!=0){C++;continue}G=(C*this.dispY)/(this.divY);B.fillText(G,this.axisYpos+5,R+5)}}C++}}else{if(this.show_axis_label){if(this.axisYpos>=0&&this.axisYpos<=this.width){B.fillText("0",this.axisYpos-A,this.axisXpos+L)}}}B.lineWidth=this.graph_type=="xy"?2:1;B.strokeStyle="BLACK";B.beginPath();B.moveTo(0,this.axisXpos);B.lineTo(this.width,this.axisXpos);if(this.axisYpos>=0&&this.axisYpos<=this.width){B.moveTo(this.axisYpos,S);B.lineTo(this.axisYpos,N)}B.stroke();B.beginPath();B.moveTo((this.width),this.axisXpos);B.lineTo((this.width)-10,this.axisXpos+4);B.lineTo((this.width)-10,this.axisXpos-4);B.lineTo((this.width),this.axisXpos);B.fill();B.beginPath();B.moveTo((0),this.axisXpos);B.lineTo((0)+10,this.axisXpos+4);B.lineTo((0)+10,this.axisXpos-4);B.lineTo((0),this.axisXpos);B.fill();if(this.graph_type=="xy"){B.beginPath();B.moveTo(this.axisYpos,(0));B.lineTo(this.axisYpos+4,(0)+10);B.lineTo(this.axisYpos-4,(0)+10);B.lineTo(this.axisYpos,(0));B.fill();B.beginPath();B.moveTo(this.axisYpos,(this.height));B.lineTo(this.axisYpos+4,(this.width)-10);B.lineTo(this.axisYpos-4,(this.width)-10);B.lineTo(this.axisYpos,(this.height));B.fill()}B.strokeRect(0,0,this.width,this.height)};Graph.prototype.clearGraph=function(){var D=this.board.getElementsByTagName("canvas");for(var C=0;C<D.length;C++){var B=D[C];if(getNodeName(D[C]).indexOf("cbtn")>-1){continue}try{if(typeof G_vmlCanvasManager!="undefined"){G_vmlCanvasManager.initElement(B)}else{}}catch(A){console.log("DEBUG_IE:"+A)}D[C].getContext("2d").clearRect(0,0,this.width,this.height);this.plotObj.node_count=0}};Graph.prototype.clearCanvas=function(B){var A=B?B:this.context;A.clearRect(0,0,this.width,this.height)};Graph.prototype.getCanvasOffSet=function(){var F=this.canvas.getBoundingClientRect();var G=this.document.body;var B=this.document.documentElement;var A=window.pageYOffset||B.scrollTop||G.scrollTop;var D=window.pageXOffset||B.scrollLeft||G.scrollLeft;var E=B.clientTop||G.clientTop||0;var H=B.clientLeft||G.clientLeft||0;var I=F.top+A-E;var C=F.left+D-H;this.offX=Math.round(C);this.offY=Math.round(I);return{top:this.offY,left:this.offX}};Graph.prototype.getCursorPos=function(B){this.getCanvasOffSet();var A=B?B:window.event;this.isTouchEnabled=A.type.indexOf("touch")>-1;A=this.isTouchEnabled?A.changedTouches[0]:A;var C={x:0,y:0};if(A.pageX!==undefined){C.x=A.pageX-this.offX;C.y=A.pageY-this.offY}else{C.x=A.clientX-this.offX;C.y=A.clientY-this.offY}return C};Graph.prototype.coordToCanvasPoint=function(A,D){var B=this.axisYpos+A*(this.scaleX/this.xinc);var C=this.axisXpos-D*(this.scaleY/this.yinc);return[B,C]};Graph.prototype.canvasPosToCoords=function(B,C){var A=(B-this.axisYpos)/(this.scaleX/this.xinc);var D=(-C+this.axisXpos)/(this.scaleY/this.yinc);return[A,D]};Graph.prototype.scaleGraph=function(B,A){this.scaleX=B;this.scaleY=A?A:this.scaleY;this.clearGraph();this.getRatio();this.drawGraph();if(!this.plotObj.enableWheel){this.plotObj.enableWheel=true;this.init_graph_transformListeners()}};Graph.prototype.shiftAxis=function(B,A){this.axisYpos+=B;this.axisXpos+=A?A:0;this.clearGraph();this.drawGraph();if(!this.plotObj.enableWheel){this.plotObj.enableWheel=true;this.init_graph_transformListeners()}};Graph.prototype.setAxis=function(B,A){this.axisYpos=B;this.axisXpos=A?A:this.axisXpos;this.clearGraph();this.drawGraph();if(!this.plotObj.enableWheel){this.plotObj.enableWheel=true;this.init_graph_transformListeners()}};Graph.prototype.ScaleFromCenter=function(I,G){var F={x:this.canvas.width/2,y:this.canvas.height/2};var B=this.scaleX;var M=this.axisYpos;var E=this.scaleY;var K=this.axisXpos;var A=this.canvasPosToCoords(F.x,F.y);var D=this.xinc;var C=this.yinc;var J=(Math.round(A[0]/D)*D);var H=(Math.round(A[1]/C)*C);this.scaleGraph(I,G);var N=(I-B)*J;var L=G?(G-E)*H:0;this.axisYpos=M-N;this.axisXpos=K-L;this.clearGraph();this.drawGraph();if(!this.plotObj.enableWheel){this.plotObj.enableWheel=true;this.init_graph_transformListeners()}};Graph.prototype.ScaleFromPt=function(I,G){var F={x:this.zmpt_pos.nx,y:this.zmpt_pos.ny};G=this.graph_type=="x"?this.scaleY:G;I=I?I:this.scaleX;G=G?G:this.scaleY;var B=this.scaleX;var M=this.axisYpos;var E=this.scaleY;var K=this.axisXpos;var A=this.canvasPosToCoords(F.x,F.y);var D=1/this.divX;var C=1/this.divY;var J=(Math.round(A[0]/D)*D);var H=(Math.round(A[1]/C)*C);this.scaleGraph(I,G);var N=(I-B)*A[0];var L=(G-E)*H;this.axisYpos=M-N;this.axisXpos=K;this.clearGraph();this.drawGraph();if(!this.plotObj.enableWheel){this.plotObj.enableWheel=true;this.init_graph_transformListeners()}};Graph.prototype.increment=function(D){var C;var B=this.scaleUnits;if(D>=1000){C=Math.round(D/1000)*1000;return C}if(D>=1){for(var A=0;A<B.length-1;A++){if(D>=B[A]&&D<B[A+1]){C=Math.round(D/B[A])*B[A];break}}}return C};Graph.prototype.getRatio=function(){var A=this.scaleX;var E=this.scaleY;var N=this.xPscale;var F=this.yPscale;this.ratioX=A/(N);this.ratioY=E/(F);var J=this.ratioX;var H=this.ratioY;J=Math.fixTo(J,8);H=Math.fixTo(H,8);var C,M;var B,L;var K=this.increment;if(J>=1&&J<2){C=A;M=1}else{if(J>=2&&J<5){C=A/2;M=2}else{if(J>=5){M=J;M=M>1?this.increment(M):M;C=A/M}else{if(J>=0.5&&J<1){C=A*2;M=0.5}else{if(J>=0.2&&J<0.5){C=A*5;M=0.2}else{if(J>=0.1&&J<0.2){C=A*10;M=0.1}else{var D=1/this.increment(1/J);D=Math.fixTo(D,String(1/D).split(".")[0].length);M=D;C=A/M}}}}}}if(H>=1&&H<2){B=E;L=1}else{if(H>=2&&H<5){B=E/2;L=2}else{if(H>=5){L=H;L=L>1?this.increment(L):L;B=E/L}else{if(H>=0.5&&H<1){B=E*2;L=0.5}else{if(H>=0.2&&H<0.5){B=E*5;L=0.2}else{if(H>=0.1&&H<0.2){B=E*10;L=0.1}else{if(H<0.1){var O=1/this.increment(1/H);O=Math.fixTo(O,String(1/O).split(".")[0].length);L=O;B=E/L}}}}}}}C=Math.fixTo(C,8);B=Math.fixTo(B,8);this.incX1=C/2;this.incY1=B/2;var I=(1/M);var G=(1/L);this.incX=C;this.incY=B;this.divX=M;this.divY=L;console.log("SET_RATIO:"+this.incX+":"+this.incY+":"+this.divX+":"+this.divY+":"+this.scaleX+":"+this.scaleY+":"+this.ratioX+":"+this.ratioY)};Graph.prototype.zoomIn=function(){var B=this.scaleX*2;var A=this.graph_type=="x"?this.scaleY:this.scaleY*2;if(B<=55000){this.ScaleFromPt(B,A);this.plotObj.setAxisDatas();this.plotObj.reRender();if(this.plotObj.lastAction){this.lastAction()}}};Graph.prototype.zoomOut=function(){var B=this.scaleX/2;var A=this.graph_type=="x"?this.scaleY:this.scaleY/2;if(B>=0.009){this.ScaleFromPt(B,A);this.plotObj.setAxisDatas();this.plotObj.reRender();if(this.plotObj.lastAction){this.lastAction()}}};Graph.prototype.scrollLeft=function(A){var C=A==undefined?this.incX:A;var B=C;dy=0;this.shiftAxis(B,dy);this.plotObj.setAxisDatas();this.plotObj.reRender();if(this.plotObj.lastAction){this.lastAction()}};Graph.prototype.scrollRight=function(A){var C=A==undefined?this.incX:A;var B=-C;dy=0;this.shiftAxis(B,dy);this.plotObj.setAxisDatas();this.plotObj.reRender();if(this.plotObj.lastAction){this.lastAction()}};Graph.prototype.scrollTop=function(B){var C=B==undefined?this.incY:B;var A=C;dx=0;this.shiftAxis(dx,A);this.plotObj.setAxisDatas();this.plotObj.reRender();if(this.plotObj.lastAction){this.lastAction()}};Graph.prototype.scrollBottom=function(B){var C=B==undefined?this.incY:B;var A=-C;dx=0;this.shiftAxis(dx,A);this.plotObj.setAxisDatas();this.plotObj.reRender();if(this.plotObj.lastAction){this.lastAction()}};Graph.prototype.init_graph_transformListeners=function(){if(this.plotObj.allowGraphTrans.mouse&&this.plotObj.enableWheel){this.stop_graph_transformListeners();this.trans_graph=true;if(this.zmtool_div){this.zmtool_div.style.display="block"}this.initMouseWheelListener();this.initKeyListeners1()}};Graph.prototype.stop_graph_transformListeners=function(){this.trans_graph=false;if(this.zmtool_div){this.zmtool_div.style.display="none"}this.killMouseWheelListener();this.killKeyListeners1()};Graph.prototype.killKeyListeners1=function(){console.log("killKeyListeners1");var A=this;this.document.onkeydown=null};Graph.prototype.killMouseWheelListener=function(){console.log("killMouseWheelListener");var B=this.plotObj.icanvas;var A="mousewheel";var C=this.handler;if(C===undefined){return }if(B.removeEventListener){B.removeEventListener("DOMMouseScroll",this.handler,false);B.removeEventListener(A,this.handler,false)}else{if(B.detachEvent){B.detachEvent("onmousewheel",C)}}};Graph.prototype.initMouseWheelListener=function(){console.log("initMouseWheelListener_START");var E=this;var C=this.plotObj.icanvas;var A="mousewheel";function B(F){F=F?F:window.event;if(F.stopPropagation){F.stopPropagation()}if(F.preventDefault){F.preventDefault()}F.cancelBubble=true;F.cancel=true;F.returnValue=false;return false}console.log("MouseWheel_Element: "+C);var D;this.handler=D=function(G){var F=G?G:window.event;console.log("MouseWheel_Event: "+C);var H=F.detail?F.detail*-1:F.wheelDelta/40;if(H>0){E.zoomIn()}else{if(H<0){E.zoomOut()}}return B(G)};if(C.addEventListener){console.log("MouseWheel_handler: "+D);C.addEventListener("DOMMouseScroll",D,false);console.log("MouseWheel_handler: A");C.addEventListener("mousewheel",D,false);console.log("MouseWheel_handler: B")}else{if(C.attachEvent){C.attachEvent("onmousewheel",D)}}console.log("initMouseWheelListener_END")};Graph.prototype.initKeyListeners1=function(){console.log("initKeyListeners1_Disabled");var A=this;return ;this.document.onkeydown=function(D){var C=D?D:window.event;C.preventDefault();var B=C.keyCode;switch(B){case 107:A.zoomIn();break;case 109:A.zoomOut();break;case 37:A.scrollLeft();break;case 39:A.scrollRight();break;case 38:A.scrollTop();break;case 40:A.scrollBottom();break}}};Graph.prototype.setWidgetValue=function(jsonString){var _config=eval("("+jsonString+")");this.setAxis(_config.xaxis,_config.yaxis);this.scaleGraph(_config.xscale,_config.yscale);new Plotter(this,"point",{data:_config.plot_data},_config.snap,_config.cntrls,false,_config.nudge_top)};Graph.prototype.getWidgetValue=function(){return this.plotObj.getInputData()};var Anim_mngr=function(B,A){this.canvas=B;window.requestAnimFrame=(function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(D,C){window.setTimeout(D,1000/60)}})();window.cancelRequestAnimFrame=(function(){return window.cancelAnimationFrame||window.webkitCancelRequestAnimationFrame||window.mozCancelRequestAnimationFrame||window.oCancelRequestAnimationFrame||window.msCancelRequestAnimationFrame||clearTimeout})()};Anim_mngr.prototype.startAnim=function(B,A,C){this.render(B,A,C);this.animObj=window.requestAnimFrame(this.animloop,this.canvas)};Anim_mngr.prototype.stopAnim=function(){if(this.animObj){window.cancelAnimFrame(this.animObj)}};Anim_mngr.prototype.render=function(B,A,C){A[B](C)};var enable_debug=false;var console_log=function(A){if(enable_debug){console.log(A)}};function checkForRepeater(D){var B=new RegExp();var L=String(D);var H=L.length;var K="";var E;var G={};G.repeat=false;var C,F,A;for(var J=0;J<H;J++){K=L.charAt(J);for(var I=J+1;I<H;I++){E=L.indexOf(K,I);if(E==J+K.length){C=L.substring(J);F=C.length%K.length;C=C.substr(0,C.length-F);A=C.length/K.length;if(C.length<K.length){break}if(C.length<=2){break}B.compile("("+K+"){"+A+"}");G.repeat=B.test(C);if(G.repeat){G.s=J;G.l=K.length;G.str=K;G.repeat=true;return G}}K+=L.charAt(I)}}return G}var _tutor_data_record="[]";var Flashcard_mngr=(function(){var mngr={};mngr.topic_id=0;mngr.current_pblm_index=0;mngr.completed_pblms=0;mngr.limit=3;mngr.initialized=false;mngr.quest_data={};mngr.current_quest=null;mngr.current_ans=null;mngr.debugMode=false;mngr.debugIterations=100;console.log("FLASH_CARD_MNGR_INITIATED");mngr.init=function(id,lim){console.log("FLASH_CARD_MNGR_INITED FOR TOPIC ID:"+id);mngr.totalQuest=10;this.limit=lim?lim:this.limit;this.topic_id=id;this.initialized=true;mngr.current_pblm_index=0;mngr.completed_pblms=0;mngr.quest_data={};mngr.current_quest=null;mngr.current_ans=null;mngr.topic_data=null;console.log("FLASH_CARD_MNGR_CALLING GEN PROBLEMS FOR:"+id);if((this.topic_id>10&&this.topic_id<18)||(this.topic_id>18&&this.topic_id<22)||this.topic_id==26||this.topic_id==27){this.genProblems()}else{this.genProblems()}};var topic_data_1="1/3 + 1/3,1/3 + 2/3,2/3 + 1/3,1/4 + 1/4,1/4 + 2/4,2/4 + 1/4,1/4 + 3/4,1/5 + 1/5,2/5 + 2/5,3/5 + 1/5,3/5 + 2/5,1/6 + 1/6,1/6 + 2/6,1/6 + 3/6,1/6 + 5/6,2/6 + 1/6,5/6 + 1/6,1/7 + 4/7,2/7 + 4/7,3/7 + 1/7,1/7 + 6/7,1/8 + 1/8,2/8 + 1/8,2/8 + 2/8,3/8 + 1/8,5/8 + 1/8,3/8 + 4/8,3/8 + 5/8,1/9 + 1/9,1/9 + 5/9,2/9 + 1/9,4/9 + 2/9,4/9 + 4/9,5/9 + 3/9,7/9 + 2/9,8/9 + 1/9,1/10 + 3/10,1/10 + 4/10,2/10 + 3/10,3/10 + 3/10,3/10 + 5/10,3/10 + 7/10,1/11 + 1/11,2/11 + 3/11,4/11 + 5/11,7/11 + 2/11,8/11 + 3/11,1/12 + 2/12,2/12 + 3/12,5/12 + 5/12,5/12 + 7/12";var topic_data_2="1/2 + 1/3,1/2 + 1/4,1/2 + 3/4,1/2 + 1/5,1/2 + 2/5,1/2 + 1/6,1/2 + 1/8,1/2 + 3/8,1/2 + 1/9,1/2 + 4/9,1/2 + 1/10,1/2 + 3/10,1/3 + 1/2,1/3 + 1/4,1/3 + 1/5,1/3 + 2/5,1/3 + 1/6,2/3 + 1/4,2/3 + 1/5,2/3 + 1/6,2/3 + 1/8,1/4 + 1/2,1/4 + 1/3,1/4 + 1/5,1/4 + 2/5,1/4 + 3/5,1/4 + 1/6,1/4 + 1/8,1/4 + 3/8,3/4 + 1/8,3/4 + 3/8,1/4 + 3/10,1/4 + 1/12,1/4 + 5/12,1/4 + 7/12,1/4 + 11/12,3/4 + 1/12,3/4 + 5/12,3/4 + 7/12,1/5 + 1/2,1/5 + 1/3,1/5 + 1/4,1/5 + 3/4,1/5 + 1/6,1/5 + 1/10,1/5 + 3/10,1/5 + 7/10,1/5 + 1/11,1/5 + 3/11,2/5 + 3/10,2/5 + 7/10,3/5 + 1/10,3/5 + 3/10,4/5 + 1/10,1/6 + 1/2,1/6 + 1/3,1/6 + 2/3,1/6 + 1/4,1/6 + 3/4,1/6 + 1/5,1/6 + 3/5,1/6 + 4/5,1/6 + 1/7,1/6 + 2/7,1/6 + 6/7,1/6 + 1/8,1/6 + 3/8,1/6 + 5/8,1/6 + 7/8,1/6 + 1/9,1/6 + 2/9,1/6 + 4/9,1/6 + 5/9,1/6 + 7/9,1/6 + 8/9,1/6 + 1/10,1/6 + 3/10,1/6 + 7/10,1/6 + 1/12,1/6 + 5/12,1/6 + 7/12,5/6 + 1/2,5/6 + 3/4,5/6 + 1/5,5/6 + 2/5,5/6 + 3/5,5/6 + 4/7,5/6 + 6/7,5/6 + 1/8,5/6 + 3/8,5/6 + 5/8,5/6 + 1/10,5/6 + 3/10,5/6 + 7/10,5/6 + 1/12,5/6 + 5/12,5/6 + 7/12,1/7 + 1/2,1/7 + 1/3,1/7 + 1/4,1/7 + 1/5,1/7 + 1/6,1/7 + 1/8,1/7 + 3/8,1/7 + 5/8,1/7 + 1/9,1/7 + 2/9,1/7 + 4/9,1/7 + 5/9,1/7 + 7/9,2/7 + 2/8,3/7 + 3/4,4/7 + 1/8,5/7 + 1/8,1/8 + 1/2,1/8 + 1/3,1/8 + 2/3,1/8 + 1/4,1/8 + 3/4,1/8 + 1/5,1/8 + 3/5,1/8 + 4/5,1/8 + 1/6,1/8 + 5/6,1/8 + 1/7,1/8 + 2/7,1/8 + 3/7,1/8 + 4/7,1/8 + 1/9 ,1/8 + 2/9,1/8 + 1/10,1/8 + 7/10,1/8 + 1/11,1/8 + 2/11,1/8 + 9/11,1/8 + 10/11,1/8 + 1/12,1/8 + 5/12,1/8 + 7/12,1/8 + 11/12,3/8 + 1/2,3/8 + 1/3,3/8 + 2/3,3/8 + 1/4,3/8 + 3/4,3/8 + 1/5,3/8 + 3/5,3/8 + 4/5,3/8 + 1/6,3/8 + 5/6,3/8 + 1/7,3/8 + 2/7,3/8 + 3/7,3/8 + 4/7,3/8 + 1/9 ,3/8 + 2/9,3/8 + 1/10,3/8 + 7/10,3/8 + 1/11,3/8 + 2/11,3/8 + 9/11,3/8 + 10/11,3/8 + 1/12,3/8 + 5/12,3/8 + 7/12,1/9 + 1/2,1/9 + 1/3,1/9 + 2/3,1/9 + 1/4,1/9 + 3/4,1/9 + 1/5,2/9 + 1/3,2/9 + 2/3,2/9 + 4/5,2/9 + 1/6,2/9 + 3/4,2/9 + 5/6,4/9 + 1/3,4/9 + 2/3,5/9 + 1/3,5/9 + 1/6,5/9 + 5/6,1/10 + 1/2,1/10 + 1/3,1/10 + 2/3,1/10 + 1/4,1/10 + 3/4,1/10 + 1/5,1/10 + 2/5,1/10 + 3/5,1/10 + 4/5,1/10 + 1/6,1/10 + 1/8,1/10 + 7/8,1/10 + 1/12,1/10 + 7/12,3/10 + 1/2,3/10 + 1/3,3/10 + 1/4,3/10 + 3/4,3/10 + 1/5,3/10 + 2/5,3/10 + 3/5,3/10 + 4/5,7/10 + 1/2,7/10 + 1/3,7/10 + 1/4,7/10 + 1/5,7/10 + 2/5,7/10 + 1/11,7/10 + 3/11,7/11 + 1/4,1/12 + 1/2,1/12 + 1/3,1/12 + 2/3,1/12 + 1/4,1/12 + 3/4,1/12 + 1/5,1/12 + 2/5,1/12 + 1/6,1/12 + 5/6,1/12 + 1/8,1/12 + 3/8,1/12 + 5/8,1/12 + 7/8,5/12 + 1/2,5/12 + 1/3,5/12 + 2/3,5/12 + 1/4,5/12 + 3/4,5/12 + 1/6,5/12 + 5/6,5/12 + 1/7,5/12 + 1/8,5/12 + 7/8,7/12 + 1/3,7/12 + 1/5,11/12 + 1/4,11/12 + 3/4,11/12 + 1/6,11/12 + 5/6,11/12 + 1/8,11/12 + 3/7";var topic_data_3="The result of an addition problem|sum,The result of a subtraction problem|difference,The result of a multiplication problem|product,The result of a division problem|quotient,The top number in a fraction|numerator,The bottom number in a fraction|denominator,A polygon with 5 sides|pentagon,A polygon with 6 sides|hexagon,A polygon with 8 sides|octagon,An angle measuring between 0 and 90 degrees|acute,An angle measuring between 90 and 180 degrees|obtuse,A triangle with two congruent sides|isosceles,A triangle with three congruent sides|equilateral,The distance from the center of a circle to the boundary of the circle|radius,The distance across a circle through its center|diameter,A quadrilateral with four congruent sides|rhombus,A quadrilateral with two pairs of parallel sides|parallelogram,A solid figure with two circular bases that are congruent and parallel|cylinder,A solid figure with 6 square faces|cube,A solid figure with 4 triangular faces|tetrahedron,A whole number with exactly two divisors|prime,A whole number with more than two divisors|composite";var topic_data_4_basic="{data:{item:[{question:{eqn:'<math><mrow><mn>2</mn><mo>+</mo><mrow><mn>7</mn><mo>&times;</mo><mn>8</mn></mrow><mo>+</mo><mn>10</mn></mrow></math>'},answer:{val:68},step:[{eqn:'<math><mrow><mn>2</mn><mo>+</mo><mrow><mn>7</mn><mo>&times;</mo><mn>8</mn></mrow><mo>+</mo><mn>10</mn></mrow></math>',txt:'There are no grouping symbols or exponents.'},{eqn:'<math><mrow><mrow><mn>2</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>7</mn><mo>&times;</mo><mn>8</mn></mrow><mo>+</mo><mn>10</mn></mrow><mo>=</mo><mrow><mn>2</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>56</mn></mrow><mo>+</mo><mn>10</mn></mrow></mrow></math>',txt:'Multiply and divide from left to right.'},{eqn:'<math><mrow><mrow><mrow mathcolor=#ff0000><mn>2</mn><mo>+</mo><mn>56</mn></mrow><mo>+</mo><mn>10</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>58</mn></mrow><mo>+</mo><mn>10</mn></mrow></mrow></math>',txt:'Add and subtract from left to right.'},{eqn:'<math><mrow><mrow mathcolor=#ff0000><mn>58</mn><mo>+</mo><mn>10</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>68</mn></mrow></mrow></math>',txt:'Add and subtract from left to right.'}]},{question:{eqn:'<math><mrow><mn>5</mn><mo>+</mo><mrow><mn>2</mn><mo>&times;</mo><mn>5</mn></mrow><mo>+</mo><mn>4</mn></mrow></math>'},answer:{val:19},step:[{eqn:'<math><mrow><mn>5</mn><mo>+</mo><mrow><mn>2</mn><mo>&times;</mo><mn>5</mn></mrow><mo>+</mo><mn>4</mn></mrow></math>',txt:'There are no grouping symbols or exponents.'},{eqn:'<math><mrow><mrow><mn>5</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>2</mn><mo>&times;</mo><mn>5</mn></mrow><mo>+</mo><mn>4</mn></mrow><mo>=</mo><mrow><mn>5</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>10</mn></mrow><mo>+</mo><mn>4</mn></mrow></mrow></math>',txt:'Multiply and divide from left to right.'},{eqn:'<math><mrow><mrow><mrow mathcolor=#ff0000><mn>5</mn><mo>+</mo><mn>10</mn></mrow><mo>+</mo><mn>4</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>15</mn></mrow><mo>+</mo><mn>4</mn></mrow></mrow></math>',txt:'Add and subtract from left to right.'},{eqn:'<math><mrow><mrow mathcolor=#ff0000><mn>15</mn><mo>+</mo><mn>4</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>19</mn></mrow></mrow></math>',txt:'Add and subtract from left to right.'}]},{question:{eqn:'<math><mrow><mn>10</mn><mo>+</mo><mrow><mn>2</mn><mo>&times;</mo><mn>4</mn></mrow><mo>+</mo><mn>11</mn></mrow></math>'},answer:{val:29},step:[{eqn:'<math><mrow><mn>10</mn><mo>+</mo><mrow><mn>2</mn><mo>&times;</mo><mn>4</mn></mrow><mo>+</mo><mn>11</mn></mrow></math>',txt:'There are no grouping symbols or exponents.'},{eqn:'<math><mrow><mn>10</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>2</mn><mo>&times;</mo><mn>4</mn></mrow><mo>+</mo><mn>11</mn></mrow><mo>=</mo><mrow><mn>10</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>8</mn></mrow><mo>+</mo><mn>11</mn></mrow></math>',txt:'Multiply and divide from left to right.'},{ eqn:'<math><mrow><mrow mathcolor=#ff0000><mn>10</mn><mo>+</mo><mn>8</mn></mrow><mo>+</mo><mn>11</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>18</mn></mrow><mo>+</mo><mn>11</mn></mrow></math>',txt:'Add and subtract from left to right.'},{eqn:'<math><mrow mathcolor=#ff0000><mn>18</mn><mo>+</mo><mn>11</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>29</mn></mrow></math>',txt:'Add and subtract from left to right.'}]},{question:{eqn:'<math><mrow><mn>7</mn><mo>+</mo><mrow><mn>9</mn><mo>&times;</mo><mn>2</mn></mrow><mo>+</mo><mn>20</mn></mrow></math>'},answer:{val:45},step:[{eqn:'<math><mrow><mn>7</mn><mo>+</mo><mrow><mn>9</mn><mo>&times;</mo><mn>2</mn></mrow><mo>+</mo><mn>20</mn></mrow></math>',txt:'There are no grouping symbols or exponents.'},{oeqn:'7+hi(9*2)+20=7+hi(18)+20',eqn:'<math><mrow><mn>7</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>9</mn><mo>&times;</mo><mn>2</mn></mrow><mo>+</mo><mn>20</mn></mrow><mo>=</mo><mrow><mn>7</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>18</mn></mrow><mo>+</mo><mn>20</mn></mrow></math>',txt:'Multiply and divide from left to right.'},{oeqn:'hi(7+18)+20=hi(25)+20',eqn:'<math><mrow><mrow mathcolor=#ff0000><mn>7</mn><mo>+</mo><mn>18</mn></mrow><mo>+</mo><mn>20</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>25</mn></mrow><mo>+</mo><mn>20</mn></mrow></math>',txt:'Add and subtract from left to right.'},{oeqn:'hi(25+20)=hi(45)',eqn:'<math><mrow mathcolor=#ff0000><mn>25</mn><mo>+</mo><mn>20</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>45</mn></mrow></math>',txt:'Add and subtract from left to right.'}]},{question:{oeqn:'5+25\u00f75*3+10',eqn:'<math><mrow><mn>5</mn><mo>+</mo><mrow><mrow><mrow><mn>25</mn><mo>&divide;</mo><mn>5</mn></mrow></mrow><mo>&times;</mo><mn>3</mn></mrow><mo>+</mo><mn>10</mn></mrow></math>'},answer:{val:30},step:[{oeqn:'5+25\u00f75*3+10=',eqn:'<math><mrow><mn>5</mn><mo>+</mo><mrow><mrow><mrow><mn>25</mn><mo>&divide;</mo><mn>5</mn></mrow></mrow><mo>&times;</mo><mn>3</mn></mrow><mo>+</mo><mn>10</mn></mrow></math>',txt:'There are no grouping symbols or exponents.'},{oeqn:'5+hi(25\u00f75)*3+10=5+hi(5)*3+10',eqn:'<math><mrow><mn>5</mn><mo>+</mo><mrow><mrow><mrow mathcolor=#ff0000><mn>25</mn><mo>&divide;</mo><mn>5</mn></mrow></mrow><mo>&times;</mo><mn>3</mn></mrow><mo>+</mo><mn>10</mn></mrow><mo>=</mo><mrow><mn>5</mn><mo>+</mo><mrow><mrow><mrow mathcolor=#ff0000><mn>5</mn></mrow></mrow><mo>&times;</mo><mn>3</mn></mrow><mo>+</mo><mn>10</mn></mrow></math>',txt:'Multiply and divide from left to right.'},{oeqn:'5+hi(5*3)+10=5+hi(15)+10',eqn:'<math><mrow><mn>5</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>5</mn><mo>&times;</mo><mn>3</mn></mrow><mo>+</mo><mn>10</mn></mrow><mo>=</mo><mrow><mn>5</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>15</mn></mrow><mo>+</mo><mn>10</mn></mrow></math>',txt:'Multiply and divide from left to right.'},{oeqn:'hi(5+15)+10=hi(20)+10',eqn:'<math><mrow><mrow mathcolor=#ff0000><mn>5</mn><mo>+</mo><mn>15</mn></mrow><mo>+</mo><mn>10</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>20</mn></mrow><mo>+</mo><mn>10</mn></mrow></math>',txt:'Add and subtract from left to right.'},{oeqn:'hi(20+10)=hi(30)',eqn:'<math><mrow mathcolor=#ff0000><mn>20</mn><mo>+</mo><mn>10</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>30</mn></mrow></math>',txt:'Add and subtract from left to right.'}]},{question:{eqn:'7+21\u00f73*2+11',eqn:'<math><mrow><mn>7</mn><mo>+</mo><mrow><mrow><mrow><mn>21</mn><mo>&divide;</mo><mn>3</mn></mrow></mrow><mo>&times;</mo><mn>2</mn></mrow><mo>+</mo><mn>11</mn></mrow></math>'},answer:{val:32},step:[{oeqn:'7+21\u00f73*2+11=',eqn:'<math><mrow><mn>7</mn><mo>+</mo><mrow><mrow><mrow><mn>21</mn><mo>&divide;</mo><mn>3</mn></mrow></mrow><mo>&times;</mo><mn>2</mn></mrow><mo>+</mo><mn>11</mn></mrow></math>',txt:'There are no grouping symbols or exponents.'},{oeqn:'7+hi(21\u00f73)*2+11=7+hi(7)*2+11',eqn:'<math><mrow><mn>7</mn><mo>+</mo><mrow><mrow><mrow mathcolor=#ff0000><mn>21</mn><mo>&divide;</mo><mn>3</mn></mrow></mrow><mo>&times;</mo><mn>2</mn></mrow><mo>+</mo><mn>11</mn></mrow><mo>=</mo><mrow><mn>7</mn><mo>+</mo><mrow><mrow><mrow mathcolor=#ff0000><mn>7</mn></mrow></mrow><mo>&times;</mo><mn>2</mn></mrow><mo>+</mo><mn>11</mn></mrow></math>',txt:'Multiply and divide from left to right.'},{oeqn:'7+hi(7*2)+11=7+hi(14)+11',eqn:'<math><mrow><mn>7</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>7</mn><mo>&times;</mo><mn>2</mn></mrow><mo>+</mo><mn>11</mn></mrow><mo>=</mo><mrow><mn>7</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>14</mn></mrow><mo>+</mo><mn>11</mn></mrow></math>',txt:'Multiply and divide from left to right.'},{oeqn:'hi(7+14)+11=hi(21)+11',eqn:'<math><mrow><mrow mathcolor=#ff0000><mn>7</mn><mo>+</mo><mn>14</mn></mrow><mo>+</mo><mn>11</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>21</mn></mrow><mo>+</mo><mn>11</mn></mrow></math>',txt:'Add and subtract from left to right.'},{oeqn:'hi(21+11)=hi(32)',eqn:'<math><mrow mathcolor=#ff0000><mn>21</mn><mo>+</mo><mn>11</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>32</mn></mrow></math>',txt:'Add and subtract from left to right.'}]},{question:{oeqn:'10\u00f72+4*7',eqn:'<math><mrow><mn>10</mn><mo>&divide;</mo><mn>2</mn><mo>+</mo><mrow><mn>4</mn><mo>&times;</mo><mn>7</mn></mrow></mrow></math>'},answer:{val:33},step:[{oeqn:'10\u00f72+4*7',eqn:'<math><mrow><mn>10</mn><mo>&divide;</mo><mn>2</mn><mo>+</mo><mrow><mn>4</mn><mo>&times;</mo><mn>7</mn></mrow></mrow></math>',txt:'There are no grouping symbols or exponents.'},{oeqn:'hi(10\u00f72)+4*7=hi(5)+4*7',eqn:'<math><mrow mathcolor=#ff0000><mn>10</mn><mo>&divide;</mo><mn>2</mn></mrow><mo>+</mo><mrow><mn>4</mn><mo>&times;</mo><mn>7</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>5</mn></mrow><mo>+</mo><mrow><mn>4</mn><mo>&times;</mo><mn>7</mn></mrow></mrow></math>',txt:'Multiply and divide from left to right.'},{oeqn:'5+hi(4*7)=5+hi(28)',eqn:'<math><mrow><mn>5</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>4</mn><mo>&times;</mo><mn>7</mn></mrow></mrow><mo>=</mo><mrow><mn>5</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>28</mn></mrow></mrow></math>',txt:'Multiply and divide from left to right.'},{eqn:'hi(5+28)=hi(33)',eqn:'<math><mrow mathcolor=#ff0000><mn>5</mn><mo>+</mo><mn>28</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>33</mn></mrow></math>',txt:'Add and subtract from left to right.'}]},{question:{oeqn:'10+12\u00f74+7',eqn:'<math><mrow><mn>10</mn><mo>+</mo><mrow><mn>12</mn><mo>&divide;</mo><mn>4</mn></mrow><mo>+</mo><mn>7</mn></mrow></math>'},answer:{val:20},step:[{oeqn:'10+12\u00f74+7=',eqn:'<math><mrow><mn>10</mn><mo>+</mo><mrow><mn>12</mn><mo>&divide;</mo><mn>4</mn></mrow><mo>+</mo><mn>7</mn></mrow></math>',txt:'There are no grouping symbols or exponents.'},{oeqn:'10+hi(12\u00f74)+7=10+hi(3)+7',eqn:'<math><mrow><mn>10</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>12</mn><mo>&divide;</mo><mn>4</mn></mrow><mo>+</mo><mn>7</mn></mrow><mo>=</mo><mrow><mn>10</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>3</mn></mrow><mo>+</mo><mn>7</mn></mrow></math>',txt:'Multiply and divide from left to right.'},{oeqn:'hi(10+3)+7=hi(7)+7',eqn:'<math><mrow><mrow mathcolor=#ff0000><mn>10</mn><mo>+</mo><mn>3</mn></mrow><mo>+</mo><mn>7</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>13</mn></mrow><mo>+</mo><mn>7</mn></mrow></math>',txt:'Add and subtract from left to right.'},{eqn:'hi(13+7)=hi(20)',eqn:'<math><mrow mathcolor=#ff0000><mn>13</mn><mo>+</mo><mn>7</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>20</mn></mrow></math>',txt:'Add and subtract from left to right.'}]},{question:{oeqn:'1+[5+2*3]',eqn:'<math><mrow><mrow><mrow><mrow><mn>1</mn></mrow></mrow><mo>+</mo><mo>[</mo><mrow><mrow><mn>5</mn></mrow><mo>+</mo><mn>2</mn></mrow><mo>&times;</mo><mn>3</mn><mo>]</mo></mrow></mrow></math>'},answer:{val:12},step:[{oeqn:'1+[5+hi(2*3)]=1+[5+hi(6)]',eqn:'<math><mrow><mrow><mrow><mrow><mn>1</mn></mrow></mrow><mo>+</mo><mo>[</mo><mrow><mrow><mn>5</mn></mrow><mo>+</mo><mrow mathcolor=#ff0000><mn>2</mn><mo>&times;</mo><mn>3</mn></mrow></mrow><mo>]</mo></mrow></mrow><mo>=</mo><mrow><mrow><mrow><mrow><mn>1</mn></mrow></mrow><mo>+</mo><mo>[</mo><mrow><mrow><mn>5</mn></mrow><mo>+</mo><mrow mathcolor=#ff0000><mn>6</mn></mrow></mrow><mo>]</mo></mrow></mrow></math>',txt:'Multiply in the brackets first.'},{oeqn:'1+[hi(5+(6))]=1+hi((11))',eqn:'<math><mrow><mrow><mn>1</mn></mrow><mo>+</mo><mo>[</mo><mrow mathcolor=#ff0000><mrow><mn>5</mn></mrow><mo>+</mo><mn>6</mn></mrow><mo>]</mo></mrow><mo>=</mo><mrow><mrow><mn>1</mn></mrow><mo>+</mo><mrow mathcolor=#ff0000><mn>11</mn></mrow></mrow></math>',txt:'Add in the brackets.'},{oeqn:'hi(1+(11))=hi(12)',eqn:'<math><mrow mathcolor=#ff0000><mrow><mn>1</mn></mrow><mo>+</mo><mn>11</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>12</mn></mrow></math>',txt:'Finally, add.'}]},{question:{oeqn:'5+[3+4*4]', eqn:'<math><mrow><mrow><mn>5</mn><mo>+</mo><mo>[</mo><mrow><mrow><mn>3</mn></mrow><mo>+</mo><mrow><mn>4</mn><mo>&times;</mo><mn>4</mn></mrow></mrow><mo>]</mo></mrow></mrow></math>'},answer:{val:24},step:[{oeqn:'5+[3+hi(4*4)]=5+[3+hi(16)]',eqn:'<math><mrow><mrow><mn>5</mn><mo>+</mo><mo>[</mo><mrow><mrow><mn>3</mn></mrow><mo>+</mo><mrow mathcolor=#ff0000><mn>4</mn><mo>&times;</mo><mn>4</mn></mrow></mrow><mo>]</mo></mrow></mrow><mo>=</mo><mrow><mrow><mn>5</mn><mo>+</mo><mo>[</mo><mrow><mrow><mn>3</mn></mrow><mo>+</mo><mrow mathcolor=#ff0000><mn>16</mn></mrow></mrow><mo>]</mo></mrow></mrow></math>',txt:'Multiply in the brackets first.'},{oeqn:'5+[hi(3+16)]=5+hi(19)',eqn:'<math><mrow><mrow><mn>5</mn><mo>+</mo><mo>[</mo><mrow><mrow mathcolor=#ff0000><mrow><mn>3</mn></mrow><mo>+</mo><mn>16</mn></mrow></mrow><mo>]</mo></mrow></mrow><mo>=</mo><mrow><mn>5</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>19</mn></mrow></mrow></math>',txt:'Add in the brackets.'},{oeqn:'hi(5+19)=hi(24)',eqn:'<math><mrow mathcolor=#ff0000><mn>5</mn><mo>+</mo><mn>19</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>24</mn></mrow></math>',txt:'Finally, add.'}]}]}}";var topic_data_4="{data:{item:[{question:{eqn:'<math><mrow><mn>2</mn><mo>+</mo><mrow><mn>7</mn><mo>&times;</mo><mn>8</mn></mrow><mo>-</mo><mn>10</mn></mrow></math>'},answer:{val:48},step:[{eqn:'<math><mrow><mn>2</mn><mo>+</mo><mrow><mn>7</mn><mo>&times;</mo><mn>8</mn></mrow><mo>-</mo><mn>10</mn></mrow></math>',txt:'There are no grouping symbols or exponents.'},{eqn:'<math><mrow><mrow><mn>2</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>7</mn><mo>&times;</mo><mn>8</mn></mrow><mo>-</mo><mn>10</mn></mrow><mo>=</mo><mrow><mn>2</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>56</mn></mrow><mo>-</mo><mn>10</mn></mrow></mrow></math>',txt:'Multiply and divide from left to right.'},{eqn:'<math><mrow><mrow><mrow mathcolor=#ff0000><mn>2</mn><mo>+</mo><mn>56</mn></mrow><mo>-</mo><mn>10</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>58</mn></mrow><mo>-</mo><mn>10</mn></mrow></mrow></math>',txt:'Add and subtract from left to right.'},{eqn:'<math><mrow><mrow mathcolor=#ff0000><mn>58</mn><mo>-</mo><mn>10</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>48</mn></mrow></mrow></math>',txt:'Add and subtract from left to right.'}]},{question:{eqn:'<math><mrow><mn>10</mn><mo>-</mo><mrow><mn>2</mn><mo>&times;</mo><mn>4</mn></mrow><mo>+</mo><mn>11</mn></mrow></math>'},answer:{val:13},step:[{eqn:'<math><mrow><mn>10</mn><mo>-</mo><mrow><mn>2</mn><mo>&times;</mo><mn>4</mn></mrow><mo>+</mo><mn>11</mn></mrow></math>',txt:'There are no grouping symbols or exponents.'},{eqn:'<math><mrow><mn>10</mn><mo>-</mo><mrow mathcolor=#ff0000><mn>2</mn><mo>&times;</mo><mn>4</mn></mrow><mo>+</mo><mn>11</mn></mrow><mo>=</mo><mrow><mn>10</mn><mo>-</mo><mrow mathcolor=#ff0000><mn>8</mn></mrow><mo>+</mo><mn>11</mn></mrow></math>',txt:'Multiply and divide from left to right.'},{ eqn:'<math><mrow><mrow mathcolor=#ff0000><mn>10</mn><mo>-</mo><mn>8</mn></mrow><mo>+</mo><mn>11</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>2</mn></mrow><mo>+</mo><mn>11</mn></mrow></math>',txt:'Add and subtract from left to right.'},{eqn:'<math><mrow mathcolor=#ff0000><mn>2</mn><mo>+</mo><mn>11</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>13</mn></mrow></math>',txt:'Add and subtract from left to right.'}]},{question:{eqn:'<math><mrow><mn>7</mn><mo>+</mo><mrow><mn>9</mn><mo>&times;</mo><mn>2</mn></mrow><mo>-</mo><mn>20</mn></mrow></math>'},answer:{val:5},step:[{eqn:'<math><mrow><mn>7</mn><mo>+</mo><mrow><mn>9</mn><mo>&times;</mo><mn>2</mn></mrow><mo>-</mo><mn>20</mn></mrow></math>',txt:'There are no grouping symbols or exponents.'},{oeqn:'7+hi(9*2)-20=7+hi(18)-20',eqn:'<math><mrow><mn>7</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>9</mn><mo>&times;</mo><mn>2</mn></mrow><mo>-</mo><mn>20</mn></mrow><mo>=</mo><mrow><mn>7</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>18</mn></mrow><mo>-</mo><mn>20</mn></mrow></math>',txt:'Multiply and divide from left to right.'},{oeqn:'hi(7+18)-20=hi(25)-20',eqn:'<math><mrow><mrow mathcolor=#ff0000><mn>7</mn><mo>+</mo><mn>18</mn></mrow><mo>-</mo><mn>20</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>25</mn></mrow><mo>-</mo><mn>20</mn></mrow></math>',txt:'Add and subtract from left to right.'},{oeqn:'hi(25-20)=hi(5)',eqn:'<math><mrow mathcolor=#ff0000><mn>25</mn><mo>-</mo><mn>20</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>5</mn></mrow></math>',txt:'Add and subtract from left to right.'}]},{question:{oeqn:'{30\u00f76}+{4^2}-20',eqn:'<math><mrow><mrow><mn>30</mn><mo>&divide;</mo><mn>6</mn></mrow><mo>+</mo><msup><mn>4</mn><mn>2</mn></msup><mo>-</mo><mn>20</mn></mrow></math>'},answer:{val:1},step:[{oeqn:'{30\u00f76}+{4^2}-20=',eqn:'<math><mrow><mrow><mn>30</mn><mo>&divide;</mo><mn>6</mn></mrow><mo>+</mo><msup><mn>4</mn><mn>2</mn></msup><mo>-</mo><mn>20</mn></mrow></math>',txt:'There are no grouping symbols.'},{oeqn:'{30\u00f76}+{hi(4^2)}-20={30\u00f76}+{hi(16)}-20',eqn:'<math><mrow><mrow><mn>30</mn><mo>&divide;</mo><mn>6</mn></mrow><mo>+</mo><mrow mathcolor=#ff0000><msup><mn>4</mn><mn>2</mn></msup></mrow><mo>-</mo><mn>20</mn></mrow><mo>=</mo><mrow><mrow><mn>30</mn><mo>&divide;</mo><mn>6</mn></mrow><mo>+</mo><mrow mathcolor=#ff0000><mn>16</mn></mrow><mo>-</mo><mn>20</mn></mrow></math>',txt:'Evaluate the exponent.'},{oeqn:'hi({30\u00f76})+16-20=hi(5)+16-20',eqn:'<math><mrow><mrow mathcolor=#ff0000><mn>30</mn><mo>&divide;</mo><mn>6</mn></mrow><mo>+</mo><mn>16</mn><mo>-</mo><mn>20</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>5</mn></mrow><mo>+</mo><mn>16</mn><mo>-</mo><mn>20</mn></mrow></math>',txt:'Multiply and divide from left to right.'},{oeqn:'hi(5+16)-20=hi(21)-20',eqn:'<math><mrow><mrow mathcolor=#ff0000><mn>5</mn><mo>+</mo><mn>16</mn></mrow><mo>-</mo><mn>20</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>21</mn></mrow><mo>-</mo><mn>20</mn></mrow></math>',txt:'Add and subtract from left to right.'},{oeqn:'hi(21-20)=hi(1)',eqn:'<math><mrow mathcolor=#ff0000><mn>21</mn><mo>-</mo><mn>20</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>1</mn></mrow></math>',txt:'Add and subtract from left to right.'}]},{question:{oeqn:'{55\u00f75}-{3^2}+4',eqn:'<math><mrow><mrow><mn>55</mn><mo>&divide;</mo><mn>5</mn></mrow><mo>-</mo><msup><mn>3</mn><mn>2</mn></msup><mo>+</mo><mn>4</mn></mrow></math>'},answer:{val:6},step:[{oeqn:'{55\u00f75}-{3^2}+4=',eqn:'<math><mrow><mrow><mn>55</mn><mo>&divide;</mo><mn>5</mn></mrow><mo>-</mo><msup><mn>3</mn><mn>2</mn></msup><mo>+</mo><mn>4</mn></mrow></math>',txt:'There are no grouping symbols.'},{oeqn:'{55\u00f75}-{hi(3^2)}+4={55\u00f75}-{hi(9)}+4',eqn:'<math><mrow><mrow><mn>55</mn><mo>&divide;</mo><mn>5</mn></mrow><mo>-</mo><mrow mathcolor=#ff0000><msup><mn>3</mn><mn>2</mn></msup></mrow><mo>+</mo><mn>4</mn></mrow><mo>=</mo><mrow><mrow><mn>55</mn><mo>&divide;</mo><mn>5</mn></mrow><mo>-</mo><mrow mathcolor=#ff0000><mn>9</mn></mrow><mo>+</mo><mn>4</mn></mrow></math>',txt:'Evaluate the exponent.'},{oeqn:'hi({55\u00f75})-9+4=hi(11)-9+4',eqn:'<math><mrow><mrow mathcolor=#ff0000><mn>55</mn><mo>&divide;</mo><mn>5</mn></mrow><mo>-</mo><mn>9</mn><mo>+</mo><mn>4</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>11</mn></mrow><mo>-</mo><mn>9</mn><mo>+</mo><mn>4</mn></mrow></math>',txt:'Multiply and divide from left to right.'},{oeqn:'hi(11-9)+4=hi(2)+4',eqn:'<math><mrow><mrow mathcolor=#ff0000><mn>11</mn><mo>-</mo><mn>9</mn></mrow><mo>+</mo><mn>4</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>2</mn></mrow><mo>+</mo><mn>4</mn></mrow></math>',txt:'Add and subtract from left to right.'},{oeqn:'hi(2+4)=hi(6)',eqn:'<math><mrow mathcolor=#ff0000><mn>2</mn><mo>+</mo><mn>4</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>6</mn></mrow></math>',txt:'Add and subtract from left to right.'}]},{question:{oeqn:'{8*5}-{6^2}+6',eqn:'<math><mrow><mrow><mn>8</mn><mo>&times;</mo><mn>5</mn></mrow><mo>-</mo><msup><mn>6</mn><mn>2</mn></msup><mo>+</mo><mn>6</mn></mrow></math>'},answer:{val:10},step:[{oeqn:'{8*5}-{6^2}+6=',eqn:'<math><mrow><mrow><mn>8</mn><mo>&times;</mo><mn>5</mn></mrow><mo>-</mo><msup><mn>6</mn><mn>2</mn></msup><mo>+</mo><mn>6</mn></mrow></math>',txt:'There are no grouping symbols.'},{oeqn:'{8*5}-{hi(6^2)}+6={8*5}-{hi(36)}+6',eqn:'<math><mrow><mrow><mn>8</mn><mo>&times;</mo><mn>5</mn></mrow><mo>-</mo><mrow mathcolor=#ff0000><msup><mn>6</mn><mn>2</mn></msup></mrow><mo>+</mo><mn>6</mn></mrow><mo>=</mo><mrow><mrow><mn>8</mn><mo>&times;</mo><mn>5</mn></mrow><mo>-</mo><mrow mathcolor=#ff0000><mn>36</mn></mrow><mo>+</mo><mn>6</mn></mrow></math>',txt:'Evaluate the exponent.'},{oeqn:'{hi(8*5)}-36+6=hi(40)-36+6',eqn:'<math><mrow><mrow mathcolor=#ff0000><mn>8</mn><mo>&times;</mo><mn>5</mn></mrow><mo>-</mo><mn>36</mn><mo>+</mo><mn>6</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>40</mn></mrow><mo>-</mo><mn>36</mn><mo>+</mo><mn>6</mn></mrow></math>',txt:'Multiply and divide from left to right.'},{oeqn:'hi(40-36)+6=hi(4)+6',eqn:'<math><mrow><mrow mathcolor=#ff0000><mn>40</mn><mo>-</mo><mn>36</mn></mrow><mo>+</mo><mn>6</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>4</mn></mrow><mo>+</mo><mn>6</mn></mrow></math>',txt:'Add and subtract from left to right.'},{oeqn:'hi(4+6)=hi(10)',eqn:'<math><mrow mathcolor=#ff0000><mn>4</mn><mo>+</mo><mn>6</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>10</mn></mrow></math>',txt:'Add and subtract from left to right.'}]},{question:{oeqn:'5+25\u00f75*3-10',eqn:'<math><mrow><mn>5</mn><mo>+</mo><mrow><mrow><mrow><mn>25</mn><mo>&divide;</mo><mn>5</mn></mrow></mrow><mo>&times;</mo><mn>3</mn></mrow><mo>-</mo><mn>10</mn></mrow></math>'},answer:{val:10},step:[{oeqn:'5+25\u00f75*3-10=',eqn:'<math><mrow><mn>5</mn><mo>+</mo><mrow><mrow><mrow><mn>25</mn><mo>&divide;</mo><mn>5</mn></mrow></mrow><mo>&times;</mo><mn>3</mn></mrow><mo>-</mo><mn>10</mn></mrow></math>',txt:'There are no grouping symbols or exponents.'},{oeqn:'5+hi(25\u00f75)*3-10=5+hi(5)*3-10',eqn:'<math><mrow><mn>5</mn><mo>+</mo><mrow><mrow><mrow mathcolor=#ff0000><mn>25</mn><mo>&divide;</mo><mn>5</mn></mrow></mrow><mo>&times;</mo><mn>3</mn></mrow><mo>-</mo><mn>10</mn></mrow><mo>=</mo><mrow><mn>5</mn><mo>+</mo><mrow><mrow><mrow mathcolor=#ff0000><mn>5</mn></mrow></mrow><mo>&times;</mo><mn>3</mn></mrow><mo>-</mo><mn>10</mn></mrow></math>',txt:'Multiply and divide from left to right.'},{oeqn:'5+hi(5*3)-10=5+hi(15)-10',eqn:'<math><mrow><mn>5</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>5</mn><mo>&times;</mo><mn>3</mn></mrow><mo>-</mo><mn>10</mn></mrow><mo>=</mo><mrow><mn>5</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>15</mn></mrow><mo>-</mo><mn>10</mn></mrow></math>',txt:'Multiply and divide from left to right.'},{oeqn:'hi(5+15)-10=hi(20)-10',eqn:'<math><mrow><mrow mathcolor=#ff0000><mn>5</mn><mo>+</mo><mn>15</mn></mrow><mo>-</mo><mn>10</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>20</mn></mrow><mo>-</mo><mn>10</mn></mrow></math>',txt:'Add and subtract from left to right.'},{oeqn:'hi(20-10)=hi(10)',eqn:'<math><mrow mathcolor=#ff0000><mn>20</mn><mo>-</mo><mn>10</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>10</mn></mrow></math>',txt:'Add and subtract from left to right.'}]},{question:{eqn:'7+21\u00f73*2-11',eqn:'<math><mrow><mn>7</mn><mo>+</mo><mrow><mrow><mrow><mn>21</mn><mo>&divide;</mo><mn>3</mn></mrow></mrow><mo>&times;</mo><mn>2</mn></mrow><mo>-</mo><mn>11</mn></mrow></math>'},answer:{val:10},step:[{oeqn:'7+21\u00f73*2-11=',eqn:'<math><mrow><mn>7</mn><mo>+</mo><mrow><mrow><mrow><mn>21</mn><mo>&divide;</mo><mn>3</mn></mrow></mrow><mo>&times;</mo><mn>2</mn></mrow><mo>-</mo><mn>11</mn></mrow></math>',txt:'There are no grouping symbols or exponents.'},{oeqn:'7+hi(21\u00f73)*2-11=7+hi(7)*2-11',eqn:'<math><mrow><mn>7</mn><mo>+</mo><mrow><mrow><mrow mathcolor=#ff0000><mn>21</mn><mo>&divide;</mo><mn>3</mn></mrow></mrow><mo>&times;</mo><mn>2</mn></mrow><mo>-</mo><mn>11</mn></mrow><mo>=</mo><mrow><mn>7</mn><mo>+</mo><mrow><mrow><mrow mathcolor=#ff0000><mn>7</mn></mrow></mrow><mo>&times;</mo><mn>2</mn></mrow><mo>-</mo><mn>11</mn></mrow></math>',txt:'Multiply and divide from left to right.'},{oeqn:'7+hi(7*2)-11=7+hi(14)-11',eqn:'<math><mrow><mn>7</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>7</mn><mo>&times;</mo><mn>2</mn></mrow><mo>-</mo><mn>11</mn></mrow><mo>=</mo><mrow><mn>7</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>14</mn></mrow><mo>-</mo><mn>11</mn></mrow></math>',txt:'Multiply and divide from left to right.'},{oeqn:'hi(7+14)-11=hi(21)-11',eqn:'<math><mrow><mrow mathcolor=#ff0000><mn>7</mn><mo>+</mo><mn>14</mn></mrow><mo>-</mo><mn>11</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>21</mn></mrow><mo>-</mo><mn>11</mn></mrow></math>',txt:'Add and subtract from left to right.'},{oeqn:'hi(21-11)=hi(10)',eqn:'<math><mrow mathcolor=#ff0000><mn>21</mn><mo>-</mo><mn>11</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>10</mn></mrow></math>',txt:'Add and subtract from left to right.'}]},{question:{oeqn:'10-12\u00f74+7',eqn:'<math><mrow><mn>10</mn><mo>-</mo><mrow><mn>12</mn><mo>&divide;</mo><mn>4</mn></mrow><mo>+</mo><mn>7</mn></mrow></math>'},answer:{val:14},step:[{oeqn:'10-12\u00f74+7=',eqn:'<math><mrow><mn>10</mn><mo>-</mo><mrow><mn>12</mn><mo>&divide;</mo><mn>4</mn></mrow><mo>+</mo><mn>7</mn></mrow></math>',txt:'There are no grouping symbols or exponents.'},{oeqn:'10-hi(12\u00f74)+7=10-hi(3)+7',eqn:'<math><mrow><mn>10</mn><mo>-</mo><mrow mathcolor=#ff0000><mn>12</mn><mo>&divide;</mo><mn>4</mn></mrow><mo>+</mo><mn>7</mn></mrow><mo>=</mo><mrow><mn>10</mn><mo>-</mo><mrow mathcolor=#ff0000><mn>3</mn></mrow><mo>+</mo><mn>7</mn></mrow></math>',txt:'Multiply and divide from left to right.'},{oeqn:'hi(10-3)+7=hi(7)+7',eqn:'<math><mrow><mrow mathcolor=#ff0000><mn>10</mn><mo>-</mo><mn>3</mn></mrow><mo>+</mo><mn>7</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>7</mn></mrow><mo>+</mo><mn>7</mn></mrow></math>',txt:'Add and subtract from left to right.'},{eqn:'hi(7+7)=hi(14)',eqn:'<math><mrow mathcolor=#ff0000><mn>7</mn><mo>+</mo><mn>7</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>14</mn></mrow></math>',txt:'Add and subtract from left to right.'}]},{question:{oeqn:'-1+[-5+(-2)*3]',eqn:'<math><mrow><mrow><mrow><mo>-</mo><mrow><mn>1</mn></mrow></mrow><mo>+</mo><mo>[</mo><mrow><mrow><mo>-</mo><mn>5</mn></mrow><mo>+</mo><mo>(</mo><mrow><mo>-</mo><mn>2</mn></mrow><mo>)</mo><mo>&times;</mo><mn>3</mn></mrow><mo>]</mo></mrow></mrow></math>'},answer:{val:-12},step:[{oeqn:'-1+[-5+hi((-2)*3)]=-1+[-5+hi((-6))]',eqn:'<math><mrow><mrow><mrow><mo>-</mo><mrow><mn>1</mn></mrow></mrow><mo>+</mo><mo>[</mo><mrow><mrow><mo>-</mo><mn>5</mn></mrow><mo>+</mo><mrow mathcolor=#ff0000><mo>(</mo><mo>-</mo><mn>2</mn><mo>)</mo><mo>&times;</mo><mn>3</mn></mrow></mrow><mo>]</mo></mrow></mrow><mo>=</mo><mrow><mrow><mrow><mo>-</mo><mrow><mn>1</mn></mrow></mrow><mo>+</mo><mo>[</mo><mrow><mrow><mo>-</mo><mn>5</mn></mrow><mo>+</mo><mrow mathcolor=#ff0000><mo>(</mo><mo>-</mo><mn>6</mn><mo>)</mo></mrow></mrow><mo>]</mo></mrow></mrow></math>',txt:'Multiply in the brackets first.'},{oeqn:'-1+[hi(-5+(-6))]=-1+hi((-11))',eqn:'<math><mrow><mrow><mo>-</mo><mn>1</mn></mrow><mo>+</mo><mo>[</mo><mrow mathcolor=#ff0000><mrow><mo>-</mo><mn>5</mn></mrow><mo>+</mo><mo>(</mo><mo>-</mo><mn>6</mn><mo>)</mo></mrow><mo>]</mo></mrow><mo>=</mo><mrow><mrow><mo>-</mo><mn>1</mn></mrow><mo>+</mo><mrow mathcolor=#ff0000><mo>(</mo><mo>-</mo><mn>11</mn><mo>)</mo></mrow></mrow></math>',txt:'Add in the brackets.'},{oeqn:'hi(-1+(-11))=hi(-12)',eqn:'<math><mrow mathcolor=#ff0000><mrow><mo>-</mo><mn>1</mn></mrow><mo>+</mo><mo>(</mo><mo>-</mo><mn>11</mn><mo>)</mo></mrow><mo>=</mo><mrow mathcolor=#ff0000><mo>-</mo><mn>12</mn></mrow></math>',txt:'Finally, add.'}]},{question:{oeqn:'5+[-3+4*4]', eqn:'<math><mrow><mrow><mn>5</mn><mo>+</mo><mo>[</mo><mrow><mrow><mo>-</mo><mn>3</mn></mrow><mo>+</mo><mrow><mn>4</mn><mo>&times;</mo><mn>4</mn></mrow></mrow><mo>]</mo></mrow></mrow></math>'},answer:{val:18},step:[{oeqn:'5+[-3+hi(4*4)]=5+[-3+hi(16)]',eqn:'<math><mrow><mrow><mn>5</mn><mo>+</mo><mo>[</mo><mrow><mrow><mo>-</mo><mn>3</mn></mrow><mo>+</mo><mrow mathcolor=#ff0000><mn>4</mn><mo>&times;</mo><mn>4</mn></mrow></mrow><mo>]</mo></mrow></mrow><mo>=</mo><mrow><mrow><mn>5</mn><mo>+</mo><mo>[</mo><mrow><mrow><mo>-</mo><mn>3</mn></mrow><mo>+</mo><mrow mathcolor=#ff0000><mn>16</mn></mrow></mrow><mo>]</mo></mrow></mrow></math>',txt:'Multiply in the brackets first.'},{oeqn:'5+[hi(-3+16)]=5+hi(13)',eqn:'<math><mrow><mrow><mn>5</mn><mo>+</mo><mo>[</mo><mrow><mrow mathcolor=#ff0000><mrow><mo>-</mo><mn>3</mn></mrow><mo>+</mo><mn>16</mn></mrow></mrow><mo>]</mo></mrow></mrow><mo>=</mo><mrow><mn>5</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>13</mn></mrow></mrow></math>',txt:'Add in the brackets.'},{oeqn:'hi(5+13)=hi(18)',eqn:'<math><mrow mathcolor=#ff0000><mn>5</mn><mo>+</mo><mn>13</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>18</mn></mrow></math>',txt:'Finally, add.'}]},{question:{oeqn:'{(14\u00f72)^2}-20*2',eqn:'<math><mrow><msup><mrow><mo>(</mo><mrow><mn>14</mn><mo>&divide;</mo><mn>2</mn></mrow><mo>)</mo></mrow><mn>2</mn></msup><mo>-</mo><mrow><mn>20</mn><mo>&times;</mo><mn>2</mn></mrow></mrow></math>'},answer:{val:9},step:[{oeqn:'{hi((14\u00f72))^2}-20*2={hi(7)^2}-20*2',eqn:'<math><mrow><msup><mrow mathcolor=#ff0000><mo>(</mo><mrow><mn>14</mn><mo>&divide;</mo><mn>2</mn></mrow><mo>)</mo></mrow><mn>2</mn></msup><mo>-</mo><mrow><mn>20</mn><mo>&times;</mo><mn>2</mn></mrow></mrow><mo>=</mo><mrow><msup><mrow mathcolor=#ff0000><mn>7</mn></mrow><mn>2</mn></msup><mo>-</mo><mrow><mn>20</mn><mo>&times;</mo><mn>2</mn></mrow></mrow></math>',txt:'Simplify parentheses first.'},{oeqn:'{hi(7^2)}-20*2=hi(49)-20*2',eqn:'<math><mrow><mrow mathcolor=#ff0000><msup><mn>7</mn><mn>2</mn></msup></mrow><mo>-</mo><mrow><mn>20</mn><mo>&times;</mo><mn>2</mn></mrow></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>49</mn></mrow><mo>-</mo><mrow><mn>20</mn><mo>&times;</mo><mn>2</mn></mrow></mrow></math>',txt:'Evaluate the exponent.'},{oeqn:'49-hi(20*2)=49-hi(40)',eqn:'<math><mrow><mn>49</mn><mo>-</mo><mrow mathcolor=#ff0000><mn>20</mn><mo>&times;</mo><mn>2</mn></mrow></mrow><mo>=</mo><mrow><mn>49</mn><mo>-</mo><mrow mathcolor=#ff0000><mn>40</mn></mrow></mrow></math>',txt:'Multiply and divide from left to right.'},{oeqn:'hi(49-40)=hi(9)',eqn:'<math><mrow mathcolor=#ff0000><mn>49</mn><mo>-</mo><mn>40</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>9</mn></mrow></math>',txt:'Add and subtract from left to right.'}]}]}}";var topic_data_5="{data: {item: [{question: {oeqn: '({{2*8}/{1+7}}+2)^2',eqn: '<math><msup><mrow><mo>(</mo><mrow><mn>2</mn><mo>+</mo><mfrac><mrow><mn>2</mn><mo>&times;</mo><mn>8</mn></mrow><mrow><mn>1</mn><mo>+</mo><mn>7</mn></mrow></mfrac></mrow><mo>)</mo></mrow><mn>2</mn></msup></math>'},answer: { val: '16' },step: [{oeqn: '({hi({2*8})/{1+7}}+2)^2=({hi({16})/{1+7}}+2)^2',	eqn: '<math><mrow><msup><mrow><mo>(</mo><mrow><mn>2</mn><mo>+</mo><mfrac><mrow mathcolor=#ff0000><mn>2</mn><mo>&times;</mo><mn>8</mn></mrow><mrow><mn>1</mn><mo>+</mo><mn>7</mn></mrow></mfrac></mrow><mo>)</mo></mrow><mn>2</mn></msup></mrow><mo>=</mo><mrow><msup><mrow><mo>(</mo><mrow><mn>2</mn><mo>+</mo><mfrac><mrow mathcolor=#ff0000><mn>16</mn></mrow><mrow><mn>1</mn><mo>+</mo><mn>7</mn></mrow></mfrac></mrow><mo>)</mo></mrow><mn>2</mn></msup></mrow></math>',txt: 'Simplify in the parentheses first. The fraction bar is a grouping symbol. Start with the numerator.'},{oeqn: '({{16}/hi({1+7})}+2)^2=({{16}/hi({8})}+2)^2',	eqn: '<math><mrow><msup><mrow><mo>(</mo><mrow><mn>2</mn><mo>+</mo><mfrac><mrow><mn>16</mn></mrow><mrow mathcolor=#ff0000><mn>1</mn><mo>+</mo><mn>7</mn></mrow></mfrac></mrow><mo>)</mo></mrow><mn>2</mn></msup></mrow><mo>=</mo><mrow><msup><mrow><mo>(</mo><mrow><mn>2</mn><mo>+</mo><mfrac><mrow><mn>16</mn></mrow><mrow mathcolor=#ff0000><mn>8</mn></mrow></mfrac></mrow><mo>)</mo></mrow><mn>2</mn></msup></mrow></math>',txt: 'Next simplify the denominator.'},{oeqn: '({hi({16}/{8})}+2)^2=(hi(2+2))^2',	eqn: '<math><mrow><msup><mrow><mo>(</mo><mrow><mn>2</mn><mo>+</mo><mrow mathcolor=#ff0000><mfrac><mrow><mn>16</mn></mrow><mrow><mn>8</mn></mrow></mfrac></mrow></mrow><mo>)</mo></mrow><mn>2</mn></msup></mrow><mo>=</mo><mrow><msup><mrow><mo>(</mo><mrow><mn>2</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>2</mn></mrow></mrow><mo>)</mo></mrow><mn>2</mn></msup></mrow></math>',txt: 'Reduce the fraction(divide).'},{oeqn: 'hi((2+2))^2=hi(4)^2',	eqn: '<math><mrow><msup><mrow><mo>(</mo><mrow mathcolor=#ff0000><mn>2</mn><mo>+</mo><mn>2</mn></mrow><mo>)</mo></mrow><mn>2</mn></msup></mrow><mo>=</mo><mrow><msup><mrow><mrow mathcolor=#ff0000><mn>4</mn></mrow></mrow><mn>2</mn></msup></mrow></math>',txt: 'Add to finish simplifying the parentheses.'},{oeqn: 'hi(4^2)=hi(16)',	eqn: '<math><mrow mathcolor=#ff0000><msup><mrow><mn>4</mn></mrow><mn>2</mn></msup></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>16</mn></mrow></math>',txt: 'Finally, evaluate the exponent.'}]},{question: {oeqn: '{60*{1/2}*3}-{10*7}',eqn: '<math><mrow><mn>60</mn><mo>&times;</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>&times;</mo><mn>3</mn></mrow><mo>&minus;</mo><mrow><mn>10</mn><mo>&times;</mo><mn>7</mn></mrow></math>'},answer: { val: '20' },step: [{oeqn: '{60*{1/2}*3}-{10*7}=',	eqn: '<math><mrow><mn>60</mn><mo>&times;</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>&times;</mo><mn>3</mn></mrow><mo>&minus;</mo><mrow><mn>10</mn><mo>&times;</mo><mn>7</mn></mrow></math>',txt: 'There are no grouping symbols or exponents.'},{oeqn: '{hi(60*{1/2})*3}-{10*7}=hi(30)*3-10*7',	eqn: '<math><mrow><mrow mathcolor=#ff0000><mn>60</mn><mo>&times;</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow><mo>&times;</mo><mn>3</mn></mrow><mo>&minus;</mo><mrow><mn>10</mn><mo>&times;</mo><mn>7</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>30</mn></mrow><mo>&times;</mo><mn>3</mn></mrow><mo>&minus;</mo><mrow><mn>10</mn><mo>&times;</mo><mn>7</mn></mrow></math>',txt: 'Multiply and divide from left to right.'},{oeqn: 'hi(30*3)-10*7=hi(90)-10*7',	eqn: '<math><mrow><mrow mathcolor=#ff0000><mn>30</mn><mo>&times;</mo><mn>3</mn></mrow></mrow><mo>&minus;</mo><mrow><mn>10</mn><mo>&times;</mo><mn>7</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>90</mn></mrow></mrow><mo>&minus;</mo><mrow><mn>10</mn><mo>&times;</mo><mn>7</mn></mrow></math>',txt: 'Multiply and divide from left to right.'},{oeqn: '90-hi(10*7)=90-hi(70)',	eqn: '<math><mrow><mn>90</mn></mrow><mo>&minus;</mo><mrow mathcolor=#ff0000><mn>10</mn><mo>&times;</mo><mn>7</mn></mrow><mo>=</mo><mrow><mn>90</mn></mrow><mo>&minus;</mo><mrow mathcolor=#ff0000><mn>70</mn></mrow></math>',txt: 'Multiply and divide from left to right.'},{oeqn: 'hi(90-70)=hi(20)',	eqn: '<math><mrow mathcolor=#ff0000><mn>90</mn><mo>&minus;</mo><mn>70</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>20</mn></mrow></math>',txt: 'Add and subtract from left to right.'}]},{question: {oeqn: '{{1/2}*{2/3}}\u00f7({1/4}+{3/4})',eqn: '<math><mrow><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>&times;</mo><mfrac><mn>2</mn><mn>3</mn></mfrac></mrow><mo>&divide;</mo><mrow><mo>(</mo><mfrac><mn>1</mn><mn>4</mn></mfrac><mo>+</mo><mfrac><mn>3</mn><mn>4</mn></mfrac><mo>)</mo></mrow></mrow></math>'},answer: { val: '1/3' },step: [{oeqn: '{{1/2}*{2/3}}\u00f7hi(({1/4}+{3/4}))={1/2}*{2/3}\u00f7hi(1)',	eqn: '<math><mrow><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>&times;</mo><mfrac><mn>2</mn><mn>3</mn></mfrac></mrow><mo>&divide;</mo><mrow mathcolor=#ff0000><mo>(</mo><mfrac><mn>1</mn><mn>4</mn></mfrac><mo>+</mo><mfrac><mn>3</mn><mn>4</mn></mfrac><mo>)</mo></mrow></mrow><mo>=</mo><mrow><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>&times;</mo><mfrac><mn>2</mn><mn>3</mn></mfrac></mrow><mo>&divide;</mo><mrow mathcolor=#ff0000><mn>1</mn></mrow></mrow></math>',txt: 'Add in the parentheses first.'},{oeqn: 'hi({{1/2}*{2/3}})\u00f71=hi({1/3})\u00f71',	eqn: '<math><mrow><mrow mathcolor=#ff0000><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>&times;</mo><mfrac><mn>2</mn><mn>3</mn></mfrac></mrow><mo>&divide;</mo><mrow><mn>1</mn></mrow></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mfrac><mn>1</mn><mn>3</mn></mfrac></mrow><mo>&divide;</mo><mrow><mn>1</mn></mrow></mrow></math>',txt: 'Multiply and divide from left to right.'},{oeqn: 'hi({1/3}\u00f71)=hi(1/3)',	eqn: '<math><mrow mathcolor=#ff0000><mfrac><mn>1</mn><mn>3</mn></mfrac><mo>&divide;</mo><mrow><mn>1</mn></mrow></mrow><mo>=</mo><mrow mathcolor=#ff0000><mfrac><mn>1</mn><mn>3</mn></mfrac></mrow></math>',txt: 'Multiply and divide from left to right.'}]},{question: {eqn: '3+[(12+3)*2]\u00f710',eqn: '<math><mrow><mn>3</mn><mo>+</mo><mrow><mo>(</mo><mrow><mo>(</mo><mn>12</mn><mo>+</mo><mn>3</mn><mo>)</mo></mrow><mo>&times;</mo><mn>2</mn><mo>)</mo></mrow><mo>&divide;</mo><mn>10</mn></mrow></math>'},answer: { val: '6' },step: [{oeqn: '3+[hi((12+3))*2]\u00f710=3+[hi(15)*2]\u00f710',	eqn: '<math><mrow><mn>3</mn><mo>+</mo><mrow><mo>(</mo><mrow mathcolor=#ff0000><mo>(</mo><mn>12</mn><mo>+</mo><mn>3</mn><mo>)</mo></mrow><mo>&times;</mo><mn>2</mn><mo>)</mo></mrow><mo>&divide;</mo><mn>10</mn></mrow><mo>=</mo><mrow><mn>3</mn><mo>+</mo><mrow><mo>(</mo><mrow mathcolor=#ff0000><mn>15</mn></mrow><mo>&times;</mo><mn>2</mn><mo>)</mo></mrow><mo>&divide;</mo><mn>10</mn></mrow></math>',txt: 'Start in the innermost parentheses first.'},{oeqn: '3+[hi(15*2)]\u00f710=3+hi(30)\u00f710',	eqn: '<math><mrow><mn>3</mn><mo>+</mo><mrow mathcolor=#ff0000><mo>(</mo><mn>15</mn><mo>&times;</mo><mn>2</mn><mo>)</mo></mrow><mo>&divide;</mo><mn>10</mn></mrow><mo>=</mo><mrow><mn>3</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>30</mn></mrow><mo>&divide;</mo><mn>10</mn></mrow></math>',txt: 'Then simplify the outer parentheses.'},{oeqn: '3+30\u00f710=',	eqn: '<math><mrow><mn>3</mn><mo>+</mo><mrow><mn>30</mn></mrow><mo>&divide;</mo><mn>10</mn></mrow></math>',txt: 'There are no exponents.'},{oeqn: '3+hi(30\u00f710)=3+hi(3)',	eqn: '<math><mrow><mn>3</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>30</mn><mo>&divide;</mo><mn>10</mn></mrow></mrow><mo>=</mo><mrow><mn>3</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>3</mn></mrow></mrow></math>',txt: 'Multiply and divide from left to right.'},{eqn: 'hi(3+3)=hi(6)',	eqn: '<math><mrow><mrow mathcolor=#ff0000><mn>3</mn><mo>+</mo><mn>3</mn></mrow></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>6</mn></mrow></math>',txt: 'Add and subtract from left to right.'}]},{question: {eqn: '{{5+7}/{6*2}}-9',eqn: '<math><mrow><mrow><mfrac><mrow><mn>5</mn><mo>+</mo><mn>7</mn></mrow><mrow><mn>6</mn><mo>&times;</mo><mn>2</mn></mrow></mfrac></mrow><mo>&minus;</mo><mn>9</mn></mrow></math>'},answer: { val: '-8' },step: [{oeqn: '{{hi(5+7)}/{6*2}}-9={{hi(12)}/{6*2}}-9',	eqn: '<math><mrow><mrow><mfrac><mrow mathcolor=#ff0000><mn>5</mn><mo>+</mo><mn>7</mn></mrow><mrow><mn>6</mn><mo>&times;</mo><mn>2</mn></mrow></mfrac></mrow><mo>&minus;</mo><mn>9</mn></mrow><mo>=</mo><mrow><mrow><mfrac><mrow mathcolor=#ff0000><mn>12</mn></mrow><mrow><mn>6</mn><mo>&times;</mo><mn>2</mn></mrow></mfrac></mrow><mo>&minus;</mo><mn>9</mn></mrow></math>',txt: 'The fraction bar acts a grouping symbol. Start by simplifying the numerator.'},{oeqn: '{{12}/{hi(6*2)}}-9={12/hi(12)}-9',	eqn: '<math><mrow><mrow><mfrac><mrow><mn>12</mn></mrow><mrow mathcolor=#ff0000><mn>6</mn><mo>&times;</mo><mn>2</mn></mrow></mfrac></mrow><mo>&minus;</mo><mn>9</mn></mrow><mo>=</mo><mrow><mrow><mfrac><mrow><mn>12</mn></mrow><mrow mathcolor=#ff0000><mn>12</mn></mrow></mfrac></mrow><mo>&minus;</mo><mn>9</mn></mrow></math>',txt: 'Now simplify the denominator.'},{oeqn: '{hi(12/12)}-9=hi(1)-9',	eqn: '<math><mrow><mrow mathcolor=#ff0000><mfrac><mn>12</mn><mn>12</mn></mfrac></mrow><mo>&minus;</mo><mn>9</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>1</mn></mrow><mo>&minus;</mo><mn>9</mn></mrow></math>',txt: 'Next, do the division.'},{oeqn: 'hi(1-9)=hi(-8)',	eqn: '<math><mrow mathcolor=#ff0000><mn>1</mn><mo>&minus;</mo><mn>9</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mtext>&minus;</mtext><mn>8</mn></mrow></math>',txt: 'Finally, do the subtraction.'}]},{question: {oeqn: '{(8-{3^2}/2)^2}+{1/2}',eqn: '<math><mrow><mrow><msup><mrow><mo>(</mo><mrow><mfrac><mrow><mn>8</mn><mo>&minus;</mo><msup><mn>3</mn><mn>2</mn></msup></mrow><mn>2</mn></mfrac></mrow><mo>)</mo></mrow><mn>2</mn></msup></mrow><mo>+</mo><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow></mrow></math>'},answer: { val: '3/4' },step: [{oeqn: '{(8-{hi(3^2)}/2)^2}+{1/2}={(8-{hi(9)}/2)^2}+{1/2}',	eqn: '<math><mrow><mrow><msup><mrow><mo>(</mo><mrow><mfrac><mrow><mn>8</mn><mo>&minus;</mo><mrow mathcolor=#ff0000><msup><mn>3</mn><mn>2</mn></msup></mrow></mrow><mn>2</mn></mfrac></mrow><mo>)</mo></mrow><mn>2</mn></msup></mrow><mo>+</mo><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow></mrow><mo>=</mo><mrow><mrow><msup><mrow><mo>(</mo><mrow><mfrac><mrow><mn>8</mn><mo>&minus;</mo><mrow mathcolor=#ff0000><mn>9</mn></mrow></mrow><mn>2</mn></mfrac></mrow><mo>)</mo></mrow><mn>2</mn></msup></mrow><mo>+</mo><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow></mrow></math>',txt: 'Start in the parentheses. Simplify the numerator first. Start with the exponent.'},{oeqn: '{({hi(8-9)}/2)^2}+{1/2}={({hi(-1)}/2)^2}+{1/2}',	eqn: '<math><mrow><mrow><msup><mrow><mo>(</mo><mrow><mfrac><mrow mathcolor=#ff0000><mn>8</mn><mo>&minus;</mo><mn>9</mn></mrow><mn>2</mn></mfrac></mrow><mo>)</mo></mrow><mn>2</mn></msup></mrow><mo>+</mo><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow></mrow><mo>=</mo><mrow><mrow><msup><mrow><mo>(</mo><mrow><mfrac><mrow mathcolor=#ff0000><mn>-1</mn></mrow><mn>2</mn></mfrac></mrow><mo>)</mo></mrow><mn>2</mn></msup></mrow><mo>+</mo><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow></mrow></math>',txt: 'Finish simplifying the numerator.'},{oeqn: '{hi((-1/2))^2}+{1/2}={hi(1/4)}+{1/2}',	eqn: '<math><mrow><mrow mathcolor=#ff0000><msup><mrow><mo>(</mo><mrow><mfrac><mrow><mn>-1</mn></mrow><mn>2</mn></mfrac></mrow><mo>)</mo></mrow><mn>2</mn></msup></mrow><mo>+</mo><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mfrac><mn>1</mn><mn>4</mn></mfrac></mrow><mo>+</mo><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow></mrow></math>',txt: 'Now square the fraction. Remember that the product of two negatives is positive.'},{oeqn: 'hi({1/4}+{1/2})=hi(3/4)',	eqn: '<math><mrow><mrow mathcolor=#ff0000><mrow><mfrac><mn>1</mn><mn>4</mn></mfrac></mrow><mo>+</mo><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow></mrow></mrow><mo>=</mo><mrow mathcolor=#ff0000><mfrac><mn>3</mn><mn>4</mn></mfrac></mrow></math>',txt: 'Finally, add the fractions.'}]},{question: {eqn: '{(-3)^2}-{4^2}+5*6',eqn: '<math><mrow><mrow><msup><mrow><mo>(</mo><mtext>&minus;</mtext><mn>3</mn><mo>)</mo></mrow><mn>2</mn></msup></mrow><mo>&minus;</mo><mrow><msup><mrow><mn>4</mn></mrow><mn>2</mn></msup></mrow><mo>+</mo><mrow><mn>5</mn><mo>&times;</mo><mn>6</mn></mrow></mrow></math>'},answer: { val: '23' },step: [{oeqn: '{hi((-3)^2)}-{4^2}+5*6={hi(9)}-{{4^2}+5*6}',	eqn: '<math><mrow><mrow mathcolor=#ff0000><msup><mrow><mo>(</mo><mtext>&minus;</mtext><mn>3</mn><mo>)</mo></mrow><mn>2</mn></msup></mrow><mo>&minus;</mo><mrow><msup><mrow><mn>4</mn></mrow><mn>2</mn></msup></mrow><mo>+</mo><mrow><mn>5</mn><mo>&times;</mo><mn>6</mn></mrow></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>9</mn></mrow><mo>&minus;</mo><mrow><msup><mrow><mn>4</mn></mrow><mn>2</mn></msup></mrow><mo>+</mo><mrow><mn>5</mn><mo>&times;</mo><mn>6</mn></mrow></mrow></math>',txt: 'Evaluate the first exponent. Remember that the product of two negatives is positive.'},{oeqn: '9-{hi(4^2)}+5*6=9-{hi(16)}+5*6',	eqn: '<math><mrow><mrow><mn>9</mn></mrow><mo>&minus;</mo><mrow mathcolor=#ff0000><msup><mrow><mn>4</mn></mrow><mn>2</mn></msup></mrow><mo>+</mo><mrow><mn>5</mn><mo>&times;</mo><mn>6</mn></mrow></mrow><mo>=</mo><mrow><mrow><mn>9</mn></mrow><mo>&minus;</mo><mrow mathcolor=#ff0000><mn>16</mn></mrow><mo>+</mo><mrow><mn>5</mn><mo>&times;</mo><mn>6</mn></mrow></mrow></math>',txt: 'Evaluate the second exponent. Here the minus sign is not squared.'},{oeqn: '9-16+hi(5*6)=9-16+hi(30)',	eqn: '<math><mrow><mrow><mn>9</mn></mrow><mo>&minus;</mo><mrow><mn>16</mn></mrow><mo>+</mo><mrow mathcolor=#ff0000><mn>5</mn><mo>&times;</mo><mn>6</mn></mrow></mrow><mo>=</mo><mrow><mrow><mn>9</mn></mrow><mo>&minus;</mo><mrow><mn>16</mn></mrow><mo>+</mo><mrow mathcolor=#ff0000><mn>30</mn></mrow></mrow></math>',txt: 'Multiply and divide from left to right.'},{oeqn: 'hi(9-16)+30=hi(-7)+30',	eqn: '<math><mrow><mrow mathcolor=#ff0000><mn>9</mn><mo>&minus;</mo><mn>16</mn></mrow><mo>+</mo><mn>30</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mtext>&minus;</mtext><mn>7</mn></mrow><mo>+</mo><mn>30</mn></mrow></math>',txt: 'Add and subtract from left to right.'},{oeqn: 'hi(-7+30)=hi(23)',	eqn: '<math><mrow mathcolor=#ff0000><mtext>&minus;</mtext><mn>7</mn><mo>+</mo><mn>30</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>23</mn></mrow></math>',txt: 'Add and subtract from left to right.'}]},{question: {oeqn: '{2^2*(5-3)}+1',eqn: '<math><mrow><mrow><msup><mn>2</mn><mrow><mn>2</mn><mo>&times;</mo><mrow><mo>(</mo><mn>5</mn><mo>&minus;</mo><mn>3</mn><mo>)</mo></mrow></mrow></msup></mrow><mo>+</mo><mn>1</mn></mrow></math>'},answer: { val: '17' },step: [{oeqn: '{2^2*hi((5-3))}+1={2^2*hi(2)}+1',	eqn: '<math><mrow><mrow><msup><mn>2</mn><mrow><mn>2</mn><mo>&times;</mo><mrow mathcolor=#ff0000><mo>(</mo><mn>5</mn><mo>&minus;</mo><mn>3</mn><mo>)</mo></mrow></mrow></msup></mrow><mo>+</mo><mn>1</mn></mrow><mo>=</mo><mrow><mrow><msup><mn>2</mn><mrow><mn>2</mn><mo>&times;</mo><mrow mathcolor=#ff0000><mo>(</mo><mn>2</mn><mo>)</mo></mrow></mrow></msup></mrow><mo>+</mo><mn>1</mn></mrow></math>',txt: 'Simplify the parentheses first.'},{oeqn: '{2^hi(2*2)}+1={2^hi(4)}+1',	eqn: '<math><mrow><mrow><msup><mn>2</mn><mrow mathcolor=#ff0000><mrow><mn>2</mn><mo>&times;</mo><mo>(</mo><mn>2</mn><mo>)</mo></mrow></mrow></msup></mrow><mo>+</mo><mn>1</mn></mrow><mo>=</mo><mrow><mrow><msup><mn>2</mn><mrow mathcolor=#ff0000><mn>4</mn></mrow></msup></mrow><mo>+</mo><mn>1</mn></mrow></math>',txt: 'Next, multiply in the exponent.'},{oeqn: '{hi(2^4)}+1=hi(16)+1',	eqn: '<math><mrow><mrow mathcolor=#ff0000><msup><mn>2</mn><mn>4</mn></msup></mrow><mo>+</mo><mn>1</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>16</mn></mrow><mo>+</mo><mn>1</mn></mrow></math>',txt: 'Evaluate the exponent.'},{eqn: 'hi(16+1)=hi(17)',	eqn: '<math><mrow mathcolor=#ff0000><mn>16</mn><mo>+</mo><mn>1</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>17</mn></mrow></math>',txt: 'Add.'}]},{question: { oeqn: '2.31*2+1.5^2',eqn: '<math><mrow><mrow><mn>2.31</mn><mo>&times;</mo><mn>2</mn></mrow><mo>+</mo><msup><mn>1.5</mn><mn>2</mn></msup></mrow></math>'},answer: { val: '6.87' },step: [{oeqn: '2.31*2+1.5^2=',	eqn: '<math><mrow><mrow><mn>2.31</mn><mo>&times;</mo><mn>2</mn></mrow><mo>+</mo><msup><mn>1.5</mn><mn>2</mn></msup></mrow></math>',txt: 'There are no grouping symbols.'},{oeqn: '2.31*2+hi(1.5^2)=2.31*2+hi(2.25)',	eqn: '<math><mrow><mrow><mn>2.31</mn><mo>&times;</mo><mn>2</mn></mrow><mo>+</mo><mrow mathcolor=#ff0000><msup><mn>1.5</mn><mn>2</mn></msup></mrow></mrow><mo>=</mo><mrow><mrow><mn>2.31</mn><mo>&times;</mo><mn>2</mn></mrow><mo>+</mo><mrow mathcolor=#ff0000><mn>2.25</mn></mrow></mrow></math>',txt: 'Evaluate the exponent.'},{oeqn: 'hi(2.31*2)+2.25=hi(4.62)+2.25',	eqn: '<math><mrow><mrow mathcolor=#ff0000><mn>2.31</mn><mo>&times;</mo><mn>2</mn></mrow><mo>+</mo><mn>2.25</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mn>4.62</mn></mrow><mo>+</mo><mn>2.25</mn></mrow></math>',txt: 'Multiply and divide from left to right.'},{oeqn: 'hi(4.62+2.25)=hi(6.87)',	eqn: '<math><mrow mathcolor=#ff0000><mn>4.62</mn><mo>+</mo><mn>2.25</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>6.87</mn></mrow></math>',txt: 'Add and subtract from left to right.'}]},{question: {oeqn: '-{1/2}*{[5+(3*7)]+14}',eqn: '<math><mrow><mtext>&minus;</mtext><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>&times;</mo><mrow><mo>(</mo><mrow><mn>5</mn><mo>+</mo><mrow><mo>(</mo><mn>3</mn><mo>&times;</mo><mn>7</mn><mo>)</mo></mrow></mrow><mo>)</mo></mrow></mrow><mo>+</mo><mn>14</mn></mrow></math>'},answer: { val: '1' },step: [{oeqn: '-{1/2}*{[5+hi((3*7))]+14}=-{1/2}*{[5+hi(21)]+14}',	eqn: '<math><mrow><mtext>&minus;</mtext><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>&times;</mo><mrow><mo>(</mo><mrow><mn>5</mn><mo>+</mo><mrow mathcolor=#ff0000><mo>(</mo><mn>3</mn><mo>&times;</mo><mn>7</mn><mo>)</mo></mrow></mrow><mo>)</mo></mrow></mrow><mo>+</mo><mn>14</mn></mrow><mo>=</mo><mrow><mtext>&minus;</mtext><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>&times;</mo><mrow><mo>(</mo><mrow><mn>5</mn><mo>+</mo><mrow mathcolor=#ff0000><mn>21</mn></mrow></mrow><mo>)</mo></mrow></mrow><mo>+</mo><mn>14</mn></mrow></math>',txt: 'Start in the innermost parentheses.'},{oeqn: '-{1/2}*{hi([5+21])+14}=-{1/2}*{hi((26))+14}',	eqn: '<math><mrow><mtext>&minus;</mtext><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>&times;</mo><mrow><mo>(</mo><mrow mathcolor=#ff0000><mn>5</mn><mo>+</mo><mn>21</mn></mrow><mo>)</mo></mrow></mrow><mo>+</mo><mn>14</mn></mrow><mo>=</mo><mrow><mtext>&minus;</mtext><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>&times;</mo><mrow><mo>(</mo><mrow mathcolor=#ff0000><mn>26</mn></mrow><mo>)</mo></mrow></mrow><mo>+</mo><mn>14</mn></mrow></math>',txt: 'Simplify the outer parentheses.'},{oeqn: 'hi(-{1/2}*{(26)})+14=hi(-13)+14',	eqn: '<math><mrow><mrow mathcolor=#ff0000><mtext>&minus;</mtext><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>&times;</mo><mrow><mo>(</mo><mn>26</mn><mo>)</mo></mrow></mrow></mrow><mo>+</mo><mn>14</mn></mrow><mo>=</mo><mrow><mrow mathcolor=#ff0000><mtext>&minus;</mtext><mn>13</mn></mrow><mo>+</mo><mn>14</mn></mrow></math>',txt: 'Multiply and divide from left to right.'},{oeqn: 'hi(-13+14)=hi(1)',	eqn: '<math><mrow mathcolor=#ff0000><mtext>&minus;</mtext><mn>13</mn><mo>+</mo><mn>14</mn></mrow><mo>=</mo><mrow mathcolor=#ff0000><mn>1</mn></mrow></math>',txt: 'Add and subtract from left to right.'}]}]}}";var topic_data_6="6/8,22/55,24/96,2/5,3/20,12/28,26/39,6/15,14/35,200/250,8/10,75/300,3/9,19/30,2/7,28/40,5/6,4/17,5/8,9/11,7/12,8/15,15/18,6/10,9/21,44/60,32/80,27/99,45/100,38/100,42/50,10/25,9/14,16/36,16/28,6/12,9/18,6/24,15/20,32/40,17/34,23/31,7/51,39/52,50/90,36/120,108/120,70/77,28/100,1/16,3/25,44/48,32/56,24/54,20/64,48/60,54/72,36/45,49/70,32/44,150/225,80/340";var topic_data_7="<data><item lexp='1/200' rexp='3/50' val='%3C' expType='***'/><item lexp='1/200' rexp='1%' val='%3C' expType=''/><item lexp='1/121' rexp='1/61' val='%3C' expType='*'/><item lexp='1/101' rexp='1/100' val='%3C' expType='*'/><item lexp='1/100' rexp='0.001' val='%3E' expType=''/><item lexp='1/100' rexp='0.01' val='%3D' expType=''/><item lexp='1/100' rexp='1%' val='%3D' expType=''/><item lexp='1/100' rexp='1/20' val='%3C' expType='*'/><item lexp='1/100' rexp='0.1' val='%3C' expType=''/><item lexp='2/55' rexp='1/55' val='%3E' expType='**'/><item lexp='2/55' rexp='3/55' val='%3C' expType='**'/><item lexp='1/50' rexp='2%' val='%3D' expType=''/><item lexp='2%' rexp='0.2' val='%3C' expType=''/><item lexp='2%' rexp='0.05' val='%3C' expType=''/><item lexp='1/50' rexp='3%' val='%3C' expType=''/><item lexp='1/25' rexp='25%' val='%3C' expType=''/><item lexp='1/25' rexp='4%' val='%3D' expType=''/><item lexp='1/20' rexp='0.02' val='%3E' expType=''/><item lexp='1/20' rexp='3%' val='%3E' expType=''/><item lexp='1/20' rexp='20%' val='%3C' expType=''/><item lexp='1/20' rexp='5%' val='%3D' expType=''/><item lexp='5%' rexp='0.05' val='%3D' expType=''/><item lexp='5%' rexp='0.5' val='%3C' expType=''/><item lexp='1/20' rexp='0.05' val='%3D' expType=''/><item lexp='1/20' rexp='0.2' val='%3C' expType=''/><item lexp='2/22' rexp='3/22' val='%3C' expType='**'/><item lexp='2/22' rexp='1/11' val='%3D' expType='****'/><item lexp='7%' rexp='0.1' val='%3C' expType=''/><item lexp='1/10' rexp='0.01' val='%3E' expType=''/><item lexp='1/10' rexp='1/5' val='%3C' expType='*'/><item lexp='1/10' rexp='5/11' val='%3C' expType=''/><item lexp='1/10' rexp='0.1' val='%3D' expType=''/><item lexp='10%' rexp='0.1' val='%3D' expType=''/><item lexp='10%' rexp='0.10' val='%3D' expType=''/><item lexp='1/10' rexp='8%' val='%3E' expType=''/><item lexp='1/10' rexp='11%' val='%3C' expType=''/><item lexp='1/10' rexp='3/30' val='%3D' expType=''/><item lexp='1/10' rexp='0.5' val='%3C' expType=''/><item lexp='12%' rexp='0.1' val='%3E' expType=''/><item lexp='12%' rexp='0.12' val='%3D' expType=''/><item lexp='12%' rexp='0.2' val='%3C' expType=''/><item lexp='1/8' rexp='0.1' val='%3E' expType=''/><item lexp='1/8' rexp='1/9' val='%3E' expType='*'/><item lexp='1/8' rexp='0.125' val='%3D' expType=''/><item lexp='1/8' rexp='1/6' val='%3C' expType='*'/><item lexp='1/8' rexp='15%' val='%3C' expType=''/><item lexp='1/8' rexp='20%' val='%3C' expType=''/><item lexp='1/8' rexp='10%' val='%3E' expType=''/><item lexp='1/8' rexp='0.25' val='%3C' expType=''/><item lexp='13%' rexp='0.26' val='%3C' expType=''/><item lexp='1/5' rexp='0.1' val='%3E' expType=''/><item lexp='1/5' rexp='2/10' val='%3D' expType='****'/><item lexp='1/5' rexp='0.2' val='%3D' expType=''/><item lexp='1/5' rexp='0.20' val='%3D' expType=''/><item lexp='20%' rexp='0.2' val='%3D' expType=''/><item lexp='20%' rexp='0.15' val='%3E' expType=''/><item lexp='20%' rexp='0.7' val='%3C' expType=''/><item lexp='0.222' rexp='200%' val='%3C' expType=''/><item lexp='1/5' rexp='3/20' val='%3E' expType=''/><item lexp='1/5' rexp='0.3' val='%3C' expType=''/><item lexp='2/9' rexp='2/7' val='%3C' expType='*'/><item lexp='2/9' rexp='2/11' val='%3E' expType='*'/><item lexp='2/7' rexp='5/7' val='%3C' expType='**'/><item lexp='1/4' rexp='0.2' val='%3E' expType=''/><item lexp='1/4' rexp='0.25' val='%3D' expType=''/><item lexp='1/4' rexp='20%' val='%3E' expType=''/><item lexp='1/4' rexp='29%' val='%3C' expType=''/><item lexp='1/4' rexp='0.4' val='%3C' expType=''/><item lexp='25%' rexp='0.21' val='%3E' expType=''/><item lexp='25%' rexp='0.025' val='%3E' expType=''/><item lexp='25%' rexp='0.26' val='%3C' expType=''/><item lexp='2/7' rexp='1/7' val='%3E' expType='**'/><item lexp='2/7' rexp='5/7' val='%3C' expType='**'/><item lexp='2/7' rexp='6/21' val='%3D' expType='****'/><item lexp='3/10' rexp='0.03' val='%3E' expType=''/><item lexp='3/10' rexp='1/4' val='%3E' expType=''/><item lexp='3/10' rexp='0.3' val='%3D' expType=''/><item lexp='3/10' rexp='30%' val='%3D' expType=''/><item lexp='3/10' rexp='27%' val='%3E' expType=''/><item lexp='3/10' rexp='3%' val='%3E' expType=''/><item lexp='3/10' rexp='41%' val='%3C' expType=''/><item lexp='3/10' rexp='30/100' val='%3D' expType='****'/><item lexp='3/10' rexp='6/20' val='%3D' expType='****'/><item lexp='3/10' rexp='0.7' val='%3C' expType=''/><item lexp='1/3' rexp='0.3' val='%3E' expType=''/><item lexp='1/3' rexp='3%' val='%3E' expType=''/><item lexp='1/3' rexp='30%' val='%3E' expType=''/><item lexp='1/3' rexp='33%' val='%3E' expType=''/><item lexp='1/3' rexp='3/9' val='%3D' expType='****'/><item lexp='1/3' rexp='0.4' val='%3C' expType=''/><item lexp='1/3' rexp='35%' val='%3C' expType=''/><item lexp='1/3' rexp='70%' val='%3C' expType=''/><item lexp='35%' rexp='0.35' val='%3D' expType=''/><item lexp='35%' rexp='0.3' val='%3E' expType=''/><item lexp='37/100' rexp='0.4' val='%3C' expType=''/><item lexp='2/5' rexp='0.5' val='%3C' expType=''/><item lexp='2/5' rexp='0.4' val='%3D' expType=''/><item lexp='2/5' rexp='6/15' val='%3D' expType='****'/><item lexp='2/5' rexp='0.39' val='%3E' expType=''/><item lexp='2/5' rexp='1/4' val='%3E' expType=''/><item lexp='2/5' rexp='4/10' val='%3D' expType='****'/><item lexp='2/5' rexp='40%' val='%3D' expType=''/><item lexp='2/5' rexp='25%' val='%3E' expType=''/><item lexp='2/5' rexp='0.25' val='%3E' expType=''/><item lexp='9/20' rexp='0.18' val='%3E' expType=''/><item lexp='9/20' rexp='0.45' val='%3D' expType=''/><item lexp='9/20' rexp='1/2' val='%3C' expType=''/><item lexp='9/20' rexp='1' val='%3C' expType='x'/><item lexp='1/2' rexp='0.2' val='%3E' expType=''/><item lexp='1/2' rexp='0.5' val='%3D' expType=''/><item lexp='1/2' rexp='50%' val='%3D' expType=''/><item lexp='1/2' rexp='20%' val='%3E' expType=''/><item lexp='1/2' rexp='82%' val='%3C' expType=''/><item lexp='1/2' rexp='100%' val='%3C' expType=''/><item lexp='1/2' rexp='150%' val='%3C' expType=''/><item lexp='1/2' rexp='1' val='%3C' expType='x'/><item lexp='1/2' rexp='200%' val='%3C' expType=''/><item lexp='1/2' rexp='0.75' val='%3C' expType=''/><item lexp='50%' rexp='0.05' val='%3E' expType=''/><item lexp='50%' rexp='0.5' val='%3D' expType=''/><item lexp='50%' rexp='0.500' val='%3D' expType=''/><item lexp='50%' rexp='0.55' val='%3C' expType=''/><item lexp='55%' rexp='0.6' val='%3C' expType=''/><item lexp='55%' rexp='0.99' val='%3C' expType=''/><item lexp='57/100' rexp='2/3' val='%3C' expType=''/><item lexp='3/5' rexp='0.6' val='%3D' expType=''/><item lexp='3/5' rexp='60%' val='%3D' expType=''/><item lexp='3/5' rexp='6/10' val='%3D' expType='****'/><item lexp='3/5' rexp='35%' val='%3E' expType=''/><item lexp='3/5' rexp='53%' val='%3E' expType=''/><item lexp='3/5' rexp='80%' val='%3C' expType=''/><item lexp='3/5' rexp='4/8' val='%3E' expType=''/><item lexp='3/5' rexp='15/25' val='%3D' expType='****'/><item lexp='3/5' rexp='4/5' val='%3C' expType='**'/><item lexp='60%' rexp='0.66' val='%3C' expType=''/><item lexp='60%' rexp='0.6' val='%3D' expType=''/><item lexp='5/8' rexp='0.5' val='%3E' expType=''/><item lexp='5/8' rexp='0.6' val='%3E' expType=''/><item lexp='5/8' rexp='50%' val='%3E' expType=''/><item lexp='5/8' rexp='1/3' val='%3E' expType=''/><item lexp='5/8' rexp='0.625' val='%3D' expType=''/><item lexp='5/8' rexp='3/4' val='%3C' expType=''/><item lexp='5/8' rexp='0.85' val='%3C' expType=''/><item lexp='5/7' rexp='5/9' val='%3E' expType='*'/><item lexp='5/7' rexp='5/6' val='%3C' expType='*'/><item lexp='5/7' rexp='1' val='%3C' expType='x'/><item lexp='5/7' rexp='4/9' val='%3E' expType='***'/><item lexp='13/20' rexp='0.65' val='%3D' expType=''/><item lexp='2/3' rexp='0.7' val='%3C' expType=''/><item lexp='2/3' rexp='70%' val='%3C' expType=''/><item lexp='2/3' rexp='100%' val='%3C' expType=''/><item lexp='2/3' rexp='60%' val='%3E' expType=''/><item lexp='2/3' rexp='66%' val='%3E' expType=''/><item lexp='2/3' rexp='0.65' val='%3E' expType=''/><item lexp='2/3' rexp='0.66R' val='%3D' expType=''/><item lexp='2/3' rexp='44/66' val='%3D' expType='****'/><item lexp='2/3' rexp='1/2' val='%3E' expType=''/><item lexp='7/10' rexp='0.07' val='%3E' expType=''/><item lexp='7/10' rexp='0.7' val='%3D' expType=''/><item lexp='7/10' rexp='14/20' val='%3D' expType='****'/><item lexp='7/10' rexp='3/4' val='%3C' expType=''/><item lexp='7/10' rexp='1.07' val='%3C' expType=''/><item lexp='7/10' rexp='70%' val='%3D' expType=''/><item lexp='72%' rexp='0.72' val='%3D' expType=''/><item lexp='73%' rexp='0.8' val='%3C' expType=''/><item lexp='73%' rexp='0.444' val='%3E' expType=''/><item lexp='3/4' rexp='4/5' val='%3C' expType=''/><item lexp='3/4' rexp='0.995' val='%3C' expType=''/><item lexp='3/4' rexp='100%' val='%3C' expType=''/><item lexp='3/4' rexp='0.75' val='%3D' expType=''/><item lexp='3/4' rexp='75/100' val='%3D' expType='****'/><item lexp='3/4' rexp='0.34' val='%3E' expType=''/><item lexp='3/4' rexp='0.55' val='%3E' expType=''/><item lexp='3/4' rexp='75%' val='%3D' expType=''/><item lexp='3/4' rexp='90%' val='%3C' expType=''/><item lexp='3/4' rexp='60%' val='%3E' expType=''/><item lexp='77/100' rexp='0.7' val='%3E' expType=''/><item lexp='4/5' rexp='0.95' val='%3C' expType=''/><item lexp='4/5' rexp='0.8' val='%3D' expType=''/><item lexp='4/5' rexp='80%' val='%3D' expType=''/><item lexp='4/5' rexp='90%' val='%3C' expType=''/><item lexp='4/5' rexp='40%' val='%3E' expType=''/><item lexp='4/5' rexp='80/100' val='%3D' expType='****'/><item lexp='4/5' rexp='16/25' val='%3E' expType=''/><item lexp='4/5' rexp='2/3' val='%3E' expType=''/><item lexp='80%' rexp='0.8' val='%3D' expType=''/><item lexp='80%' rexp='0.08' val='%3E' expType=''/><item lexp='80%' rexp='0.999' val='%3C' expType=''/><item lexp='7/8' rexp='7/9' val='%3E' expType='*'/><item lexp='7/8' rexp='0.875' val='%3D' expType=''/><item lexp='7/8' rexp='0.995' val='%3C' expType=''/><item lexp='7/8' rexp='1' val='%3C' expType='x'/><item lexp='88%' rexp='1.1' val='%3C' expType=''/><item lexp='9/10' rexp='0.09' val='%3E' expType=''/><item lexp='9/10' rexp='0.9' val='%3D' expType=''/><item lexp='9/10' rexp='90%' val='%3D' expType=''/><item lexp='9/10' rexp='50%' val='%3E' expType=''/><item lexp='9/10' rexp='99%' val='%3C' expType=''/><item lexp='9/10' rexp='0.5' val='%3E' expType=''/><item lexp='9/10' rexp='11/10' val='%3C' expType='**'/><item lexp='90%' rexp='0.9' val='%3D' expType=''/><item lexp='90%' rexp='0.95' val='%3C' expType=''/><item lexp='90%' rexp='0.75' val='%3E' expType=''/><item lexp='90%' rexp='0.875' val='%3E' expType=''/><item lexp='49/50' rexp='1' val='%3C' expType='x'/><item lexp='49/50' rexp='0.49' val='%3E' expType=''/><item lexp='49/50' rexp='0.98' val='%3D' expType=''/><item lexp='99/100' rexp='0.777' val='%3E' expType=''/><item lexp='99/100' rexp='0.999' val='%3C' expType=''/><item lexp='1' rexp='100%' val='%3D' expType=''/><item lexp='9/9' rexp='1.00' val='%3D' expType='****'/><item lexp='7/7' rexp='1.0' val='%3D' expType='****'/><item lexp='1.1' rexp='100%' val='%3E' expType=''/><item lexp='8/7' rexp='1' val='%3E' expType='xx'/><item lexp='7/6' rexp='1' val='%3E' expType='xx'/><item lexp='6/5' rexp='1.2' val='%3D' expType=''/><item lexp='6/5' rexp='120%' val='%3D' expType=''/><item lexp='6/5' rexp='1.5' val='%3C' expType=''/><item lexp='5/4' rexp='1.25' val='%3D' expType=''/><item lexp='5/4' rexp='1' val='%3E' expType='xx'/><item lexp='5/4' rexp='1.5' val='%3C' expType=''/><item lexp='5/4' rexp='150%' val='%3C' expType=''/><item lexp='5/4' rexp='2' val='%3C' expType=''/><item lexp='4/3' rexp='1' val='%3E' expType='xx'/><item lexp='1.5' rexp='200%' val='%3C' expType=''/><item lexp='1.5' rexp='150%' val='%3D' expType=''/><item lexp='3/2' rexp='1.5' val='%3D' expType=''/><item lexp='3/2' rexp='2/2' val='%3E' expType=''/><item lexp='3/2' rexp='1.25' val='%3E' expType=''/><item lexp='3/2' rexp='175%' val='%3C' expType=''/><item lexp='3/2' rexp='2' val='%3C' expType=''/><item lexp='7/4' rexp='2' val='%3C' expType=''/><item lexp='7/4' rexp='1.75' val='%3D' expType=''/><item lexp='7/4' rexp='150%' val='%3E' expType=''/><item lexp='7/4' rexp='190%' val='%3C' expType=''/><item lexp='2.2' rexp='200%' val='%3E' expType=''/><item lexp='1/3' rexp='0.33R' val='%3D' expType=''/></data>";var topic_data_8="1 1/2,2 1/2,3 1/2,4 1/2,5 1/2,6 1/2,7 1/2,8 1/2,9 1/2,10 1/2,1 1/3,1 2/3,2 1/3,2 2/3,3 1/3,3 2/3,4 1/3,4 2/3,5 1/3,5 2/3,6 1/3,6 2/3,7 1/3,7 2/3,8 1/3,8 2/3,9 1/3,9 2/3,10 1/3,10 2/3,1 1/4,1 3/4,2 1/4,2 3/4,3 1/4,3 3/4,4 1/4,4 3/4,5 1/4,5 3/4,6 1/4,6 3/4,7 1/4,7 3/4,8 1/4,8 3/4,9 1/4,9 3/4,10 1/4,10 3/4,1 1/5,1 2/5,1 3/5,1 4/5,2 1/5,2 2/5,2 3/5,2 4/5,3 1/5,3 2/5,3 3/5,3 4/5,4 1/5,4 2/5,4 3/5,4 4/5,5 1/5,5 2/5,5 3/5,5 4/5,6 1/5,6 2/5,6 3/5,6 4/5,7 1/5,7 2/5,7 3/5,7 4/5,8 1/5,8 2/5,8 3/5,8 4/5,9 1/5,9 2/5,9 3/5,9 4/5,10 1/5,10 2/5,10 3/5,10 4/5,1 1/6,1 5/6,2 1/6,2 5/6,3 1/6,3 5/6,4 1/6,4 5/6,5 1/6,5 5/6,6 1/6,6 5/6,7 1/6,7 5/6,8 1/6,8 5/6,9 1/6,9 5/6,10 1/6,10 5/6,1 1/7,1 2/7,1 3/7,1 4/7,1 5/7,1 6/7,2 1/7,2 2/7,2 3/7,2 4/7,2 5/7,2 6/7,3 1/7,3 2/7,3 3/7,3 4/7,3 5/7,3 6/7,4 1/7,4 2/7,4 3/7,4 4/7,4 5/7,4 6/7,5 1/7,5 2/7,5 3/7,5 4/7,5 5/7,5 6/7,6 1/7,6 2/7,6 3/7,6 4/7,6 5/7,6 6/7,7 1/7,7 2/7,7 3/7,7 4/7,7 5/7,7 6/7,8 1/7,8 2/7,8 3/7,8 4/7,8 5/7,8 6/7,9 1/7,9 2/7,9 3/7,9 4/7,9 5/7,9 6/7,10 1/7,10 2/7,10 3/7,10 4/7,10 5/7,10 6/7,1 1/8,1 3/8,1 5/8,1 7/8,2 1/8,2 3/8,2 5/8,2 7/8,3 1/8,3 3/8,3 5/8,3 7/8,4 1/8,4 3/8,4 5/8,4 7/8,5 1/8,5 3/8,5 5/8,5 7/8,6 1/8,6 3/8,6 5/8,6 7/8,7 1/8,7 3/8,7 5/8,7 7/8,8 1/8,8 3/8,8 5/8,8 7/8,9 1/8,9 3/8,9 5/8,9 7/8,10 1/8,10 3/8,10 5/8,10 7/8,1 1/9,1 2/9,1 4/9,1 5/9,1 7/9,1 8/9,2 1/9,2 2/9,2 4/9,2 5/9,2 7/9,2 8/9,3 1/9,3 2/9,3 4/9,3 5/9,3 7/9,3 8/9,4 1/9,4 2/9,4 4/9,4 5/9,4 7/9,4 8/9,5 1/9,5 2/9,5 4/9,5 5/9,5 7/9,5 8/9,6 1/9,6 2/9,6 4/9,6 5/9,6 7/9,6 8/9,7 1/9,7 2/9,7 4/9,7 5/9,7 7/9,7 8/9,8 1/9,8 2/9,8 4/9,8 5/9,8 7/9,8 8/9,9 1/9,9 2/9,9 4/9,9 5/9,9 7/9,9 8/9,10 1/9,10 2/9,10 4/9,10 5/9,10 7/9,10 8/9,1 1/10,1 3/10,1 7/10,1 9/10,2 1/10,2 3/10,2 7/10,2 9/10,3 1/10,3 3/10,3 7/10,3 9/10,4 1/10,4 3/10,4 7/10,4 9/10,5 1/10,5 3/10,5 7/10,5 9/10,6 1/10,6 3/10,6 7/10,6 9/10,7 1/10,7 3/10,7 7/10,7 9/10,8 1/10,8 3/10,8 7/10,8 9/10,9 1/10,9 3/10,9 7/10,9 9/10,10 1/10,10 3/10,10 7/10,10 9/10";var topic_data_10="1/11|7/12, 7/9|7/12, 4/7|7/8, 1/12|2/9, 1/10|4/11, 1/10|3/8, 1/4|1/5, 6/7|8/11, 1/2|9/11, 3/10|7/8, 3/8|3/10, 1/11|5/8, 2/7|5/6, 4/5|4/9, 3/4|4/11, 1/5|6/7, 1/4|1/8, 1/6|5/11, 3/4|8/9, 7/9|8/11, 6/11|9/10, 1/5|8/9, 1/6|7/11, 2/9|3/4, 3/4|5/11, 1/8|4/5, 7/12|8/11, 5/9|7/9, 3/5|8/9, 1/2|5/6, 1/3|4/11, 2/11|7/9, 1/2|3/11, 1/3|5/8, 3/11|5/8, 1/3|7/12, 2/9|6/11, 3/4|3/8, 2/5|3/5, 2/11|5/12, 4/11|5/8, 1/2|1/12, 6/11|8/9, 1/5|6/11, 4/9|6/11, 1/10|2/9, 1/9|2/11, 2/3|7/8, 2/3|3/10, 1/10|8/11, 1/7|7/8, 5/7|5/9, 2/5|5/12, 2/9|4/5, 1/6|9/11, 8/9|9/10, 1/5|1/6, 1/12|3/5, 2/11|9/10, 1/8|2/9, 1/5|3/10, 2/9|4/11, 3/7|11/12, 4/7|8/9, 3/8|5/9, 3/4|3/5, 2/3|11/12, 6/7|11/12, 3/5|3/11, 1/4|3/5, 2/3|4/11, 2/5|6/7, 1/9|9/10, 1/6|1/7, 1/10|5/8, 1/5|2/3, 1/2|8/11, 1/5|5/12, 1/4|3/4, 1/4|7/10, 5/7|8/11, 1/10|1/11, 6/11|7/12, 1/12|4/5, 5/8|9/10, 1/11|6/7, 5/9|9/10, 1/9|1/12, 5/9|7/10, 1/6|1/10, 1/12|7/12, 1/12|2/5, 1/10|7/8, 3/7|3/11, 2/9|3/11, 1/2|4/7, 1/5|3/4, 2/9|8/9, 3/11|9/10, 7/10|9/10, 1/7|1/8, 1/3|3/5, 7/11|8/9, 1/2|7/11, 5/9|7/12, 3/4|3/10, 1/6|7/10, 6/7|8/9, 1/4|3/10, 1/3|2/5, 5/7|7/10, 3/4|7/12, 1/2|2/7, 2/9|4/9, 5/12|11/12, 1/6|1/8, 1/11|2/5, 3/4|9/11, 5/6|5/12, 3/4|11/12, 1/8|5/11, 2/3|2/11, 3/10|4/5, 1/10|3/7, 1/12|9/11, 3/5|7/10, 1/5|7/9, 1/4|7/11, 7/9|9/10, 5/12|7/9, 1/8|7/12, 1/7|1/11, 2/7|3/5, 3/11|4/11, 1/11|4/11, 1/5|4/9, 1/5|3/7, 3/10|9/10, 1/6|3/4, 1/7|5/8, 1/11|5/7, 2/11|4/5, 2/11|3/11, 8/11|9/10, 1/11|1/12, 6/7|9/10, 2/11|7/12, 3/5|3/7, 5/12|7/12, 1/6|3/5, 1/10|11/12, 4/11|7/11, 2/5|3/4, 1/9|5/7, 3/11|4/7, 1/8|11/12, 1/12|5/6, 1/8|6/7, 1/9|5/12, 4/11|6/11, 2/7|5/7, 2/11|8/9, 5/7|5/12, 1/6|5/7, 1/12|3/8, 1/11|5/11, 1/12|8/11, 5/8|7/10, 5/6|8/11, 3/4|5/8, 2/7|5/8, 1/5|2/9, 1/2|1/11, 3/7|7/8, 3/5|3/10, 1/3|7/11, 1/6|5/8, 2/9|3/8, 3/8|4/11, 1/9|2/3, 3/11|5/7, 1/4|8/9, 4/9|7/9, 3/11|8/9, 3/11|5/12, 3/7|5/12, 1/11|7/11, 2/3|4/5, 1/11|9/10, 8/11|9/11, 2/11|5/11, 2/3|2/7, 1/3|8/9, 4/5|9/10, 4/7|5/11, 1/12|11/12, 2/3|7/10, 4/11|5/6, 1/11|2/7, 1/4|2/7, 5/8|6/7, 1/11|8/9, 1/8|9/11, 1/4|4/9, 4/7|5/8, 2/7|2/9, 3/8|4/9, 1/4|1/6, 2/9|3/10, 8/9|11/12, 1/2|7/8, 2/9|5/12, 3/4|8/11, 4/7|6/11, 1/12|4/9, 1/11|7/10, 5/8|7/9, 5/7|6/11, 1/7|5/11, 1/5|1/12, 1/7|2/5, 4/9|7/8, 1/10|9/10, 1/11|5/9, 8/9|9/11, 3/11|6/7, 1/5|1/10, 3/8|4/5, 2/7|6/7, 1/12|7/8, 2/5|3/10, 4/5|7/11, 3/4|7/8, 2/5|5/8, 1/5|9/10, 9/10|11/12, 4/5|7/9, 4/11|7/10, 3/7|4/11, 4/7|5/7, 1/5|1/11, 1/12|5/12, 5/6|7/10, 1/9|5/6, 1/8|3/11, 1/7|4/9, 3/5|9/11, 2/3|7/9, 1/11|5/6, 1/9|3/8, 1/8|4/9, 1/3|5/7, 1/5|1/7, 1/2|1/7, 7/12|8/9, 5/9|8/9, 5/8|7/12, 3/11|4/9, 1/2|1/5, 2/3|5/8, 3/5|6/11, 4/9|5/8, 2/5|2/11, 5/8|6/11, 1/2|1/10, 3/4|6/11, 1/5|2/5, 3/8|3/11, 3/4|5/9, 3/11|6/11, 5/8|9/11, 3/10|8/11, 2/9|7/10, 1/11|2/11, 1/2|3/8, 2/9|7/9, 2/5|11/12, 4/5|5/7, 2/3|9/11, 1/12|6/11, 3/5|3/8, 2/3|9/10, 1/2|4/9, 1/3|3/10, 3/5|4/7, 1/2|7/9, 3/10|7/10, 3/7|4/7, 1/11|4/7, 2/11|3/8, 2/11|3/5, 1/3|9/10, 3/7|9/11, 1/12|5/9, 4/9|8/9, 5/8|5/9, 3/11|7/8, 3/8|9/11, 1/7|5/9, 1/7|3/10, 1/7|9/11, 1/6|9/10, 3/11|7/9, 5/11|9/10, 3/5|7/9, 3/4|5/6, 2/3|3/5, 2/11|4/11, 1/8|3/8, 1/6|2/3, 1/8|4/7, 1/10|2/11, 4/9|4/11, 1/7|3/8, 2/5|5/11, 4/11|8/11, 1/5|7/8, 3/7|7/12, 2/7|4/5, 1/2|2/11, 3/7|5/9, 1/9|5/9, 1/3|1/4, 1/4|2/3, 2/5|7/12, 7/8|9/10, 3/7|7/11, 1/9|9/11, 1/3|7/10, 1/7|11/12, 1/8|6/11, 2/5|4/5, 5/7|8/9, 1/9|2/9, 1/10|2/7, 1/5|3/5, 3/10|11/12, 5/11|7/11, 3/8|8/9, 5/11|7/10, 5/7|7/12, 1/5|9/11, 1/7|7/10, 5/12|8/9, 5/11|5/12, 1/7|6/11, 7/10|7/11, 2/3|2/9, 2/11|11/12, 5/7|9/11, 4/5|9/11, 4/7|8/11, 1/3|3/7, 1/6|7/12, 1/5|7/11, 1/5|2/11, 1/2|8/9, 6/11|11/12, 5/6|9/10, 1/10|3/5, 2/7|5/9, 1/7|7/11, 4/7|5/12, 1/4|4/5, 5/6|5/11, 3/8|8/11, 1/2|4/5, 4/9|7/11, 3/10|7/12, 2/3|3/4, 1/12|7/10, 1/10|1/12, 1/7|3/11, 5/9|7/8, 3/10|6/7, 4/7|7/12, 1/3|8/11, 1/8|7/8, 3/5|5/11, 1/3|5/11, 6/7|7/10, 1/8|3/10, 1/6|5/12, 1/12|3/11, 1/2|4/11, 3/4|3/11, 1/6|2/11, 4/11|11/12, 2/5|4/7, 2/5|3/7, 3/5|5/7, 5/9|6/11, 3/5|7/8, 3/10|7/11, 2/7|3/8, 4/7|7/10, 1/12|3/7, 5/6|5/8, 1/9|7/12, 1/4|1/9, 5/9|11/12, 7/11|11/12, 5/6|8/9, 1/7|4/11, 5/8|8/9, 1/2|3/4, 1/3|7/9, 7/10|7/12, 1/3|2/3, 2/7|8/9, 5/12|6/7, 3/10|6/11, 3/10|5/12, 1/4|9/10, 3/11|5/9, 7/8|7/9, 7/8|9/11, 5/12|9/11, 3/7|7/10, 3/5|9/10, 1/6|4/11, 1/6|2/7, 4/9|9/11, 3/5|4/11, 1/7|2/7, 2/11|8/11, 1/3|2/7, 1/4|2/9, 2/3|2/5, 1/11|4/5, 1/6|8/11, 1/5|4/11, 2/7|7/8, 3/4|7/11, 2/7|2/11, 1/11|6/11, 1/4|2/5, 7/8|8/9, 1/10|5/6, 3/8|7/9, 5/6|7/8, 2/7|3/11, 5/11|11/12, 2/11|5/9, 1/7|5/12, 1/8|4/11, 4/9|7/10, 2/5|5/6, 4/11|9/10, 1/12|4/7, 1/8|7/11, 2/5|8/11, 4/11|9/11, 7/10|8/9, 1/10|2/5, 3/11|7/12, 6/11|7/10, 2/7|7/10, 1/5|7/12, 1/7|8/11, 1/11|9/11, 5/6|11/12, 1/8|1/10, 1/5|5/11, 3/8|7/11, 1/10|5/9, 7/11|8/11, 2/5|5/9, 1/7|4/7, 1/3|5/9, 4/5|5/9, 1/5|1/8, 2/5|9/10, 2/11|6/7, 4/11|5/12, 1/4|4/7, 5/6|5/9, 2/3|3/11, 1/6|1/11, 7/9|11/12, 1/7|2/3, 1/5|4/7, 1/7|1/10, 1/10|3/10, 7/11|7/12, 1/8|3/5, 3/11|11/12, 1/4|5/6, 1/3|4/5, 2/11|3/7, 3/7|3/8, 2/7|9/11, 2/7|4/9, 2/9|2/11, 4/5|6/7, 1/3|3/4, 1/2|6/7, 1/2|2/5, 1/3|1/12, 1/10|7/11, 2/9|4/7, 1/7|1/9, 1/7|8/9, 1/2|1/8, 7/9|7/10, 3/7|5/8, 7/9|7/11, 7/9|8/9, 1/9|8/11, 1/11|3/4, 2/11|7/8, 6/11|8/11, 2/11|5/6, 5/11|6/7, 5/9|7/11, 2/5|7/10, 1/9|4/9, 1/4|1/11, 1/3|3/11, 1/4|9/11, 6/7|7/11, 1/6|4/7, 1/4|6/7, 1/10|5/11, 3/7|9/10, 1/6|7/8, 1/4|7/8, 3/10|3/11, 1/4|5/7, 1/11|3/5, 4/9|5/11, 1/12|4/11, 2/3|5/12, 1/7|3/5, 1/2|1/9, 1/11|8/11, 2/7|3/7, 7/12|11/12, 1/8|5/12, 2/11|3/4, 1/5|1/9, 1/3|3/8, 1/3|1/10, 1/2|7/10, 1/12|2/11, 5/12|7/10, 7/10|9/11, 1/2|5/9, 3/10|9/11, 7/11|9/10, 2/11|3/10, 5/7|7/11, 3/7|4/5, 4/7|9/10, 2/3|7/12, 6/7|7/9, 1/9|7/11, 1/3|6/11, 1/6|3/10, 1/7|9/10, 1/9|3/10, 5/6|9/11, 1/4|5/11, 1/12|5/11, 3/8|6/7, 4/5|8/9, 1/3|1/11, 4/7|5/6, 2/9|5/11, 4/9|5/6, 1/2|2/3, 1/3|6/7, 1/7|2/11, 2/11|5/8, 1/10|7/12, 4/5|4/7, 3/11|4/5, 2/9|7/8, 5/12|7/11, 1/3|7/8, 1/4|1/12, 1/9|7/10, 5/6|6/11, 3/4|4/9, 3/4|5/12, 3/8|6/11, 4/7|7/9, 2/9|9/10, 1/3|1/8, 3/5|11/12, 5/8|5/11, 3/11|9/11, 1/9|4/7, 3/10|7/9, 1/9|8/9, 5/12|9/10, 1/12|7/9, 4/11|8/9, 2/9|3/7, 4/11|5/7, 1/3|1/7, 1/11|4/9, 1/12|5/7, 2/5|4/9, 3/8|9/10, 1/9|11/12, 1/3|2/11, 3/8|4/7, 1/10|8/9, 2/7|11/12, 4/9|9/10, 5/6|6/7, 2/7|8/11, 3/10|5/7, 1/5|5/9, 3/11|7/11, 1/5|7/10, 7/8|7/12, 1/9|3/11, 6/11|9/11, 1/9|7/8, 1/10|5/12, 4/7|7/11, 1/8|2/3, 2/5|3/11, 1/8|2/5, 1/5|3/8, 2/9|11/12, 1/4|7/9, 4/5|6/11, 1/4|8/11, 4/9|5/9, 6/7|6/11, 3/5|4/5, 3/8|7/12, 2/9|3/5, 4/7|9/11, 8/11|11/12, 2/11|4/7, 1/6|7/9, 1/5|3/11, 1/8|2/11, 5/11|7/9, 2/11|7/10, 3/4|9/10, 4/5|5/6, 2/11|7/11, 4/11|7/8, 1/8|1/12, 1/10|4/5, 6/11|7/11, 3/5|7/12, 1/8|1/9, 5/8|11/12, 4/11|5/11, 2/3|8/11, 2/5|4/11, 1/7|6/7, 3/11|8/11, 1/3|5/12, 3/7|5/7, 5/11|7/12, 1/4|5/9, 1/12|3/4, 1/11|2/9, 5/6|5/7, 1/8|5/9, 1/10|4/7, 3/8|5/6, 1/3|9/11, 3/5|4/9, 4/9|5/7, 1/9|2/7, 1/8|5/7, 1/8|7/9, 1/11|2/3, 1/12|3/10, 2/9|5/8, 1/11|3/7, 3/10|8/9, 3/4|3/7, 2/7|4/7, 3/5|5/12, 1/2|5/7, 2/3|6/7, 1/9|3/7, 1/12|2/7, 4/5|8/11, 3/4|4/7, 1/3|4/9, 1/11|3/10, 1/12|8/9, 1/4|11/12, 1/2|3/10, 1/3|5/6, 1/7|1/12, 3/10|4/11, 2/7|7/11, 1/8|5/8, 2/5|7/8, 3/10|4/9, 1/11|11/12, 7/10|11/12, 5/7|5/8, 1/4|1/10, 2/9|6/7, 1/9|7/9, 1/9|6/11, 3/5|5/6, 1/2|5/11, 4/7|4/9, 3/11|7/10, 1/10|3/11, 2/7|6/11, 2/3|7/11, 3/10|5/11, 3/8|5/12, 1/4|3/7, 6/11|7/9, 5/12|8/11, 7/12|9/11, 1/7|2/9, 1/3|11/12, 1/9|3/4, 3/8|5/11, 1/7|3/7, 2/5|7/11, 5/8|8/11, 5/7|7/9, 2/7|7/12, 1/2|1/4, 2/11|4/9, 3/5|5/8, 2/3|3/8, 1/7|4/5, 1/11|3/8, 1/2|1/6, 5/9|5/12, 2/7|7/9, 1/10|3/4, 1/6|3/11, 3/7|6/7, 1/6|6/11, 5/6|7/9, 2/5|5/7, 3/4|4/5, 1/8|8/9, 4/7|5/9, 1/2|5/8, 3/5|8/11, 3/7|8/9, 1/7|3/4, 1/7|5/7, 1/11|3/11, 3/7|6/11, 1/3|4/7, 7/11|9/11, 2/3|4/7, 3/4|6/7, 9/10|9/11, 2/3|3/7, 1/6|6/7, 1/8|3/4, 4/9|5/12, 3/10|4/7, 2/7|3/10, 1/8|9/10, 7/8|7/11, 6/7|9/11, 2/9|8/11, 2/7|3/4, 5/12|6/11, 1/8|2/7, 5/11|6/11, 5/12|7/8, 2/3|8/9, 1/4|5/8, 1/7|7/9, 1/10|9/11, 1/6|4/9, 6/11|7/8, 5/11|9/11, 1/10|7/10, 3/7|4/9, 1/2|9/10, 5/6|7/11, 1/5|5/7, 4/11|7/12, 4/5|5/11, 5/7|5/11, 1/9|4/5, 1/3|1/9, 1/10|6/11, 4/5|7/8, 4/5|5/12, 2/11|9/11, 3/8|5/8, 5/9|5/11, 1/9|3/5, 3/5|7/11, 2/7|5/12, 3/5|6/7, 1/2|2/9, 1/10|5/7, 1/8|1/11, 5/7|11/12, 2/5|7/9, 5/6|7/12, 4/7|6/7, 4/5|11/12, 1/4|7/12, 3/7|7/9, 3/5|5/9, 1/4|5/12, 1/5|5/6, 1/4|3/8, 5/11|7/8, 1/6|2/5, 2/7|4/11, 3/7|8/11, 1/2|3/5, 1/4|6/11, 1/6|4/5, 1/6|11/12, 2/5|3/8, 4/11|7/9, 1/12|6/7, 2/9|5/9, 1/6|5/9, 1/11|7/8, 1/12|7/11, 1/9|1/10, 1/6|3/8, 5/7|6/7, 5/11|8/11, 1/6|1/9, 1/10|4/9, 1/10|2/3, 3/10|5/8, 1/9|6/7, 5/11|8/9, 2/9|5/7, 2/5|6/11, 2/11|6/11, 3/7|5/11, 5/9|9/11, 1/11|5/12, 5/7|9/10, 1/2|3/7, 9/11|11/12, 1/10|7/9, 4/9|11/12, 2/5|9/11, 1/12|5/8, 5/9|6/7, 2/9|7/11, 1/2|5/12, 4/5|5/8, 1/9|5/11, 3/7|3/10, 2/9|7/12, 1/5|2/7, 1/9|1/11, 4/5|7/12, 3/8|7/10, 1/2|6/11, 3/11|5/6, 6/7|7/12, 7/8|11/12, 1/2|11/12, 4/9|8/11, 4/9|6/7, 2/3|5/9, 2/3|5/7, 7/9|9/11, 1/7|7/12, 1/6|3/7, 1/12|2/3, 1/8|5/6, 7/8|8/11, 4/5|4/11, 1/3|1/5, 6/7|7/8, 3/4|7/9, 4/7|4/11, 1/12|9/10, 3/4|5/7, 3/8|7/8, 1/4|3/11, 1/4|2/11, 5/8|5/12, 2/3|6/11, 1/3|1/6, 1/6|2/9, 1/9|5/8, 1/5|11/12, 7/12|9/10, 1/8|7/10, 1/4|4/11, 2/7|9/10, 2/5|8/9, 2/9|9/11, 1/8|8/11, 3/10|5/9, 1/5|8/11, 5/8|7/11, 2/11|5/7, 4/7|11/12, 4/5|7/10, 1/7|5/6, 2/5|2/9, 1/3|2/9, 3/11|5/11, 1/9|4/11, 1/6|5/6, 4/11|6/7, 2/7|5/11, 1/8|3/7, 2/5|2/7, 3/7|5/6, 1/2|1/3, 2/3|5/11, 4/11|5/9, 1/6|1/12, 2/3|4/9, 1/4|1/7, 7/10|8/11, 3/10|5/6, 1/10|6/7, 2/9|5/6, 3/4|7/10, 1/2|7/12, 7/8|7/10, 3/8|5/7, 8/9|8/11, 1/11|7/9, 5/7|7/8, 2/3|5/6, 1/6|8/9, 1/9|2/5, 1/5|5/8, 1/5|4/5, 5/9|8/11, 4/9|7/12, 3/8|11/12, 5/8|7/8:3/5|11/2,1/2|7/3,2/5|11/2,1/2|6/5,1/2|5/4,3/4|11/2,2/3|7/3,1/6|9/2,3/4|7/2,1/2|9/5,3/5|3/2,2/3|5/3,1/2|9/4,2/3|11/2,1/6|11/2,2/3|11/4,4/5|11/2,1/5|3/2,2/5|5/2,3/5|7/2,1/2|11/3,1/3|8/3,1/4|4/3,2/3|8/3,1/6|3/2,2/3|7/2,1/3|4/3,1/4|3/2,1/3|11/4,2/3|3/2,1/2|5/2,1/3|5/4,1/4|9/2,5/6|3/2,2/3|11/3,1/2|5/3,1/2|7/5,1/4|8/3,1/3|11/2,3/4|3/2,1/3|3/2,2/3|7/4,1/5|7/2,3/4|9/2,1/2|7/4,2/5|3/2,1/2|8/3,1/2|12/5,1/2|11/6,4/5|7/2,2/3|9/2,1/5|11/2,1/2|8/5,4/5|3/2,1/2|3/2,2/5|7/2,3/4|4/3,1/4|11/2,1/3|7/3,1/2|7/6,5/6|9/2,3/4|11/3,1/2|11/5,1/3|11/3,1/2|4/3,2/3|9/4,3/5|5/2,5/6|5/2,1/3|7/4,3/4|7/3,3/4|5/3,1/3|9/2,1/4|5/2,1/4|5/3,4/5|5/2,1/2|11/2,1/2|9/2,1/6|5/2,2/5|9/2,1/3|5/3,1/4|11/3,3/5|9/2,1/3|9/4,1/4|7/2,1/2|7/2,2/3|5/2,2/3|5/4,3/4|8/3,3/4|5/2,1/5|9/2,5/6|11/2,2/3|4/3,1/3|5/2,1/2|11/4,1/6|7/2,4/5|9/2,5/6|7/2,1/3|7/2,1/4|7/3,1/5|5/2:5|7/10,5|1/6,1|8/9,3|9/10,6|2/9,5|3/5,5|1/4,3|9/11,7|3/11,9|3/8,1|2/9,7|1/9,11|3/5,8|5/9,1|5/6,2|8/11,9|5/9,4|5/6,1|2/11,2|2/9,1|5/7,7|8/9,11|5/12,3|7/12,8|2/3,1|7/11,5|1/5,10|9/10,2|3/8,2|1/6,6|1/7,9|1/3,8|1/12,8|6/11,3|7/11,4|1/7,4|7/12,7|6/11,4|1/2,5|7/11,3|3/5,3|2/11,12|5/12,4|8/9,11|8/11,8|1/10,1|7/8,12|3/4,8|6/7,2|2/3,4|5/12,6|4/9,7|5/8,8|5/11,6|7/11,6|1/8,4|1/8,9|3/11,8|1/11,6|1/5,9|5/11,6|1/4,10|5/6,2|3/5,8|1/8,7|3/8,5|1/8,6|6/7,9|1/5,7|1/6,5|5/11,2|4/5,2|5/6,11|7/9,12|7/10,2|7/11,6|3/10,4|1/12,8|3/5,6|2/5,9|4/5,6|1/11,12|4/11,9|11/12,4|1/11,12|5/9,2|1/10,7|4/7,4|5/7,12|2/9,5|1/10,2|3/4,9|2/5,3|1/5,4|2/5,5|2/11,5|5/8,8|3/8,11|9/10,12|1/12,4|5/9,8|2/5,9|6/11,6|7/12,1|7/10,11|8/9,10|1/6,11|7/8,5|1/9,7|3/5,12|8/11,4|4/11,1|1/4,10|2/9,1|1/8,1|3/7,11|5/9,10|1/11,3|4/5,1|3/4,7|4/9,12|5/8,6|5/8,3|1/12,9|5/8,4|9/11,7|1/11,11|5/6,7|9/11,10|8/11,9|1/9,5|6/7,1|2/7,9|8/9,3|2/7,6|5/9,10|7/10,11|1/6,2|5/12,8|5/7,12|2/3,7|1/10,12|1/4,12|5/7,11|7/11,2|9/10,3|1/4,8|3/10,5|3/11,2|8/9,9|1/7,10|2/3,8|2/7,9|1/4,12|1/9,3|2/5,3|3/4,7|11/12,12|1/11,8|8/9,12|1/3,2|2/11,1|7/12,3|1/9,6|8/9,9|2/9,9|5/12,8|4/7,5|4/7,3|5/8,12|6/7,1|5/11,11|3/7,8|3/11,11|1/7,8|4/5,3|4/11,11|1/10,2|4/11,5|3/10,10|1/5,5|9/10,4|1/4,9|8/11,1|6/7,4|9/10,2|3/11,7|7/12,2|1/2,6|1/9,8|1/3,1|8/11,8|5/8,10|8/9,6|3/7,6|9/10,12|3/10,8|11/12,12|5/6,11|2/7,9|3/7,3|7/10,1|1/9,8|1/2,12|1/7,6|3/8,9|3/4,4|7/9,7|1/3,1|5/9,11|1/5,5|8/9,12|4/7,5|8/11,6|5/11,6|11/12,1|11/12,3|4/7,1|1/11,6|7/9,4|6/7,7|2/5,11|5/7,6|1/6,7|4/5,7|6/7,10|4/7,5|3/7,3|1/2,8|7/8,11|4/9,1|1/7,10|3/5,10|1/9,4|3/11,9|1/11,10|2/7,11|11/12,7|1/4,5|1/11,2|11/12,12|2/5,2|6/11,1|2/5,7|5/12,7|1/2,7|1/7,11|7/10,5|4/9,11|1/8,3|1/6,10|1/7,11|3/8,3|1/7,4|2/3,10|6/11,3|1/10,10|1/4,11|2/11,12|4/5,6|1/3,5|1/2,7|2/11,3|3/10,4|4/5,9|3/5,12|9/10,1|3/10,3|2/3,1|4/7,11|1/3,3|6/7,12|1/5,2|1/9,3|5/7,8|7/10,7|4/11,12|4/9,4|1/9,8|1/4,3|1/11,5|4/5,1|5/8,10|6/7,10|7/8,9|1/6,9|2/3,10|5/7,1|1/3,11|4/7,11|1/12,2|1/7,11|3/11,4|3/4,9|3/10,8|3/7,7|5/11,5|2/9,4|1/6,4|5/8,9|1/10,3|5/12,12|11/12,11|4/5,1|9/11,5|5/6,9|1/2,10|5/11,7|3/7,11|5/8,7|1/5,5|1/7,2|1/5,3|1/3,9|7/10,2|5/9,12|3/7,5|2/7,12|8/9,3|1/8,2|6/7,10|3/4,10|7/11,9|5/7,3|11/12,9|2/11,5|6/11,6|3/5,7|7/10,11|6/7,12|7/8,9|6/7,6|4/5,2|1/11,4|11/12,9|7/9,10|1/3,10|9/11,2|4/7,6|5/6,7|1/8,10|5/12,9|4/11,1|4/11,6|1/12,12|7/9,7|3/10,10|1/12,8|2/11,7|3/4,11|2/9,6|3/11,2|3/7,5|7/12,2|5/8,3|4/9,2|7/12,10|3/10,9|1/12,1|1/5,8|4/9,3|7/8,8|4/11,8|2/9,8|5/12,8|9/11,8|5/6,1|9/10,11|6/11,12|1/8,7|2/3,2|1/8,4|4/9,7|5/9,4|1/10,8|7/12,9|7/8,8|1/6,1|1/6,12|3/5,3|7/9,2|1/12,11|2/3,6|4/7,6|4/11,8|1/9,10|3/8,12|7/12,11|7/12,6|9/11,12|1/6,1|3/5,10|1/8,1|3/11,9|9/11,7|7/8,4|5/11,1|1/10,2|7/10,2|7/9,3|8/9,1|5/12,1|2/3,10|1/2,8|3/4,5|3/4,12|5/11,9|5/6,12|2/7,8|7/9,4|7/11,4|7/10,10|3/11,3|5/9,11|9/11,8|1/7,11|1/4,12|6/11,11|2/5,5|5/9,2|1/4,7|5/6,6|3/4,8|7/11,6|5/7,4|2/9,10|5/8,2|5/7,2|7/8,2|9/11,9|4/7,4|3/5,10|11/12,10|4/5,3|5/11,7|7/11,5|2/5,5|1/12,3|6/11,9|7/12,11|4/11,1|3/8,6|6/11,5|9/11,10|2/11,4|3/7,3|3/11,4|3/8,11|3/4,1|4/5,12|3/11,4|6/11,4|2/7,12|2/11,9|1/8,9|4/9,6|5/12,3|3/8,2|2/7,7|9/10,1|1/12,5|2/3,2|1/3,5|11/12,10|4/11,9|9/10,2|4/9,7|7/9,1|1/2,5|3/8,7|8/11,3|8/11,12|1/10,2|5/11,9|2/7,10|1/10,10|2/5,11|5/11,5|1/3,7|2/9,1|7/9,6|7/8,3|5/6,5|4/11,3|3/7,4|1/3,4|2/11,3|2/9,11|1/2,7|5/7,4|3/10,10|5/9,6|1/10,4|4/7,4|8/11,5|5/12,2|3/10,9|7/11,5|7/8,6|2/7,4|1/5,5|7/9,8|9/10,6|1/2,2|2/5,12|7/11,7|2/7,1|4/9,10|4/9,12|9/11,6|2/11,8|1/5,11|3/10,11|1/11,7|1/12,10|7/9,12|3/8,6|8/11,6|7/10,4|7/8,6|2/3,12|1/2,1|6/11,10|7/12,5|5/7,8|8/11,11|1/9,10|3/7:11/2|11/6,5/2|9/2,8/3|11/3,7/2|4/3,11/3|5/4,9/2|7/6,4/3|5/4,11/3|9/4,3/2|11/2,5/2|11/3,8/3|7/4,5/2|11/5,11/2|8/5,11/2|5/4,11/3|7/4,11/2|6/5,7/2|11/5,3/2|6/5,9/2|7/5,3/2|4/3,5/3|7/4,3/2|11/4,3/2|9/2,3/2|7/2,3/2|9/4,7/2|7/5,5/2|7/3,11/3|11/4,7/2|5/3,5/3|9/4,9/2|11/5,7/2|7/4,7/2|8/5,9/2|7/4,9/2|11/6,5/2|8/3,5/2|11/6,7/2|7/6,9/2|4/3,5/2|5/4,7/3|11/3,5/2|4/3,5/3|11/3,8/3|9/4,4/3|9/4,7/2|11/4,9/2|9/4,11/2|7/4,5/3|11/4,3/2|11/6,3/2|9/5,7/3|7/4,5/2|11/4,7/2|11/6,9/2|9/5,4/3|7/4,7/3|9/4,3/2|11/3,3/2|8/5,3/2|5/3,7/3|11/4,9/2|8/5,11/2|7/6,5/2|7/5,3/2|5/4,9/2|5/3,5/2|7/4,7/3|5/4,5/2|5/3,4/3|7/3,9/2|8/3,5/3|7/3,5/3|8/3,7/2|8/3,11/2|4/3,11/2|5/3,7/2|6/5,3/2|7/6,3/2|7/4,3/2|12/5,5/2|8/5,7/2|5/4,4/3|11/3,5/3|5/4,7/2|9/5,3/2|7/5,5/2|9/5,5/2|12/5,7/2|7/3,8/3|11/4,11/2|9/5,3/2|11/5,9/2|7/3,3/2|7/3,7/2|12/5,8/3|5/4,4/3|8/3,5/2|6/5,11/2|7/5,9/2|5/4,9/2|6/5,4/3|5/3,9/2|12/5,5/2|7/2,5/2|7/6,3/2|5/2,5/2|9/4,7/2|9/4,4/3|11/4,3/2|8/3,7/3|8/3:6|8/5,6|11/9,7|11/7,1|11/10,1|7/6,2|8/3,2|11/2,5|11/10,2|11/6,3|11/5,1|5/4,5|3/2,1|12/11,5|8/7,1|7/4,4|12/11,2|7/6,3|8/5,5|5/4,1|9/8,6|7/5,1|8/3,8|5/4,6|5/4,6|11/7,3|11/3,7|9/7,3|4/3,2|3/2,3|8/3,4|11/6,2|12/11,6|11/10,4|5/4,5|9/7,2|9/2,2|12/5,8|11/8,8|9/7,10|6/5,10|11/10,4|11/8,1|11/2,7|8/5,1|9/7,6|11/8,3|12/11,3|3/2,8|3/2,4|12/7,3|11/4,10|12/11,3|5/3,5|11/6,2|7/3,8|4/3,3|7/4,5|7/5,2|11/4,7|5/4,3|12/5,3|8/7,4|7/5,4|9/4,5|11/9,4|11/10,2|5/3,1|5/2,5|12/5,6|7/4,8|8/7,4|8/7,4|7/6,2|9/4,5|7/4,1|7/3,1|11/7,4|5/2,5|9/4,2|11/10,5|7/3,4|5/3,10|7/6,3|9/8,9|11/10,5|6/5,4|7/3,5|11/5,7|5/3,9|9/8,8|11/10,4|11/9,9|12/11,9|5/4,6|12/7,5|7/6,3|5/4,4|9/7,1|11/4,6|4/3,4|11/7,3|12/7,9|11/9,4|7/4,1|7/5,1|3/2,7|11/8,9|4/3,2|7/2,1|11/5,4|3/2,2|11/5,1|11/8,3|5/2,1|6/5,7|12/11,4|9/8,6|9/7,3|11/9,2|11/3,7|8/7,2|9/7,5|11/7,4|11/5,2|5/4,1|5/3,10|9/8,7|6/5,5|9/5,1|12/5,5|12/11,1|11/3,4|6/5,2|12/7,6|9/5,3|11/7,5|8/5,2|8/5,6|6/5,4|12/5,5|5/3,3|11/8,6|7/6,1|11/9,1|9/2,7|11/10,7|7/5,1|8/5,7|7/6,4|8/3,3|11/6,3|6/5,1|11/6,6|8/7,7|12/7,2|11/8,8|11/9,6|9/8,3|11/10,10|8/7,1|9/5,8|7/6,2|11/7,3|7/3,1|7/2,9|8/7,3|7/5,2|5/2,2|6/5,3|7/6,7|9/8,8|12/11,2|11/9,3|9/5,4|9/5,4|11/4,2|8/7,7|4/3,1|4/3,5|12/7,2|7/4,6|12/11,5|4/3,3|9/7,9|7/6,8|6/5,7|3/2,9|9/7,2|9/8,3|9/4,4|8/5,8|9/8,1|8/7,7|11/9,11|12/11,1|12/7,5|11/8,3|7/2,2|9/5,6|3/2,1|9/4,2|7/5,6|5/3,4|4/3,8|7/5,9|6/5,5|9/8,6|11/6,2|4/3";var topic_data_18="1/2,1/3,1/4,1/5,1/6,1/7,1/8,1/9,1/10,2/3,1/4,3/4,1/5,2/5,3/5,4/5,1/6,5/6,1/7,3/7,5/7,1/8,3/8,5/8,7/8,1/9,2/9,4/9,5/9,7/9,8/9,1/10,3/10,7/10,9/10,1/20,3/20,1/25,1/40,1/50,1/100:2/1,3/1,4/1,5/1,6/1,7/1,8/1,9/1,10/1,20/1,25/1,40/1,50/1,100/1,3/2,5/2,7/2,9/2,11/2,4/3,5/3,7/3,8/3,5/4,7/4,9/4,11/4,6/5,9/5,12/5,9/8,11/8";var topic_data_22='<data><item><question><![CDATA[The number of minutes it takes me to read 7 pages if I read 1 page in <i>M</i> minutes.]]></question><answer vars="M"><![CDATA[7M]]></answer><explanation><![CDATA[It takes <i>M</i> minutes to read 1 page, <math><mrow><mn>2</mn><mo>&#x00D7;</mo><mi>M</mi></mrow></math>minutes to read 2 pages, <math><mrow><mn>3</mn><mo>&#x00D7;</mo><mi>M</mi></mrow></math>minutes to read 3 pages, etc. So it takes <math><mrow><mn>7</mn><mo>&#x00D7;</mo><mi>M</mi></mrow></math>minutes to read 7 pages.]]></explanation></item><item><question><![CDATA[The age in years of someone who is twice as old as Cayenne, if Cayenne is <i>C</i> years old.]]></question><answer vars="C"><![CDATA[2C]]></answer><explanation><![CDATA[If Cayenne is 5 years old, then twice that is <math><mrow><mn>2</mn><mo>&#x00D7;</mo><mn>5</mn><mo>=</mo><mn>10</mn></mrow></math> , if Cayenne is 7 years old, then twice that is would be <math><mrow><mn>2</mn><mo>&#x00D7;</mo><mn>7</mn><mo>=</mo><mn>14</mn></mrow></math> years old. If Cayenne is <i>C</i> years old, then twice that would be<math><mrow><mn>2</mn><mo>&#x00D7;</mo><mi>C</mi></mrow></math>years old.]]></explanation></item><item><question><![CDATA[The total price, in cents, of 5 apples at <i>A</i> cents each plus 9 bananas at <i>B</i> cents each.]]></question><answer vars="A,B"><![CDATA[5A+9B]]></answer><explanation><![CDATA[If one apple costs 15 cents, then 5 apples cost <math><mrow><mn>5</mn><mo>&#x00D7;</mo><mn>15</mn><mo>=</mo><mn>75</mn></mrow></math> cents.  If an apple costs <i>A</i> cents, then 5 apples cost <math><mrow><mn>5</mn><mo>&#x00D7;</mo><mi>A</mi></mrow></math> cents. Likewise, the bananas cost <math><mrow><mn>9</mn><mo>&#x00D7;</mo><mi>B</mi></mrow></math> cents. Adding the two amounts together gives <math><mrow><mn>5</mn><mi>A</mi><mo>+</mo><mn>9</mn><mi>B</mi></mrow></math>, also written as <math><mrow><mn>5</mn><mo>&#x00D7;</mo><mi>A</mi><mo>+</mo><mn>9</mn><mo>&#x00D7;</mo><mi>B</mi></mrow></math>.]]></explanation></item><item><question><![CDATA[Number of gallons of gas it takes to go 50 miles if you get <i>G</i> miles per gallon.]]></question><answer vars="G"><![CDATA[50/G]]></answer><explanation><![CDATA[At 10 miles per gallon, it will take <math><mrow><mfrac><mrow><mn>50</mn></mrow><mrow><mn>10</mn></mrow></mfrac><mo>=</mo><mn>5</mn></mrow></math> gallons. At 25 miles per gallon, it will take <math><mrow><mfrac><mrow><mn>50</mn></mrow><mrow><mn>25</mn></mrow></mfrac><mo>=</mo><mn>2</mn></mrow></math> gallons. So, at <i>G</i> miles per gallon it will take me <math><mrow><mfrac><mrow><mn>50</mn></mrow><mi>G</mi></mfrac></mrow></math>gallons.]]></explanation></item><item><question><![CDATA[The sum of two consecutive numbers with <i>N</i> as the first one.]]></question><answer vars="N"><![CDATA[2N+1]]></answer><explanation><![CDATA[As an example, 5 and 6 are two consecutive numbers. Their sum would be <math><mrow><mn>5</mn><mo>+</mo><mn>6</mn><mo>=</mo><mn>11</mn></mrow></math>. If the first number is <i>N</i>, then the next one would be <math><mrow><mi>N</mi><mo>+</mo><mn>1</mn></mrow></math>. The sum would be <math><mrow><mi>N</mi><mo>+</mo><mo stretchy="false">(</mo><mi>N</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></math> which simplifies to <math><mrow><mn>2</mn><mi>N</mi><mo>+</mo><mn>1</mn></mrow></math>.]]></explanation></item><item><question><![CDATA[The number of minutes required to watch half of an <i>M</i>-minute movie.]]></question><answer vars="M"><![CDATA[M/2]]></answer><explanation><![CDATA[To find half of any quantity, divide by 2. For example, half of a 110 minute movie would take <math><mrow><mfrac><mrow><mn>110</mn></mrow><mn>2</mn></mfrac><mo>=</mo><mn>55</mn></mrow></math> minutes. So, half of an <i>M</i>-minute movie would take <math><mrow><mfrac><mi>M</mi><mn>2</mn></mfrac></mrow></math> minutes.]]></explanation></item><item><question><![CDATA[The perimeter, in units, of an equilateral triangle with each side <i>L</i> units long.]]></question><answer vars="L"><![CDATA[3L]]></answer><explanation><![CDATA[An equilateral triangle has three equal sides. The perimeter of a triangle is the sum of the lengths of the three sides. For our triangle, the perimeter is <math><mrow><mi>L</mi><mo>+</mo><mi>L</mi><mo>+</mo><mi>L</mi></mrow></math>  which simplifies to <math><mrow><mn>3</mn><mo>&#x00D7;</mo><mi>L</mi></mrow></math> or <math><mrow><mn>3</mn><mi>L</mi></mrow></math>.]]></explanation></item><item><question><![CDATA[The number of months it takes to grow one foot of hair, if the hair grows <i>N</i> inches per month.]]></question><answer vars="N"><![CDATA[12/N]]></answer><explanation><![CDATA[There are 12 inches in 1 foot.  Therefore, we divide 12 by the number of inches per month to get the answer. For example, if hair grows 2 inches per month, then in <math><mrow><mfrac><mrow><mn>12</mn></mrow><mn>2</mn></mfrac><mo>=</mo><mn>6</mn></mrow></math> months to grow one foot. So, at <i>N</i> inches per month it would take <math><mrow><mfrac><mrow><mn>12</mn></mrow><mi>N</mi></mfrac></mrow></math> months.]]></explanation></item><item><question><![CDATA[The total score of a football game with <i>T</i> 6-pointer touchdowns, <i>F</i> 3-pointer field goals, and <i>C</i> 1-point conversions.]]></question><answer vars="T,F,C"><![CDATA[6T+3F+C]]></answer><explanation><![CDATA[As an example, three touchdowns give <math><mrow><mn>3</mn><mo>&#x00D7;</mo><mn>6</mn><mo>=</mo><mn>18</mn></mrow></math> points, 5 field goals add <math><mrow><mn>5</mn><mo>&#x00D7;</mo><mn>3</mn><mo>=</mo><mn>15</mn></mrow></math> more points, and 3 conversions add <math><mrow><mn>3</mn><mo>&#x00D7;</mo><mn>1</mn><mo>=</mo><mn>3</mn></mrow></math> points. So the answer using <i>T</i>,<i>F</i>and <i>C</i> would be <math><mrow><mn>6</mn><mi>T</mi><mo>+</mo><mn>3</mn><mi>F</mi><mo>+</mo><mi>C</mi></mrow></math> .]]></explanation></item><item><question><![CDATA[The average score of three tests with scores of <i>a</i>, <i>b</i>, and <i>c</i>.]]></question><answer vars="a,b,c"><![CDATA[(a+b+c)/3]]></answer><explanation><![CDATA[Average is computed by adding all the values and dividing by the number of values. For example, if the scores were 70, 80, and 90, then the average score would be <math><mrow><mfrac><mrow><mo stretchy="false">(</mo><mn>70</mn><mo>+</mo><mn>80</mn><mo>+</mo><mn>90</mn><mo stretchy="false">)</mo></mrow><mn>3</mn></mfrac><mo>=</mo><mfrac><mrow><mn>240</mn></mrow><mn>3</mn></mfrac><mo>=</mo><mn>80</mn></mrow></math>. So, the answer is <math><mrow><mfrac><mrow><mo stretchy="false">(</mo><mi>a</mi><mo>+</mo><mi>b</mi><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><mn>3</mn></mfrac></mrow></math>.]]></explanation></item></data>';var topic_data_24="1/2,1/4,2/4,3/4,1/5,2/5,3/5,4/5,3/6,1/8,2/8,3/8,4/8,5/8,6/8,7/8,1/10,2/10,3/10,4/10,5/10,6/10,7/10,8/10,9/10,3/12,6/12,9/12,1/20,3/20,7/20,9/20,11/20,13/20,17/20,19/20,1/25,1/40,1/50,1/100,1/200,1/500,1/1000|2/2,3/3,4/4,5/5,6/6,7/7,8/8,3/2,6/4,9/6,12/8,15/10,18/12,5/2,10/4,15/6,20/8,4/2,6/3,8/4,10/5,16/8,24/12,36/18,13/25,37/40,49/50,3/100,17/500,334/1000";var topic_data_25="0.3R,0.6R,0.5,1.5,2.5,3.5,0.25,0.75,1.25,1.75,2.25,2.75,3.25,3.75,0.2,0.4,0.6,0.8,1.2,2.4,3.6,4.8,0.125,0.375,0.625,0.875,1.125,1.375,0.1,0.3,0.7,0.9,0.05,0.15,0.35,0.45,0.55,0.65,0.85,0.95,0.04,0.08,0.12,0.16,0.24,0.28,0.32,0.36,0.44,0.48,0.52,0.56,0.64,0.68,0.72,0.76,0.84,0.88,0.92,0.96,0.11,0.13,0.17,0.19,0.23,0.27,0.33,0.39,0.67,0.71,0.77,0.79,0.81,0.83,0.87,0.89";var topic_data_25_nr="0.5,1.5,2.5,3.5,0.25,0.75,1.25,1.75,2.25,2.75,3.25,3.75,0.2,0.4,0.6,0.8,1.2,2.4,3.6,4.8,0.125,0.375,0.625,0.875,1.125,1.375,0.1,0.3,0.7,0.9,0.05,0.15,0.35,0.45,0.55,0.65,0.85,0.95,0.04,0.08,0.12,0.16,0.24,0.28,0.32,0.36,0.44,0.48,0.52,0.56,0.64,0.68,0.72,0.76,0.84,0.88,0.92,0.96,0.11,0.13,0.17,0.19,0.23,0.27,0.33,0.39,0.67,0.71,0.77,0.79,0.81,0.83,0.87,0.89";var topic_data_28="<data><item><question eqn='2.4 d 0.2' type='1' txt='The value closest to' /><answer val='10' /><choices val='1|10|20|50|2' /><hint>Convert both the numerator and the denominator into integers.</hint><step><![CDATA[We can convert both the top and the bottom into integers by multiplying by <span class='equation1'><math><mfrac><mn>10</mn><mn>10</mn></mfrac></math></span>:]]></step><step><![CDATA[<span class='equation1'><math><mrow><mfrac><mn>2.4</mn><mn>0.2</mn></mfrac><mo>&times;</mo><mfrac><mn>10</mn><mn>10</mn></mfrac></mrow><mo>=</mo><mrow><mfrac><mn>24</mn><mn>2</mn></mfrac></mrow></math></span>.]]></step><step><![CDATA[Since 2 divides evenly into 24, our answer simplifies to]]></step><step><![CDATA[<span class='equation1'><math><mfrac><mn>24</mn><mn>2</mn></mfrac><mo>=</mo><mn>12</mn></math></span>.]]></step><step><![CDATA[Of all of the choices, the result is closest to 10.]]></step></item><item><question eqn='2.9 d 0.62' type='1' txt='The value closest to' /><answer val='5' /><choices val='5|10|15|20|1' /><hint>Round the denominator 0.62 to 0.6. Now look for a number you can round the numerator 2.9 to which is easy to compare with 0.6.</hint><step><![CDATA[You may notice that 2.9 is close to 3.0 and 0.62 is close to0.60, so <span class='equation1'><math><mfrac><mn>2.9</mn><mn>0.62</mn></mfrac></math></span> is close to <span class='equation1'><math><mfrac><mn>3.0</mn><mn>0.60</mn></mfrac></math></span>.]]></step><step><![CDATA[Now we can convert both the top and the bottom into integers by multiplying by <span class='equation1'><math><mfrac><mn>10</mn><mn>10</mn></mfrac></math></span>:]]></step><step><![CDATA[<span class='equation1'><math><mrow><mfrac><mn>3.0</mn><mn>0.60</mn></mfrac><mo>&times;</mo><mfrac><mn>10</mn><mn>10</mn></mfrac></mrow><mo>=</mo><mrow><mfrac><mn>30</mn><mn>6</mn></mfrac></mrow></math></span>.]]></step><step><![CDATA[Since 6 divides evenly into 30, our answer simplifies to]]></step><step><![CDATA[<span class='equation1'><math><mfrac><mn>30</mn><mn>6</mn></mfrac><mo>=</mo><mn>5</mn></math></span>.]]></step><step><![CDATA[The answer to the original problem will be closest to 5.]]></step></item><item><question eqn='0.639 d 0.079' type='1' txt='The value closest to' /><answer val='8.0' /><choices val='0.4|0.8|4|8|4' /><hint>Round the denominator 0.079 to 0.08. Now look for a number you can round the numerator 0.639 to which is easy to compare with 0.08.</hint><step><![CDATA[You may notice that 0.639 is close to 0.640 and 0.079 is closeto 0.080, so <span class='equation1'><math><mfrac><mn>0.639</mn><mn>0.640</mn></mfrac></math></span> is close to <span class='equation1'><math><mfrac><mn>0.640</mn><mn>0.080</mn></mfrac></math></span>.]]></step><step><![CDATA[Now we can convert both the top and the bottom into integers by multiplying by <span class='equation1'><math><mfrac><mn>100</mn><mn>100</mn></mfrac></math></span>:]]></step><step><![CDATA[<span class='equation1'><math><mrow><mfrac><mn>0.64</mn><mn>0.08</mn></mfrac><mo>&times;</mo><mfrac><mn>100</mn><mn>100</mn></mfrac></mrow><mo>=</mo><mrow><mfrac><mn>64</mn><mn>8</mn></mfrac></mrow></math></span>.]]></step><step><![CDATA[Since 8 divides evenly into 64, our answer simplifies to]]></step><step><![CDATA[<span class='equation1'><math><mfrac><mn>64</mn><mn>8</mn></mfrac><mo>=</mo><mn>8</mn></math></span>.]]></step><step><![CDATA[The answer to the original problem will be closest to 8.]]></step></item><item><question eqn='0.039 d 0.21' type='1' txt='The value closest to' /><answer val='0.2' /><choices val='200|20|2|0.2|4' /><hint>Round the denominator 0.21 to 0.2. Now look for a number you can round the numerator 0.039 to which is easy to compare with 0.2.</hint><step><![CDATA[You may notice that 0.039 is close to 0.04 and 0.21 is closeto 0.2, so <span class='equation1'><math><mfrac><mn>0.039</mn><mn>0.210</mn></mfrac></math></span> is close to <span class='equation1'><math><mfrac><mn>0.04</mn><mn>0.20</mn></mfrac></math></span>.]]></step><step><![CDATA[Now we can convert both the top and the bottom into integers by multiplying by <span class='equation1'><math><mfrac><mn>100</mn><mn>100</mn></mfrac></math></span>:]]></step><step><![CDATA[<span class='equation1'><math><mrow><mfrac><mn>0.04</mn><mn>0.2</mn></mfrac><mo>&times;</mo><mfrac><mn>100</mn><mn>100</mn></mfrac></mrow><mo>=</mo><mrow><mfrac><mn>4</mn><mn>20</mn></mfrac></mrow></math></span>.]]></step><step><![CDATA[Both top and bottom are divisible by 4, so we can simplify the answer:]]></step><step><![CDATA[<span class='equation1'><math><mfrac><mn>4</mn><mn>20</mn></mfrac><mo>=</mo><mfrac><mn>1</mn><mn>5</mn></mfrac><mo>=</mo><mn>0.2</mn></math></span>.]]></step><step><![CDATA[The answer to the original problem will be closest to 0.2.]]></step></item><item><question eqn='7.7 d 0.51' type='1' txt='The value closest to' /><answer val='15' /><choices val='1|10|15|20|3' /><hint>Round the denominator 0.51 to 0.5. Now look for a number you can round the numerator 7.7 to which is easy to compare with 0.5.</hint><step><![CDATA[You may notice that 7.7 is close to 8 and 0.51 is close to 0.5, so <span class='equation1'><math><mfrac><mn>7.7</mn><mn>0.51</mn></mfrac></math></span> is close to <span class='equation1'><math><mfrac><mn>8.0</mn><mn>0.5</mn></mfrac></math></span>.]]></step><step><![CDATA[Now we can convert both the top and the bottom into integers by multiplying by <span class='equation1'><math><mfrac><mn>10</mn><mn>10</mn></mfrac></math></span>:]]></step><step><![CDATA[<span class='equation1'><math><mrow><mfrac><mn>8</mn><mn>0.5</mn></mfrac><mo>&times;</mo><mfrac><mn>10</mn><mn>10</mn></mfrac></mrow><mo>=</mo><mrow><mfrac><mn>80</mn><mn>5</mn></mfrac></mrow></math></span>.]]></step><step><![CDATA[Since 5 divides evenly into 80, our answer simplifies to]]></step><step><![CDATA[<span class='equation1'><math><mfrac><mn>80</mn><mn>5</mn></mfrac><mo>=</mo><mn>16</mn></math></span>.]]></step><step><![CDATA[Of all of the choices, the result is closest to 15.]]></step></item><item><question eqn='3.8 d 0.83' type='1' txt='The value closest to' /><answer val='5' /><choices val='1|3|5|7|3' /><hint>Round the denominator 0.83 to 0.8. Now look for a number you can round the numerator 3.8 to which is easy to compare with 0.8.</hint><step><![CDATA[You may notice that 3.8 is close to 4 and 0.83 is close to 0.8, so <span class='equation1'><math><mfrac><mn>3.8</mn><mn>0.83</mn></mfrac></math></span> is close to <span class='equation1'><math><mfrac><mn>4</mn><mn>0.8</mn></mfrac></math></span>.]]></step><step><![CDATA[Now we can convert both the top and the bottom into integers by multiplying by <span class='equation1'><math><mfrac><mn>10</mn><mn>10</mn></mfrac></math></span>:]]></step><step><![CDATA[<span class='equation1'><math><mrow><mfrac><mn>4</mn><mn>0.8</mn></mfrac><mo>&times;</mo><mfrac><mn>10</mn><mn>10</mn></mfrac></mrow><mo>=</mo><mrow><mfrac><mn>40</mn><mn>8</mn></mfrac></mrow></math></span>.]]></step><step><![CDATA[Since 8 divides evenly into 40, our answer simplifies to]]></step><step><![CDATA[<span class='equation1'><math><mfrac><mn>40</mn><mn>8</mn></mfrac><mo>=</mo><mn>5</mn></math></span>.]]></step><step><![CDATA[The answer to the original problem will be closest to 5.]]></step></item><item><question eqn='4.522 d 0.88' type='1' txt='The value closest to' /><answer val='5' /><choices val='0.05|0.5|5.0|50|3' /><hint>Round the denominator 0.88 to 0.9. Now look for a number you can round the numerator 4.522 to which is easy to compare with 0.9.</hint><step><![CDATA[You may notice that 4.522 is close to 4.5 and 0.88 is close to0.9, so <span class='equation1'><math><mfrac><mn>4.522</mn><mn>0.88</mn></mfrac></math></span> is close to <span class='equation1'><math><mfrac><mn>4.5</mn><mn>0.9</mn></mfrac></math></span>.]]></step><step><![CDATA[Now we can convert both the top and the bottom into integers by multiplying by <span class='equation1'><math><mfrac><mn>10</mn><mn>10</mn></mfrac></math></span>:]]></step><step><![CDATA[<span class='equation1'><math><mrow><mfrac><mn>4.5</mn><mn>0.9</mn></mfrac><mo>&times;</mo><mfrac><mn>10</mn><mn>10</mn></mfrac></mrow><mo>=</mo><mrow><mfrac><mn>45</mn><mn>9</mn></mfrac></mrow></math></span>.]]></step><step><![CDATA[Since 9 divides evenly into 45, our answer simplifies to]]></step><step><![CDATA[<span class='equation1'><math><mfrac><mn>45</mn><mn>9</mn></mfrac><mo>=</mo><mn>5</mn></math></span>.]]></step><step><![CDATA[The answer to the original problem will be closest to 5.]]></step></item><item><question eqn='1.813 d 0.59' type='1' txt='The value closest to' /><answer val='3' /><choices val='0.03|0.3|3.0|30|3' /><hint>Round the denominator 0.59 to 0.6. Now look for a number you can round the numerator 1.813 to which is easy to compare with 0.6.</hint><step><![CDATA[You may notice that 1.813 is close to 1.8 and 0.59 is close to0.6, so <span class='equation1'><math><mfrac><mn>1.813</mn><mn>0.59</mn></mfrac></math></span> is close to <span class='equation1'><math><mfrac><mn>1.8</mn><mn>0.6</mn></mfrac></math></span>.]]></step><step><![CDATA[Now we can convert both the top and the bottom into integers by multiplying by <span class='equation1'><math><mfrac><mn>10</mn><mn>10</mn></mfrac></math></span>:]]></step><step><![CDATA[<span class='equation1'><math><mrow><mfrac><mn>1.8</mn><mn>0.6</mn></mfrac><mo>&times;</mo><mfrac><mn>10</mn><mn>10</mn></mfrac></mrow><mo>=</mo><mrow><mfrac><mn>18</mn><mn>6</mn></mfrac></mrow></math></span>.]]></step><step><![CDATA[Since 6 divides evenly into 18, our answer simplifies to]]></step><step><![CDATA[<span class='equation1'><math><mfrac><mn>18</mn><mn>6</mn></mfrac><mo>=</mo><mn>3</mn></math></span>.]]></step><step><![CDATA[The answer to the original problem will be closest to 3.]]></step></item><item><question eqn='0.116 d 0.04' type='1' txt='The value closest to' /><answer val='3' /><choices val='3|4|12|30|1' /><hint>Look for a number you can round the numerator 0.116 to which is easy to compare with 0.04.</hint><step><![CDATA[You may notice that 0.116 is close to 0.12, so <span class='equation1'><math><mfrac><mn>0.116</mn><mn>0.04</mn></mfrac></math></span> is close to <span class='equation1'><math><mfrac><mn>0.12</mn><mn>0.04</mn></mfrac></math></span>.]]></step><step><![CDATA[Now we can convert both the top and the bottom into integers by multiplying by <span class='equation1'><math><mfrac><mn>100</mn><mn>100</mn></mfrac></math></span>:]]></step><step><![CDATA[<span class='equation1'><math><mrow><mfrac><mn>0.12</mn><mn>0.04</mn></mfrac><mo>&times;</mo><mfrac><mn>100</mn><mn>100</mn></mfrac></mrow><mo>=</mo><mrow><mfrac><mn>12</mn><mn>4</mn></mfrac></mrow></math></span>.]]></step><step><![CDATA[Since 4 divides evenly into 12, our answer simplifies to]]></step><step><![CDATA[<span class='equation1'><math><mfrac><mn>12</mn><mn>4</mn></mfrac><mo>=</mo><mn>3</mn></math></span>.]]></step><step><![CDATA[The answer to the original problem will be closest to 3.]]></step></item><item><question eqn='8.7 d 5.8' type='1' txt='The value closest to' /><answer val='1.5' /><choices val='0.1|1.3|1.5|2.0|3' /><hint>Round the denominator 5.8 to 6.0. Now look for a number you can round the numerator 8.7 to which is easy to compare with 6.0.</hint><step><![CDATA[You may notice that 8.7 is close to 9 and 5.8 is close to 6, so <span class='equation1'><math><mfrac><mn>8.7</mn><mn>5.8</mn></mfrac></math></span> is close to <span class='equation1'><math><mfrac><mn>9</mn><mn>6</mn></mfrac></math></span>.]]></step><step><![CDATA[Since 3 divides evenly into both top and bottom, our answer simplifies to]]></step><step><![CDATA[<span class='equation1'><math><mfrac><mn>9</mn><mn>6</mn></mfrac><mo>=</mo><mfrac><mn>3</mn><mn>2</mn></mfrac><mo>=</mo><mn>1.5</mn></math></span>.]]></step><step><![CDATA[The answer to the original problem will be closest to 1.5.]]></step></item><item><question eqn='40 d 0.02' type='2' txt='Find the value of' /><answer val='2000' /><choices val='' /><hint>Convert both the numerator and the denominator into integers.</hint><step><![CDATA[We can convert both the top and the bottom into integers by multiplying by <span class='equation1'><math><mrow><mfrac><mn>100</mn><mn>100</mn></mfrac></mrow></math></span>:]]></step><step><![CDATA[<span class='equation1'><math><mrow><mfrac><mn>40</mn><mn>0.02</mn></mfrac><mo>&times;</mo><mfrac><mn>100</mn><mn>100</mn></mfrac></mrow><mo>=</mo><mrow><mfrac><mn>4000</mn><mn>2</mn></mfrac></mrow></math></span>.]]></step><step><![CDATA[Since 2 divides evenly into 4000, our answer simplifies to]]></step><step><![CDATA[<span class='equation1'><math><mfrac><mn>4000</mn><mn>2</mn></mfrac><mo>=</mo><mn>2000</mn></math></span>.]]></step></item><item><question eqn='0.48 d 1.2' type='2' txt='Find the value of' /><answer val='0.4' /><choices val='' /><hint>Convert both the numerator and the denominator into integers.</hint><step><![CDATA[We can convert both the top and the bottom into integers by multiplying by <span class='equation1'><math><mrow><mfrac><mn>100</mn><mn>100</mn></mfrac></mrow></math></span>:]]></step><step><![CDATA[<span class='equation1'><math><mrow><mfrac><mn>0.48</mn><mn>1.2</mn></mfrac><mo>&times;</mo><mfrac><mn>100</mn><mn>100</mn></mfrac></mrow><mo>=</mo><mrow><mfrac><mn>48</mn><mn>120</mn></mfrac></mrow></math></span>.]]></step><step><![CDATA[Since 12 divides evenly into both the top and the bottom, our answer simplifies to]]></step><step><![CDATA[<span class='equation1'><math><mfrac><mn>48</mn><mn>120</mn></mfrac><mo>=</mo><mfrac><mn>4</mn><mn>10</mn></mfrac><mo>=</mo><mn>0.4</mn></math></span>.]]></step></item><item><question eqn='0.77 d 3.5' type='2' txt='Find the value of' /><answer val='0.22' /><choices val='' /><hint>Convert both the numerator and the denominator into integers.</hint><step><![CDATA[We can convert both the top and the bottom into integers by multiplying by <span class='equation1'><math><mrow><mfrac><mn>100</mn><mn>100</mn></mfrac></mrow></math></span>:]]></step><step><![CDATA[<span class='equation1'><math><mrow><mfrac><mn>0.77</mn><mn>3.5</mn></mfrac><mo>&times;</mo><mfrac><mn>100</mn><mn>100</mn></mfrac></mrow><mo>=</mo><mrow><mfrac><mn>77</mn><mn>350</mn></mfrac></mrow></math></span>.]]></step><step><![CDATA[Since 7 divides evenly into both the top and the bottom, our answer simplifies to]]></step><step><![CDATA[<span class='equation1'><math><mfrac><mn>77</mn><mn>350</mn></mfrac><mo>=</mo><mfrac><mn>11</mn><mn>50</mn></mfrac></math></span>.]]></step><step><![CDATA[To express this fraction in decimal form, we need the bottomtobe a power of 10. Notice that we can multiply the top and bottom by 2:]]></step><step><![CDATA[<span class='equation1'><math><mfrac><mn>11</mn><mn>50</mn></mfrac><mo>&times;</mo><mfrac><mn>2</mn><mn>2</mn></mfrac><mo>=</mo><mfrac><mn>22</mn><mn>100</mn></mfrac><mo>=</mo><mn>0.22</mn></math></span>.]]></step></item><item><question eqn='11.4 d 19' type='2' txt='Find the value of' /><answer val='0.6' /><choices val='' /><hint>Convert both the numerator and the denominator into integers.</hint><step><![CDATA[We can convert both the top and the bottom into integers by multiplying by <span class='equation1'><math><mrow><mfrac><mn>10</mn><mn>10</mn></mfrac></mrow></math></span>:]]></step><step><![CDATA[<span class='equation1'><math><mrow><mfrac><mn>11.4</mn><mn>19</mn></mfrac><mo>&times;</mo><mfrac><mn>10</mn><mn>10</mn></mfrac></mrow><mo>=</mo><mrow><mfrac><mn>114</mn><mn>190</mn></mfrac></mrow></math></span>.]]></step><step><![CDATA[Since 19 divides evenly into both the top and the bottom, our answer simplifies to]]></step><step><![CDATA[<span class='equation1'><math><mfrac><mn>114</mn><mn>190</mn></mfrac><mo>=</mo><mfrac><mn>6</mn><mn>10</mn></mfrac><mo>=</mo><mn>0.6</mn></math></span>.]]></step></item><item><question eqn='96.6 d 0.42' type='2' txt='Find the value of' /><answer val='230' /><choices val='' /><hint>Convert both the numerator and the denominator into integers.</hint><step><![CDATA[We can convert both the top and the bottom into integers by multiplying by <span class='equation1'><math><mrow><mfrac><mn>100</mn><mn>100</mn></mfrac></mrow></math></span>:]]></step><step><![CDATA[<span class='equation1'><math><mrow><mfrac><mn>96.6</mn><mn>0.42</mn></mfrac><mo>&times;</mo><mfrac><mn>100</mn><mn>100</mn></mfrac></mrow><mo>=</mo><mrow><mfrac><mn>9660</mn><mn>42</mn></mfrac></mrow></math></span>.]]></step><step><![CDATA[Since 42 divides evenly into 9660, our answer simplifies to]]></step><step><![CDATA[<span class='equation1'><math><mfrac><mn>9660</mn><mn>42</mn></mfrac><mo>=</mo><mn>230</mn></math></span>.]]></step></item><item><question eqn='1.08 d 2.7' type='2' txt='Find the value of' /><answer val='0.4' /><choices val='' /><hint>Convert both the numerator and the denominator into integers.</hint><step><![CDATA[We can convert both the top and the bottom into integers by multiplying by <span class='equation1'><math><mrow><mfrac><mn>100</mn><mn>100</mn></mfrac></mrow></math></span>:]]></step><step><![CDATA[<span class='equation1'><math><mrow><mfrac><mn>1.08</mn><mn>2.7</mn></mfrac><mo>&times;</mo><mfrac><mn>100</mn><mn>100</mn></mfrac></mrow><mo>=</mo><mrow><mfrac><mn>108</mn><mn>270</mn></mfrac></mrow></math></span>.]]></step><step><![CDATA[Since 27 divides evenly into both top and bottom, our answer simplifies to]]></step><step><![CDATA[<span class='equation1'><math><mfrac><mn>108</mn><mn>270</mn></mfrac><mo>=</mo><mfrac><mn>4</mn><mn>10</mn></mfrac><mo>=</mo><mn>0.4</mn></math></span>.]]></step></item><item><question eqn='33.8 d 0.26' type='2' txt='Find the value of' /><answer val='130' /><choices val='' /><hint>Convert both the numerator and the denominator into integers.</hint><step><![CDATA[We can convert both the top and the bottom into integers by multiplying by <span class='equation1'><math><mrow><mfrac><mn>100</mn><mn>100</mn></mfrac></mrow></math></span>:]]></step><step><![CDATA[<span class='equation1'><math><mrow><mfrac><mn>33.8</mn><mn>0.26</mn></mfrac><mo>&times;</mo><mfrac><mn>100</mn><mn>100</mn></mfrac></mrow><mo>=</mo><mrow><mfrac><mn>3380</mn><mn>26</mn></mfrac></mrow></math></span>.]]></step><step><![CDATA[Since 26 divides evenly into 3380, our answer simplifies to]]></step><step><![CDATA[<span class='equation1'><math><mfrac><mn>3380</mn><mn>26</mn></mfrac><mo>=</mo><mn>130</mn></math></span>.]]></step></item><item><question eqn='592 d 0.8' type='2' txt='Find the value of' /><answer val='740' /><choices val='' /><hint>Convert both the numerator and the denominator into integers.</hint><step><![CDATA[We can convert both the top and the bottom into integers by multiplying by <span class='equation1'><math><mrow><mfrac><mn>10</mn><mn>10</mn></mfrac></mrow></math></span>:]]></step><step><![CDATA[<span class='equation1'><math><mrow><mfrac><mn>592</mn><mn>0.8</mn></mfrac><mo>&times;</mo><mfrac><mn>10</mn><mn>10</mn></mfrac></mrow><mo>=</mo><mrow><mfrac><mn>5920</mn><mn>8</mn></mfrac></mrow></math></span>.]]></step><step><![CDATA[Since 8 divides evenly into 5920, our answer simplifies to]]></step><step><![CDATA[<span class='equation1'><math><mfrac><mn>5920</mn><mn>8</mn></mfrac><mo>=</mo><mn>740</mn></math></span>.]]></step></item><item><question eqn='3.57 d 1.7' type='2' txt='Find the value of' /><answer val='2.1' /><choices val='' /><hint>Convert both the numerator and the denominator into integers.</hint><step><![CDATA[We can convert both the top and the bottom into integers by multiplying by <span class='equation1'><math><mrow><mfrac><mn>100</mn><mn>100</mn></mfrac></mrow></math></span>:]]></step><step><![CDATA[<span class='equation1'><math><mrow><mfrac><mn>3.57</mn><mn>1.7</mn></mfrac><mo>&times;</mo><mfrac><mn>100</mn><mn>100</mn></mfrac></mrow><mo>=</mo><mrow><mfrac><mn>357</mn><mn>170</mn></mfrac></mrow></math></span>.]]></step><step><![CDATA[Since 17 divides evenly into both top and bottom, our answer simplifies to]]></step><step><![CDATA[<span class='equation1'><math><mfrac><mn>357</mn><mn>170</mn></mfrac><mo>=</mo><mfrac><mn>21</mn><mn>10</mn></mfrac><mo>=</mo><mn>2.1</mn></math></span>.]]></step></item><item><question eqn='2.88 d 16' type='2' txt='Find the value of' /><answer val='0.18' /><choices val='' /><hint>Convert both the numerator and the denominator into integers.</hint><step><![CDATA[We can convert both the top and the bottom into integers by multiplying by <span class='equation1'><math><mrow><mfrac><mn>100</mn><mn>100</mn></mfrac></mrow></math></span>:]]></step><step><![CDATA[<span class='equation1'><math><mrow><mfrac><mn>2.88</mn><mn>16</mn></mfrac><mo>&times;</mo><mfrac><mn>100</mn><mn>100</mn></mfrac></mrow><mo>=</mo><mrow><mfrac><mn>288</mn><mn>1600</mn></mfrac></mrow></math></span>.]]></step><step><![CDATA[Since 16 divides evenly into both top and bottom, our answer simplifies to]]></step><step><![CDATA[<span class='equation1'><math><mfrac><mn>288</mn><mn>1600</mn></mfrac><mo>=</mo><mfrac><mn>18</mn><mn>100</mn></mfrac><mo>=</mo><mn>0.18</mn></math></span>.]]></step></item></data>";mngr.fetchTopicData=function(){mngr.readyStatus=0};mngr.onTopicDataReady=function(){mngr.readyStatus=1};mngr.parseTopicData=function(data_string){switch(this.topic_id){case 4:case 5:mngr.data_id=mngr.topic_id;if(this.topic_id==4&&mngr.actType=="basic"){mngr.data_id=mngr.topic_id+"_basic"}mngr.topic_data=mngr.parseJSONstr(eval("topic_data_"+mngr.data_id),mngr.topic_id);break;case 7:case 22:case 28:mngr.data_id=mngr.topic_id;mngr.topic_data=mngr.parseXML(data_string,mngr.topic_id);mngr.genProblems();break;case 1:case 2:case 3:case 6:case 8:case 9:case 10:case 18:case 23:case 24:case 25:mngr.data_id=mngr.topic_id==9?8:mngr.topic_id==23?10:mngr.topic_id;if(this.topic_id==25&&mngr.actType=="nr"){mngr.data_id=mngr.topic_id+"_nr"}if(this.topic_id==6&&mngr.actType){mngr.data_id=mngr.topic_id+mngr.actType}mngr.topic_data=data_string;mngr.genProblems();break}};mngr.loadXMLString=function(xmlString){function CreateMSXMLDocumentObject(){if(typeof (ActiveXObject)!="undefined"){var progIDs=["Msxml2.DOMDocument.6.0","Msxml2.DOMDocument.5.0","Msxml2.DOMDocument.4.0","Msxml2.DOMDocument.3.0","MSXML2.DOMDocument","MSXML.DOMDocument"];for(var i=0;i<progIDs.length;i++){try{return new ActiveXObject(progIDs[i])}catch(e){console.log(e)}}}return null}var xmlDoc,parser;try{if(window.DOMParser){parser=new DOMParser();xmlDoc=parser.parseFromString(xmlString,"text/xml")}else{xmlDoc=CreateMSXMLDocumentObject();if(!xmlDoc){alert("Cannot create XMLDocument object");return false}xmlDoc.loadXML(xmlString)}var errorMsg=null;if(xmlDoc.parseError&&xmlDoc.parseError.errorCode!=0){errorMsg="XML Parsing Error: "+xmlDoc.parseError.reason+" at line "+xmlDoc.parseError.line+" at position "+xmlDoc.parseError.linepos}else{if(xmlDoc.documentElement){if(xmlDoc.documentElement.nodeName=="parsererror"){errorMsg=xmlDoc.documentElement.childNodes[0].nodeValue}}else{errorMsg="XML Parsing Error!"}}if(errorMsg){alert(errorMsg);return false}return xmlDoc}catch(e){console.log("ERROR: "+e);return null}};mngr.parseXML=function(dat,topicID){var xmlD=mngr.loadXMLString(dat);var root=xmlD.documentElement;var children=root.childNodes;var cL=children.length;console_log("PARSE_XML_C: "+children+":"+cL+":"+topicID);var _data=[];var _data1=[];var _data2=[];var _steps=[];var _substeps=[];var child,q,a,steps,sub,cNL,seq,stxt;for(var i=0;i<cL;i++){child=children[i];sub=child.childNodes;cNL=sub.length;console_log("PARSE_XML_CHILD: "+child+":"+sub+":"+cNL+":"+child.nodeName);try{console_log("ATTRIB_CHILD: "+sub[0].nodeName+":"+sub[1].nodeName+":"+sub[2].nodeName+":"+sub[3].nodeName)}catch(e){console.log("ERROR: "+e)}if(topicID==4||topicID==5){q=sub[0].attributes.getNamedItem("eqn").nodeValue;a=sub[1].attributes.getNamedItem("val").nodeValue;_substeps=[];for(var j=2;j<cNL;j++){seq=sub[j].attributes.getNamedItem("eqn").nodeValue;stxt=sub[j].attributes.getNamedItem("txt").nodeValue;_substeps.push([seq,stxt])}_data.push([[q,_substeps],a])}else{if(topicID==7){ql=child.attributes.getNamedItem("lexp").nodeValue;qr=child.attributes.getNamedItem("rexp").nodeValue;rep=false;repL=false;repR=false;if(ql.indexOf("R")!=-1){ql=ql.split("R")[0];repL=rep=true}if(qr.indexOf("R")!=-1){qr=qr.split("R")[0];repR=rep=true}a=child.attributes.getNamedItem("val").nodeValue;expl=child.attributes.getNamedItem("expType").nodeValue;_data.push([[[ql,qr],expl,rep,[repL,repR]],a])}else{if(topicID==22){q=sub[0].firstChild.nodeValue;a=sub[1].firstChild.nodeValue;var exp=(sub[2].firstChild.nodeValue);exp=exp.split("&#215;").join("\u00d7");var vars=sub[1].attributes.getNamedItem("vars").nodeValue;_data.push([[q,exp,vars],a])}else{if(topicID==28){q=sub[0].attributes.getNamedItem("eqn").nodeValue;console_log("PARSE_XML_CHILD_ATTRIB_q: "+q);q=q.split(" ").join("").split("d");t=sub[0].attributes.getNamedItem("type").nodeValue;console_log("PARSE_XML_CHILD_ATTRIB_t: "+t);txt=sub[0].attributes.getNamedItem("txt").nodeValue;console_log("PARSE_XML_CHILD_ATTRIB_txt: "+txt);a=sub[1].attributes.getNamedItem("val").nodeValue;console_log("PARSE_XML_CHILD_ATTRIB_a: "+a);c=sub[2].attributes.getNamedItem("val").nodeValue;console_log("PARSE_XML_CHILD_ATTRIB_c: "+c);var hint=sub[3].firstChild.nodeValue;_substeps="";for(var j=4;j<cNL;j++){stxt=sub[j].firstChild.nodeValue;_substeps+="<p>"+stxt+"</p><br/>"}if(String(t)=="1"){_data1.push([[q,t,c,txt,_substeps,hint],a])}else{_data2.push([[q,t,c,txt,_substeps,hint],a])}if(String(mngr.actType)=="1"){_data=_data1}else{_data=_data2}}}}}}return _data};mngr.parseJSONstr=function(dat,topicID){var obj=eval(dat);var l=obj.length;var _data=[];if(topicID==4||topicID==5){for(var i=0;i<l;i++){var q=obj[i].question.eqn;var a=obj[i].answer.val;var steps=obj[i].step;var sl=steps.length;var _html="";for(var j=0;j<sl;j++){var ss=steps[j];var eqn=ss.eqn;var txt=ss.txt;_html+="<p>"+txt+"</p><p>"+eqn+"</p><br/>"}_data.push([[q,_html],a])}}return _data};mngr.reset=function(){this.initialized=false;this.current_pblm_index=0;this.completed_pblms=0};mngr.getMultiplesDisplay=function(a,b){var str="";for(var i=1;i<b;i++){str+=a*i+","}str+="<b>"+(a*b)+"</b>";return str};mngr.getGCFExplain=function(num,den,em,gcf){var v1;var n,d,e,g;if(arguments.length==4){n=arguments[0];d=arguments[1];e=arguments[2];g=arguments[3]}else{n=arguments[0];d=arguments[1];e=null;g=arguments[2]}var pfData=Math.getCommonPrimeFactors(n,d,e,g);var neq=pfData[0];var deq=pfData[1];var eeq=pfData[5];var prodStr=pfData[4].length>1?"<mo>=</mo>"+Math.getProduct(pfData[4]):"";var geq="<math><mrow><mtext>GCF</mtext><mo>=</mo>"+pfData[4].join("<mo>\u00d7</mo>")+prodStr+"</mrow></math>";geq=geq.replace(/([0-9]+)/g,"<mn>$1</mn>");neq=neq.replace(/([0-9]+)/g,"<mn>$1</mn>");neq=neq.replace(/\s=\s/,"<mo>=</mo>");neq=neq.split("\u00d7").join("<mo>\u00d7</mo>");neq=neq.replace(/\<b\>\(\<mn\>([0-9].?)\<\/mn\> is prime\)\<\/b\>/g,"<mtext>&nbsp;(</mtext><mn>$1</mn><mtext>&nbsp;is prime</mtext><mtext>)</mtext>");neq="<mrow>"+neq+"</mrow>";var tneq=$(neq);tneq.find("mn").each(function(i){var hasattr=$(this).parent("font").size();if(hasattr){$(this).unwrap("font");$(this).unwrap("b");$(this).attr("mathcolor","red")}else{if($(this).parent("b").size()){$(this).unwrap("b")}}});neq="<math>"+tneq[0].outerHTML+"</math>";deq=deq.replace(/([0-9]+)/g,"<mn>$1</mn>");deq=deq.replace(/\s=\s/,"<mo>=</mo>");deq=deq.split("\u00d7").join("<mo>\u00d7</mo>");deq=deq.replace(/\<b\>\(\<mn\>([0-9].?)\<\/mn\> is prime\)\<\/b\>/g,"<mtext>&nbsp;(</mtext><mn>$1</mn><mtext>&nbsp;is prime</mtext><mtext>)</mtext>");deq="<mrow>"+deq+"</mrow>";var tdeq=$(deq);tdeq.find("mn").each(function(i){var hasattr=$(this).parent("font").size();if(hasattr){$(this).unwrap("font");$(this).unwrap("b");$(this).attr("mathcolor","red")}else{if($(this).parent("b").size()){$(this).unwrap("b")}}});deq="<math>"+tdeq[0].outerHTML+"</math>";var exp="To find the greatest common factor (GCF) of two or more numbers, first write out their prime factorizations.<br/>";var exp_sub="";if(g==1){exp_sub="In this case there are no common prime factors. So,"}exp+="\t"+neq+"<br/>";exp+="\t"+deq+"<br/>";if(eeq){exp+="\t"+eeq+"<br/>"}exp+="The GCF is the product of all the prime factors the lists have in common. "+exp_sub+"<br/>";exp+="\t"+geq+".";return exp};mngr.getIndexArr=function(f){var l=this["arr_"+f].length;return Array.randomNumberArray(0,l-1,100,true)};mngr.random=function(n){return Math.floor(Math.random()*n)};mngr.genMultiFracProb=function(type){var ind,indT;var arr;switch(type){case"pp":ind=++this.pp_ind;indT=this.arr_pp_l;if(ind==indT){ind=this.pp_ind=0;this.arr_pp_i=this.getIndexArr("pp")}break;case"pw":ind=++this.pw_ind;indT=this.arr_pw_l;if(ind==indT){ind=this.pw_ind=0;this.arr_pw_i=this.getIndexArr("pw")}break;case"pi":ind=++this.pi_ind;indT=this.arr_pi_l;if(ind==indT){ind=this.pi_ind=0;this.arr_pi_i=this.getIndexArr("pi")}break;case"ii":ind=++this.ii_ind;indT=this.arr_ii_l;if(ind==indT){ind=this.ii_ind=0;this.arr_ii_i=this.getIndexArr("ii")}break;case"iw":ind=++this.iw_ind;indT=this.arr_iw_l;if(ind==indT){ind=this.iw_ind=0;this.arr_iw_i=this.getIndexArr("iw")}break}var arr=this["arr_"+type];var arri=this["arr_"+type+"_i"];var p=arr[arri[ind]].split("|");var l=Math.floor(Math.random()*2);var r=(l+1)%2;var pl=p[l];var pr=p[r];var strL;var strR;strL=pl.split("/");strR=pr.split("/");strL[1]=strL[1]?strL[1]:1;strR[1]=strR[1]?strR[1]:1;var n=strL[0]*strR[0];var d=(strL[1]?strL[1]:1)*(strR[1]?strR[1]:1);var ans1=Math.simpleFrac(n+"/"+d);var nr=ans1.split("/");n=nr[0]*1;d=nr[1]*1;var ans2=n>d?"["+Math.floor(n/d)+"]"+((n%d)+"/"+d):undefined;if(d===1){ans1=String(n);ans2=undefined}var a=[[pl,pr,[strL,strR],nr],{frac:n+"/"+d,val:ans1},{frac:ans2,val:ans2}];return a};mngr.genProblems=function(){console.log("FLASH_CARD_MNGR_CALLING GEN PROBLEMS - INSIDE METHOD");var totalQuest=mngr.totalQuest;var actType=mngr.actType;var level=mngr.level;var random=mngr.random;var rand=Math.rand;mngr.topic_data=mngr.topic_data?mngr.topic_data:"temp";console_log("A");if(mngr.topic_data=="temp"){switch(this.topic_id){case 4:case 5:mngr.data_id=mngr.topic_id;if(this.topic_id==4&&mngr.actType=="basic"){mngr.data_id=mngr.topic_id+"_basic"}mngr.topic_data=mngr.parseJSONstr(eval("topic_data_"+mngr.data_id),mngr.topic_id);break;case 7:case 22:case 28:mngr.data_id=mngr.topic_id;mngr.topic_data=mngr.parseXML(eval("topic_data_"+mngr.data_id),mngr.topic_id);break;case 1:case 2:case 3:case 6:case 8:case 9:case 10:case 18:case 23:case 24:case 25:mngr.data_id=mngr.topic_id==9?8:mngr.topic_id==23?10:mngr.topic_id;if(this.topic_id==25&&mngr.actType=="nr"){mngr.data_id=mngr.topic_id+"_nr"}if(this.topic_id==6&&mngr.actType){mngr.data_id=mngr.topic_id+mngr.actType}mngr.topic_data=eval("topic_data_"+mngr.data_id);break}}if(this.topic_id=="point_slope_eqn"){var _data=[];var x1_arr=Array.randomNumberArray(-10,10,20,true);var y1_arr=Array.randomNumberArray(-10,10,20,true);var m_arr=["1/5","1/4","1/3","1/2","2/5","3/5","2/3","3/4","4/5","1","5/4","4/3","3/2","5/3","2","5/2","3","4","5"];m_arr.shuffle();for(var i=1;i<=totalQuest;i++){var x1=x1_arr[i-1];var y1=y1_arr[i-1];var m=["","-"][random(2)]+m_arr[i-1];if(x1==0&&y1==0){var toss=random(2);if(toss){x1=Math.randomNumber(1,10)*([1,-1][random(2)])}else{y1=Math.randomNumber(1,10)*([1,-1][random(2)])}}var m0=eval(m);var eqn=m0+"x+"+((-m0*x1)+y1);var o="<math><mrow>";var e="</mrow></math>";var s='<mi>y</mi><mo>\u2212</mo><msub><mi>y</mi><mtext>1</mtext></msub><mo>=</mo><mi>m</mi><mfenced open="(" close=")" separators=""><mi>x</mi><mo>\u2212</mo><msub><mi>x</mi><mtext>1</mtext></msub></mfenced>';var pse=o+s+e;var s1="\u2212";var s2="\u2212";var dm=AuthorApi.getMathML(m,"rational","part");var p1=o+"<mi>y</mi>";var ps1="<mo>\u2212</mo>";var p2="<mo>=</mo>"+dm;var p3='<mfenced open="(" close=")" separators=""><mi>x</mi>';var ps3="<mo>\u2212</mo>";var p4="</mfenced>";var i1,i2;var dx1=Math.abs(x1);var dy1=Math.abs(y1);var hasNeg=false;var simpl=false;i1="<mtext>"+dy1+"</mtext>";i2="<mtext>"+dx1+"</mtext>";if(y1<0){s1="+";i1='<mfenced open="(" close=")" separators=""><mtext>\u2212'+dy1+"</mtext></mfenced>";hasNeg=!false}if(x1<0){s2="+";i2='<mfenced open="(" close=")" separators=""><mtext>\u2212'+dx1+"</mtext></mfenced>";hasNeg=!false}var e0="null";if(hasNeg){e0=p1+ps1+i1+p2+p3+ps3+i2+p4+e}var e1=o+"<mi>y</mi><mo>"+s1+"</mo><mtext>"+dy1+"</mtext><mo>=</mo>"+dm+'<mfenced open="(" close=")" separators=""><mi>x</mi><mo>'+s2+"</mo><mtext>"+dx1+"</mtext></mfenced>"+e;var e2="null";if(y1==0){i1="";ps1="";simpl=true}else{i1="<mtext>"+dy1+"</mtext>";ps1="<mo>"+s1+"</mo>"}if(x1==0){i2="";p3="<mi>x</mi>";ps3="";p4="";simpl=true}else{i2="<mtext>"+dx1+"</mtext>";ps3="<mo>"+s2+"</mo>"}if(simpl){e2=p1+ps1+i1+p2+p3+ps3+i2+p4+e}_data.push([[m,x1,y1,eqn,pse,e0,e1,e2],[m,x1,y1]])}}if(this.topic_id=="point_slope_graph"){var _data=[];var x1_arr=Array.randomNumberArray(-5,5,10,true);var y1_arr=Array.randomNumberArray(-5,5,10,true);var m_arr=["1/5","1/4","1/3","1/2","2/5","3/5","2/3","3/4","4/5","1","5/4","4/3","3/2","5/3","2","5/2","3","4","5"];m_arr.shuffle();for(var i=1;i<=totalQuest;i++){var x1=x1_arr[i-1];var y1=y1_arr[i-1];var m=["","-"][random(2)]+m_arr[i-1];if(x1==0&&y1==0){var toss=random(2);if(toss){x1=Math.randomNumber(1,5)*([1,-1][random(2)])}else{y1=Math.randomNumber(1,5)*([1,-1][random(2)])}}var m0=eval(m);var eqn=m0+"x+"+((-m0*x1)+y1);var x2,y2;if(x1<0){for(var a=1;a<=5;a++){var am0=Math.fixTo(a*m0,12);var chk=Math.fixTo(x1+am0,12);if(chk==parseInt(chk)){x2=x1+a;y2=Math.fixTo(y1+am0,12);break}}}else{for(var a=1;a<=5;a++){var am0=Math.fixTo(a*m0,12);var chk=Math.fixTo(x1+am0,12);if(chk==parseInt(chk)){x2=x1-a;y2=Math.fixTo(y1-am0,12);break}}}var o="<math><mrow>";var e="</mrow></math>";var s='<mi>y</mi><mo>\u2212</mo><msub><mi>y</mi><mtext>1</mtext></msub><mo>=</mo><mi>m</mi><mfenced open="(" close=")" separators=""><mi>x</mi><mo>\u2212</mo><msub><mi>x</mi><mtext>1</mtext></msub></mfenced>';var pse=o+s+e;var s1="\u2212";var s2="\u2212";var dm=AuthorApi.getMathML(m,"rational","part");var p1=o+"<mi>y</mi>";var ps1="<mo>\u2212</mo>";var p2="<mo>=</mo>"+dm;var p3='<mfenced open="(" close=")" separators=""><mi>x</mi>';var ps3="<mo>\u2212</mo>";var p4="</mfenced>";var i1,i2;var dx1=Math.abs(x1);var dy1=Math.abs(y1);var hasNeg=false;var simpl=false;i1="<mtext>"+dy1+"</mtext>";i2="<mtext>"+dx1+"</mtext>";if(y1<0){s1="+";i1='<mfenced open="(" close=")" separators=""><mtext>\u2212'+dy1+"</mtext></mfenced>";hasNeg=!false}if(x1<0){s2="+";i2='<mfenced open="(" close=")" separators=""><mtext>\u2212'+dx1+"</mtext></mfenced>";hasNeg=!false}var e0="null";if(hasNeg){e0=p1+ps1+i1+p2+p3+ps3+i2+p4+e}var e1=o+"<mi>y</mi><mo>"+s1+"</mo><mtext>"+dy1+"</mtext><mo>=</mo>"+dm+'<mfenced open="(" close=")" separators=""><mi>x</mi><mo>'+s2+"</mo><mtext>"+dx1+"</mtext></mfenced>"+e;var e2="null";if(y1==0){i1="";ps1="";simpl=true}else{i1="<mtext>"+dy1+"</mtext>";ps1="<mo>"+s1+"</mo>"}if(x1==0){i2="";p3="<mi>x</mi>";ps3="";p4="";simpl=true}else{i2="<mtext>"+dx1+"</mtext>";ps2="<mo>"+s2+"</mo>"}if(simpl){e2=p1+ps1+i1+p2+p3+ps3+i2+p4+e}var e3=o+"<mi>m</mi><mo>=</mo><mfrac><mtext>rise</mtext><mtext>run</mtext></mfrac>"+e;var rise=y2-y1;var run=x2-x1;rise=run<0?-rise:rise;run=Math.abs(run);var rise_run=rise+"/"+run;var e4=AuthorApi.getMathML(rise_run,"rational");var e5="null";if(rise_run!=Math.simpleFrac(rise_run)){e5=o+dm+e}_data.push([[m,x1,y1,x2,y2,eqn,pse,e0,e1,e2,e3,e4,e5],[m,x1,y1,x2,y2]])}}if(this.topic_id=="plot_coordinates"){var a1x=Array.randomNumberArray(1,10,2,true);var a1y=Array.randomNumberArray(1,10,2,true);var a2=Array.randomNumberArray(1,10,1,true);var a3x=Array.randomNumberArray(-10,-1,2,true);var a3y=Array.randomNumberArray(1,10,2,true);var a4x=Array.randomNumberArray(-10,10,5,true);var a4y=Array.randomNumberArray(-10,10,5,true);var qArr=[];var _data=[];for(var i=1;i<=totalQuest;i++){if(i<3){qArr.push([a1x[i-1],a1y[i-1]])}else{if(i==3){if(random(2)){qArr.push([0,a2[i-3]])}else{qArr.push([a2[i-3],0])}}else{if(i>3&&i<6){if(random(2)){qArr.push([a3x[i-4],a3y[i-4]])}else{qArr.push([a3y[i-4],a3x[i-4]])}}else{qArr.push([a4x[i-6],a4y[i-6]])}}}_data.push([qArr[i-1],qArr[i-1]])}}if(this.topic_id=="find_coordinates"){var q1,q2,q3,q4;q1=[];q2=[];q3=[];q4=[];for(var i=0;i<7;i++){for(var j=0;j<7;j++){if(i==0&&j==0){continue}q1.push([i,j]);if(j>0){q2.push([i,-j])}if(i>0&&j>0){q3.push([-i,-j])}if(i>0){q4.push([-i,j])}}}var prob=[];var arr1=Array.shuffleArray(q1,10);var arr2=Array.shuffleArray(q2,10);var arr3=Array.shuffleArray(q3,10);var arr4=Array.shuffleArray(q4,10);var q1Arr=arr1.splice(0,4);var q2Arr=[];q2Arr=q2Arr.concat(arr2.splice(0,1),arr3.splice(0,1),arr4.splice(0,1));var q3Arr=arr1.concat(arr2,arr3,arr4);var q4Arr=Array.shuffleArray(q3Arr,3);var tqArr=q2Arr.concat(q4Arr);var fqArr=Array.shuffleArray(tqArr,tqArr.length);var qpArr=[].concat(q1Arr,fqArr);var zx=qpArr.toString().indexOf("0");var ch=false;if(zx==-1){ch=true;var ind=random(10);var e=random(2);var ce=qpArr[ind];ce[e]=0;qpArr[ind]=ce}var _data=[];for(var s=0;s<qpArr.length;s++){_data.push([qpArr[s],qpArr[s]])}}if(this.topic_id=="slope_write"){var _data=[];var ax1=Array.randomNumberArray(-9,9,10,true);var ay1=Array.randomNumberArray(-9,9,10,true);var ax2=Array.randomNumberArray(-9,9,10,true);var ay2=Array.randomNumberArray(-9,9,10,true);var x1,x2,y1,y2,mstr,m;console_log("SLOPE_WRITE_PROB_GEN:");var hasHV=false;var hasH=false;var hasV=false;var hv_index=[];var lim=10;if(this.actType=="Q_1"){ax1=Array.randomNumberArray(0,0,5,false);ay1=Array.randomNumberArray(0,0,5,false);ax2=Array.randomNumberArray(1,9,5,true);ay2=Array.randomNumberArray(1,9,5,true);lim=5}if(this.actType=="Q_2-4"){lim=5;ax1=Array.randomNumberArray(0,0,5,false);ay1=Array.randomNumberArray(0,0,5,false);var ax2_t=Array.randomNumberArray(1,9,9,true);var ay2_t=Array.randomNumberArray(1,9,9,true);ax2=[];ay2=[];for(var z=0;z<ax2_t.length;z++){__r=Math.rand(2);__x=ax2_t[z];__y=ax2_t[z];if(__r===1){__x=-__x}else{if(__r===2){__y=-__y}else{__x=-__x;__y=-__y}}ax2.push(__x);ay2.push(__y)}}for(var i=1;i<=lim;i++){var tx1=ax1[i-1];var tx2=ax2[i-1];var ty1=ay1[i-1];var ty2=ay2[i-1];if(tx1>tx2){x1=tx2;x2=tx1;y1=ty2;y2=ty1}else{x1=tx1;x2=tx2;y1=ty1;y2=ty2}if(x1==x2&&y1==y2){y1=-y2}if(x1==x2){x1=x2-1}console_log("SLOPE_WRITE_PROB_GEN_0:"+x1+":"+x2+":"+y1+":"+y2);mstr=(y2-y1)+"/"+(x2-x1);m=(y2-y1)/(x2-x1);eqn=m+"x+"+((-m*x1)+y1);console_log("SLOPE_WRITE_PROB_GEN_1:"+x1+":"+x2+":"+y1+":"+y2+":"+mstr+":"+m+":"+eqn);if(m==Number.POSITIVE_INFINITY||m==Number.NEGATIVE_INFINITY){mstr="undefined";m="undefined";eqn=String(x1)}if(i<6&&(m===0||m=="undefined")){hasHV=true}if(m===0){hasH=true;hv_index[0]=i-1}if(m==="undefined"){hasV=true;hv_index[1]=i-1}hasHV=hasH||hasV;if(mstr.indexOf("/")>-1){mstr=Math.simpleFrac(mstr)}if(mstr.split("/")[1]=="1"){mstr=mstr.split("/")[0]}_data.push([[x1,y1,x2,y2,mstr,m,eqn],m])}if(!hasHV&&(!this.actType)){var index=Array.randomNumberArray(0,lim-1,2,true);var t=Math.rand(1);var nItem=_data[index[0]];nItem[0][3]=nItem[0][1];nItem[0][4]="0/"+nItem[0][4].split("/")[1];nItem[0][5]=0;nItem[1]=0;if(nItem[0][0]==nItem[0][2]){nItem[0][0]=nItem[0][2]-1}_data[index[0]]=nItem;nItem=_data[index[1]];nItem[0][2]=nItem[0][0];nItem[0][4]="undefined";nItem[0][5]="undefined";nItem[1]="undefined";if(nItem[0][1]==nItem[0][3]){nItem[0][1]=nItem[0][3]-1}_data[index[1]]=nItem}else{if(!this.actType){var indx,en;var nItem;if(!hasH&&hasV){en=hv_index[1];var da=en===0?[]:Array.randomNumberArray(0,en-1,1,true);var da2=en===lim-1?[]:Array.randomNumberArray(en+1,lim-1,1,true);indx=da.concat(da2)[0];nItem=_data[indx];nItem[0][3]=nItem[0][1];nItem[0][4]="0/"+nItem[0][4].split("/")[1];nItem[0][5]=0;nItem[1]=0;if(nItem[0][0]==nItem[0][2]){nItem[0][0]=nItem[0][2]-1}_data[indx]=nItem}else{if(!hasV&&hasH){en=hv_index[0];var da=en===0?[]:Array.randomNumberArray(0,en-1,1,true);var da2=en===lim-1?[]:Array.randomNumberArray(en+1,lim-1,1,true);indx=da.concat(da2)[0];nItem=_data[indx];nItem[0][2]=nItem[0][0];nItem[0][4]="undefined";nItem[0][5]="undefined";nItem[1]="undefined";if(nItem[0][1]==nItem[0][3]){nItem[0][1]=nItem[0][3]-1}_data[indx]=nItem}}}}}if(this.topic_id=="slope_write_basic"){var _data=[];var ax1=0;var ay1=Array.randomNumberArray(1,10,10,true);var ax2a=Array.randomNumberArray(-9,-1,5,true);var ax2b=Array.randomNumberArray(1,9,5,true);var ax2=Array.shuffleArray(ax2a.concat(ax2b));var ay2=0;var x1,x2,y1,y2,mstr,m;console_log("SLOPE_WRITE_PROB_GEN:Basic");for(var i=1;i<=10;i++){var tx1=ax1;var tx2=ax2[i-1];var ty1=ay1[i-1];var ty2=ay2;x1=tx1;x2=tx2;y1=ty1;y2=ty2;console_log("SLOPE_BASIC_PROB_GEN_0:"+x1+":"+x2+":"+y1+":"+y2);mstr=(y2-y1)+"/"+(x2-x1);m=(y2-y1)/(x2-x1);eqn=m+"x+"+((-m*x1)+y1);console_log("SLOPE_WRITE_PROB_GEN_1:"+x1+":"+x2+":"+y1+":"+y2+":"+mstr+":"+m+":"+eqn);if(m==Number.POSITIVE_INFINITY||m==Number.NEGATIVE_INFINITY){mstr="undefined";m="undefined";eqn=String(x1)}if(i<6&&(m===0||m=="undefined")){hasHV=true}if(mstr.indexOf("/")>-1){mstr=Math.simpleFrac(mstr)}if(mstr.split("/")[1]=="1"){mstr=mstr.split("/")[0]}_data.push([[x1,y1,x2,y2,mstr,m,eqn],m])}}if(this.topic_id=="slope_plot"){var am0=["0","1","2","3","4","5","6","1/2","1/3","1/4","1/5","1/6","2/3","3/4","2/5","3/5","4/5"];var am1=Array.shuffleArray(am0,10);var mstr,m;var _data=[];for(var i=1;i<=10;i++){var sym=random(2)?"-":"";var sl=am1[i];sym=sl==String(0)?"":sym;mstr=sym+am1[i];var tm=mstr.split("/");m=tm[1]?tm[0]/tm[1]:Number(tm[0]);_data.push([[mstr,m],[]])}}if(this.topic_id=="slope_intercept_graph"){var _data=[];var am0=["0","1","2","3","4","5","6","1/2","1/3","1/4","1/5","1/6","2/3","3/4","2/5","3/5","4/5"];var am1=Array.shuffleArray(am0,10);var ab=Array.randomNumberArray(-6,6,10,true);var x1,x2,y1,y2,mstr,m;for(var i=1;i<=10;i++){var sym=random(2)?"-":"";var sl=am1[i-1];sym=sl==String(0)?"":sym;mstr=sym+am1[i-1];var tm=mstr.split("/");tm[1]=tm[1]===undefined?"1":tm[1];m=tm[1]?tm[0]/tm[1]:Number(tm[0]);var b=ab[i-1];if(m==0&&b==0){b=([1,-1][random(2)])*random(6)}var eqn="("+mstr+")x+("+b+")";var eqnstr="("+m+")x+("+b+")";var bsign=b<0?"\u2212":"+";var msign=sym=="-"?"\u2212":"";var bstr=Math.abs(b);var mathstr="<math><mrow>";mathstr+="<mi>y</mi><mo>=</mo>";if(tm[1]=="1"){mathstr+="<mtext>"+msign+"</mtext><mn>"+am1[i-1]+"</mn><mi>x</mi><mo>"+bsign+"</mo><mn>"+bstr+"</mn>"}else{if(m==0){mathstr+="<mn>0</mn><mi>x</mi><mo>"+bsign+"</mo><mn>"+bstr+"</mn>"}else{mathstr+="<mrow>"+AuthorApi.getMathML(mstr,"rational","part")+"</mrow><mi>x</mi><mo>"+bsign+"</mo><mn>"+bstr+"</mn>"}}mathstr+="</mrow></math>";_data.push([[[tm[0],tm[1]],mstr,m,b],[eqn,eqnstr,mathstr]])}}if(this.topic_id=="slope_intercept_eqn"){var _data=[];var a1=Array.randomNumberArray(1,20,10,true);var b1=Array.randomNumberArray(1,5,10,!true);var c1=Array.randomNumberArray(-20,20,10,true);var ax1=Array.randomNumberArray(-8,8,10,true);var am0=["0","1","2","3","4","5","6","1/2","1/3","1/4","1/5","1/6","2/3","3/4","2/5","3/5","4/5"];var am1=Array.shuffleArray(am0,10);var ab=Array.randomNumberArray(-8,8,10,true);var x1,x2,y1,y2,mstr,m;for(var i=1;i<=10;i++){if(random(2)){var a=a1[i-1]*([1,-1][random(2)]);var b=b1[i-1]*([1,-1][random(2)]);var c=c1[i-1];var sign1=b<0?"-":"+";var b0=Math.abs(b);b0=b0==1?"":b0;var a0=Math.abs(a);a0=a0==1?a<0?"-":"":a;var m=Math.fixTo(-a/b,12);var yi=Math.fixTo(c/b,12);var eqnstr="("+(m)+")x+("+(yi)+")";var sign0=(a>=0&&b>=0)||(a<0&&b>0)?"-":"+";var mstr=sign0+Math.abs(a)+"/"+Math.abs(b);var eqn="("+-a+"/"+b+")x+("+c+"/"+b+")";_data.push([[a,b,c,"",1],[eqnstr,mstr,yi,m,eqn]])}else{var x1=ax1[i-1];var y1=ab[i-1];var sym=random(2)?"-":"";var sl=am1[i-1];if(sl=="0"){am1[i-1]=String(random(5)+1);sl=am1[i-1]}sym=sl==String(0)?"":sym;mstr=sym+am1[i-1];var tm=mstr.split("/");var sign1=y1<0?"+":"-";var y0=Math.abs(y1);var sign2=x1<0?"+":"-";var x0=Math.abs(x1);m=tm[1]?tm[0]/tm[1]:Number(tm[0]);var yi=((m*-x1)+y1);m=Math.fixTo(m,12);yi=Math.fixTo(yi,12);var eqnstr="("+m+")x+("+(yi)+")";var eqn="";_data.push([[sym+sl,x1,y1,sym,2],[eqnstr,mstr,yi,m,eqn]])}}}if(this.topic_id=="distance_formula_estimate"){var sqrtSymb="v";function isPsq(v){var v1=Math.sqrt(v);var v2=parseInt(v1);return v1==v2}function getSimple(v){var sq;var pre="";var post=v;if(isPsq(v)){return["",String(v)]}for(var i=20;i>=2;i--){sq=i*i;if(i>v){continue}if(v%sq==0){pre=sq;post=v/sq;break}}return[pre,post]}var _data=[];var ax1=Array.randomNumberArray(-8,8,10,true);var ay1=Array.randomNumberArray(-8,8,10,true);var ax2=Array.randomNumberArray(-8,8,10,true);var ay2=Array.randomNumberArray(-8,8,10,true);var x1,x2,y1,y2,mstr,m;for(var i=1;i<=10;i++){var tx1=ax1[i-1];var tx2=ax2[i-1];var ty1=ay1[i-1];var ty2=ay2[i-1];if(tx1>tx2){x1=tx2;x2=tx1;y1=ty1;y2=ty2}else{x1=tx1;x2=tx2;y1=ty1;y2=ty2}if(x2-x1>12){x1=x2-12}else{if(x2-x1<-12){x1=x2+12}}if(y2-y1>12){y1=y2-12}else{if(y2-y1<-12){y1=y2+12}}if(x1==x2&&y1==y2){y1=-y2}if(true){if(x1==x2){if(x2>=0){x1=x2-1}else{x1=x2+1}}if(y1==y2){if(y2>=0){y1=y2-1}else{y1=y2+1}}var d1=Math.sqrt(Math.pow(x2-x1,2)+Math.pow(y2-y1,2));d1=Math.round(Math.fixTo(d1,8));if(d1>12){var ddd=d1-12;if(x1>=0){x1=x1-ddd}else{x1=x1+ddd}if(y1>=0){y1=y1-ddd}else{y1=y1+ddd}if(x2>=0){x2=x2-ddd}else{x2=x2+ddd}if(y2>=0){y2=y2-ddd}else{y2=y2+ddd}}if(x1==x2){if(x2>=0){x1=x2-1}else{x1=x2+1}}if(y1==y2){if(y2>=0){y1=y2-1}else{y1=y2+1}}var d0=Math.sqrt(Math.pow(x2-x1,2)+Math.pow(y2-y1,2));d0=(Math.fixTo(d0,8));if(d0==parseInt(d0)){if(x1>=0){x1=x1-1}else{x1=x1+1}}var d00=Math.sqrt(Math.pow(x2-x1,2)+Math.pow(y2-y1,2));d00=(Math.fixTo(d00,8));if(d00==parseInt(d00)){if(x1>=0){x1=x1-1}else{x1=x1+1}}}tx1=x1;tx2=x2;ty1=y1;ty2=y2;if(tx1>tx2){x1=tx2;x2=tx1;y1=ty1;y2=ty2}else{x1=tx1;x2=tx2;y1=ty1;y2=ty2}mstr=(y2-y1)+"/"+(x2-x1);m=(y2-y1)/(x2-x1);eqn=m+"x+"+((-m*x1)+y1);if(m==Number.POSITIVE_INFINITY||m==Number.NEGATIVE_INFINITY){mstr="undefined";m="undefined";eqn=String(x1)}if(mstr.indexOf("/")>-1){mstr=Math.simpleFrac(mstr)}if(mstr.split("/")[1]=="1"){mstr=mstr.split("/")[0]}var d=Math.pow(x2-x1,2)+Math.pow(y2-y1,2);var dstr=getSimple(d);var ds=Math.sqrt(d);if(true){dstr=String(Math.round(ds));ds=Number(dstr)}_data.push([[x1,y1,x2,y2],[mstr,m,eqn,ds,dstr]])}}if(this.topic_id=="distance_formula_find"){var sqrtSymb="v";function isPsq(v){var v1=Math.sqrt(v);var v2=parseInt(v1);return v1==v2}function getSimple(v){var sq;var pre="";var post=v;if(isPsq(v)){return["",String(v)]}for(var i=20;i>=2;i--){sq=i*i;if(i>v){continue}if(v%sq==0){pre=sq;post=v/sq;break}}return[pre,post]}var _data=[];var ax1=Array.randomNumberArray(-8,8,10,true);var ay1=Array.randomNumberArray(-8,8,10,true);var ax2=Array.randomNumberArray(-8,8,10,true);var ay2=Array.randomNumberArray(-8,8,10,true);var x1,x2,y1,y2,mstr,m;for(var i=1;i<=10;i++){var tx1=ax1[i-1];var tx2=ax2[i-1];var ty1=ay1[i-1];var ty2=ay2[i-1];if(tx1>tx2){x1=tx2;x2=tx1;y1=ty1;y2=ty2}else{x1=tx1;x2=tx2;y1=ty1;y2=ty2}if(x2-x1>12){x1=x2-12}else{if(x2-x1<-12){x1=x2+12}}if(y2-y1>12){y1=y2-12}else{if(y2-y1<-12){y1=y2+12}}if(x1==x2&&y1==y2){y1=-y2}tx1=x1;tx2=x2;ty1=y1;ty2=y2;if(tx1>tx2){x1=tx2;x2=tx1;y1=ty1;y2=ty2}else{x1=tx1;x2=tx2;y1=ty1;y2=ty2}mstr=(y2-y1)+"/"+(x2-x1);m=(y2-y1)/(x2-x1);eqn=m+"x+"+((-m*x1)+y1);if(m==Number.POSITIVE_INFINITY||m==Number.NEGATIVE_INFINITY){mstr="undefined";m="undefined";eqn=String(x1)}if(mstr.indexOf("/")>-1){mstr=Math.simpleFrac(mstr)}if(mstr.split("/")[1]=="1"){mstr=mstr.split("/")[0]}var d=Math.pow(x2-x1,2)+Math.pow(y2-y1,2);var dstr=getSimple(d);var ds=Math.sqrt(d);_data.push([[x1,y1,x2,y2],[mstr,m,eqn,ds,dstr]])}}if(this.topic_id=="plot_numberline"){var _data=[];var p_1=Array.randomNumberArray(1,9,2,!false);var p_2=Array.randomNumberArray(1,9,1,true);var p_3=Array.randomNumberArray(1,99,1,true);var p_4=Array.randomNumberArray(11,99,1,true);var p_5=Array.randomNumberArray(-999,-111,1,true);var p_6=Array.randomNumberArray(1,999,1,true);var p_7=Array.randomNumberArray(-999,999,3,true);var p_a;var p_b;var p_n;if(this.actType=="basic"){p_1=Array.randomNumberArray(1,9,9,!false);p_2=Array.randomNumberArray(1,9,9,true);p_3=Array.randomNumberArray(1,99,11,true);p_4=Array.randomNumberArray(11,99,11,true);p_b=[];p_n=[];p_a=[p_1.splice(0,1)[0],-1*p_1.splice(0,1)[0],p_2.splice(0,1)[0]/10,-1*p_3.splice(0,1)[0]/10,p_4.splice(0,1)[0]];for(var z=0;z<p_1.length;z++){var r=[-1,1][Math.rand(0,1)];p_b.push(p_1[z]*r)}for(z=0;z<p_2.length;z++){p_b.push(p_2[z]/10)}for(z=0;z<p_3.length;z++){p_b.push(-1*p_3[z]/10)}p_b=p_b.concat(p_4);p_b.shuffle();p_n=p_a.concat(p_b)}for(var i=1;i<=mngr.totalQuest;i++){var ni=i;if(this.actType=="basic"){_data.push([[p_n[i-1],0],[]])}else{if(ni==1){_data.push([[p_1[i-1],0],[]])}else{if(ni==2){_data.push([[-p_1[i-1],0],[]])}else{if(ni==3){_data.push([[p_2[0]/10,0],[]])}else{if(ni==4){_data.push([([-p_3[0]/10,0]),[]])}else{if(ni==5){_data.push([[p_4[0],0],[]])}else{if(ni==6){_data.push([[p_5[0],0],[]])}else{if(ni==7){_data.push([[p_6[0]/1000,0],[]])}else{_data.push([[p_7[i-8]/Math.pow(10,random(3)),0],[]])}}}}}}}}}}if(this.topic_id=="inequality_one_variable"){var q_1=[];var q_2=[];var q_3=[];var q1=[];var q2=[];var q3=[];var _data=[];var nT=5;var ineqlArr=["lt","le","gt","ge"];for(var i=-20;i<=20;i++){if(i<-10||i>10){for(var j=0;j<4;j++){q_3.push([[i,null,ineqlArr[j],null],[]])}}else{if(i<-5||i>5){for(var j=0;j<4;j++){q_2.push([[i,null,ineqlArr[j],null],[]])}}else{for(var j=0;j<4;j++){q_1.push([[i,null,ineqlArr[j],null],[]])}}}}function convertToAnd(str){var s=str;var n=s[1]*1;var ln=n-(random(5)+2);var ls=ineqlArr[random(2)];var rs=ineqlArr[random(2)];return[[ln,n,ls,rs],[]]}function shuffleQuestions(){q1=[].concat(q_1);q2=[].concat(q_2);q3=[].concat(q_3);q1=Array.shuffleArray(q1,q1.length);q2=Array.shuffleArray(q2,q1.length);q3=Array.shuffleArray(q3,q1.length)}if(q1.length<7){shuffleQuestions()}tq1=q1.splice(0,nT+2);tq2=q2.splice(0,nT+2);tq3=q3.splice(0,nT+2);if(actType=="add_compound"){tq1[nT]=convertToAnd(tq1[nT]);tq1[nT+1]=convertToAnd(tq1[nT+1]);tq2[nT]=convertToAnd(tq2[nT]);tq2[nT+1]=convertToAnd(tq2[nT+1]);tq3[nT]=convertToAnd(tq3[nT]);tq3[nT+1]=convertToAnd(tq3[nT+1])}else{if(actType=="only_compound"){for(var j=0;j<nT+2;j++){tq1[j]=convertToAnd(tq1[j]);tq2[j]=convertToAnd(tq2[j]);tq3[j]=convertToAnd(tq3[j])}}}_data=[].concat(tq1,tq2,tq3)}if(this.topic_id=="addition_practice"){var d1=Array.randomNumberArray(1,9,9,true);var d2=Array.randomNumberArray(10,99,20,true);var d3=Array.randomNumberArray(100,999,20,true);var ldata=[];var rdata=[];var _data=[];var dif=0;var sub=this.actType?this.actType:[];if(sub){sub=eval(sub)}for(var i=1;i<=10;i++){dif=i==1||i==6?1:dif;dif=i==2||i==7?2:dif;dif=i==3||i==8?3:dif;dif=i==4||i==9?4:dif;dif=i==5||i==10?5:dif;if(sub.length){var nd=sub[i-1];dif=nd?nd:dif}else{if(i%3==0){dif=[4,5][Math.rand(1)]}}if(dif==1){ldata=[d1.pop(),d1.pop()]}else{if(dif==2){ldata=[d2.pop(),d1.pop()]}else{if(dif==3){ldata=[d2.pop(),d2.pop()]}else{if(dif==4){ldata=[d2.pop(),d3.pop()]}else{if(dif==5){ldata=[d3.pop(),d3.pop()]}}}}}rdata=ldata[0]+ldata[1];_data.push([ldata,rdata])}}if(this.topic_id=="subtraction_practice"){var d1=Array.randomNumberArray(1,9,9,true);var d2=Array.randomNumberArray(10,99,20,true);var d3=Array.randomNumberArray(100,999,20,true);var ldata=[];var rdata=[];var _data=[];var dif=0;var sub=this.actType?this.actType:[];if(sub){sub=eval(sub)}for(var i=1;i<=10;i++){dif=i==1||i==6?1:dif;dif=i==2||i==7?2:dif;dif=i==3||i==8?3:dif;dif=i==4||i==9?4:dif;dif=i==5||i==10?5:dif;if(sub.length){var nd=sub[i-1];dif=nd?nd:dif}else{if(i%3==0){dif=[4,5][Math.rand(1)]}}if(dif==1){ldata=[d1.pop(),d1.pop()]}else{if(dif==2){ldata=[d2.pop(),d1.pop()]}else{if(dif==3){ldata=[d2.pop(),d2.pop()]}else{if(dif==4){ldata=[d2.pop(),d3.pop()]}else{if(dif==5){ldata=[d3.pop(),d3.pop()]}}}}}if(ldata[0]<ldata[1]){var a=ldata[0];var b=ldata[1];ldata=[b,a]}rdata=ldata[0]-ldata[1];_data.push([ldata,rdata])}}if(this.topic_id=="multiplication_practice"){var d1=Array.randomNumberArray(1,9,10,false);var d2=Array.randomNumberArray(10,99,20,true);var d3=Array.randomNumberArray(100,999,20,true);var ldata=[];var rdata=[];var _data=[];var dif=0;var sub=this.actType?this.actType:[];if(sub){sub=eval(sub)}for(var i=1;i<=10;i++){dif=i==1||i==6?1:dif;dif=i==2||i==7?1:dif;dif=i==3||i==8?2:dif;dif=i==4||i==9?3:dif;dif=i==5||i==10?4:dif;if(sub.length){var nd=sub[i-1];dif=nd?nd:dif}else{if(i%3==0){dif=[3,4][Math.rand(1)]}}if(dif==1){ldata=[d1.pop(),d1.pop()]}else{if(dif==1){ldata=[d1.pop(),d1.pop()]}else{if(dif==2){ldata=[d2.pop(),d1.pop()]}else{if(dif==3){ldata=[d2.pop(),d2.pop()]}else{if(dif==4){ldata=[d3.pop(),d2.pop()]}}}}}rdata=ldata[0]*ldata[1];_data.push([ldata,rdata])}}if(this.topic_id=="division_practice"){var d1=Array.randomNumberArray(2,9,20,false);var d1a=[2,3,4,5];var d2=Array.randomNumberArray(10,99,89,true);var d3=Array.randomNumberArray(100,999,899,true);var ldata=[];var rdata=[];var _data=[];var dif=0;var sub=this.actType?this.actType:[];if(sub){sub=eval(sub)}for(var i=1;i<=10;i++){dif=i==1||i==6?1:dif;dif=i==2||i==7?1:dif;dif=i==3||i==8?2:dif;dif=i==4||i==9?3:dif;dif=i==5||i==10?4:dif;if(sub.length){var nd=sub[i-1];dif=nd?nd:dif}else{if(i%3==0){dif=[3,4][Math.rand(1)]}}var a;var b;var c;if(dif==1){a=d1.pop();b=d1.pop();c=a*b;ldata=[c,a]}else{if(dif==1){a=d1.pop();b=d1.pop();c=a*b;ldata=[c,a]}else{if(dif==2){a=d1.pop();var ind;for(var j=0;j<d2.length;j++){ind=j;var n=d2[j];var d=a;var r=n%d;var q=n/d;console_log("DIV_PRACT_3:"+a+":"+n+":"+r+":"+q+":"+j);if(r===0&&q<100&&q>9){break}}b=d2.splice(ind,1);console_log("DIV_PRACT:"+b+":"+a);ldata=[b,a]}else{if(dif==3){a=d1.pop();var ind;for(var j=0;j<d3.length;j++){ind=j;var n=d3[j];var d=a;var r=n%d;var q=n/d;console_log("DIV_PRACT_4:"+a+":"+n+":"+r+":"+q+":"+j);if(r===0&&q<1000&&q>99){break}}b=d3.splice(ind,1);console_log("DIV_PRACT:"+b+":"+a);ldata=[b,a]}else{if(dif==4){a=d2.pop();var ind;for(var j=0;j<d3.length;j++){ind=j;var n=d3[j];var d=a;var r=n%d;var q=n/d;console_log("DIV_PRACT_5:"+a+":"+n+":"+r+":"+q+":"+j);if(r===0){break}}b=d3.splice(ind,1);console_log("DIV_PRACT:"+b+":"+a);ldata=[b,a]}}}}}rdata=ldata[0]/ldata[1];_data.push([ldata,rdata])}}if(this.topic_id=="fraction_model"){var d1=Array.randomNumberArray(1,11,10,true);var d2=Array.randomNumberArray(2,12,10,true);var ldata=[];var rdata=[];var _data=[];var num;var den;var diff;var dx;for(var i=0;i<10;i++){num=d1[i];if(actType=="mixed"){den=d2[i];den=den==12?random(6)+2:den;diff=12-den;dx=random(diff)+1;num=num<=den?den+dx:num}else{den=d2[i];den=den==2?random(5)+2:den;diff=den-2;dx=random(diff)+1;num=num>=den?den-dx:num}rdata=num+"/"+den;rdata=Math.simpleFrac(rdata);ldata=rdata.split("/");_data.push([ldata,rdata])}}if(this.topic_id=="percent_inc_dec"){var m1=Array.randomNumberArray(1,9,7,true);var n1=Array.randomNumberArray(1,3,7,false);var p1=Array.randomNumberArray(1,5,7,false);var p2=Array.randomNumberArray(1,20,7,true);var old=Array.randomNumberArray(100,500,10,true);var rdata=[];var _data=[];var s;for(var i=0;i<10;i++){var ldata=[];s=[1,-1][Math.randomNumber(0,1)];if(i<3){ldata[0]=m1[i]*Math.pow(10,n1[i]);ldata[1]=Math.abs(ldata[0]+(s*(0.1*p1[i])*ldata[0]));ldata[2]=""}else{if(i<7){ldata[0]=m1[i]*Math.pow(10,n1[i]);ldata[1]=Math.abs(ldata[0]+(s*(0.1*p2[i]*5)*ldata[0]));ldata[2]=""}else{ldata[0]=old[i];ldata[1]=Math.abs(Math.randomNumber(Math.round(old[i]/2),2*old[i]));ldata[2]="Round the answer to the nearest whole percent."}}ldata[0]=Math.fixTo(ldata[0],8);ldata[1]=Math.fixTo(ldata[1],8);rdata=((ldata[1]-ldata[0])*100)/ldata[0];rdata=Math.round(Math.fixTo(rdata,8));console_log("PERCENT_INC_DEC: "+ldata[0]+":"+ldata[1]+":"+rdata);_data.push([ldata,rdata])}}if(this.topic_id=="rounding_numbers"){function RND(a,b){return Math.round(Math.random()*(b-a))+a}function fixTo(n,d){var r=Math.pow(10,d);var v=Math.round(n*r)/r;return v}var pv_name_arr=["one","ten","hundred","thousand","ten thousand","hundred thousand"];function getNum(n){console_log("GET_NUM: "+n);var expo=RND(4,n);var placevalue=RND(1,expo-2);var num2b_rounded=RND(1,Math.pow(10,expo));return{n:num2b_rounded,p:placevalue,e:expo}}function getProblem(lim){var placevalue_name;var p_placevalue_name;var num;var expo;var placevalue;var num2b_rounded;var chk;var multip;var rounding_digit;var dir;var answer;do{num=getNum(lim);num2b_rounded=num.n;placevalue=num.p;expo=num.e;multip=Math.pow(10,placevalue);d=num2b_rounded/multip;chk=d}while(chk==parseInt(String(chk)));placevalue_name=pv_name_arr[placevalue];p_placevalue_name=pv_name_arr[placevalue-1];rounding_digit=chk-parseInt(String(chk));rounding_digit=Math.floor(10*fixTo(rounding_digit,placevalue));console_log(num2b_rounded+":"+d+":"+expo+":"+placevalue+" --> "+rounding_digit);if(rounding_digit<5){dir="down";answer=Math.floor(chk)*multip}else{dir="up";answer=Math.ceil(chk)*multip}console_log("ANSWER::: "+num2b_rounded+" ---> "+answer);return[[num2b_rounded,placevalue_name,p_placevalue_name,rounding_digit,dir],answer]}var _data=[];var lm=this.actType=="level2"?8:4;console_log("ACT_SUB_TYPE:"+this.actType+":"+lm);for(var i=0;i<10;i++){var q=getProblem(lm);_data.push(q)}}if(this.topic_id=="parabola_fx_vertex"){var _data=[];var a_arr=["1/4","1/3","1/2","2/3","3/4","1","4/3","3/2","2","3","4"];var h_arr=Array.randomNumberArray(-5,5,mngr.totalQuest,false);var k_arr=Array.randomNumberArray(-5,5,mngr.totalQuest,false);a_arr.shuffle();var a,h,k;for(var i=0;i<mngr.totalQuest;i++){h=h_arr[i];k=k_arr[i];if(h==k&&h===0){if(Math.rand(2)){h=[-1,1];h.shuffle();h=h[0]*Math.rand(1,6)}else{k=[-1,1];k.shuffle();k=h[0]*Math.rand(1,6)}}var asign=["-",""];asign.shuffle();asign=asign[0];var av=a_arr[i];a=asign+av;var an=eval(a);ah=2*an*h;c=(an*(h*h))+k;ah=Math.fixTo(ah,12);c=Math.fixTo(c,12);var dah=Math.abs(ah);var dc=Math.abs(c);var da=a=="1"?"":a;da=da=="-1"?"-":da;dah=dah==1?"":dah;var a_eqn=av==1?"<mo>"+da+"</mo>":AuthorApi.getMathML(a,"rational","part");var s1=h<0?"+":"-";var s2=c<0?"-":"+";var s3=k<0?"+":"-";var s4=ah<0?"+":"-";var dh=Math.abs(h);var dk=Math.abs(k);var k_eqn=k==0?"":"<mo>"+s3+"</mo><mtext >"+dk+"</mtext>";var h_eqn=h==0?a_eqn+'<msup><mtext mathvariant="italic">x</mtext><mn>2</mn></msup>':a_eqn+'<msup><mfenced open="(" close=")" separators=""><mtext mathvariant="italic">x</mtext><mo>'+s1+"</mo><mtext>"+dh+"</mtext></mfenced><mn>2</mn></msup>";var disp_eqn='<math><mrow><mtext mathvariant="italic">y</mtext>'+k_eqn+"<mo>=</mo>"+h_eqn+"</mrow></math>";var eqn="("+a+")*x^2"+s4+dah+"*x"+s2+dc;_data.push([[a,h,k,disp_eqn,eqn],[a,h,k,ah,c]])}}if(this.topic_id=="parabola_fy_vertex"){var _data=[];var a_arr=["1/4","1/3","1/2","2/3","3/4","1","4/3","3/2","2","3","4"];var h_arr=Array.randomNumberArray(-5,5,mngr.totalQuest,false);var k_arr=Array.randomNumberArray(-5,5,mngr.totalQuest,false);a_arr.shuffle();var a,h,k;for(var i=0;i<mngr.totalQuest;i++){h=h_arr[i];k=k_arr[i];if(h==k&&h===0){if(Math.rand(2)){h=[-1,1];h.shuffle();h=h[0]*Math.rand(1,6)}else{k=[-1,1];k.shuffle();k=h[0]*Math.rand(1,6)}}var asign=["-",""];asign.shuffle();asign=asign[0];var av=a_arr[i];a=asign+av;var an=eval(a);ah=2*an*h;c=(an*(h*h))+k;ah=Math.fixTo(ah,12);c=Math.fixTo(c,12);var dah=Math.abs(ah);var dc=Math.abs(c);var da=a=="1"?"":a;da=da=="-1"?"-":da;dah=dah==1?"":dah;var a_eqn=av==1?"<mo>"+da+"</mo>":AuthorApi.getMathML(a,"rational","part");var s1=h<0?"+":"-";var s2=c<0?"-":"+";var s3=k<0?"+":"-";var s4=ah<0?"+":"-";var dh=Math.abs(h);var dk=Math.abs(k);var k_eqn=k==0?"":"<mo>"+s3+"</mo><mtext >"+dk+"</mtext>";var h_eqn=h==0?a_eqn+'<msup><mtext mathvariant="italic">y</mtext><mn>2</mn></msup>':a_eqn+'<msup><mfenced open="(" close=")" separators=""><mtext mathvariant="italic">y</mtext><mo>'+s1+"</mo><mtext>"+dh+"</mtext></mfenced><mn>2</mn></msup>";var disp_eqn='<math><mrow><mtext mathvariant="italic">x</mtext>'+k_eqn+"<mo>=</mo>"+h_eqn+"</mrow></math>";var eqn="("+a+")*y^2"+s4+dah+"*y"+s2+dc;_data.push([[a,h,k,disp_eqn,eqn],[a,h,k,ah,c]])}}if(this.topic_id=="qe_vertexform_graph"){console_log("qe_vertexform_graph");var _data=[];var a_arr=["1/4","1/3","1/2","2/3","3/4","1","4/3","3/2","2","3","4"];var h_arr=Array.randomNumberArray(-4,4,mngr.totalQuest,false);var k_arr=Array.randomNumberArray(-4,4,mngr.totalQuest,false);a_arr.shuffle();var a,h,k,ah,c;for(var i=0;i<mngr.totalQuest;i++){var asign=["-",""];asign.shuffle();asign=asign[0];var av=a_arr[i];a=asign+av;var an=eval(a);h=h_arr[i];k=k_arr[i];ah=2*an*h;c=(an*(h*h))+k;ah=Math.fixTo(ah,12);c=Math.fixTo(c,12);var s1=ah<0?"+":"-";var s2=c<0?"-":"+";var dah=Math.abs(ah);var dc=Math.abs(c);var disp_eqn="";var eqn="("+a+")*x^2"+s1+dah+"*x"+s2+dc;_data.push([[a,h,k,disp_eqn,eqn],[a,h,k,ah,c]])}}if(this.topic_id=="qe_vertexform_eqn"){var _data=[];var a_arr=["1/5","1/4","1/3","2/5","1/2","3/5","2/3","3/4","4/5","1","5/4","4/3","3/2","5/3","2","5/2","3","4","5"];var a_arr2=["1/5","1/4","1/3","2/5","1/2","3/5","2/3","3/4","4/5","5/4","4/3","3/2","5/3","2","5/2","3","4","5"];var h_arr0=Array.randomNumberArray(-10,-1,mngr.totalQuest,false);var k_arr0=Array.randomNumberArray(-10,-1,mngr.totalQuest,false);var h_arr1=Array.randomNumberArray(1,10,mngr.totalQuest,false);var k_arr1=Array.randomNumberArray(1,10,mngr.totalQuest,false);var h_arr=h_arr0.concat(h_arr1);var k_arr=k_arr0.concat(k_arr1);h_arr.shuffle();k_arr.shuffle();a_arr.shuffle();a_arr2.shuffle();var a,h,k,ah,c;for(var i=0;i<mngr.totalQuest;i++){var asign=["-",""];asign.shuffle();asign=asign[0];var av=a_arr[i];if(this.actType=="with_a_as_1"){av="1";asign=""}else{if(this.actType=="with_a_as_m1"){av="1";asign="-"}else{if(this.actType=="without_a_as_1"){av=a_arr2[i]}}}a=asign+av;var an=eval(a);h=h_arr[i];k=k_arr[i];ah=2*an*h;c=(an*(h*h))+k;ah=Math.fixTo(ah,12);c=Math.fixTo(c,12);var s1=ah<0?"+":"-";var s2=c<0?"-":"+";var dah=Math.abs(ah);var dc=Math.abs(c);var da=a=="1"?"":a;da=da=="-1"?"-":da;dah=dah==1?"":dah;var eah=dah;var ec=dc;var coeff_x2,coeff_x,coeff_c;coeff_x2=a;if(dah!=""&&dah!="-"&&av.indexOf("/")>-1){var afrac=av.split("/");dah=Math.abs(2*afrac[0]*h)+"/"+afrac[1];dah=Math.simpleFrac(dah);coeff_x=(s1=="+"?"":"-")+dah;dah=AuthorApi.getMathML(dah,"rational","part")}else{if(dah!=""&&dah!="-"){coeff_x=(s1=="+"?"":"-")+dah;dah=AuthorApi.getMathML(dah,"rational","part")}else{coeff_x=(s1=="+"?"":"-")+"1"}}if(String(dc).indexOf(".")>-1){var afrac=a.split("/");dc=Math.abs((afrac[0]*h*h)+(k*afrac[1]))+"/"+afrac[1];dc=Math.simpleFrac(dc);coeff_c=(s2=="+"?"":"-")+dc;dc=AuthorApi.getMathML(dc,"rational","part")}else{coeff_c=(s2=="+"?"":"-")+dc;dc=AuthorApi.getMathML(dc,"rational","part")}var cml="<mo>"+s2+"</mo>"+dc;if(c==0){cml=""}var a_eqn=av==1?"<mo>"+da+"</mo>":AuthorApi.getMathML(a,"rational","part");var disp_eqn='<math><mrow><mtext mathvariant="italic">y</mtext><mo>=</mo>'+a_eqn+'<msup><mtext mathvariant="italic">x</mtext><mn>2</mn></msup><mo>'+s1+"</mo>"+dah+'<mtext mathvariant="italic">x</mtext>'+cml+"</mrow></math>";var eqn="("+a+")*x^2"+s1+eah+"*x"+s2+ec;_data.push([[a,h,k,disp_eqn,eqn,coeff_x2,coeff_x,coeff_c],[a,h,k,ah,c]])}}if(this.topic_id=="qe_standardform_eqn"){var _data=[];var a_arr=["1/5","1/4","1/3","2/5","1/2","3/5","2/3","3/4","4/5","1","5/4","4/3","3/2","5/3","2","5/2","3","4","5"];var a0_arr=["1","2","3","4","5"];var a1_arr=["1/5","1/4","1/3","2/5","1/2","3/5","2/3","3/4","4/5","5/4","4/3","3/2","5/3","5/2"];var h_arr0=Array.randomNumberArray(-10,-1,mngr.totalQuest,false);var k_arr0=Array.randomNumberArray(-10,-1,mngr.totalQuest,false);var h_arr1=Array.randomNumberArray(1,10,mngr.totalQuest,false);var k_arr1=Array.randomNumberArray(1,10,mngr.totalQuest,false);var h_arr=h_arr0.concat(h_arr1);var k_arr=k_arr0.concat(k_arr1);h_arr.shuffle();k_arr.shuffle();a_arr.shuffle();var an_arr=a0_arr.splice(0,3);a1_arr=a1_arr.concat(a0_arr);a1_arr.shuffle();if(this.actType=="simple"){a_arr=an_arr.concat(a1_arr)}var a,h,k,ah,c;for(var i=0;i<mngr.totalQuest;i++){var asign=["-",""];asign.shuffle();asign=asign[0];var av=a_arr[i];a=asign+av;var an=eval(a);h=h_arr[i];k=k_arr[i];ah=2*an*h;c=(an*(h*h))+k;ah=Math.fixTo(ah,12);c=Math.fixTo(c,12);var dah=Math.abs(ah);var dc=Math.abs(c);var da=a=="1"?"":a;da=da=="-1"?"-":da;dah=dah==1?"":dah;var a_eqn=av==1?"<mo>"+da+"</mo>":AuthorApi.getMathML(a,"rational","part");var s1=h<0?"+":"-";var s2=c<0?"-":"+";var s3=k<0?"+":"-";var s4=ah<0?"+":"-";var dh=Math.abs(h);var dk=Math.abs(k);var k_eqn=k==0?"":"<mo>"+s3+"</mo><mtext >"+dk+"</mtext>";var h_eqn=h==0?a_eqn+'<msup><mtext mathvariant="italic">x</mtext><mn>2</mn></msup>':a_eqn+'<msup><mfenced open="(" close=")" separators=""><mtext mathvariant="italic">x</mtext><mo>'+s1+"</mo><mtext>"+dh+"</mtext></mfenced><mn>2</mn></msup>";var disp_eqn='<math><mrow><mtext mathvariant="italic">y</mtext>'+k_eqn+"<mo>=</mo>"+h_eqn+"</mrow></math>";var eqn="("+a+")*x^2"+s4+dah+"*x"+s2+dc;_data.push([[a,h,k,disp_eqn,eqn],[a,h,k,ah,c]])}}if(this.topic_id=="qe_standardform_graph"){console_log("qe_vertexform_graph");var _data=[];var a_arr=["1/4","1/3","1/2","1","2","3","4","1/4","1/3","1/2","1","2","3","4"];var h_arr=Array.randomNumberArray(-4,4,10,false);var k_arr=Array.randomNumberArray(-4,4,10,false);a_arr.shuffle();var a,h,k,ah,c;for(var i=0;i<10;i++){var asign=["-",""];asign.shuffle();asign=asign[0];var av=a_arr[i];a=asign+av;var an=eval(a);h=h_arr[i];k=k_arr[i];ah=2*an*h;c=(an*(h*h))+k;ah=Math.fixTo(ah,12);c=Math.fixTo(c,12);var s1=ah<0?"+":"-";var s2=c<0?"-":"+";var dah=Math.abs(ah);var dc=Math.abs(c);var disp_eqn="";var eqn="("+a+")*x^2"+s1+dah+"*x"+s2+dc;var jeqn="(("+a+")*Math.pow(x,2))+((-2*("+a+")*"+h+")*x)+((("+a+")*("+h*h+"))+"+k+")";console_log("----------------------------------");var arr1=[];var arr2=[];var pt;for(var x=8;x>-8;x--){var x0=x;var y0=Math.fixTo(eval(jeqn),8);var isWhole=y0==parseInt(y0);var notVertex=x0!=h&&y0!=k;var withinscope=Math.abs(y0)<=8;if(notVertex&&withinscope){if(!isWhole){y0=Math.simpleFrac(y0);pt=[x0,y0];arr2.push(pt)}else{pt=[x0,y0];arr1.push(pt)}console_log(x+" ---> "+pt)}}if(arr1.length){pt=arr1[0]}else{pt=arr2[0]}console_log("POINT:"+pt);console_log(i+" --> "+a+":"+h+":"+k+":"+eqn);_data.push([[a,h,k,disp_eqn,eqn,pt],[a,h,k,ah,c]])}}if(this.topic_id=="parabola_axis_symmetry_graph"){console_log("parabola_axis_symmetry_graph");var _data=[];var a_arr=["1/4","1/3","1/2","2/3","3/4","1","4/3","3/2","2","3","4"];var h_arr=Array.randomNumberArray(-5,5,mngr.totalQuest,false);var k_arr=Array.randomNumberArray(-5,5,mngr.totalQuest,false);a_arr.shuffle();var a,h,k,ah,c;for(var i=0;i<mngr.totalQuest;i++){var asign=["-",""];asign.shuffle();asign=asign[0];var av=a_arr[i];a=asign+av;var an=eval(a);h=h_arr[i];k=k_arr[i];ah=2*an*h;c=(an*(h*h))+k;ah=Math.fixTo(ah,12);c=Math.fixTo(c,12);var s1=ah<0?"+":"-";var s2=c<0?"-":"+";var dah=Math.abs(ah);var dc=Math.abs(c);var disp_eqn="";var eqn="("+a+")*x^2"+s1+dah+"*x"+s2+dc;var xval=_data.push([[a,h,k,disp_eqn,eqn],[a,h,k,ah,c]])}}if(this.topic_id=="parabola_axis_symmetry_eqn-std"){var _data=[];var a_arr=["1/5","1/4","1/3","2/5","1/2","3/5","2/3","3/4","4/5","1","5/4","4/3","3/2","5/3","2","5/2","3","4","5"];var h_arr0=Array.randomNumberArray(-10,-1,mngr.totalQuest,false);var k_arr0=Array.randomNumberArray(-10,-1,mngr.totalQuest,false);var h_arr1=Array.randomNumberArray(1,10,mngr.totalQuest,false);var k_arr1=Array.randomNumberArray(1,10,mngr.totalQuest,false);var h_arr=h_arr0.concat(h_arr1);var k_arr=k_arr0.concat(k_arr1);h_arr.shuffle();k_arr.shuffle();a_arr.shuffle();var a,h,k,ah,c;for(var i=0;i<mngr.totalQuest;i++){var asign=["-",""];asign.shuffle();asign=asign[0];var av=a_arr[i];a=asign+av;var an=eval(a);h=h_arr[i];k=k_arr[i];ah=2*an*h;c=(an*(h*h))+k;ah=Math.fixTo(ah,12);c=Math.fixTo(c,12);var s1=ah<0?"+":"-";var s2=c<0?"-":"+";var dah=Math.abs(ah);var dc=Math.abs(c);var da=a=="1"?"":a;da=da=="-1"?"-":da;dah=dah==1?"":dah;var eah=dah;var ec=dc;var coeff_x2,coeff_x,coeff_c;coeff_x2=a;if(dah!=""&&dah!="-"&&av.indexOf("/")>-1){var afrac=av.split("/");dah=Math.abs(2*afrac[0]*h)+"/"+afrac[1];dah=Math.simpleFrac(dah);coeff_x=(s1=="+"?"":"-")+dah;dah=AuthorApi.getMathML(dah,"rational","part")}else{if(dah!=""&&dah!="-"){coeff_x=(s1=="+"?"":"-")+dah;dah=AuthorApi.getMathML(dah,"rational","part")}else{coeff_x=(s1=="+"?"":"-")+"1"}}if(String(dc).indexOf(".")>-1){var afrac=a.split("/");dc=Math.abs((afrac[0]*h*h)+(k*afrac[1]))+"/"+afrac[1];dc=Math.simpleFrac(dc);coeff_c=(s2=="+"?"":"-")+dc;dc=AuthorApi.getMathML(dc,"rational","part")}else{coeff_c=(s2=="+"?"":"-")+dc;dc=AuthorApi.getMathML(dc,"rational","part")}var a_eqn=av==1?"<mo>"+da+"</mo>":AuthorApi.getMathML(a,"rational","part");var disp_eqn='<math><mrow><mtext mathvariant="italic">y</mtext><mo>=</mo>'+a_eqn+'<msup><mtext mathvariant="italic">x</mtext><mn>2</mn></msup><mo>'+s1+"</mo>"+dah+'<mtext mathvariant="italic">x</mtext><mo>'+s2+"</mo>"+dc+"</mrow></math>";var eqn="("+a+")*x^2"+s1+eah+"*x"+s2+ec;_data.push([[a,h,k,disp_eqn,eqn,coeff_x2,coeff_x,coeff_c],[a,h,k,ah,c]])}}if(this.topic_id=="parabola_axis_symmetry_eqn-vtx"){var _data=[];var a_arr=["1/5","1/4","1/3","2/5","1/2","3/5","2/3","3/4","4/5","1","5/4","4/3","3/2","5/3","2","5/2","3","4","5"];var h_arr0=Array.randomNumberArray(-10,-1,mngr.totalQuest,false);var k_arr0=Array.randomNumberArray(-10,-1,mngr.totalQuest,false);var h_arr1=Array.randomNumberArray(1,10,mngr.totalQuest,false);var k_arr1=Array.randomNumberArray(1,10,mngr.totalQuest,false);var h_arr=h_arr0.concat(h_arr1);var k_arr=k_arr0.concat(k_arr1);h_arr.shuffle();k_arr.shuffle();a_arr.shuffle();var a,h,k,ah,c;for(var i=0;i<mngr.totalQuest;i++){var asign=["-",""];asign.shuffle();asign=asign[0];var av=a_arr[i];a=asign+av;var an=eval(a);h=h_arr[i];k=k_arr[i];ah=2*an*h;c=(an*(h*h))+k;ah=Math.fixTo(ah,12);c=Math.fixTo(c,12);var dah=Math.abs(ah);var dc=Math.abs(c);var da=a=="1"?"":a;da=da=="-1"?"-":da;dah=dah==1?"":dah;var a_eqn=av==1?"<mo>"+da+"</mo>":AuthorApi.getMathML(a,"rational","part");var s1=h<0?"+":"-";var s2=c<0?"-":"+";var s3=k<0?"+":"-";var s4=ah<0?"+":"-";var dh=Math.abs(h);var dk=Math.abs(k);var k_eqn=k==0?"":"<mo>"+s3+"</mo><mtext >"+dk+"</mtext>";var h_eqn=h==0?a_eqn+'<msup><mtext mathvariant="italic">x</mtext><mn>2</mn></msup>':a_eqn+'<msup><mfenced open="(" close=")" separators=""><mtext mathvariant="italic">x</mtext><mo>'+s1+"</mo><mtext>"+dh+"</mtext></mfenced><mn>2</mn></msup>";var disp_eqn='<math><mrow><mtext mathvariant="italic">y</mtext>'+k_eqn+"<mo>=</mo>"+h_eqn+"</mrow></math>";var eqn="("+a+")*x^2"+s4+dah+"*x"+s2+dc;_data.push([[a,h,k,disp_eqn,eqn],[a,h,k,ah,c]])}}if(this.topic_id=="qe_factoredform_graph"){console_log("qe_factoredform_graph");var _data=[];var a_arr=["1/4","1/3","1/2","2/3","3/4","1","4/3","3/2","2","3","4"];var h_arr=[];var k_arr=[];a_arr.shuffle();var a,h,k,ah,c;for(var i=0;i<mngr.totalQuest;i++){var asign=["-",""];asign.shuffle();asign=asign[0];var av=a_arr[i];a=asign+av;var an=eval(a);var m=0;var n=-1;h_arr=Array.randomNumberArray(-7,7,14,true);var boo=false;var chk=8;k_arr=Array.randomNumberArray(-7,7,14,true);do{n++;if(n==k_arr.length){n=0;m++;if(m==h_arr.length){throw ("ERROR_IN_PROBLEM_GEN");break}}h=h_arr[m];k=k_arr[n];boo=h==k;var auv=an*h*k;var uv=h+k;chk=a*Math.pow(uv/2,2)-auv;chk=Math.abs(chk)}while(chk>=8||boo);ah=an*(h+k);c=an*h*k;ah=Math.fixTo(ah,12);c=Math.fixTo(c,12);var s1=ah<0?"+":"-";var s2=c<0?"-":"+";var dah=Math.abs(ah);var dc=Math.abs(c);var disp_eqn="";var eqn="("+a+")*x^2"+s1+dah+"*x"+s2+dc;console_log(i+" --> "+a+":"+h+":"+k+":"+eqn);_data.push([[a,h,k,disp_eqn,eqn],[a,h,k,ah,c]])}}function getM10(n){var str="";for(var j=0;j<n;j++){str+="<mn>10</mn>";if(j<n-1){str+="<mo>&times</mo>"}}return str}if(this.topic_id=="power_ten_positive"){var _data=[];var n_arr=Array.randomNumberArray(0,7,8,true);var ml_o="<math><mrow>";var ml_e="</mrow></math>";for(var i=0;i<n_arr.length;i++){var n=n_arr[i];var x=Math.pow(10,n);var q="<msup><mn>10</mn><mn>"+n+"</mn></msup><mo>=</mo>";var multi1="";for(var j=0;j<n;j++){multi1+="<mn>10</mn>";if(j<n-1){multi1+="<mo>&times</mo>"}}if(n==0){multi1="<mn>1</mn>"}var myString="";var myString1="";var mult=10;var dmult;for(k=1;k<n;k++){myString="<math><mrow><mphantom><msup><mn>10</mn><mn>"+n+"</mn></msup></mphantom><mo>=</mo><mtext>";mult=mult*10;var t=k<n-1?"<mo>&times</mo>":"";dmult=k==n-1&&n>3?String(mult).groupDigits():mult;myString1+=myString+dmult+"</mtext>"+t+getM10(n-k-1)+"</mrow></math></br>"}var q1=ml_o+q+ml_e;var s1=q+multi1;var s2=ml_o+s1+ml_e+"</br>"+myString1;s1=ml_o+s1+ml_e;if(String(this.actType)=="2"){var myString="<math><mrow>";var myString1="";var mult=10;for(k=1;k<n;k++){myString+="<mn>10</mn><mo>&times;</mo>";mult=mult*10;dmult=k>3?String(mult).groupDigits():mult;myString1+=myString+"<mn>10</mn> <mo>=</mo><mtext>"+dmult+"</mtext></mrow></math><br/>"}if(n==0||n==1){myString1="<math><mrow><msup><mn>10</mn><mn>"+n+"</mn></msup><mo>=</mo><mtext>"+x+"</mtext></mrow></math><br/>"}s2=myString1}var disp_x=n>=5?String(x).groupDigits():String(x);_data.push([[q1,s1,s2,disp_x,x],[x,n]])}}if(this.topic_id=="power_ten_negative"){var _data=[];var n_arr=Array.randomNumberArray(-6,-1,6,true);var ml_o="<math><mrow>";var ml_e="</mrow></math>";for(var i=0;i<n_arr.length;i++){var n=n_arr[i];var x=Math.pow(10,n);var pn=Math.abs(n);var px=Math.pow(10,pn);var dpx=pn>=5?String(px).groupDigits():px;var q="<msup><mn>10</mn><mn>"+n+"</mn></msup><mo>=</mo>";var d1="<mfrac><mn>1</mn><msup><mn>10</mn><mn>"+pn+"</mn></msup></mfrac>";var d2="<mfrac><mn>1</mn><mtext>"+dpx+"</mtext></mfrac>";var d3="<msup><mn>10</mn><mn>"+n+"</mn></msup>";var ty=null;var disp_x=String(x);if(Math.rand(1)){}var multi1="";for(var j=0;j<pn;j++){multi1+="<mn>10</mn>";if(j<pn-1){multi1+="<mo>&times</mo>"}}var myString="";var myString1="";var mult=10;for(k=1;k<pn;k++){myString="<math><mrow><mphantom><msup><mn>10</mn><mn>"+n+"</mn></msup></mphantom><mo>=</mo>";mult=mult*10;var t=k<pn-1?"<mo>&times</mo>":"";if(k==pn-1){mult=k>3?String(mult).groupDigits():mult}myString1+=myString+"<mfrac><mn>1</mn><mrow><mtext>"+mult+"</mtext>"+t+getM10(pn-k-1)+"</mrow></mfrac></mrow></math></br>"}var q1=ml_o+q+ml_e;var s1=ml_o+q+d1+ml_e;var s2=ml_o+q+"<mfrac><mn>1</mn><mrow>"+multi1+"</mrow></mfrac>"+ml_e;var s3=myString1;if(String(this.actType)=="2"){var a=Math.rand(1);if(a){s1=ml_o+"<mtext>"+x+"</mtext><mo>=</mo>"+d2+ml_e;s2=ml_o+d2+"<mo>=</mo>"+d1+ml_e;s3=ml_o+d1+"<mo>=</mo>"+d3+ml_e;ty=1}else{s2=ml_o+d2+"<mo>=</mo>"+d1+ml_e;s3=ml_o+d1+"<mo>=</mo>"+d3+ml_e;s1=null;ty=2;disp_x=1+"/"+dpx}q1=disp_x}_data.push([[q1,s1,s2,s3,ty,disp_x],[x,n]])}}function getfactorform10(px,m,pn,inverse){var myString="";var myString1="";var mult=m;for(k=1;k<pn;k++){myString="<math><mrow><mphantom>"+px+"</mphantom><mo>=</mo>";mult=mult*m;var t=k<pn-1?"<mo>&times</mo>":"";var dmult=String(mult).length>4?String(mult).groupDigits():mult;if(inverse){myString1+=myString+"<mfrac><mn>1</mn><mrow><mtext>"+dmult+"</mtext>"+t+getM10(pn-k-1)+"</mrow></mfrac></mrow></math></br>"}else{myString1+=myString+"<mrow><mtext>"+dmult+"</mtext>"+t+getM10(pn-k-1)+"</mrow></mrow></math></br>"}}return myString1}if(this.topic_id=="power_power_ten"){var _data=[];var m_arr=[-3,-2,-1,1,2,3];var n1_arr=[-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6];var n2_arr=[-3,-2,-1,0,1,2,3];var n3_arr=[-2,-1,0,1,2];var ml_o="<math><mrow>";var ml_e="</mrow></math>";var ml_eq="<mo>=</mo>";var v_arr=[];var n_arr;m_arr.shuffle();for(var i=0;i<m_arr.length;i++){var m0,x0,n0;m0=m_arr[i];x0=Math.pow(10,m0);if(Math.abs(m0)==3){n_arr=n3_arr}else{if(Math.abs(m0)==2){n_arr=n2_arr}else{if(Math.abs(m0)==1){n_arr=n1_arr}}}for(var j=0;j<n_arr.length;j++){n0=n_arr[j];v_arr.push([m0,x0,n0,Math.pow(x0,n0)])}}v_arr.shuffle();console_log("LENGTH:"+v_arr.length);for(var i=0;i<v_arr.length;i++){var val=v_arr[i];var m=val[0];var n=val[2];var x=val[1];var a=Math.rand(1);var dm=Math.abs(m);var dn=Math.abs(n);var dx=Math.pow(10,dm);var v=Math.fixTo(val[3],8);var asFrac=a?false:true;var toFrac=String(x).indexOf(".")>-1&&!asFrac;var disp_v=n>=4?String(v).groupDigits():String(v);var disp_dx=dm>=4?String(dx).groupDigits():String(dx);var disp_x=m>=4?String(x).groupDigits():String(x);var ml_x;var isDeci=x<1;var q,eq0,eqa,eqt,eq1,eq2;if(asFrac&&isDeci){q='<msup><mfenced open="(" close=")"><mfrac><mtext>1</mtext><mtext>'+disp_dx+"</mtext></mfrac></mfenced><mtext>"+n+"</mtext></msup>";eq1=n<0?getMNML(disp_dx,dn):getMNML([1,disp_dx],dn,true);ml_x="<mfrac><mtext>1</mtext><mtext>"+disp_dx+"</mtext></mfrac>"}else{if(isDeci){q='<msup><mfenced open="(" close=")"><mtext>'+disp_x+"</mtext></mfenced><mtext>"+n+"</mtext></msup>";eq1=n<0?getMNML(disp_dx,dn):getMNML([1,disp_dx],dn,true);ml_x="<mtext>"+disp_x+"</mtext>"}else{q="<msup><mtext>"+disp_x+"</mtext><mtext>"+n+"</mtext></msup>";eq1=n>0?getMNML(disp_x,dn):getMNML([1,disp_x],dn,true);ml_x="<mtext>"+disp_x+"</mtext>"}}if(!asFrac&&isDeci){eqa='<msup><mfenced open="(" close=")"><mfrac><mtext>1</mtext><mtext>'+disp_dx+"</mtext></mfrac></mfenced><mtext>"+n+"</mtext></msup>";eq0=q+ml_eq+eqa}else{eq0=eqa=q}if(isDeci){eqt="<msup><mtext>"+disp_dx+"</mtext><mtext>"+dn+"</mtext></msup>";if(n<0){eq1a=eqt+ml_eq+eq1;eq1=eqa+ml_eq+eqt+ml_eq+eq1;eq2=getfactorform10(eqt,dx,dn)}else{eq1=eqa+ml_eq+eq1;eq2=getfactorform10(eqa,dx,dn,true);eq1a=eq1}}else{eqt='<msup><mfenced open="(" close=")"><mfrac><mtext>1</mtext><mtext>'+disp_dx+"</mtext></mfrac></mfenced><mtext>"+dn+"</mtext></msup>";eq1=n>0?getMNML(disp_x,dn):getMNML([1,disp_x],dn,true);if(n<0){eq1a=eqt+ml_eq+eq1;eq1=eq0+ml_eq+eqt+ml_eq+eq1;eq2=getfactorform10(eqt,dx,dn,true)}else{eq1=eq0+ml_eq+eq1;eq2=getfactorform10(eqa,dx,dn);eq1a=eq1}}var qa;if(n==0){qa=ml_o+q+ml_eq+"<mtext>1</mtext>"+ml_e}if(n==1){qa=ml_o+q+ml_eq+ml_x+ml_e}q=ml_o+q+ml_e;eq0=ml_o+eq0+ml_e;eq1=ml_o+eq1+ml_e;eq1a=ml_o+eq1a+ml_e;_data.push([[m,n,x,asFrac,toFrac,q,eq0,eq1,eq2,qa,eq1a],[v]])}}function getMNML(m,n,frac){var str="";var _m=m;if(frac){_m="<mfrac><mtext>"+_m[0]+"</mtext><mtext>"+_m[1]+"</mtext></mfrac>"}else{_m="<mn>"+m+"</mn>"}for(var j=0;j<n;j++){str+=_m;if(j<n-1){str+="<mo>&times</mo>"}}return str}if(this.topic_id=="log_to_exp"){var _data=[];var b1_arr=[2,3,4,5,6,7,8,9,10,100];var x1_arr=[0,1,2,3,4,5,6,7,8,9,10,"1/2","1/3","2/3","1/4","3/4",-1,-2,-3,-4];var y1_arr=["p","q","r","s","t","p","q","r","s","t","p","q","r","s","t","p","q","r","s","t",,"p","q","r","s","t"];var b2_arr=b1_arr;var x2_arr=["u","v","w","x","y","z","u","v","w","x","y","z","u","v","w","x","y","z","u","v","w","x","y","z"];var y2_arr=Array.randomNumberArray(1,1000,20,true);var b3_arr=["a","b","c","d","a","b","c","d","a","b","c","d","a","b","c","d","a","b","c","d","a","b","c","d"];var x3_arr=x1_arr;var y3_arr=Array.randomNumberArray(1,1000,20,true);b1_arr.shuffle();x1_arr.shuffle();y1_arr.shuffle();b2_arr.shuffle();x2_arr.shuffle();b3_arr.shuffle();x3_arr.shuffle();var type=Array.randomNumberArray(1,3,10,false);for(var i=0;i<10;i++){var _type=this.actType?this.actType:type[i];var disp_b,disp_x,disp_y;var b,x,y,ym;if(_type==1){b=b1_arr[i];x=x1_arr[i];y=y1_arr[i];disp_b="<mtext>"+String(b)+"</mtext>";disp_y="<mi>"+String(y)+"</mi>";var xFrac=String(x).indexOf("/")>-1;if(xFrac){var ax=String(x).split("/");disp_x="<mfrac><mtext>"+String(ax[0])+"</mtext><mtext>"+String(ax[1])+"</mtext></mfrac>"}else{disp_x="<mtext>"+String(x)+"</mtext>"}}else{if(_type==2){b=b2_arr[i];x=x2_arr[i];y=y2_arr[i]/100;disp_b="<mtext>"+String(b)+"</mtext>";disp_y="<mtext>"+String(y)+"</mtext>";disp_x="<mi>"+String(x)+"</mi>"}else{b=b3_arr[i];x=x3_arr[i];y=y3_arr[i]/100;disp_b="<mi>"+String(b)+"</mi>";disp_y="<mtext>"+String(y)+"</mtext>";var xFrac=String(x).indexOf("/")>-1;if(xFrac){var ax=String(x).split("/");disp_x="<mfrac><mtext>"+String(ax[0])+"</mtext><mtext>"+String(ax[1])+"</mtext></mfrac>"}else{disp_x="<mtext>"+String(x)+"</mtext>"}}}var ml_o="<math><mrow>";var ml_e="</mrow></math>";var q=ml_o+"<msub><mtext>log</mtext>"+disp_b+"</msub>"+disp_y+"<mo>=</mo>"+disp_x+ml_e;var _eq1=ml_o+"<msub><mtext>log</mtext><mi>b</mi></msub><mi>y</mi><mo>=</mo><mi>x</mi>"+ml_e;var _eq2=ml_o+"<msup><mi>b</mi><mi>x</mi></msup><mo>=</mo><mi>y</mi>"+ml_e;var _eq3=ml_o+"<msup>"+disp_b+disp_x+"</msup><mo>=</mo>"+disp_y+ml_e;var eqn="("+b+")^"+x;_data.push([[q,b,x,y,disp_b,disp_x,disp_y,_eq1,_eq2,_eq3],[b,x,y,eqn]])}}if(this.topic_id=="exp_to_log"){var _data=[];var b1_arr=[2,3,4,5,6,7,8,9,10,100];var x1_arr=[0,1,2,3,4,5,6,7,8,9,10,"1/2","1/3","2/3","1/4","3/4",-1,-2,-3,-4];var y1_arr=["p","q","r","s","t","p","q","r","s","t","p","q","r","s","t","p","q","r","s","t",,"p","q","r","s","t"];var b2_arr=b1_arr;var x2_arr=["u","v","w","x","y","z","u","v","w","x","y","z","u","v","w","x","y","z","u","v","w","x","y","z"];var y2_arr=Array.randomNumberArray(1,1000,20,true);var b3_arr=["a","b","c","d","a","b","c","d","a","b","c","d","a","b","c","d","a","b","c","d","a","b","c","d"];var x3_arr=x1_arr;var y3_arr=Array.randomNumberArray(1,1000,20,true);b1_arr.shuffle();x1_arr.shuffle();y1_arr.shuffle();b2_arr.shuffle();x2_arr.shuffle();b3_arr.shuffle();x3_arr.shuffle();var type=Array.randomNumberArray(1,3,10,false);for(var i=0;i<10;i++){var _type=this.actType?this.actType:type[i];var disp_b,disp_x,disp_y;var b,x,y,ym;if(_type==1){b=b1_arr[i];x=x1_arr[i];y=y1_arr[i];disp_b="<mtext>"+String(b)+"</mtext>";disp_y="<mi>"+String(y)+"</mi>";var xFrac=String(x).indexOf("/")>-1;if(xFrac){var ax=String(x).split("/");disp_x="<mfrac><mtext>"+String(ax[0])+"</mtext><mtext>"+String(ax[1])+"</mtext></mfrac>"}else{disp_x="<mtext>"+String(x)+"</mtext>"}}else{if(_type==2){b=b2_arr[i];x=x2_arr[i];y=y2_arr[i]/100;disp_b="<mtext>"+String(b)+"</mtext>";disp_y="<mtext>"+String(y)+"</mtext>";disp_x="<mi>"+String(x)+"</mi>"}else{b=b3_arr[i];x=x3_arr[i];y=y3_arr[i]/100;disp_b="<mi>"+String(b)+"</mi>";disp_y="<mtext>"+String(y)+"</mtext>";var xFrac=String(x).indexOf("/")>-1;if(xFrac){var ax=String(x).split("/");disp_x="<mfrac><mtext>"+String(ax[0])+"</mtext><mtext>"+String(ax[1])+"</mtext></mfrac>"}else{disp_x="<mtext>"+String(x)+"</mtext>"}}}var ml_o="<math><mrow>";var ml_e="</mrow></math>";var q=ml_o+"<msup>"+disp_b+disp_x+"</msup><mo>=</mo>"+disp_y+ml_e;var _eq3=ml_o+"<msub><mtext>log</mtext>"+disp_b+"</msub>"+disp_y+"<mo>=</mo>"+disp_x+ml_e;var _eq1=ml_o+"<msub><mtext>log</mtext><mi>b</mi></msub><mi>y</mi><mo>=</mo><mi>x</mi>"+ml_e;var _eq2=ml_o+"<msup><mi>b</mi><mi>x</mi></msup><mo>=</mo><mi>y</mi>"+ml_e;var eqn="("+b+")^"+x;_data.push([[q,b,x,y,disp_b,disp_x,disp_y,_eq1,_eq2,_eq3],[b,x,y,eqn]])}}if(this.topic_id=="basic_log"){var _data=[];var b_arr=[2,3,4,5,6,7,8,9,10];var x1_arr=[-5,-4,-3,-2,-1,0,1,2,3,4,5,6];var x2_arr=[-3,-2,-1,0,1,2,3,4];var x3_arr=[-2,-1,0,1,2,3];var x4_arr=[-2,-1,0,1,2];var x5_arr=[-4,-3,-2,-1,0,1,2,3,4];var v_arr=[];var x_arr;var ml_o="<math><mrow>";var ml_e="</mrow></math>";for(var i=0;i<b_arr.length;i++){var b0,y0,x0;b0=b_arr[i];if(b0<3){x_arr=x1_arr}else{if(b0==3){x_arr=x2_arr}else{if(b0<6){x_arr=x3_arr}else{if(b0<10){x_arr=x4_arr}else{if(b0==10){x_arr=x5_arr}}}}}for(var j=0;j<x_arr.length;j++){x0=x_arr[j];y0=Math.pow(b0,x0);v_arr.push([b0,x0,y0])}}v_arr.shuffle();for(var i=0;i<v_arr.length;i++){var val=v_arr[i];var b=val[0];var y=val[2];var x=val[1];var a=Math.rand(1);var ax=Math.abs(x);var dx=Math.pow(b,ax);var v=y;var isRep=(b%3==0||b%7==0)&&x<0;var asFrac=false;if(v<1){asFrac=a?false:true;asFrac=isRep?true:asFrac}var toFrac=String(y).indexOf(".")>-1&&!asFrac;var disp_b=String(b);var disp_v=n>=4?String(dx).groupDigits():String(dx);var yml="<mtext>"+y+"</mtext>";var dy=yml;if(x<0){dy="<mrow><mfrac><mtext>1</mtext><mtext>"+disp_v+"</mtext></mfrac></mrow>"}if(asFrac){yml=dy}var q=ml_o+"<msub><mtext>log</mtext><mtext>"+disp_b+"</mtext></msub>"+yml+"<mo>=</mo><mi>x</mi>"+ml_e;var _eq1=ml_o+"<msub><mtext>log</mtext><mi>b</mi></msub><mi>y</mi><mo>=</mo><mi>x</mi>"+ml_e;var _eq2=ml_o+"<msup><mi>b</mi><mi>x</mi></msup><mo>=</mo><mi>y</mi>"+ml_e;var _eq3=ml_o+"<msup><mtext>"+disp_b+"</mtext><mi>x</mi></msup><mo>=</mo>"+dy+ml_e;var multi=x<0?[1,b]:b;var _eq4a=getMNML(multi,ax,x<0);var _eq4=ml_o+_eq4a+"<mo>=</mo>"+dy+ml_e;if(x<0){_eq4=ml_o+"<msup><mtext>"+disp_b+"</mtext><mtext>"+x+"</mtext></msup><mo>=</mo>"+_eq4a+ml_e}var _eq5=ml_o+"<msup><mtext>"+disp_b+"</mtext><mtext>"+x+"</mtext></msup><mo>=</mo>"+dy+ml_e;var _eq0=ml_o+"<mtext>"+y+"</mtext><mo>=</mo>"+dy+ml_e;_data.push([[b,x,y,asFrac,toFrac,q,disp_v,_eq0,_eq1,_eq2,_eq3,_eq4,_eq5,ml_o+yml+ml_e,ml_o+dy+ml_e],[x]])}}if(this.topic_id==0){var gdata=[];gdata.randomNumbers(0,12,13,true);var i=0;var l=gdata.length;var c=0;var ldata=[];var rdata=[];while(gdata.length){ldata[i]=gdata[c];rdata[i]=gdata[Math.floor(Math.random()*gdata.length)];gdata.shift();if(ldata[i]!=rdata[i]){ind=gdata.getIndex(rdata[i]);gdata.splice(ind,1);gdata.unshift(rdata[i])}if(i>(20)){break}i++}var _data=[];for(var i=0;i<ldata.length;i++){_data.push([[ldata[i],rdata[i]],ldata[i]*rdata[i]])}_data.shuffle()}if(this.topic_id==1||this.topic_id==2||this.topic_id==6){var dataStr=mngr.topic_data;var dataArr=dataStr.split(" ").join("").split(",");var _data=[];var ldata;var rdata;var dataEl;var elL,elR,ans,dans;for(var i=0;i<dataArr.length;i++){dataEl=this.topic_id==6?dataArr[i]:dataArr[i].split("+");ldata=this.topic_id==6?dataEl:dataEl[0];rdata=dataEl[1];elL=ldata.split("/");elR=rdata?rdata.split("/"):null;if(ldata!=""&&ldata!=undefined){ans=this.topic_id==6?Math.simpleFrac(ldata):Math.addFrac(ldata,rdata);ans=this.topic_id==6?{frac:ans,val:ans}:ans;dans=(ans.val).split("/");_data.push([[ldata,rdata,[elL,elR],dans],ans])}}_data.shuffle()}if(this.topic_id==3){var dataStr=mngr.topic_data;var dataArr=dataStr.split(",");var _data=[];var ldata;var rdata;var dataEl;for(var i=0;i<dataArr.length;i++){dataEl=dataArr[i].split("|");ldata=dataEl[0];rdata=dataEl[1];cdata=ldata.split(" ").join("");if(cdata!=""&&ldata!=undefined){_data.push([[ldata],rdata])}}_data.shuffle()}if(this.topic_id==10||this.topic_id==23){var dataStr=mngr.topic_data;var dataArr=dataStr.split(":");mngr.arr_pp=dataArr[0].split(",");mngr.arr_pi=dataArr[1].split(",");mngr.arr_pw=dataArr[2].split(",");mngr.arr_ii=dataArr[3].split(",");mngr.arr_iw=dataArr[4].split(",");mngr.arr_pp_i=mngr.getIndexArr("pp");mngr.arr_pw_i=mngr.getIndexArr("pw");mngr.arr_pi_i=mngr.getIndexArr("pi");mngr.arr_ii_i=mngr.getIndexArr("ii");mngr.arr_iw_i=mngr.getIndexArr("iw");mngr.arr_pp_l=mngr.arr_pp_i.length;mngr.arr_pw_l=mngr.arr_pw_i.length;mngr.arr_pi_l=mngr.arr_pi_i.length;mngr.arr_ii_l=mngr.arr_ii_i.length;mngr.arr_iw_l=mngr.arr_iw_i.length;mngr.pp_ind=0;mngr.pw_ind=0;mngr.pi_ind=0;mngr.ii_ind=0;mngr.iw_ind=0;_data=[];var tarr1=["pp","pp","pp","pp","pp","pw","pw","pi","ii","iw"];if(this.actType=="pp"){tarr1=["pp","pp","pp","pp","pp","pp","pp","pp","pp","pp"]}else{if(this.actType=="pw"){tarr1=["pw","pw","pw","pw","pw","pw","pw","pw","pw","pw"]}else{if(this.actType=="pi"){tarr1=["pi","pi","pi","pi","pi","pi","pi","pi","pi","pi"]}else{if(this.actType=="ii"){tarr1=["ii","ii","ii","ii","ii","ii","ii","ii","ii","ii"]}else{if(this.actType=="iw"){tarr1=["iw","iw","iw","iw","iw","iw","iw","iw","iw","iw"]}else{if(this.actType=="nw"){tarr1=["pp","pp","pp","pp","pp","pi","pi","pi","ii","ii"]}}}}}}var tarr2=["pw","pw","pw","pw","pw","iw","iw","pw","iw","iw"];var tarr=this.topic_id==10?tarr1:tarr2;for(var i=0;i<10;i++){_data.push(this.genMultiFracProb(tarr[i]))}_data.shuffle()}if(this.topic_id==14){var m1=Array.randomNumberArray(1,20,3,true);var m2=Array.randomNumberArray(1,20,3,true);var n2=Array.randomNumberArray(2,20,3,true);var m3=Array.randomNumberArray(1,20,1,true)[0];var m4=Array.randomNumberArray(1,20,1,true)[0];var n4=Array.randomNumberArray(1,20,1,true)[0];var m5=Array.randomNumberArray(1,100,1,true)[0];var m6=Array.randomNumberArray(1,9,1,true)[0];var n6=Array.randomNumberArray(2,9,1,true)[0];var k6=Array.randomNumberArray(1,n6-1,1,true)[0];var _data=[];var m,n,k;var ldata,rdata;var type;var si="";for(var i=0;i<mngr.totalQuest;i++){si="";if(i<3){type=1;m=m1[i];ldata=m;rdata="1/"+m}if(i>=3&&i<6){type=2;m=m2[i-3];n=n2[i-3];if(m%n==0){m=n2[i-3];n=m2[i-3]}if(m==n){n=n+1}ldata=Math.simpleFrac(m+"/"+n);rdata=Math.simpleFrac(n+"/"+m)}if(i==6){type=3;ldata=m=-m3;rdata="-1/"+m3}if(i==7){type=4;m=m4;n=n4;if(m%n==0){m=n4;n=m4}if(m==n){n=n+1}si="-";ldata="-"+(Math.simpleFrac(m+"/"+n));rdata="-"+(Math.simpleFrac(n+"/"+m))}if(i==8){type=5;if(m5%10==0){m5=m5+1}m=[-1,1][random(2)]*m5;ldata=m/10;if(m>0){rdata="10/"+m}else{rdata="-10/"+Math.abs(m)}rdata=Math.simpleFrac(rdata)}if(i==9){type=6;var s=[-1,1][random(2)];si=s==-1?"-":"";m=m6;var f=Math.simpleFrac(k6+"/"+n6).split("/");n=f[0];k=f[1];ldata=si+m+"|"+(n+"/"+k);var m0=(m*k)+(n*1);rdata=si+k+"/"+m0}_data.push([[[si,m,n,k],type,ldata],{frac:rdata,val:rdata}])}}if(this.topic_id==15){console_log("TOPIC:"+this.topic_id);var k1=Array.randomNumberArray(2,6,1,true);var m1=Array.randomNumberArray(1,10,1,true);var n1=Array.randomNumberArray(1,10,1,true);var y1=Array.randomNumberArray(0,5,1,true);var y1v=["a","b","c","k","g","h"];var k2a=Array.randomNumberArray(-10,-1,10,true);var k2b=Array.randomNumberArray(1,10,10,true);var k2c=k2a.concat(k2b);var k2=Array.shuffleArray(k2c,3);var m2=Array.randomNumberArray(1,10,3,true);var n2=Array.randomNumberArray(1,10,3,true);var y2=Array.randomNumberArray(0,5,3,true);var y2v=y1v;var j3=Array.shuffleArray(k2c,2);var k3=Array.shuffleArray(k2c,2);var m3=Array.randomNumberArray(1,10,2,true);var n3=Array.randomNumberArray(1,10,2,true);var y3=Array.randomNumberArray(0,5,2,true);var z3=Array.randomNumberArray(0,5,2,true);var y3v=y1v;var z3v=["d","e","j","p","q","s"];var _data=[];var ldata,rdata,rdata_str;var op1,op2,k0,j0,m0,n0;var type;var html="";console_log("TOPIC: A");var hint;var hint_d="For any real numbers <math><mi>u</mi><mo>,</mo><mi>v</mi><mo>,</mo><mi>w</mi></math>, <br/><math><mrow><mi>u</mi><mrow><mo>(</mo><mrow><mi>v</mi><mo>+</mo><mi>w</mi></mrow><mo>)</mo></mrow><mo>=</mo><mi>u</mi><mrow><mo>(</mo><mrow><mi>v</mi></mrow><mo>)</mo></mrow><mo>+</mo><mi>u</mi><mrow><mo>(</mo><mrow><mi>w</mi></mrow><mo>)</mo></mrow><mo>=</mo><mi>u</mi><mi>v</mi><mo>+</mo><mi>u</mi><mi>w</mi></mrow></math> .";for(var i=0;i<mngr.totalQuest;i++){var m=undefined;var n=undefined;var k=undefined;var j=undefined;var y=undefined;var z=undefined;html="";var oop1,oop2;if(i==0){type=1;k=k1[0];m=m1[0];n=n1[0];y=y1v[y1[0]];var dm=m==1?"":m;rdata=(k*m)==1?"":(k*m)+""+y+"+"+(k*n);var k_m=(k*m)==1?"":String(k*m).split("-").join("&minus;");var k_n=String(k*n).split("-").join("&minus;");ldata="<math><mrow><mn>"+k+"</mn><mo>&#8289;</mo><mo>(</mo><mrow><mrow><mn>"+dm+"</mn><mo>&#8290;</mo><mi>"+y+"</mi></mrow><mo>+</mo><mn>"+n+"</mn></mrow><mo>)</mo></mrow></math>";rdata_str="<math><mo>=</mo><mrow><mtext>"+k_m+"</mtext><mo>&#8290;</mo><mi>"+y+"</mi><mo>+</mo><mtext>"+k_n+"</mtext></mrow></math>";html+="<math><mo>=</mo><mrow><mo>(</mo><mn>"+k+"</mn><mo>)</mo><mo>&#8289;</mo><mo>(</mo><mn>"+dm+"</mn><mo>&#8290;</mo><mi>"+y+"</mi><mo>)</mo><mo>+</mo><mo>(</mo><mn>"+k+"</mn><mo>)</mo><mo>&#8289;</mo><mo>(</mo><mn>"+n+"</mn><mo>)</mo></mrow></math>";hint=hint_d}if(i>0&&i<=3){type=2;k=k2[i-1];m=m2[i-1];n=n2[i-1];k=actType=="basic"?Math.abs(k):k;k=k===1?(random(3)+2):k;var styp=actType=="basic"?0:random(4);switch(styp){case 0:break;case 1:n=-n;break;case 2:m=-m;break;case 3:m=-m;n=-n;break}y=y1v[y2[i-1]];op1=k*n<0?"-":"+";var km=(k*m)==1?"":(k*m);rdata=(km)+""+y+op1+Math.abs((k*n));k0=k;if(n<0){n0="("+n+")"}else{n0=n}m0=m;var dm=m0==1?"":m0==-1?"-":m0;var k_0=String(k0).split("-").join("&minus;");var dm_0=String(dm).split("-").join("&minus;");var op1_0=String(op1).split("-").join("&minus;");var n_0=String(n0).indexOf("(")>-1?"<mo>(</mo><mtext>&minus;</mtext><mn>"+Math.abs(n)+"</mn><mo>)</mo>":"<mn>"+n+"</mn>";ldata="<math><mrow><mtext>"+k_0+"</mtext><mo>&#8289;</mo><mo>(</mo><mrow><mrow><mtext>"+dm_0+"</mtext><mo>&#8290;</mo><mi>"+y+"</mi></mrow><mo>+</mo><mrow>"+n_0+"</mrow></mrow><mo>)</mo></mrow></math>";var k_m=(k*m)==1?"":String(k*m).split("-").join("&minus;");var k_n=Math.abs((k*n));rdata_str="<math><mo>=</mo><mrow><mtext>"+k_m+"</mtext><mo>&#8290;</mo><mi>"+y+"</mi><mo>"+op1_0+"</mo><mtext>"+k_n+"</mtext></mrow></math>";html+="<math><mo>=</mo><mrow><mo>(</mo><mn>"+k_0+"</mn><mo>)</mo><mo>&#8289;</mo><mo>(</mo><mn>"+dm_0+"</mn><mo>&#8290;</mo><mi>"+y+"</mi><mo>)</mo><mo>+</mo><mo>(</mo><mn>"+k_0+"</mn><mo>)</mo><mo>&#8289;</mo><mrow>"+n_0+"</mrow></mrow></math>";hint=hint_d}if(i>3&&i<6){type=3;j=j3[i-4];k=k3[i-4];m=m3[i-4];n=n3[i-4];j=actType=="basic"?Math.abs(j):j;k=actType=="basic"?Math.abs(k):k;k=k===1?random(3)+2:k;var styp=actType=="basic"?0:random(4);switch(styp){case 0:op1="+";op2="+";break;case 1:op1="+";op2="-";break;case 2:op1="-";op2="+";break;case 3:op1="-";op2="-";break}y=y1v[y3[i-4]];z=z3v[z3[i-4]];k0=k;j0=j===0?(random(5)+1):j;m0=m;n0=n;var dm=m==1?"":m;var dj=j==1?"":j==-1?"-":j;ldata=k0+"("+dj+""+y+op1+dm+""+z+op2+n0+")";oop1=op1;oop2=op2;if(k*m<0){op1=op1=="-"?"+":"-"}if(k*n<0){op2=op2=="-"?"+":"-"}var km=(k*m)==1?"":(k*m)==-1?"":Math.abs(k*m);var kj=(k*j)==1?"":(k*j)==-1?"-":(k*j);rdata=(kj)+""+y+op1+(km)+""+z+op2+Math.abs(k*n);var op1_0=String(op1).split("-").join("&minus;");var op2_0=String(op2).split("-").join("&minus;");var oop1_0=String(oop1).split("-").join("&minus;");var oop2_0=String(oop2).split("-").join("&minus;");var kj_0=String(kj).split("-").join("&minus;");var k_n=Math.abs(k*n);ldata="<math><mrow><mn>"+k0+"</mn><mo>&#8290;</mo><mrow><mo>(</mo><mrow><mrow><mn>"+dj+"</mn><mo>&#8290;</mo><mi>"+y+"</mi></mrow><mo>"+oop1_0+"</mo><mrow><mn>"+dm+"</mn><mo>&#8290;</mo><mi>"+z+"</mi></mrow><mo>"+oop2_0+"</mo><mn>"+n0+"</mn></mrow><mo>)</mo></mrow></mrow></math>";rdata_str="<math><mo>=</mo><mrow><mtext>"+kj_0+"</mtext><mi>"+y+"</mi><mo>"+op1_0+"</mo><mn>"+km+"</mn><mo>&#8290;</mo><mi>"+z+"</mi><mo>"+op2_0+"</mo><mn>"+k_n+"</mn></mrow></math>";html="<math><mo>=</mo><mrow><mrow><mo>(</mo><mn>"+k0+"</mn><mo>)</mo><mo>(</mo><mn>"+dj+"</mn><mi>"+y+"</mi><mo>)</mo></mrow><mo>"+oop1_0+"</mo><mrow><mo>(</mo><mn>"+k0+"</mn><mo>)</mo><mo>(</mo><mn>"+dm+"</mn><mi>"+z+"</mi><mo>)</mo></mrow><mo>"+oop2_0+"</mo><mrow><mo>(</mo><mn>"+k0+"</mn><mo>)</mo><mo>(</mo><mn>"+n0+"</mn><mo>)</mo></mrow></mrow></math>";hint="For any real numbers <i>u</i>, <i>v</i>, <i>w</i>, <i>x</i>, <br/><math><mrow><mi>u</mi><mrow><mo>(</mo><mrow><mi>v</mi><mo>+</mo><mi>w</mi><mo>+</mo><mi>x</mi></mrow><mo>)</mo></mrow><mo>=</mo><mi>u</mi><mrow><mo>(</mo><mrow><mi>v</mi></mrow><mo>)</mo></mrow><mo>+</mo><mi>u</mi><mrow><mo>(</mo><mrow><mi>w</mi></mrow><mo>)</mo></mrow><mo>+</mo><mi>u</mi><mrow><mo>(</mo><mrow><mi>x</mi></mrow><mo>)</mo></mrow><mo>=</mo><mi>u</mi><mi>v</mi><mo>+</mo><mi>u</mi><mi>w</mi><mo>+</mo><mi>u</mi><mi>x</mi></mrow></math> ."}if(i>=6){var styp=actType=="basic"?[1,6][random(2)]:random(7);switch(styp){case 0:type=4;console_log("Case: 0 "+type);m=[100,1000][random(2)];n=[2,3][random(2)];k=[2,3,4,5][random(4)];j=m-n;ldata=k+"("+j+")* = "+k+"("+m+"-"+n+")";rdata=k*j;ldata="<math><mrow><mrow><mn>"+k+"</mn><mo>(</mo><mn>"+j+"</mn><mo>)</mo></mrow><mo>=</mo><mrow><mn>"+k+"</mn><mo>(</mo><mn>"+m+"</mn><mo>&minus;</mo><mn>"+n+"</mn><mo>)</mo><mo>=</mo></mrow></mrow></math>";rdata_str="<math><mrow><mo>=</mo><mn>"+rdata+"</mn></mrow></math>";html="<math><mrow><mrow><mn>"+k+"</mn><mo>(</mo><mn>"+m+"</mn><mo>)</mo><mo>&minus;</mo><mn>"+k+"</mn><mo>(</mo><mn>"+n+"</mn><mo>)</mo></mrow></mrow></math>";hint=hint_d;console_log("Case: 0");break;case 1:type=5;console_log("Case: 1 "+type);m=[100,1000][random(2)];n=[2,3][random(2)];k=[2,3,4,5][random(4)];j=m+n;ldata=k+"("+j+")* = "+k+"("+m+"+"+n+")";rdata=k*j;ldata="<math><mrow><mrow><mn>"+k+"</mn><mo>(</mo><mn>"+j+"</mn><mo>)</mo></mrow><mo>=</mo><mrow><mn>"+k+"</mn><mo>(</mo><mn>"+m+"</mn><mo>+</mo><mn>"+n+"</mn><mo>)</mo><mo>=</mo></mrow></mrow></math>";rdata_str="<math><mrow><mo>=</mo><mn>"+rdata+"</mn></mrow></math>";html="<math><mrow><mrow><mn>"+k+"</mn><mo>(</mo><mn>"+m+"</mn><mo>)</mo><mo>+</mo><mn>"+k+"</mn><mo>(</mo><mn>"+n+"</mn><mo>)</mo></mrow></mrow></math>";hint=hint_d;break;case 2:type=6;console_log("Case: 2 "+type);k=["1/2","1/3","1/4"][random(3)];y=y1v[random(6)];if(k=="1/2"){m=[2,4,6,8,10,12,14,16,18,20][random(10)];n=[2,4,6,8,10,12,14,16,18,20][random(10)];var km=(m/2)==1?"":m/2;var kn=n/2;rdata=km+""+y+"+"+(n/2);rdata_str="<math><mo>=</mo><mrow><mtext>"+km+"</mtext><mo>&#8290;</mo><mi>"+y+"</mi><mo>+</mo><mtext>"+kn+"</mtext></mrow></math>"}if(k=="1/3"){m=[3,6,9,12,15,18][random(6)];n=[3,6,9,12,15,18][random(6)];var km=(m/3)==1?"":m/3;var kn=n/3;rdata=km+""+y+"+"+(n/3);rdata_str="<math><mo>=</mo><mrow><mtext>"+km+"</mtext><mo>&#8290;</mo><mi>"+y+"</mi><mo>+</mo><mtext>"+kn+"</mtext></mrow></math>"}if(k=="1/4"){m=[4,8,12,16,20][random(5)];n=[4,8,12,16,20][random(5)];var km=(m/4)==1?"":m/4;var kn=n/4;rdata=km+""+y+"+"+(n/4);rdata_str="<math><mo>=</mo><mrow><mtext>"+km+"</mtext><mo>&#8290;</mo><mi>"+y+"</mi><mo>+</mo><mtext>"+kn+"</mtext></mrow></math>"}var dm=m==1?"":m;ldata=k+"("+dm+""+y+"+"+n+")";var k_m=(k*m)==1?"":String(k*m).split("-").join("&minus;");var k_n=String(k*n).split("-").join("&minus;");var k_s=String(k).split("/");var k_0="<mfrac><mn>"+k_s[0]+"</mn><mn>"+k_s[1]+"</mn></mfrac>";ldata="<math><mrow>"+k_0+"<mo>&#8289;</mo><mo>(</mo><mrow><mrow><mn>"+dm+"</mn><mo>&#8290;</mo><mi>"+y+"</mi></mrow><mo>+</mo><mn>"+n+"</mn></mrow><mo>)</mo></mrow></math>";html+="<math><mo>=</mo><mrow><mo>(</mo><mrow>"+k_0+"</mrow><mo>)</mo><mo>&#8289;</mo><mo>(</mo><mn>"+dm+"</mn><mo>&#8290;</mo><mi>"+y+"</mi><mo>)</mo><mo>+</mo><mo>(</mo><mrow>"+k_0+"</mrow><mo>)</mo><mo>&#8289;</mo><mo>(</mo><mn>"+n+"</mn><mo>)</mo></mrow></math>";hint=hint_d;break;case 3:type=7;console_log("Case: 3 "+type);k=["1/2","1/3","1/4"][random(3)];y=y1v[random(6)];if(k=="1/2"){m=[2,4,6,8,10,12,14,16,18,20][random(10)];n=[2,4,6,8,10,12,14,16,18,20][random(10)];var km=(m/2)==1?"":m/2;var kn=n/2;rdata=km+""+y+"+"+(n/2);rdata_str="<math><mo>=</mo><mrow><mtext>"+km+"</mtext><mo>&#8290;</mo><mi>"+y+"</mi><mo>+</mo><mtext>"+kn+"</mtext></mrow></math>"}if(k=="1/3"){m=[3,6,9,12,15,18][random(6)];n=[3,6,9,12,15,18][random(6)];var km=(m/3)==1?"":m/3;var kn=n/3;rdata=km+""+y+"+"+(n/3);rdata_str="<math><mo>=</mo><mrow><mtext>"+km+"</mtext><mo>&#8290;</mo><mi>"+y+"</mi><mo>+</mo><mtext>"+kn+"</mtext></mrow></math>"}if(k=="1/4"){m=[4,8,12,16,20][random(5)];n=[4,8,12,16,20][random(5)];var km=(m/4)==1?"":m/4;var kn=n/4;rdata=km+""+y+"+"+(n/4);rdata_str="<math><mo>=</mo><mrow><mtext>"+km+"</mtext><mo>&#8290;</mo><mi>"+y+"</mi><mo>+</mo><mtext>"+kn+"</mtext></mrow></math>"}console_log("Strings "+rdata_str);var dm=m==1?"":m;var k_s=String(k).split("/");console_log("dm "+dm);ldata="("+dm+""+y+"+"+n+")*"+k+"";console_log("ldata 0 "+ldata);var k_0="<mfrac><mn>"+k_s[0]+"</mn><mn>"+k_s[1]+"</mn></mfrac>";console_log("k_0 "+k_0);ldata="<math><mrow><mo>(</mo><mrow><mrow><mn>"+dm+"</mn><mo>&#8290;</mo><mi>"+y+"</mi></mrow><mo>+</mo><mn>"+n+"</mn></mrow><mo>)</mo>"+k_0+"</mrow></math>";console_log("ldata "+ldata);html+="<math><mo>=</mo><mrow><mo>(</mo><mn>"+dm+"</mn><mo>&#8290;</mo><mi>"+y+"</mi><mo>)</mo><mo>(</mo><mrow>"+k_0+"</mrow><mo>)</mo><mo>+</mo><mo>(</mo><mn>"+n+"</mn><mo>)</mo><mo>(</mo><mrow>"+k_0+"</mrow><mo>)</mo></mrow></math>";hint=hint_d;console_log("html "+html);break;case 4:type=8;console_log("Case: 4 "+type);k=[0.2,0.5,1.5][random(3)];y=y1v[random(6)];m=random(10)+1;n=random(10)+1;var km_p=Math.fixTo(k*m,8);var kn_p=Math.fixTo(k*n,8);var km=(k*m)==1?"":km_p;var dm=m==1?"":m;rdata=(km)+""+y+"+"+kn_p;ldata=k+"("+dm+""+y+"+"+n+")";var k_m=(km_p)==1?"":String(km_p).split("-").join("&minus;");var k_n=String(kn_p).split("-").join("&minus;");ldata="<math><mrow><mn>"+k+"</mn><mo>&#8289;</mo><mo>(</mo><mrow><mrow><mn>"+dm+"</mn><mo>&#8290;</mo><mi>"+y+"</mi></mrow><mo>+</mo><mn>"+n+"</mn></mrow><mo>)</mo></mrow></math>";rdata_str="<math><mo>=</mo><mrow><mtext>"+k_m+"</mtext><mo>&#8290;</mo><mi>"+y+"</mi><mo>+</mo><mtext>"+k_n+"</mtext></mrow></math>";html+="<math><mo>=</mo><mrow><mo>(</mo><mn>"+k+"</mn><mo>)</mo><mo>&#8289;</mo><mo>(</mo><mn>"+dm+"</mn><mo>&#8290;</mo><mi>"+y+"</mi><mo>)</mo><mo>+</mo><mo>(</mo><mn>"+k+"</mn><mo>)</mo><mo>&#8289;</mo><mo>(</mo><mn>"+n+"</mn><mo>)</mo></mrow></math>";hint=hint_d;break;case 5:type=9;console_log("Case: 5 "+type);k=[0.2,0.5,1.5][random(3)];y=y1v[random(6)];m=random(10)+1;n=random(10)+1;var km_p=Math.fixTo(k*m,8);var kn_p=Math.fixTo(k*n,8);var km=(k*m)==1?"":(km_p);var dm=m==1?"":m;rdata=km_p+""+y+"+"+(kn_p);ldata="("+dm+""+y+"+"+n+")*"+k+"";var k_m=(km_p)==1?"":String(km_p).split("-").join("&minus;");var k_n=String(kn_p).split("-").join("&minus;");ldata="<math><mrow><mo>(</mo><mrow><mrow><mn>"+dm+"</mn><mo>&#8290;</mo><mi>"+y+"</mi></mrow><mo>+</mo><mn>"+n+"</mn></mrow><mo>)</mo><mn>"+k+"</mn></mrow></math>";rdata_str="<math><mo>=</mo><mrow><mtext>"+k_m+"</mtext><mo>&#8290;</mo><mi>"+y+"</mi><mo>+</mo><mtext>"+k_n+"</mtext></mrow></math>";html+="<math><mo>=</mo><mrow><mo>(</mo><mn>"+dm+"</mn><mo>&#8290;</mo><mi>"+y+"</mi><mo>)</mo><mo>(</mo><mn>"+k+"</mn><mo>)</mo><mo>+</mo><mo>(</mo><mn>"+n+"</mn><mo>)</mo><mo>(</mo><mn>"+k+"</mn><mo>)</mo></mrow></math>";hint=hint_d;break;case 6:type=10;console_log("Case: 6 "+type);k=z3v[random(6)];y=y1v[random(6)];m=random(10)+1;n=random(10)+1;var dm=m==1?"":m;rdata=dm+""+y+""+k+"+"+n+""+k;ldata="("+dm+""+y+"+"+n+")*"+k+"";ldata="<math><mrow><mo>(</mo><mrow><mrow><mn>"+dm+"</mn><mo>&#8290;</mo><mi>"+y+"</mi></mrow><mo>+</mo><mn>"+n+"</mn></mrow><mo>)</mo><mi>"+k+"</mi></mrow></math>";rdata_str="<math><mo>=</mo><mrow><mtext>"+dm+"</mtext><mi>"+y+"</mi><mi>"+k+"</mi><mo>+</mo><mn>"+n+"</mn><mi>"+k+"</mi></mrow></math>";html+="<math><mo>=</mo><mrow><mo>(</mo><mn>"+dm+"</mn><mo>&#8290;</mo><mi>"+y+"</mi><mo>)</mo><mo>(</mo><mn>"+k+"</mn><mo>)</mo><mo>+</mo><mo>(</mo><mn>"+n+"</mn><mo>)</mo><mo>(</mo><mn>"+k+"</mn><mo>)</mo></mrow></math>";hint=hint_d;break}}if(oop1){op1=oop1;op2=oop2}console_log("B: "+i);_data.push([[ldata,rdata,[op1,op2],[k,j,m,n,y,z],type,html,rdata_str,hint,"DP"],rdata])}}if(this.topic_id==16){var k,m,n;var k0,m0,n0;var x,p,y;var typ=[1,2,3,4,5];var _data=[];var ldata,rdata;var l=mngr.totalQuest;for(var i=0;i<l;i++){k=i==2?rand(1,99):i==9?rand(2,5):rand(1,9);if(i>3){if(i==4||i==5){m=rand(1,3)}if(i==6){m=rand(1,9)}if(i==7||i==8){m=rand(2,9)}if(i==9){m=rand(1,99)}}switch(i+1){case 1:x=k;p=10;y=10*k;break;case 2:x=10*k;p=10;y=100*k;break;case 3:x=5*k;p=50;y=10*k;break;case 4:x=k;p=5;y=20*k;break;case 5:x=5*k*m;p=25*m;y=20*k;break;case 6:x=25*k*m;p=25*m;y=100*k;break;case 7:x=(10*k)+m;p=10;y=(100*k+10*m);break;case 8:x=k*m;p=10*m;y=10*k;break;case 9:x=10*k*m;p=10*m;y=100*k;break;case 10:x=m*(Math.pow(10,k-2));p=m;y=Math.pow(10,k);break}var tyi=rand(0,4);var statT=actType?actType:typ[tyi];var findV;switch(statT){case 1:rdata=x;break;case 4:case 5:rdata=y;break;case 2:case 3:rdata=p;break}x=Math.fixTo(x,8);p=Math.fixTo(p,8);y=Math.fixTo(y,8);rdata=Math.fixTo(rdata,8);_data.push([[[x,p,y],statT],rdata])}}if(this.topic_id==17){var k,m,n;var k0,m0,n0;var x,p,y;var typ=[1,2,3,4,5];var _data=[];var ldata,rdata;for(var i=0;i<12;i++){switch(i+1){case 1:k=rand(1,9);m=rand(1,9);x=k*m;p=m;y=100*k;break;case 2:k=rand(1,9);m=rand(1,9);x=(100*k)-(k*m);p=100-m;y=100*k;break;case 3:k=rand(1,4);m=rand(1,9);x=(k/5)*((10*m)+5);p=(10*m)+5;y=20*k;break;case 4:k=rand(1,9);m=rand(1,9);x=(k)*((10*m)+5);p=(10*m)+5;y=100*k;break;case 5:k=rand(1,9);m=rand(1,4);n=rand(1,3);x=(n/4)*((100*k)+(20*m));p=25*n;y=(100*k)+(20*m);break;case 6:k=rand(2,5);m=rand(1,99);n=rand(1,3);x=m*n*(Math.pow(10,(k-2)));p=m;y=n*(Math.pow(10,k));break;case 7:k=rand(1,9);m=rand(1,4);x=k*(10+(2.5*m));p=100+(25*m);y=10*k;break;case 8:k=rand(1,9);m=rand(1,4);x=k*(100+(25*m));p=100+(25*m);y=100*k;break;case 9:k=rand(1,9);m=rand(1,5);n=rand(0,3);x=k*m*(Math.pow(10,n));p=100*m;y=k*Math.pow(10,n);break;case 10:k=rand(1,9);m=rand(1,9);x=(k*m)/10;p=10*m;y=k;break;case 11:k=rand(1,9);m=rand(1,9);n=rand(2,5);x=k*m*(Math.pow(10,n-3));p=m/10;y=k*Math.pow(10,n);break;case 12:k=rand(1,9);m=rand(1,9);n=rand(0,2);x=k*(Math.pow(10,n-2))*(m+0.5);p=m+0.5;y=k*Math.pow(10,n);break}var tyi=rand(0,4);var statT=typ[tyi];var findV;switch(statT){case 1:rdata=x;break;case 4:case 5:rdata=y;break;case 2:case 3:rdata=p;break}x=Math.fixTo(x,8);p=Math.fixTo(p,8);y=Math.fixTo(y,8);rdata=Math.fixTo(rdata,8);_data.push([[[x,p,y],statT],rdata])}_data=Array.shuffleArray(_data,mngr.totalQuest)}if(this.topic_id==18){var dataStr=mngr.topic_data;var dataArr=dataStr.split(":");var de_pair=dataArr[0].split(",");var gh_pair=dataArr[1].split(",");mngr.totalQuest=mngr.totalQuest?mngr.totalQuest:10;var l1=4*mngr.totalQuest/10;var l2=3*mngr.totalQuest/10;var l3=3*mngr.totalQuest/10;l1=Math.round(l1);l2=Math.round(l2);l3=mngr.totalQuest-(l1+l2);var _data=[];var ld1=Array.shuffleArray(de_pair,l1);var rd1=Array.shuffleArray(de_pair,l1);var ld2=Array.shuffleArray(gh_pair,l2);var rd2=Array.shuffleArray(de_pair,l2);var ld3=Array.shuffleArray(de_pair,l3);var rd3=Array.shuffleArray(gh_pair,l3);var ldata0,ldata1,rdata,type,s1,s2,ans;for(var i=0;i<mngr.totalQuest;i++){if(i<l1){type=1;ldata0=ld1[i];ldata1=rd1[i]}if(i>=l1&&i<l1+l2){type=2;ldata0=ld2[i-l1];ldata1=rd2[i-l1]}if(i>=l1+l2&&i<mngr.totalQuest){type=3;ldata0=ld3[i-(l1+l2)];ldata1=rd3[i-(l1+l2)]}s1=ldata0.split("/");s2=ldata1.split("/");ansn=s1[0]*s2[1]+"/"+s1[1]*s2[0];ans=Math.simpleFrac(ansn);var ans0=ans.split("/");ans0[1]=ans0[1]==undefined?"1":ans0[1];rdata=ans0[1]=="1"?ans0[0]:ans;ldata0=s1[1]=="1"?s1[0]:ldata0;ldata1=s2[1]=="1"?s2[0]:ldata1;_data.push([[ldata0,ldata1,[s1,s2],ans0,type],{frac:ansn,val:rdata,uans:ans}])}}if(this.topic_id==8||this.topic_id==9){var ifracStr=mngr.topic_data;var obj;var ifracArr=ifracStr.split(",");var l=ifracArr.length;var d;var _data=[];console_log("FLASH_CARD_MNGR_CALLING GEN PROBLEMS - topic "+this.topic_id+" "+l);for(var i=0;i<l;i++){d=ifracArr[i].split(" ");obj={};obj.q=Number(d[0]);d=d[1].split("/");obj.num=Number(d[0]);obj.den=Number(d[1]);obj.improper=ifracArr[i];obj.frac=((obj.q*obj.den)+obj.num)+"/"+obj.den;obj.deci=((obj.q*obj.den)+obj.num)/obj.den;var dans=obj.frac.split("/");var sans=Math.simpleFrac(obj.frac).split("/");var mixedStr="["+obj.q+"]"+obj.num+"/"+obj.den;if(this.topic_id==8){_data.push([[[obj.q,obj.num,obj.den],dans,sans,obj.improper],{frac:obj.frac,val:obj.deci,sval:obj.deci}])}else{_data.push([[dans,[obj.q,obj.num,obj.den],obj.improper],{frac:obj.frac,val:mixedStr,sval:obj.deci}])}}_data.shuffle()}if(this.topic_id==26){var l=mngr.totalQuest;var deb=[];var g=[1,1,1,1,1,2,3,4,5,1,1,6,7,8,9,10,1,1];var qstr="Find the greatest common factor of ";var andStr=" and ";var _data=[];console.log("GENERATING_PROBLEMS_FOR_TOPIC: "+this.topic_id);for(var i=0;i<10;i++){var _ldata;var _rdata=[];var p,q,r;var gr=g[Math.floor(random(g.length))];if(gr==1){p=rand(1,30)}else{p=rand(1,10)*gr}if(gr==1){q=rand(1,30)}else{q=rand(1,10)*gr}if(p==q){q=p+rand(2,10)}if(i>7){if(gr==1){r=rand(1,30)}else{r=rand(1,10)*gr}}if(p==r||q==r){r=p+q}_ldata=i<8?[p,q]:[p,q,r];if(_ldata.length==2){_rdata[0]=Math.getGCD(p,q);_rdata[1]=2;_rdata[2]=qstr+String(p)+andStr+String(q)+"."}else{_rdata[0]=Math.getGCD(Math.getGCD(p,q),r);_rdata[1]=3;_rdata[2]=qstr+String(p)+", "+String(q)+","+andStr+String(r)+"."}deb.push(p+":"+q+" --> "+_rdata[0]);_data.push([[_ldata,_rdata[2],_rdata[1]],_rdata[0]])}console_log(deb.join("\n"))}if(this.topic_id==11){var t1=Math.round((4/5)*totalQuest);t1=actType=="div"?totalQuest:t1;var t2=totalQuest-t1;var mdata=Array.randomNumberArray(1,12,t1,true);var ndata=Array.randomNumberArray(1,12,t1,true);var i=0;var l=mdata.length;var c=0;var ldata;var rdata;var l,m,n;var action=["*","\u00F7"];if(actType=="multi"){action=["*","*"]}if(actType=="div"){action=["\u00F7","\u00F7"]}var op;var _data=[];for(;c<mdata.length;c++){m=mdata[c];n=ndata[c];switch(random(3)){case 0:m=-m;break;case 1:n=-n;break;case 2:m=-m;n=-n;break}op=action[random(2)];if(n<0){n0="("+n+")"}else{n0=n}if(m<0){m0="("+m+")"}else{m0=m}ldata=op=="*"?m+op+n0+"":(m*n)+op+m0;rdata=op=="*"?m*n:n;_data.push([[[m,n],op,ldata],rdata])}mdata=Array.randomNumberArray(1,5,t2,true);ndata=Array.randomNumberArray(1,5,t2,true);odata=Array.randomNumberArray(1,5,t2,true);for(var d=0;d<mdata.length;d++){m=mdata[d];n=ndata[d];o=odata[d];switch(random(9)){case 0:m=-m;break;case 1:n=-n;break;case 2:o=-o;break;case 3:m=-m;n=-n;break;case 4:m=-m;o=-o;break;case 5:n=-n;o=-o;break;default:m=-m;n=-n;o=-o}op="*";if(n<0){n0="("+n+")"}else{n0=n}if(o<0){o0="("+o+")"}else{o0=o}ldata=m+op+n0+op+o0;rdata=m*n*o;_data.push([[[m,n,o],op,ldata],rdata])}}if(this.topic_id==12){var t1=Math.round((4/5)*totalQuest);var t2=totalQuest-t1;var mdata=Array.randomNumberArray(1,20,t1,true);var ndata=Array.randomNumberArray(1,20,t1,true);var i=0;var l=mdata.length;var c=0;var ldata;var rdata;var l,m,n;var action=["+","-"];if(actType=="add"){action=["+","+"]}if(actType=="sub"){action=["-","-"]}var op,op1,op2;var pcount=0;var _data=[];for(;c<mdata.length;c++){m=mdata[c];n=ndata[c];op=action[random(2)];var rr=actType=="add"?random(3):random(4);switch(rr){case 0:m=-m;break;case 1:n=-n;break;case 2:m=-m;n=-n;break;case 3:m=Math.min(m,n);n=Math.max(mdata[c],ndata[c]);op="-";if(m-n>0){if(pcount==2){m=m^n;n=n^m;m=m^n}else{pcount++}}break}if(n<0){n0="<mo>(</mo><mrow><mtext>\u2212</mtext><mn>"+Math.abs(n)+"</mn></mrow><mo>)</mo>"}else{n0="<mn>"+n+"</mn>"}if(m<0){m0="<mrow><mtext>\u2212</mtext><mn>"+Math.abs(m)+"</mn></mrow>"}else{m0="<mn>"+m+"</mn>"}op0=op=="-"?"<mo>\u2212</mo>":"<mo>+</mo>";ldata="<math><mrow>"+m0+op0+n0+"</mrow></math>";rdata=op=="+"?m+n:m-n;_data.push([[[m,n],[op],ldata],rdata])}mdata=Array.randomNumberArray(-20,20,t2,true);ndata=Array.randomNumberArray(-20,20,t2,true);odata=Array.randomNumberArray(-20,20,t2,true);for(var d=0;d<mdata.length;d++){m=mdata[d];n=ndata[d];o=odata[d];m=m===0?([1,-1][random(2)]):m;n=n===0?([1,-1][random(2)]):n;o=o===0?([1,-1][random(2)]):o;if(m>0&&n>0&&o>0){n=-n}op1="+";op2="+";var rr=actType=="sub"?random(3)+1:actType=="add"?0:random(4);switch(rr){case 0:op1="+";op2="+";rdata=m+n+o;break;case 1:op1="+";op2="-";rdata=m+n-o;break;case 2:op1="-";op2="+";rdata=m-n+o;break;case 3:op1="-";op2="-";rdata=m-n-o;break}if(n<0){n0="<mo>(</mo><mrow><mtext>\u2212</mtext><mn>"+Math.abs(n)+"</mn></mrow><mo>)</mo>"}else{n0="<mn>"+n+"</mn>"}if(o<0){o0="<mo>(</mo><mrow><mtext>\u2212</mtext><mn>"+Math.abs(o)+"</mn></mrow><mo>)</mo>"}else{o0="<mn>"+o+"</mn>"}if(m<0){m0="<mrow><mtext>\u2212</mtext><mn>"+Math.abs(m)+"</mn></mrow>"}else{m0="<mn>"+m+"</mn>"}op1_0=op1=="-"?"<mo>\u2212</mo>":"<mo>+</mo>";op2_0=op2=="-"?"<mo>\u2212</mo>":"<mo>+</mo>";ldata="<math><mrow>"+m0+op1_0+n0+op2_0+o0+"</mrow></math>";_data.push([[[m,n,o],[op1,op2],ldata],rdata])}}if(this.topic_id==13){function getDeciDataType(t){var m,n,s1,e1,s2,e2,d1,d2,op,mp;switch(t){case 1:s1=s2=1;e1=e2=99;d1=d2=10;op="+";break;case 2:s1=50;s2=1;e1=99;e2=49;d1=d2=10;op="-";break;case 3:s1=1;s2=1;e1=999;e2=999;d1=d2=100;op="+";break;case 4:s1=500;s2=1;e1=999;e2=499;d1=d2=100;op="-";break;case 5:s1=1;s2=1;e1=9;e2=99;d1=100;d2=1000;op="+";break;case 6:s1=1;s2=1;e1=9;e2=9;d1=10;d2=100;op="-";break;case 7:s1=1;s2=1;e1=99;e2=999;d1=100;d2=1000;op="+";break;case 8:s1=30;s2=1;e1=99;e2=299;d1=100;d2=1000;op="-";break;case 9:s1=10;s2=1;e1=99;e2=999;d1=10;d2=10000;op="+";break;case 10:s1=1;s2=1;e1=99;e2=99;d1=100;d2=10000;op="-";break}m=Array.randomNumberArray(s1,e1,1,true);n=Array.randomNumberArray(s2,e2,1,true);m=m[0]/d1;n=n[0]/d2;var m1=m;if(t==5||t==7||t==9){if(random(2)){m=n;n=m1}}var mDeci=String(m).indexOf(".")>-1;var nDeci=String(n).indexOf(".")>-1;if(!mDeci&&!nDeci){m=m+(1/d1)}var ls=String(m).split(".")[1];mp=ls?ls.length:1;var pow=Math.pow(10,mp);m=Math.round(m*pow)/pow;ls=String(n).split(".")[1];np=ls?ls.length:1;pow=Math.pow(10,np);n=Math.round(n*pow)/pow;return{m:m,n:n,op:op}}var type,ldata,rdata,mp;for(var i=0;i<totalQuest;i++){type=random(10)+1;var _data=[];var t1=getDeciDataType(type);ldata=t1.m+t1.op+t1.n;rdata=t1.op=="+"?t1.m+t1.n:t1.m-t1.n;var ls=String(rdata).split(".")[1];mp=ls?ls.length:1;var pow=Math.pow(10,mp);rdata=Math.round(rdata*pow)/pow;_data.push([[[t1.m,t1.n],[t1.op],ldata],rdata])}_data.shuffle()}if(this.topic_id==19){function sortNumber(a,b){return a-b}var k,m,n;var _data=[];var ldata,rdata;var l1=Math.round(totalQuest/2);var l2=Math.floor(l1/2);var l3=Math.floor(totalQuest-(l1+l2));var ind,pind;var type;var t1ma=Array.randomNumberArray(2,9,2,true);var t1mb=Array.randomNumberArray(2,15,l1-2,true);var t1mc=Array.randomNumberArray(2,5,l1-2,true);var t2n=Array.randomNumberArray(5,75,l2,true);t2n.sort(sortNumber);var t3na=Array.randomNumberArray(4,8,l3,l3<=(8-4+1));t3na.sort(sortNumber);var t3nb=Array.randomNumberArray(3,6,l3,l3<=(6-3+1));t3nb.sort(sortNumber);for(var i=0;i<totalQuest;i++){if(i<l1){type=1;if(i<2){n=2;m=t1ma[i]}else{ind=random(2);n=ind?3:2;m=n==2?t1mb[i-2]:t1mc[i-2]}ldata=m+"^"+n;rdata=Math.pow(m,n)}else{if(i>=l1&&i<l1+l2){type=2;if(pind===0){m=1}else{if(pind===1){m=0}else{m=random(2)}}n=t2n[i-l1];pind=m;ldata=m+"^"+n;rdata=Math.pow(m,n)}else{if(i>=l1+l2&&i<totalQuest){type=3;ind=random(2);m=ind?10:2;n=m==2?t3na[i-(l1+l2)]:t3nb[i-(l1+l2)];ldata=m+"^"+n;rdata=Math.pow(m,n)}}}_data.push([[[m,n],type,ldata],rdata])}}if(this.topic_id==20){var k,m,n;var _data=[];var ldata,rdata;var l1=5;var l2=2;var l3=3;var ind,pind;var type;var t1ma=Array.randomNumberArray(1,20,3,true);var t1mb=Array.randomNumberArray(1,6,3,true);var t2m1=Array.shuffleArray(["1/2","1/3"],2);var t2m2=Array.shuffleArray(["1/4","1/5","1/6","1/10","2/3","2/5","3/4","3/5","3/10","4/5"],2);var t2m3=Array.shuffleArray(["1/7","2/7","3/7","4/7","5/7","6/7","1/8","3/8","5/8","7/8","2/9","4/9","5/9","7/9","8/9","7/10","9/10"],2);var t2n1=Array.randomNumberArray(2,4,2,false);var t2n2=Array.randomNumberArray(2,3,2,!false);var t2n3=[2,2];var t4ma=Array.randomNumberArray(3,20,2,true);var t4mb=Array.randomNumberArray(1,6,2,true);var t4neg=Array.shuffleArray([0,1],2);var t5ma=Array.randomNumberArray(1,9,1,true);var t5mb=Array.randomNumberArray(1,4,1,true);var st;for(var i=0;i<totalQuest;i++){var s="";var frac=false;st=["",""];if(i<3){type=1;ind=random(2);n=ind?3:2;m=n==2?t1ma[i]:t1mb[i];s=random(2);ldata=s?-m+"^"+n:"(-"+m+")^"+n;rdata=s?-Math.pow(m,n):Math.pow(-m,n);st[0]=m}else{if(i>=3&&i<5){type=2;switch(random(3)){case 0:m=t2m1[i-3];n=t2n1[i-3];break;case 1:m=t2m2[i-3];n=t2n2[i-3];break;case 2:m=t2m3[i-3];n=t2n3[i-3];break}ldata="("+m+")^"+n;var st=m.split("/");var nu=Math.pow(st[0],n);var de=Math.pow(st[1],n);frac=true;var str=Math.simpleFrac(nu+"/"+de);rdata=str}else{if(i>=5&&i<7){type=3;switch(random(3)){case 0:m=t2m1[i-5];n=t2n1[i-5];break;case 1:m=t2m2[i-5];n=t2n2[i-5];break;case 2:m=t2m3[i-5];n=t2n3[i-5];break}s=random(2);ldata=s?"-("+m+")^"+n:"(-*"+m+")^"+n;var st=m.split("/");var nu=Math.pow(st[0],n);var de=Math.pow(st[1],n);frac=true;var str=Math.simpleFrac(nu+"/"+de);var si=Math.pow(-1,n)<0?"-":"";rdata=s?"-"+str:si+str}else{if(i>=7&&i<9){type=4;ind=random(2);n=ind?3:2;m=n==2?t4ma[i-7]/10:t4mb[i-7]/10;if(t4neg[i-7]){s=random(2);ldata=s?-m+"^"+n:"(-"+m+")^"+n;rdata=s?-Math.pow(m,n):Math.pow(-m,n)}else{ldata=m+"^"+n;rdata=Math.pow(m,n)}st[0]=m}else{if(i>=9){s="";type=5;ind=random(2);n=ind?3:2;var k=rand(2,4);var kv=Math.pow(10,k);m=n==2?t5ma[0]*kv:t5mb[0]*kv;ldata=m+"^"+n;rdata=Math.pow(m,n);st[0]=m}}}}}_data.push([[[m,n],s,frac,[st[0],st[1]],type,ldata],[rdata,[nu,de]]])}}if(this.topic_id==21){var k,m,n;var _data=[];var ldata,rdata;var l1=5;var l2=2;var l3=3;var ind,pind;var type;var k1=Array.randomNumberArray(1,3,2,true);var m1=Array.randomNumberArray(1,12,2,true);var n1=Array.randomNumberArray(1,9,2,true);var k2=Array.randomNumberArray(1,3,4,false);var k22=Array.shuffleArray([-3,-2,-1,2,3],4);var m2=Array.randomNumberArray(1,9,4,true);var n2=Array.randomNumberArray(1,9,4,true);var k3=Array.randomNumberArray(1,3,2,false);var k32=Array.shuffleArray([0.1,0.2,2,10,20,100],2);var m3=Array.randomNumberArray(11,999,2,true);var n3=Array.randomNumberArray(1,2,2,false);var k4=Array.randomNumberArray(1,3,2,true);var k42=Array.randomNumberArray(1,3,2,true);var m4=Array.randomNumberArray(11,99,2,true);var n4=Array.randomNumberArray(11,25,2,false);for(var i=0;i<totalQuest;i++){var s="";var frac=false;if(i<2){type=1;j=i;k=Math.pow(10,-k1[j]);ind=random(2);n=ind?m1[i]:n1[j]*k;m=ind?n1[i]*k:m1[j]}else{if(i>=2&&i<6){type=2;j=i-2;ka=Math.pow(10,-k2[j]);kb=Math.pow(10,k22[j]);ind=random(2);n=ind?m2[j]*ka:n2[j]*kb;m=ind?n2[j]*kb:m2[j]*ka}else{if(i>=6&&i<8){type=3;j=i-6;ka=Math.pow(10,-k3[j]);kb=k32[j];ind=random(2);n=ind?m3[j]*ka:kb;m=ind?kb:m3[j]*ka}else{if(i>=8&&i<totalQuest){type=4;j=i-8;ka=Math.pow(10,-k4[j]);kb=Math.pow(10,k42[j]);ind=random(2);n=ind?m4[j]*ka:n4[j]*kb;m=ind?n4[j]*kb:m4[j]*ka}}}}m=Math.fixTo(m,8);n=Math.fixTo(n,8);rdata=m*n;_data.push([[[m,n],type],rdata])}}if(this.topic_id==24){console_log("DEBUG:A");var fractodeciStr=mngr.topic_data;var fractodeciStr_a=fractodeciStr.split("|");var fractodeciStr_1=fractodeciStr_a[0].split(",");var fractodeciStr_2=fractodeciStr_a[1].split(",");var obj={};var n=Math.round(totalQuest*0.7);var m=totalQuest-n;console_log("DEBUG:B"+n+":"+m);var farr1=fractodeciStr_1.slice(0,10);var farr2=fractodeciStr_1.slice(10);var fracArr_1a=Array.shuffleArray(farr1,2);var fracArr_1=Array.shuffleArray(farr2,n-2);var fracArr_2=Array.shuffleArray(fractodeciStr_2,m);var fracArr=fracArr_1a.concat(fracArr_1,fracArr_2);var l=totalQuest;var d;var _data=[];console_log("DEBUG:C"+l);var lim=Math.floor(l/2);var ind1=random(lim);var ind2=random(l-lim)+lim;var rep_1=["1/3","2/3"][random(2)];var rep_2=["1/9","2/9","3/9","4/9","5/9","6/9","7/9","8/9","4/3","5/3","7/3","8/3"];rep_2.shuffle();rep_2=rep_2[random(rep_2.length)];for(var i=0;i<l;i++){d=fracArr[i].split("/");_data.push([[[d[0],d[1]],fracArr[i]],d[0]/d[1]])}console_log("DEBUG:D");_data.shuffle();if(this.actType=="repeating_decimal"){fracArr[ind1]=rep_1;d=fracArr[ind1].split("/");var ans=String(Math.fixTo(d[0]/d[1],17));ans=String(ans).substring(0,ans.length-1);var robj=checkForRepeater(ans);var ls=String(ans).substring(0,robj.s);var rs=robj.str;_data[ind1]=[[[d[0],d[1]],fracArr[ind1]],ls+"R"+rs];fracArr[ind2]=rep_2;d=fracArr[ind2].split("/");ans=String(Math.fixTo(d[0]/d[1],17));ans=String(ans).substring(0,ans.length-1);robj=checkForRepeater(ans);ls=String(ans).substring(0,robj.s);rs=robj.str;_data[ind2]=[[[d[0],d[1]],fracArr[ind2]],ls+"R"+rs];console.log(_data)}}if(this.topic_id==25){var decitofracStr=mngr.topic_data;var decitofracStr_a=decitofracStr.split(",");var l=totalQuest;var fracArr=(decitofracStr_a);var _data=[];var _ldata,_rdata,_rep;for(var i=0;i<l;i++){_ldata=fracArr[i];_rep=false;if(fracArr[i]=="0.3R"){_rdata="1/3";_ldata=fracArr[i].split("R")[0];_rep=true}else{if(fracArr[i]=="0.6R"){_rdata="2/3";_ldata=fracArr[i].split("R")[0];_rep=true}else{_rdata=Math.convertToFrac(fracArr[i]).val}}_data.push([[_ldata,_rep],_rdata])}}if(this.topic_id==27){var kn=Array.randomNumberArray(2,10,10,!true);var pn=Array.randomNumberArray(2,10,10,!true);var qn=Array.randomNumberArray(2,10,10,!true);var et;var _data=[];var _ldata,_rdata;for(var i=0;i<totalQuest;i++){et=actType===undefined||actType===null?random(5):actType;_ldata=[];_rdata=[];k=kn[i];p=pn[i];q=qn[i];switch(et){case 0:_ldata[0]=["{"+k+"^"+p+"}*{"+k+"^"+q+"}",[k,p,q]];_ldata[1]=k+"^"+(p+q);_ldata[2]=et;_ldata[3]=k+"^{"+p+"+"+q+"}";break;case 1:_ldata[0]=["{"+p+"^"+k+"}*{"+q+"^"+k+"}",[k,p,q]];_ldata[1]=(p*q)+"^"+(k);_ldata[2]=et;_ldata[3]="("+p+"*"+q+")^"+(k);break;case 2:_ldata[0]=["("+k+"^"+p+")^"+q,[k,p,q]];_ldata[1]=k+"^"+(p*q);_ldata[2]=et;_ldata[3]=k+"^("+p+"*"+q+")";break;case 3:var p0=p;var q0=q;if(q>p){p0=q;q0=p}else{if(p==q){p0=p+1}}p=p0;q=q0;_ldata[0]=["{"+k+"^"+p+"}/{"+k+"^"+q+"}",[k,p,q]];_ldata[1]=k+"^"+(p-q);_ldata[2]=et;_ldata[3]=k+"^("+p+"-"+q+")";break;case 4:_ldata[0]=["{"+p*q+"^"+k+"}/{"+p+"^"+k+"}",[k,p,q]];_ldata[1]=q+"^"+k;_ldata[2]=et;_ldata[3]="("+(p*q)+"/"+p+")^"+k;break}_data.push([[_ldata[0][1],_ldata[2],_ldata[3],_ldata],_ldata[1]])}_data.shuffle()}if(this.topic_id==32){function chkformat(xp){if(xp=="yx^2"){return"x^2y"}if(xp=="y^2x"){return"xy^2"}if(xp=="yx"){return"xy"}if(xp=="yx\u00b2"){return"x\u00b2y"}if(xp=="y\u00b2x"){return"xy\u00b2"}return xp}function parseExp(xp,vars){return xp;var exp=xp;var v=vars?vars:["x","y","z","u","v","a","b"];var s,r;for(var i=0;i<v.length;i++){s=v[i];r="("+s+")";if(exp.indexOf(s)>-1){exp=exp.split(s).join(r)}}return exp}function reformat(xp,vars){var exp=xp;var sa=["x","y"];var v=vars;var s,r;for(var i=0;i<v.length;i++){s=sa[i];r=v[i];if(exp.indexOf(s)>-1){exp=exp.split(s).join(r)}}return exp}function checkForRev(e,n){var boo=false;if(n<6){return boo}var arr=[];for(var i=0;i<e.length;i++){arr.push(e[i].split("\u00b2").join("^2"))}for(var j=0;j<arr.length;j++){var s=arr[j];var r=chkformat(s);if(s!=r){for(var k=0;k<arr.length;k++){if(r==arr[k]){return true}}return true}}return boo}function getCombineTerm_ml(str,obj){var str0;var step;str0=str.join("|");str0=str0.split("^2").join("\u00b2");str0=reformat(str0,obj.vars);str0=str0.split("|");var step="";var arr=[];var first=true;for(var i=0;i<str0.length;i++){if(str0[i].length){str0[i]=String(str0[i]).split(",");if(str0[i].length>1){step="<mrow><mo>(</mo>";var l=str0[i].length;first=true;for(var j=0;j<l;j++){var sub=str0[i][j];var num=parseInt(sub);var str;var isZero=String(sub).charAt(0)=="0";if(isZero){num=0}var isNeg=String(sub).charAt(0)=="-";if(isNaN(num)){str=sub;num="";if(isNeg){step+="<mtext>&minus;</mtext>";str=String(str).substring(1)}step+=getcoeff_ml([str]).join("")}else{if(String(num)==String(sub)){var sig=num<0?"&minus;":(first?"":"+");var val=Math.abs(num);step+="<mtext>"+sig+"</mtext><mn>"+val+"</mn>"}else{str=sub.split(String(num))[1];var sig=num<0?"&minus;":(first?"":"+");var val=Math.abs(num);step+="<mtext>"+sig+"</mtext><mn>"+val+"</mn>";step+=getcoeff_ml([str]).join("")}}if(j<l-1){step+="<mo>+</mo>"}first=false}step+="<mo>)</mo></mrow>";arr.push(step)}else{var sub=str0[i];var num=parseInt(sub);var isZero=String(sub).charAt(0)=="0";if(isZero){num=0}var isNeg=String(sub).charAt(0)=="-";var str;step="";if(isNaN(num)){str=sub;num="";if(isNeg){step+="<mtext>&minus;</mtext>";str=String(str).substring(1)}step+=getcoeff_ml([str]).join("")}else{if(String(num)==String(sub)){var sig=num<0?"&minus;":(first?"":"+");var val=Math.abs(num);step+="<mtext>"+sig+"</mtext><mn>"+val+"</mn>"}else{str=String(sub).split(String(num))[1];var sig=num<0?"&minus;":(first?"":"+");var val=Math.abs(num);step+="<mtext>"+sig+"</mtext><mn>"+val+"</mn>";step+=getcoeff_ml([str]).join("")}}first=false;arr.push(step)}}}var step_ml="<math><mrow><mo>=</mo>"+arr.join("<mo>+</mo>")+"</mrow></math>";step_ml=step_ml.split("<mo>+</mo><mtext>&minus;</mtext>").join("<mo>&minus;</mo>");step_ml=step_ml.split("<mo>+</mo><mo>&minus;</mo>").join("<mo>&minus;</mo>");step_ml=step_ml.split("<mo>+</mo><mrow><mo>&minus;</mo>").join("<mo>&minus;</mo><mrow>");step_ml=step_ml.split("<mo>+</mo><mtext>+</mtext>").join("<mo>+</mo>");step_ml=step_ml.split("<mo>+</mo><msup><mrow><mo>&minus;</mo>").join("<mo>&minus;</mo><msup><mrow>");step_ml=step_ml.split("<mtext>-</mtext>").join("<mo>&minus;</mo>");return step_ml}function getcoeff_ml(arr){var l=arr.length;var narr=[];for(var i=0;i<l;i++){var str=String(arr[i]);if(str.length==0){ml="<mtext>"+str+"</mtext>";narr.push(ml);continue}else{if(str.length==1){ml="<mi>"+str+"</mi>";narr.push(ml);continue}}var sp=str.split("\u00b2");var ml="";if(sp[0]!==str){console_log("CONDTION_1 "+sp);if(sp[1]&&sp[1].length){console_log("CONDTION_1a");var sp2=sp[0].split("");if(sp2[0]=="-"){console_log("CONDTION_1a0");ml="<msup><mrow><mtext>&minus;</mtext><mi>"+sp2[1]+"</mi></mrow><mn>2</mn></msup><mi>"+sp[1]+"</mi>"}else{console_log("CONDTION_1a1");ml="<msup><mrow><mi>"+sp[0]+"</mi></mrow><mn>2</mn></msup><mi>"+sp[1]+"</mi>"}}else{console_log("CONDTION_1b");if(sp[0].length==2){console_log("CONDTION_1b-1");var sp2=sp[0].split("");if(sp2[0]=="-"){console_log("CONDTION_1b0");ml="<msup><mrow><mo>&minus;</mo><mi>"+sp2[1]+"</mi></mrow><mn>2</mn></msup>"}else{console_log("CONDTION_1b1");ml="<mi>"+sp2[0]+"</mi><msup><mrow><mi>"+sp2[1]+"</mi></mrow><mn>2</mn></msup>"}}else{console_log("CONDTION_1b-2");ml="<msup><mrow><mi>"+sp[0]+"</mi></mrow><mn>2</mn></msup>"}}}else{console_log("CONDTION_2 "+sp);if(str.length>1){console_log("CONDTION_2a");var sp2=str.split("");ml="<mrow>";if(sp2[0]=="-"){console_log("CONDTION_2a0");ml+="<mo>&minus;</mo>"}else{console_log("CONDTION_2a1");ml+="<mi>"+sp2[0]+"</mi>"}for(var k=1;k<sp2.length;k++){ml+="<mi>"+sp2[k]+"</mi>"}ml+="</mrow>"}else{console_log("CONDTION_2b ");ml="<mi>"+str+"</mi>"}}narr.push(ml)}return narr}function getExplanation(q,obj,qexp,n,ldata2){console_log("GET_EXPLANATION_CALLED");var doReverse=checkForRev(qexp,obj.prob);var re=String(q).split("\u00b2").join("^2");re=uniformat(re,obj.vars);var temp_re=re.split("yx^2").join("yex^2");var booa=temp_re.indexOf("yx")>-1;var boob=temp_re.indexOf("y^2x")>-1;var booc=temp_re.indexOf("yex^2")>-1;var al="<i>yx</i> = <i>xy</i>";var bl="<i>y</i>\u00B2<i>x</i> = <i>xy</i>\u00B2";var cl="<i>yx</i>\u00B2 = <i>x</i>\u00B2<i>y</i>";var larr=[];if(booa){larr.push(al.split("x").join(obj.vars[0]).split("y").join(obj.vars[1]))}if(boob){larr.push(bl.split("x").join(obj.vars[0]).split("y").join(obj.vars[1]))}if(booc){larr.push(cl.split("x").join(obj.vars[0]).split("y").join(obj.vars[1]))}re=rearrangeExp(re);re=reformat(re,obj.vars);var str,line_str,step_1,step_2,step_3,line_1,line_2;step_1="";step_2="";step_3="";if(doReverse){line_str=exp_3.split("|");step_1="<p>"+ldata2+"</p>";line_1=line_str[0];if(larr.length===1){line_1+=(larr[0])}else{if(larr.length===2){line_1+=larr[0]+line_str[1]+larr[1]}else{if(larr.length===3){line_1+=larr[0]+", "+larr[1]+line_str[1]+larr[2]}}}line_1+=line_str[2];line_1="<p>"+line_1+"</p>";line_2="<p>"+exp_1+"</p>";re=uniformat(re,obj.vars);var str0=expToArr(re);str0=sortByDeg(str0);step_2="<p>"+getCombineTerm_ml(str0,obj)+"</p>";line_3="<p>"+exp_2+"</p>";str0=combineLike(str0);step_3="<p>"+getCombineTerm_ml(str0,obj)+"</p>";return[line_1,step_1,line_2,step_2,line_3,step_3].join("<br/>")}else{line_1="<p>"+exp_1+"</p>";re=uniformat(re,obj.vars);str0=expToArr(re);str0=sortByDeg(str0);step_1="<p>"+getCombineTerm_ml(str0,obj)+"</p>";line_2="<p>"+exp_2+"</p>";str0=combineLike(str0);step_2="<p>"+getCombineTerm_ml(str0,obj)+"</p>";step_3="";return[line_1,step_1,line_2,step_2].join("<br/>")}}var a=Array.randomNumberArray(1,12,10,true);var b=Array.randomNumberArray(1,12,10,true);var c=Array.randomNumberArray(1,12,10,true);var d=Array.randomNumberArray(1,12,10,true);var e=Array.randomNumberArray(1,12,10,true);var f=Array.randomNumberArray(1,12,10,true);var selector;var a0,b0,c0,d0;var _data=[];var _ldata;var _rdata;var steps_str="";var exp_1="Use the commutative and associative properties to group like terms.";var exp_3="By the commutative property, | and |.";var exp_2="Simplify.";var hint="<p>"+exp_1+"</p>";for(var i=0;i<mngr.totalQuest;i++){var obj={};obj.x2y=0;obj.y2x=0;obj.xy=0;obj.x=0;obj[""]=0;if(i==0){selector=Array.shuffleArray(["x","x","",""],4);a0=a[i]+selector[0];b0=b[i]+selector[1];c0=c[i]+selector[2];d0=d[i]+selector[3];obj.deg=1;obj.vars=["x"];s1=["","-"][random(2)];s2=["+","-"][random(2)];s3=["+","-"][random(2)];s4=["+","-"][random(2)];obj[selector[0]]+=parseInt(s1+a[i]);obj[selector[1]]+=parseInt(s2+b[i]);obj[selector[2]]+=parseInt(s3+c[i]);obj[selector[3]]+=parseInt(s4+d[i]);_ldata=[s1+a0+s2+b0+s3+c0+s4+d0];_rdata=parseExp(_ldata[0]);obj.prob=i;var coeff=[selector[0],selector[1],selector[2],selector[3]];var disp_a=a[i]==1&&coeff[0]!=""?"":a[i];var disp_b=b[i]==1&&coeff[1]!=""?"":b[i];var disp_c=c[i]==1&&coeff[2]!=""?"":c[i];var disp_d=d[i]==1&&coeff[3]!=""?"":d[i];steps_str=getExplanation(_ldata,obj,[selector[0],selector[1],selector[2],selector[3]],i);_ldata="<math><mrow>";_ldata+="<mtext>"+(s1=="-"?"&minus;":s1)+"</mtext><mn>"+disp_a+"</mn><mi>"+coeff[0]+"</mi><mo>"+s2+"</mo><mn>"+disp_b+"</mn><mi>"+coeff[1]+"</mi><mo>"+s3+"</mo><mn>"+disp_c+"</mn><mi>"+coeff[2]+"</mi><mo>"+s4+"</mo><mn>"+disp_d+"</mn><mi>"+coeff[3]+"</mi>";_ldata+="</mrow></math>";_data.push([[_ldata,_rdata,[s1+a[i],s2+b[i],s3+c[i],s4+d[i]],[s1+"|"+a0,s2+"|"+b0,s3+"|"+c0,s4+"|"+d0],obj,[selector[0],selector[1],selector[2],selector[3]],steps_str,hint,"CLT"],_rdata])}else{if(i<3){selector=Array.shuffleArray(["x","x","y","y",""],5);a0=a[i]+selector[0];b0=b[i]+selector[1];c0=c[i]+selector[2];d0=d[i]+selector[3];e0=e[i]+selector[4];obj.deg=1;obj.vars=["x","y"];s1=["","-"][random(2)];s2=["+","-"][random(2)];s3=["+","-"][random(2)];s4=["+","-"][random(2)];s5=["+","-"][random(2)];obj[selector[0]]+=parseInt(s1+a[i]);obj[selector[1]]+=parseInt(s2+b[i]);obj[selector[2]]+=parseInt(s3+c[i]);obj[selector[3]]+=parseInt(s4+d[i]);obj[selector[4]]+=parseInt(s5+e[i]);_ldata=[s1+a0+s2+b0+s3+c0+s4+d0+s5+e0];_rdata=parseExp(_ldata[0]);obj.prob=i;var coeff=[selector[0],selector[1],selector[2],selector[3],selector[4]];var disp_a=a[i]==1&&coeff[0]!=""?"":a[i];var disp_b=b[i]==1&&coeff[1]!=""?"":b[i];var disp_c=c[i]==1&&coeff[2]!=""?"":c[i];var disp_d=d[i]==1&&coeff[3]!=""?"":d[i];var disp_e=e[i]==1&&coeff[4]!=""?"":e[i];steps_str=getExplanation(_ldata,obj,[selector[0],selector[1],selector[2],selector[3],selector[4]],i);_ldata="<math><mrow>";_ldata+="<mtext>"+(s1=="-"?"&minus;":s1)+"</mtext><mn>"+disp_a+"</mn><mi>"+coeff[0]+"</mi><mo>"+s2+"</mo><mn>"+disp_b+"</mn><mi>"+coeff[1]+"</mi><mo>"+s3+"</mo><mn>"+disp_c+"</mn><mi>"+coeff[2]+"</mi><mo>"+s4+"</mo><mn>"+disp_d+"</mn><mi>"+coeff[3]+"</mi><mo>"+s5+"</mo><mn>"+disp_e+"</mn><mi>"+coeff[4]+"</mi>";_ldata+="</mrow></math>";_data.push([[_ldata,_rdata,[s1+a[i],s2+b[i],s3+c[i],s4+d[i],s5+e[i]],[s1+"|"+a0,s2+"|"+b0,s3+"|"+c0,s4+"|"+d0,s5+"|"+e0],obj,[selector[0],selector[1],selector[2],selector[3],selector[4]],steps_str,hint,"CLT"],_rdata])}else{if(i<6){var selector1=Array.shuffleArray(["x\u00b2","x\u00b2","x","x",""],5);var selector2=Array.shuffleArray(["x\u00b2","x\u00b2","x","",""],5);var selector3=Array.shuffleArray(["x\u00b2","x","x","",""],5);selector=[selector1,selector2,selector3][random(3)];s1=["","-"][random(2)];s2=["+","-"][random(2)];s3=["+","-"][random(2)];s4=["+","-"][random(2)];s5=["+","-"][random(2)];obj[selector[0]]+=parseInt(s1+a[i]);obj[selector[1]]+=parseInt(s2+b[i]);obj[selector[2]]+=parseInt(s3+c[i]);obj[selector[3]]+=parseInt(s4+d[i]);obj[selector[4]]+=parseInt(s5+e[i]);var n=["x","y","z"][random(3)];selector=selector.join("|").split("x").join(n).split("|");a0=a[i]+selector[0];b0=b[i]+selector[1];c0=c[i]+selector[2];d0=d[i]+selector[3];e0=e[i]+selector[4];obj.deg=2;obj.vars=[n];_ldata=[s1+a0+s2+b0+s3+c0+s4+d0+s5+e0];_rdata=parseExp(_ldata[0]);obj.prob=i;var coeff=[selector[0],selector[1],selector[2],selector[3],selector[4]];var disp_a=a[i]==1&&coeff[0]!=""?"":a[i];var disp_b=b[i]==1&&coeff[1]!=""?"":b[i];var disp_c=c[i]==1&&coeff[2]!=""?"":c[i];var disp_d=d[i]==1&&coeff[3]!=""?"":d[i];var disp_e=e[i]==1&&coeff[4]!=""?"":e[i];coeff=coeff.join("|").split("x").join(n).split("|");coeff=getcoeff_ml(coeff);steps_str=getExplanation(_ldata,obj,[selector[0],selector[1],selector[2],selector[3],selector[4]],i);_ldata="<math><mrow>";_ldata+="<mtext>"+(s1=="-"?"&minus;":s1)+"</mtext><mn>"+disp_a+"</mn><mrow>"+coeff[0]+"</mrow><mo>"+s2+"</mo><mn>"+disp_b+"</mn><mrow>"+coeff[1]+"</mrow><mo>"+s3+"</mo><mn>"+disp_c+"</mn><mrow>"+coeff[2]+"</mrow><mo>"+s4+"</mo><mn>"+disp_d+"</mn><mrow>"+coeff[3]+"</mrow><mo>"+s5+"</mo><mn>"+disp_e+"</mn><mrow>"+coeff[4]+"</mrow>";_ldata+="</mrow></math>";_data.push([[_ldata,_rdata,[s1+a[i],s2+b[i],s3+c[i],s4+d[i],s5+e[i]],[s1+"|"+a0,s2+"|"+b0,s3+"|"+c0,s4+"|"+d0,s5+"|"+e0],obj,[selector[0],selector[1],selector[2],selector[3],selector[4]],steps_str,hint,"CLT"],_rdata])}else{var selector1=Array.shuffleArray([["x\u00b2y","yx\u00b2"][random(2)],["y\u00b2x","xy\u00b2"][random(2)],["xy","yx"][random(2)]],3);var selector2=Array.shuffleArray([["x\u00b2y","yx\u00b2"][random(2)],["y\u00b2x","xy\u00b2"][random(2)],["xy","yx"][random(2)]],1);var selector3=Array.shuffleArray(["x\u00b2","y\u00b2","","","x\u00b2","y\u00b2"],2);selector=Array.shuffleArray(selector1.concat(selector2,selector3),6);a0=a[i]+selector[0];b0=b[i]+selector[1];c0=c[i]+selector[2];d0=d[i]+selector[3];e0=e[i]+selector[4];f0=f[i]+selector[5];s1=["","-"][random(2)];s2=["+","-"][random(2)];s3=["+","-"][random(2)];s4=["+","-"][random(2)];s5=["+","-"][random(2)];s6=["+","-"][random(2)];obj.deg=3;obj[chkformat(selector[0])]+=parseInt(s1+a[i]);obj[chkformat(selector[1])]+=parseInt(s2+b[i]);obj[chkformat(selector[2])]+=parseInt(s3+c[i]);obj[chkformat(selector[3])]+=parseInt(s4+d[i]);obj[chkformat(selector[4])]+=parseInt(s5+e[i]);obj[chkformat(selector[5])]+=parseInt(s6+f[i]);var n=[["x","y"],["a","b"],["u","v"],["p","q"]][random(4)];obj.vars=n;obj.prob=i;_ldata=[reformat(s1+a0+s2+b0+s3+c0+s4+d0+s5+e0+s6+f0,n)];_rdata=parseExp(_ldata[0]);var coeff=[selector[0],selector[1],selector[2],selector[3],selector[4],selector[5]];var disp_a=a[i]==1&&coeff[0]!=""?"":a[i];var disp_b=b[i]==1&&coeff[1]!=""?"":b[i];var disp_c=c[i]==1&&coeff[2]!=""?"":c[i];var disp_d=d[i]==1&&coeff[3]!=""?"":d[i];var disp_e=e[i]==1&&coeff[4]!=""?"":e[i];var disp_f=f[i]==1&&coeff[5]!=""?"":f[i];coeff=reformat(coeff.join("|"),n).split("|");coeff=getcoeff_ml(coeff);var coeff2=[chkformat(selector[0]),chkformat(selector[1]),chkformat(selector[2]),chkformat(selector[3]),chkformat(selector[4]),chkformat(selector[5])];coeff2=reformat(coeff2.join("|"),n).split("|");coeff2=getcoeff_ml(coeff2);var _ldata2="<math><mrow>";_ldata2+="<mtext>"+(s1=="-"?"&minus;":s1)+"</mtext><mn>"+disp_a+"</mn><mrow>"+coeff2[0]+"</mrow><mo>"+s2+"</mo><mn>"+disp_b+"</mn><mrow>"+coeff2[1]+"</mrow><mo>"+s3+"</mo><mn>"+disp_c+"</mn><mrow>"+coeff2[2]+"</mrow><mo>"+s4+"</mo><mn>"+disp_d+"</mn><mrow>"+coeff2[3]+"</mrow><mo>"+s5+"</mo><mn>"+disp_e+"</mn><mrow>"+coeff2[4]+"</mrow><mo>"+s6+"</mo><mn>"+disp_f+"</mn><mrow>"+coeff2[5]+"</mrow>";_ldata2+="</mrow></math>";steps_str=getExplanation(_ldata,obj,[selector[0],selector[1],selector[2],selector[3],selector[4],selector[5]],i,_ldata2);_ldata="<math><mrow>";_ldata+="<mtext>"+(s1=="-"?"&minus;":s1)+"</mtext><mn>"+disp_a+"</mn><mrow>"+coeff[0]+"</mrow><mo>"+s2+"</mo><mn>"+disp_b+"</mn><mrow>"+coeff[1]+"</mrow><mo>"+s3+"</mo><mn>"+disp_c+"</mn><mrow>"+coeff[2]+"</mrow><mo>"+s4+"</mo><mn>"+disp_d+"</mn><mrow>"+coeff[3]+"</mrow><mo>"+s5+"</mo><mn>"+disp_e+"</mn><mrow>"+coeff[4]+"</mrow><mo>"+s6+"</mo><mn>"+disp_f+"</mn><mrow>"+coeff[5]+"</mrow>";_ldata+="</mrow></math>";_data.push([[_ldata,_rdata,[s1+a[i],s2+b[i],s3+c[i],s4+d[i],s5+e[i],s6+f[i]],[s1+"|"+a0,s2+"|"+b0,s3+"|"+c0,s4+"|"+d0,s5+"|"+e0,s6+"|"+f0],obj,[selector[0],selector[1],selector[2],selector[3],selector[4],selector[5]],steps_str,hint,"CLT"],_rdata])}}}}}if(this.topic_id==4||this.topic_id==5||this.topic_id==7||this.topic_id==22||this.topic_id==28){var _data=mngr.topic_data;_data.shuffle()}console.log("END of GEN PROBLEM ");this.quest_data=_data};mngr.getProblem=function(id,type,get_indx){console.log("FLASH_CARD_MNGR_INFO:GET PROB FOR TOPPIC ID "+id);var doInit=false;if(this.initialized){if(this.topic_id!=id){this.actType=type;doInit=true}else{if(type!==undefined&&type!=this.actType){this.actType=type;doInit=true}else{if(type===undefined&&type!==this.actType){this.actType=type;doInit=true}}}}else{this.actType=type;doInit=true}if(mngr.debugMode){Flashcard_mngr.problemGenDebugTest(id,type);doInit=false}if(doInit){this.init(id)}if(this.current_pblm_index>=this.quest_data.length){this.genProblems();this.current_pblm_index=0}console.log("FLASH_CARD_MNGR_INFO:GENERATED PROB FOR TOPPIC ID "+id);var indx=get_indx!==undefined?get_indx:this.current_pblm_index;this.current_pblm_index++;this.completed_pblms++;var q=this.quest_data[indx];console_log("FLASH_CARD_MNGR_INFO: "+this.quest_data);console_log("FLASH_CARD_MNGR_INFO:"+this.current_pblm_index+":"+q[0]);this.current_qobj=q;this.current_quest=q[0];this.current_ans=q[1];_tutor_data_record=convertObjToString(q);return q};mngr.checkForLimit=function(){var boo=false;if(this.limit==this.completed_pblms){boo=true}return boo};mngr.checkAnswer=function(){};mngr.topicsArray=[["point_slope_eqn",""],["point_slope_graph",""],["plot_coordinates",""],["find_coordinates",""],["slope_write","Q_1,Q_2-4,"],["slope_write_basic",""],["slope_plot",""],["slope_intercept_graph",""],["slope_intercept_eqn",""],["distance_formula_estimate",""],["distance_formula_find",""],["plot_numberline","basic,"],["inequality_one_variable",",add_compound,only_compound"],["addition_practice",""],["subtraction_practice",""],["multiplication_practice",""],["division_practice",""],["fraction_model","","skip"],["percent_inc_dec",""],["rounding_numbers",""],["parabola_fx_vertex",""],["parabola_fy_vertex",""],["qe_vertexform_graph",""],["qe_vertexform_eqn",""],["qe_vertexform_eqn","with_a_as_1,with_a_as_m1,without_a_as_1"],["qe_standardform_eqn",",simple"],["qe_standardform_graph",""],["parabola_axis_symmetry_graph",""],["parabola_axis_symmetry_eqn-std",""],["parabola_axis_symmetry_eqn-vtx",""],["qe_factoredform_graph",""],["power_ten_positive",",2"],["power_ten_negative",",2"],["power_power_ten",""],["log_to_exp",""],["exp_to_log",",1,2"],["basic_log",""],["4","basic,"],["10","pp,pw,pi,ii,iw,nw,"],["15","basic,"],["11","multi,div,"],["12","add,sub,"],["24","repeating_decimal,"],["25","nr,"],["27","0,1,2,3,4,"],["0",""],["1",""],["2",""],["3",""],["5",""],["6",""],["7",""],["8",""],["9",""],["13",""],["14",""],["16",""],["17",""],["18",""],["19",""],["20",""],["21",""],["22",""],["23",""],["26",""],["28",""],["32",""]];mngr.debug_topic_index=null;mngr.stopDebugging=false;mngr.problemGenDebugTest=function(id,subtype){if(id==-1){debugAllTopics();return }if(!id){id=this.topic_id;subtype=Flashcard_mngr.actType}if(!isNaN(subtype)){subtype=parseInt(subtype)}Flashcard_mngr.actType=subtype?subtype:undefined;if(!isNaN(id)){id=parseInt(id)}runProblemGenerationTest(id)};function debugAllTopics(){debug_topic_index=0;stopDebugging=false;debugNextTopic()}function debugNextTopic(){if(mngr.topicsArray.length<=mngr.debug_topic_index){Flashcard_mngr.problemGenDebugInfo("ALERT","Problem Generation Debug Test Complete!!!");return }if(mngr.stopDebugging){Flashcard_mngr.problemGenDebugInfo("ALERT","Problem Generation Debug Test Stopped!!!");return }var current_topic=mngr.topicsArray[mngr.debug_topic_index++];var id=current_topic[0];var type=current_topic[1];var doSkip=current_topic[2];if(doSkip){setTimeout(debugNextTopic,100);return }type=type.split(",");for(var k=0;k<type.length;k++){mngr.problemGenDebugTest(id,type[k])}setTimeout(debugNextTopic,100)}function runProblemGenerationTest(id){var c=0;var nobugs=true;var info="TOPIC-ID: "+id;info+=Flashcard_mngr.actType?" | SUB-TOPIC-ID: "+Flashcard_mngr.actType:"";for(var i=0;i<Flashcard_mngr.debugIterations;i++){c=i+1;try{Flashcard_mngr.init(id)}catch(e){nobugs=false;Flashcard_mngr.problemGenDebugInfo("INFO","FLASH_CARD_MNGR_DATA-SET_WITH_ERROR: ");Flashcard_mngr.problemGenDebugInfo("INFO",Flashcard_mngr.quest_data);Flashcard_mngr.problemGenDebugInfo("ERROR","Problem generation error! "+info+" | @iteration: "+c);Flashcard_mngr.problemGenDebugInfo(e);break}}if(nobugs){Flashcard_mngr.problemGenDebugInfo("SUCCESS","No error detected! "+info+" | iterations: "+c)}}mngr.problemGenDebugInfo=function(code,info){var msg="["+code+"] "+info;if(code=="ERROR"){alert(msg)}else{if(code=="SUCCESS"){console.log(msg)}else{if(code=="ALERT"){alert(msg)}else{console.log(msg)}}}};return mngr}());console.log("TUTOR_AUTHOR_API:"+AuthorApi+":"+Flashcard_mngr);var TutorSolutionWidgetValues=(function(){var B;var C={};function A(){}C.getActiveWidget=function(){return B};C.setActiveWidget=function(D,E){if(!E||B==__dummyTutorWidget||(E&&!B)){B=D}else{if(B instanceof HmFlashWidgetImplWidgetPlot){B._thePlot=D}}};C.setActiveWidgetDummy=function(){C.setActiveWidget(__dummyTutorWidget)};C.isWidgetOnSolution=function(){var D=C.getActiveWidget();var E=false;if(D!=null){if(D!=__dummyTutorWidget){if(D._widgetGui&&D._widgetGui.innerHTML.indexOf("not-used")==-1){E=true}else{if(D.type=="graph"){E=true}}}}return E};C.setTutorWidgetValues=function(D,E){try{console.log("setTutorWidgetValue: "+D);console.log("setTutorWidgetValue: DO_VALIDATE "+E);if(B==null){alert("no active widget");return }return B.setWidgetValue(D,E)}catch(F){console.log("setTutorWidgetValue error: "+F)}};C.getTutorWidgetValues=function(){try{if(B==null){alert("no active widget");return null}return B.getWidgetValue()}catch(D){alert("getTutorWidgetValues error: "+D)}};A();return C}());var __dummyTutorWidget={getWidgetValue:function(){console.log("default getwidgetvalue");return null},setWidgetValue:function(A){console.log("default setWidgetValue: "+A);return null},setWidgetMessage:function(A){console.log("default setWidgetMessage: "+A)}};if(!sb_windowTools){var sb_windowTools=new Object()}sb_windowTools={scrollBarPadding:17,centerElementOnScreen:function(A){var B=this.updateDimensions();A.style.top=((this.pageDimensions.verticalOffset()+this.pageDimensions.windowHeight()/2)-(this.scrollBarPadding+A.offsetHeight/2))+"px";A.style.left=((this.pageDimensions.windowWidth()/2)-(this.scrollBarPadding+A.offsetWidth/2))+"px";A.style.position="absolute"},rightElementOnScreen:function(A){var B=this.updateDimensions();A.style.top=this.pageDimensions.verticalOffset()+"px";A.style.right="0px";A.style.position="absolute"},leftElementOnScreen:function(A){var B=this.updateDimensions();A.style.top=this.pageDimensions.verticalOffset()+"px";A.style.left="0px";A.style.position="absolute"},updateDimensions:function(){this.updatePageSize();this.updateWindowSize();this.updateScrollOffset()},updatePageSize:function(){var A,B;if(window.innerHeight&&window.scrollMaxY){A=document.body.scrollWidth;B=window.innerHeight+window.scrollMaxY}else{if(document.body.scrollHeight>document.body.offsetHeight){A=document.body.scrollWidth;B=document.body.scrollHeight}else{A=document.body.offsetWidth;B=document.body.offsetHeight}}this.pageSize={viewportWidth:A,viewportHeight:B}},updateWindowSize:function(){var A,B;if(self.innerHeight){A=self.innerWidth;B=self.innerHeight}else{if(document.documentElement&&document.documentElement.clientHeight){A=document.documentElement.clientWidth;B=document.documentElement.clientHeight}else{if(document.body){A=document.body.clientWidth;B=document.body.clientHeight}}}this.windowSize={windowWidth:A,windowHeight:B}},updateScrollOffset:function(){var B,A;if(self.pageYOffset){B=self.pageXOffset;A=self.pageYOffset}else{if(document.documentElement&&document.documentElement.scrollTop){B=document.documentElement.scrollLeft;A=document.documentElement.scrollTop}else{if(document.body){B=document.body.scrollLeft;A=document.body.scrollTop}}}this.scrollOffset={horizontalOffset:B,verticalOffset:A}},pageSize:{},windowSize:{},scrollOffset:{},pageDimensions:{pageWidth:function(){return sb_windowTools.pageSize.viewportWidth>sb_windowTools.windowSize.windowWidth?sb_windowTools.pageSize.viewportWidth:sb_windowTools.windowSize.windowWidth},pageHeight:function(){return sb_windowTools.pageSize.viewportHeight>sb_windowTools.windowSize.windowHeight?sb_windowTools.pageSize.viewportHeight:sb_windowTools.windowSize.windowHeight},windowWidth:function(){return sb_windowTools.windowSize.windowWidth},windowHeight:function(){return sb_windowTools.windowSize.windowHeight},horizontalOffset:function(){return sb_windowTools.scrollOffset.horizontalOffset},verticalOffset:function(){return sb_windowTools.scrollOffset.verticalOffset}}};function docElem(B){var A;return((A=document.documentElement)||(A=document.body.parentNode))&&Util.isNumber(A[B])?A:document.body}function viewSize(){var D=DocElem("clientWidth"),A=document.body,B,C;return Util.isNumber(document.clientWidth)?{w:document.clientWidth,h:document.clientHeight}:D===A||(B=Math.max(D.clientWidth,A.clientWidth))>self.innerWidth||(C=Math.max(D.clientHeight,A.clientHeight))>self.innerHeight?{w:A.clientWidth,h:A.clientHeight}:{w:B,h:C}};/*! Hammer.JS - v1.0.6dev - 2013-04-10
 * http://eightmedia.github.com/hammer.js
 *
 * Copyright (c) 2013 Jorik Tangelder <j.tangelder@gmail.com>;
 * Licensed under the MIT license */

(function(t,e){"use strict";function n(){if(!i.READY){i.event.determineEventTypes();for(var t in i.gestures)i.gestures.hasOwnProperty(t)&&i.detection.register(i.gestures[t]);i.event.onTouch(i.DOCUMENT,i.EVENT_MOVE,i.detection.detect),i.event.onTouch(i.DOCUMENT,i.EVENT_END,i.detection.detect),i.READY=!0}}var i=function(t,e){return new i.Instance(t,e||{})};i.defaults={stop_browser_behavior:{userSelect:"none",touchAction:"none",touchCallout:"none",contentZooming:"none",userDrag:"none",tapHighlightColor:"rgba(0,0,0,0)"}},i.HAS_POINTEREVENTS=navigator.pointerEnabled||navigator.msPointerEnabled,i.HAS_TOUCHEVENTS="ontouchstart"in t,i.MOBILE_REGEX=/mobile|tablet|ip(ad|hone|od)|android/i,i.NO_MOUSEEVENTS=i.HAS_TOUCHEVENTS&&navigator.userAgent.match(i.MOBILE_REGEX),i.EVENT_TYPES={},i.DIRECTION_DOWN="down",i.DIRECTION_LEFT="left",i.DIRECTION_UP="up",i.DIRECTION_RIGHT="right",i.POINTER_MOUSE="mouse",i.POINTER_TOUCH="touch",i.POINTER_PEN="pen",i.EVENT_START="start",i.EVENT_MOVE="move",i.EVENT_END="end",i.DOCUMENT=document,i.plugins={},i.READY=!1,i.Instance=function(t,e){var r=this;return n(),this.element=t,this.enabled=!0,this.options=i.utils.extend(i.utils.extend({},i.defaults),e||{}),this.options.stop_browser_behavior&&i.utils.stopDefaultBrowserBehavior(this.element,this.options.stop_browser_behavior),i.event.onTouch(t,i.EVENT_START,function(t){r.enabled&&i.detection.startDetect(r,t)}),this},i.Instance.prototype={on:function(t,e){for(var n=t.split(" "),i=0;n.length>i;i++)this.element.addEventListener(n[i],e,!1);return this},off:function(t,e){for(var n=t.split(" "),i=0;n.length>i;i++)this.element.removeEventListener(n[i],e,!1);return this},trigger:function(t,e){var n=i.DOCUMENT.createEvent("Event");n.initEvent(t,!0,!0),n.gesture=e;var r=this.element;return i.utils.hasParent(e.target,r)&&(r=e.target),r.dispatchEvent(n),this},enable:function(t){return this.enabled=t,this}};var r=null,o=!1,s=!1;i.event={bindDom:function(t,e,n){for(var i=e.split(" "),r=0;i.length>r;r++)t.addEventListener(i[r],n,!1)},onTouch:function(t,e,n){var a=this;this.bindDom(t,i.EVENT_TYPES[e],function(c){var u=c.type.toLowerCase();if(!u.match(/mouse/)||!s){u.match(/touch/)||u.match(/pointerdown/)||u.match(/mouse/)&&1===c.which?o=!0:u.match(/mouse/)&&1!==c.which&&(o=!1),u.match(/touch|pointer/)&&(s=!0);var h=0;o&&(i.HAS_POINTEREVENTS&&e!=i.EVENT_END?h=i.PointerEvent.updatePointer(e,c):u.match(/touch/)?h=c.touches.length:s||(h=u.match(/up/)?0:1),h>0&&e==i.EVENT_END?e=i.EVENT_MOVE:h||(e=i.EVENT_END),h||null===r?r=c:c=r,n.call(i.detection,a.collectEventData(t,e,c)),i.HAS_POINTEREVENTS&&e==i.EVENT_END&&(h=i.PointerEvent.updatePointer(e,c))),h||(r=null,o=!1,s=!1,i.PointerEvent.reset())}})},determineEventTypes:function(){var t;t=i.HAS_POINTEREVENTS?i.PointerEvent.getEvents():i.NO_MOUSEEVENTS?["touchstart","touchmove","touchend touchcancel"]:["touchstart mousedown","touchmove mousemove","touchend touchcancel mouseup"],i.EVENT_TYPES[i.EVENT_START]=t[0],i.EVENT_TYPES[i.EVENT_MOVE]=t[1],i.EVENT_TYPES[i.EVENT_END]=t[2]},getTouchList:function(t){return i.HAS_POINTEREVENTS?i.PointerEvent.getTouchList():t.touches?t.touches:[{identifier:1,pageX:t.pageX,pageY:t.pageY,target:t.target}]},collectEventData:function(t,e,n){var r=this.getTouchList(n,e),o=i.POINTER_TOUCH;return(n.type.match(/mouse/)||i.PointerEvent.matchType(i.POINTER_MOUSE,n))&&(o=i.POINTER_MOUSE),{center:i.utils.getCenter(r),timeStamp:(new Date).getTime(),target:n.target,touches:r,eventType:e,pointerType:o,srcEvent:n,preventDefault:function(){this.srcEvent.preventManipulation&&this.srcEvent.preventManipulation(),this.srcEvent.preventDefault&&this.srcEvent.preventDefault()},stopPropagation:function(){this.srcEvent.stopPropagation()},stopDetect:function(){return i.detection.stopDetect()}}}},i.PointerEvent={pointers:{},getTouchList:function(){var t=this,e=[];return Object.keys(t.pointers).sort().forEach(function(n){e.push(t.pointers[n])}),e},updatePointer:function(t,e){return t==i.EVENT_END?this.pointers={}:(e.identifier=e.pointerId,this.pointers[e.pointerId]=e),Object.keys(this.pointers).length},matchType:function(t,e){if(!e.pointerType)return!1;var n={};return n[i.POINTER_MOUSE]=e.pointerType==e.MSPOINTER_TYPE_MOUSE||e.pointerType==i.POINTER_MOUSE,n[i.POINTER_TOUCH]=e.pointerType==e.MSPOINTER_TYPE_TOUCH||e.pointerType==i.POINTER_TOUCH,n[i.POINTER_PEN]=e.pointerType==e.MSPOINTER_TYPE_PEN||e.pointerType==i.POINTER_PEN,n[t]},getEvents:function(){return["pointerdown MSPointerDown","pointermove MSPointerMove","pointerup pointercancel MSPointerUp MSPointerCancel"]},reset:function(){this.pointers={}}},i.utils={extend:function(t,n,i){for(var r in n)t[r]!==e&&i||(t[r]=n[r]);return t},hasParent:function(t,e){for(;t;){if(t==e)return!0;t=t.parentNode}return!1},getCenter:function(t){for(var e=[],n=[],i=0,r=t.length;r>i;i++)e.push(t[i].pageX),n.push(t[i].pageY);return{pageX:(Math.min.apply(Math,e)+Math.max.apply(Math,e))/2,pageY:(Math.min.apply(Math,n)+Math.max.apply(Math,n))/2}},getVelocity:function(t,e,n){return{x:Math.abs(e/t)||0,y:Math.abs(n/t)||0}},getAngle:function(t,e){var n=e.pageY-t.pageY,i=e.pageX-t.pageX;return 180*Math.atan2(n,i)/Math.PI},getDirection:function(t,e){var n=Math.abs(t.pageX-e.pageX),r=Math.abs(t.pageY-e.pageY);return n>=r?t.pageX-e.pageX>0?i.DIRECTION_LEFT:i.DIRECTION_RIGHT:t.pageY-e.pageY>0?i.DIRECTION_UP:i.DIRECTION_DOWN},getDistance:function(t,e){var n=e.pageX-t.pageX,i=e.pageY-t.pageY;return Math.sqrt(n*n+i*i)},getScale:function(t,e){return t.length>=2&&e.length>=2?this.getDistance(e[0],e[1])/this.getDistance(t[0],t[1]):1},getRotation:function(t,e){return t.length>=2&&e.length>=2?this.getAngle(e[1],e[0])-this.getAngle(t[1],t[0]):0},isVertical:function(t){return t==i.DIRECTION_UP||t==i.DIRECTION_DOWN},stopDefaultBrowserBehavior:function(t,e){var n,i=["webkit","khtml","moz","ms","o",""];if(e&&t.style){for(var r=0;i.length>r;r++)for(var o in e)e.hasOwnProperty(o)&&(n=o,i[r]&&(n=i[r]+n.substring(0,1).toUpperCase()+n.substring(1)),t.style[n]=e[o]);"none"==e.userSelect&&(t.onselectstart=function(){return!1})}}},i.detection={gestures:[],current:null,previous:null,stopped:!1,startDetect:function(t,e){this.current||(this.stopped=!1,this.current={inst:t,startEvent:i.utils.extend({},e),lastEvent:!1,name:""},this.detect(e))},detect:function(t){if(this.current&&!this.stopped){t=this.extendEventData(t);for(var e=this.current.inst.options,n=0,r=this.gestures.length;r>n;n++){var o=this.gestures[n];if(!this.stopped&&e[o.name]!==!1&&o.handler.call(o,t,this.current.inst)===!1){this.stopDetect();break}}return this.current&&(this.current.lastEvent=t),t.eventType==i.EVENT_END&&!t.touches.length-1&&this.stopDetect(),t}},stopDetect:function(){this.previous=i.utils.extend({},this.current),this.current=null,this.stopped=!0},extendEventData:function(t){var e=this.current.startEvent;if(e&&(t.touches.length!=e.touches.length||t.touches===e.touches)){e.touches=[];for(var n=0,r=t.touches.length;r>n;n++)e.touches.push(i.utils.extend({},t.touches[n]))}var o=t.timeStamp-e.timeStamp,s=t.center.pageX-e.center.pageX,a=t.center.pageY-e.center.pageY,c=i.utils.getVelocity(o,s,a);return i.utils.extend(t,{deltaTime:o,deltaX:s,deltaY:a,velocityX:c.x,velocityY:c.y,distance:i.utils.getDistance(e.center,t.center),angle:i.utils.getAngle(e.center,t.center),direction:i.utils.getDirection(e.center,t.center),scale:i.utils.getScale(e.touches,t.touches),rotation:i.utils.getRotation(e.touches,t.touches),startEvent:e}),t},register:function(t){var n=t.defaults||{};return n[t.name]===e&&(n[t.name]=!0),i.utils.extend(i.defaults,n,!0),t.index=t.index||1e3,this.gestures.push(t),this.gestures.sort(function(t,e){return t.index<e.index?-1:t.index>e.index?1:0}),this.gestures}},i.gestures=i.gestures||{},i.gestures.Hold={name:"hold",index:10,defaults:{hold_timeout:500,hold_threshold:1},timer:null,handler:function(t,e){switch(t.eventType){case i.EVENT_START:clearTimeout(this.timer),i.detection.current.name=this.name,this.timer=setTimeout(function(){"hold"==i.detection.current.name&&e.trigger("hold",t)},e.options.hold_timeout);break;case i.EVENT_MOVE:t.distance>e.options.hold_threshold&&clearTimeout(this.timer);break;case i.EVENT_END:clearTimeout(this.timer)}}},i.gestures.Tap={name:"tap",index:100,defaults:{tap_max_touchtime:250,tap_max_distance:10,tap_always:!0,doubletap_distance:20,doubletap_interval:300},handler:function(t,e){if(t.eventType==i.EVENT_END){var n=i.detection.previous,r=!1;if(t.deltaTime>e.options.tap_max_touchtime||t.distance>e.options.tap_max_distance)return;n&&"tap"==n.name&&t.timeStamp-n.lastEvent.timeStamp<e.options.doubletap_interval&&t.distance<e.options.doubletap_distance&&(e.trigger("doubletap",t),r=!0),(!r||e.options.tap_always)&&(i.detection.current.name="tap",e.trigger(i.detection.current.name,t))}}},i.gestures.Swipe={name:"swipe",index:40,defaults:{swipe_max_touches:1,swipe_velocity:.7},handler:function(t,e){if(t.eventType==i.EVENT_END){if(e.options.swipe_max_touches>0&&t.touches.length>e.options.swipe_max_touches)return;(t.velocityX>e.options.swipe_velocity||t.velocityY>e.options.swipe_velocity)&&(e.trigger(this.name,t),e.trigger(this.name+t.direction,t))}}},i.gestures.Drag={name:"drag",index:50,defaults:{drag_min_distance:10,drag_max_touches:1,drag_block_horizontal:!1,drag_block_vertical:!1,drag_lock_to_axis:!1,drag_lock_min_distance:25},triggered:!1,handler:function(t,n){if(i.detection.current.name!=this.name&&this.triggered)return n.trigger(this.name+"end",t),this.triggered=!1,e;if(!(n.options.drag_max_touches>0&&t.touches.length>n.options.drag_max_touches))switch(t.eventType){case i.EVENT_START:this.triggered=!1;break;case i.EVENT_MOVE:if(t.distance<n.options.drag_min_distance&&i.detection.current.name!=this.name)return;i.detection.current.name=this.name,(i.detection.current.lastEvent.drag_locked_to_axis||n.options.drag_lock_to_axis&&n.options.drag_lock_min_distance<=t.distance)&&(t.drag_locked_to_axis=!0);var r=i.detection.current.lastEvent.direction;t.drag_locked_to_axis&&r!==t.direction&&(t.direction=i.utils.isVertical(r)?0>t.deltaY?i.DIRECTION_UP:i.DIRECTION_DOWN:0>t.deltaX?i.DIRECTION_LEFT:i.DIRECTION_RIGHT),this.triggered||(n.trigger(this.name+"start",t),this.triggered=!0),n.trigger(this.name,t),n.trigger(this.name+t.direction,t),(n.options.drag_block_vertical&&i.utils.isVertical(t.direction)||n.options.drag_block_horizontal&&!i.utils.isVertical(t.direction))&&t.preventDefault();break;case i.EVENT_END:this.triggered&&n.trigger(this.name+"end",t),this.triggered=!1}}},i.gestures.Transform={name:"transform",index:45,defaults:{transform_min_scale:.01,transform_min_rotation:1,transform_always_block:!1},triggered:!1,handler:function(t,n){if(i.detection.current.name!=this.name&&this.triggered)return n.trigger(this.name+"end",t),this.triggered=!1,e;if(!(2>t.touches.length))switch(n.options.transform_always_block&&t.preventDefault(),t.eventType){case i.EVENT_START:this.triggered=!1;break;case i.EVENT_MOVE:var r=Math.abs(1-t.scale),o=Math.abs(t.rotation);if(n.options.transform_min_scale>r&&n.options.transform_min_rotation>o)return;i.detection.current.name=this.name,this.triggered||(n.trigger(this.name+"start",t),this.triggered=!0),n.trigger(this.name,t),o>n.options.transform_min_rotation&&n.trigger("rotate",t),r>n.options.transform_min_scale&&(n.trigger("pinch",t),n.trigger("pinch"+(1>t.scale?"in":"out"),t));break;case i.EVENT_END:this.triggered&&n.trigger(this.name+"end",t),this.triggered=!1}}},i.gestures.Touch={name:"touch",index:-1/0,defaults:{prevent_default:!1,prevent_mouseevents:!1},handler:function(t,n){return n.options.prevent_mouseevents&&t.pointerType==i.POINTER_MOUSE?(t.stopDetect(),e):(n.options.prevent_default&&t.preventDefault(),t.eventType==i.EVENT_START&&n.trigger(this.name,t),e)}},i.gestures.Release={name:"release",index:1/0,handler:function(t,e){t.eventType==i.EVENT_END&&e.trigger(this.name,t)}},"object"==typeof module&&"object"==typeof module.exports?module.exports=i:(t.Hammer=i,"function"==typeof t.define&&t.define.amd&&t.define("hammer",[],function(){return i}))})(this);function _createQuestionStep(E){var D=E.getElementsByTagName("div");for(var F=0,C=D.length;F<C;F++){var A=D[F];if(F==0){}else{if((F%2)!=0){var B="<img class='ques_icon' src='/images/tutor5/hint_question-16x16.gif' onclick='_questionExpandResult(this)'/>";A.innerHTML=B+A.innerHTML}else{A.style.display="none"}}}}function _questionExpandResult(B){try{B.parentElement.parentNode.children[1].className="question-choice";var A=B.parentElement.parentNode.children[1];var C=A.innerHTML.replace("&nbsp;","").trim();if(C>""){B.parentElement.parentNode.children[1].style.display="block"}}catch(D){console.log("error showing question : "+D)}}window.showCorrectAnswers=function(B){var D=document.getElementById("testset_div");if(D){var A=document.getElementById("testset_div").getElementsByTagName("div");for(var C=0;C<A.length;C++){if(A[C].className=="question_wrapper"){B(A[C])}}}};function setQuizQuestionActive(A){}function findQuestionGuid(B){while(B){var A=B.getAttribute("guid");if(A){return A}B=B.parentNode}return null}function findQuestionByPid(B){var D=document.getElementById("testset_div").getElementsByTagName("div");try{for(var C=0;C<D.length;C++){var E=D[C].getAttribute("guid");if(E){if(E.toLowerCase()==B.toLowerCase()){return D[C]}}E=D[C].getAttribute("pid");if(E){if(E.toLowerCase()==B.toLowerCase()){return D[C]}}}}catch(A){alert("Error while setting selected question response: "+A)}console.log("findQuestionByPid: pid not found: "+B);return null}function findQuestionNumberByPid(B){var E=document.getElementById("testset_div").getElementsByTagName("div");var C=0;try{for(var D=0;D<E.length;D++){var F=E[D].getAttribute("guid");if(F){if(F.toLowerCase()==B.toLowerCase()){return C}else{C++}}}}catch(A){alert("Error while question index: "+A)}alert("findQuestionByPid: pid not found: "+B);return null}function questionGuessChanged(H){try{var B=findQuestionGuid(H);var G=-1;if(H.id=="optionSkipped"){G="-2"}else{var D=H.parentNode.parentNode.parentNode.parentNode;var A=D.getElementsByTagName("input");for(var C=0;C<A.length;C++){if(A.item(C)==H){G=C;break}}}var E=findQuestionNumberByPid(B);questionGuessChanged_Gwt(""+E,""+G,B)}catch(F){alert("Error answering question in external JS: "+F)}}function setSolutionQuestionAnswerIndexByNumber(B,C){var A=0;showCorrectAnswers(function(H){var G=H.getElementsByTagName("input");if(A==B){for(var F=0,E=G.length;F<E;F++){if(F==C){G[F].checked=true;var D=G[F];questionGuessChanged(D)}else{G[F].checked=false}}}A++})}window.setSolutionQuestionAnswerIndex=function(B,H,E){var G=findQuestionByPid(B);if(G){var F=G.getElementsByTagName("input");for(var D=0,C=F.length;D<C;D++){var A=F.item(D);A.disabled=E?true:false;if(D==H){A.checked=true}}}};function doLoadResource(B,A){doLoadResource_Gwt(B,A);return false}window.markAllCorrectAnswers=function(){showCorrectAnswers(markCorrectResponse)};window.getQuizResultsCorrect=function(){var A=0;showCorrectAnswers(function(E){var D=E.getElementsByTagName("input");for(var C=0,B=D.length;C<B;C++){var F=D[C].parentNode.getElementsByTagName("div");if(F[0].innerHTML=="Correct"){if(D[C].checked){A++}}}});return A};window.getQuizQuestionCount=function(){var A=0;showCorrectAnswers(function(B){A++});return A};window.showCorrectAnswers=function(B){var A=document.getElementById("testset_div").getElementsByTagName("div");for(var C=0;C<A.length;C++){if(A[C].className=="question_wrapper"){B(A[C])}}};window.markCorrectResponse=function(D){var E=D.getElementsByTagName("input");for(var C=0,B=E.length;C<B;C++){var F=E[C].parentNode.getElementsByTagName("div");if(F[0].innerHTML=="Correct"){E[C].checked=true;var A=E[C];questionGuessChanged(A);break}}};function checkQuiz_Gwt(){alert("Checking quiz ...")}window.setQuizQuestionResult=function(C,A){var D=getQuestionMarkImage(C);var B=getQuestionMarkText(C);if(A=="Correct"){D.src="/gwt-resources/images/check_correct.png";B.innerHTML="Correct"}else{if(A=="Incorrect"){D.src="/gwt-resources/images/check_incorrect.png";B.innerHTML="Incorrect"}else{D.src="/gwt-resources/images/check_notanswered.png";B.innerHTML="Not answered"}}D.parentNode.style.display="block"};function getQuestionMarkImage(A){return document.getElementById("response_image_"+A)}function getQuestionMarkText(A){return document.getElementById("response_text_"+A)}function log(){}InmhButtons={};function replaceAll(A,B,C){return A.replace(new RegExp(B,"g"),C)};var MobileCheck = {
	    Android: function() {
	        return navigator.userAgent.match(/Android/i);
	    },
	    BlackBerry: function() {
	        return navigator.userAgent.match(/BlackBerry/i);
	    },
	    iOS: function() {
	        return navigator.userAgent.match(/iPhone|iPad|iPod/i);
	    },
	    Opera: function() {
	        return navigator.userAgent.match(/Opera Mini/i);
	    },
	    Windows: function() {
	        return navigator.userAgent.match(/IEMobile/i);
	    },
	    any: function() {
	        return (MobileCheck.Android() || MobileCheck.BlackBerry() || MobileCheck.iOS() || MobileCheck.Opera() || MobileCheck.Windows());
	    }
};

function isMobileSmallScreen() {
    if(window.innerWidth <= 800 && window.innerHeight <= 600) {
        return true;
    } else {
        return false;
    }
}

function isIPadOrIPhone() {
   return false;
	var check = MobileCheck.any();
	return check != null && MobileCheck.any();
}

function redirectIfMobile() {
	if(isIPadOrIPhone()) {
		document.location = '/not-available-on-mobile.html';
	}
}



if (navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i)) { 
   var viewportmeta = document.querySelector('meta[name="viewport"]'); 
   if (viewportmeta) {
	   console.log('IPad orientation zoom bug fix installed');
	   // disables zoom on orientation change.
       viewportmeta.content = 'width=device-width, minimum-scale=1.0, maximum-scale=1.0'; 
       document.body.addEventListener('gesturestart', function() {viewportmeta.content = 'width=device-width, minimum-scale=0.25, maximum-scale=1.6'; }, false); 
   }
}

/**
 * alertify
 * An unobtrusive customizable JavaScript notification system
 *
 * @author Fabien Doiron <fabien.doiron@gmail.com>
 * @copyright Fabien Doiron 2013
 * @license MIT <http://opensource.org/licenses/mit-license.php>
 * @link http://fabien-d.github.com/alertify.js/
 * @module alertify
 * @version 0.3.11
 */
(function (global, undefined) {
	"use strict";

	var document = global.document,
	    Alertify;

	Alertify = function () {

		var _alertify = {},
		    dialogs   = {},
		    isopen    = false,
		    keys      = { ENTER: 13, ESC: 27, SPACE: 32 },
		    queue     = [],
		    $, btnCancel, btnOK, btnReset, btnResetBack, btnFocus, elCallee, elCover, elDialog, elLog, form, input, getTransitionEvent;

		/**
		 * Markup pieces
		 * @type {Object}
		 */
		dialogs = {
			buttons : {
				holder : "<nav class=\"alertify-buttons\">{{buttons}}</nav>",
				submit : "<button type=\"submit\" class=\"alertify-button alertify-button-ok\" id=\"alertify-ok\">{{ok}}</button>",
				ok     : "<button class=\"alertify-button alertify-button-ok\" id=\"alertify-ok\">{{ok}}</button>",
				cancel : "<button class=\"alertify-button alertify-button-cancel\" id=\"alertify-cancel\">{{cancel}}</button>"
			},
			input   : "<div class=\"alertify-text-wrapper\"><input type=\"text\" class=\"alertify-text\" id=\"alertify-text\"></div>",
			message : "<p class=\"alertify-message\">{{message}}</p>",
			log     : "<article class=\"alertify-log{{class}}\">{{message}}</article>"
		};

		/**
		 * Return the proper transitionend event
		 * @return {String}    Transition type string
		 */
		getTransitionEvent = function () {
			var t,
			    type,
			    supported   = false,
			    el          = document.createElement("fakeelement"),
			    transitions = {
				    "WebkitTransition" : "webkitTransitionEnd",
				    "MozTransition"    : "transitionend",
				    "OTransition"      : "otransitionend",
				    "transition"       : "transitionend"
			    };

			for (t in transitions) {
				if (el.style[t] !== undefined) {
					type      = transitions[t];
					supported = true;
					break;
				}
			}

			return {
				type      : type,
				supported : supported
			};
		};

		/**
		 * Shorthand for document.getElementById()
		 *
		 * @param  {String} id    A specific element ID
		 * @return {Object}       HTML element
		 */
		$ = function (id) {
			return document.getElementById(id);
		};

		/**
		 * Alertify private object
		 * @type {Object}
		 */
		_alertify = {

			/**
			 * Labels object
			 * @type {Object}
			 */
			labels : {
				ok     : "OK",
				cancel : "Cancel"
			},

			/**
			 * Delay number
			 * @type {Number}
			 */
			delay : 5000,

			/**
			 * Whether buttons are reversed (default is secondary/primary)
			 * @type {Boolean}
			 */
			buttonReverse : false,

			/**
			 * Which button should be focused by default
			 * @type {String}	"ok" (default), "cancel", or "none"
			 */
			buttonFocus : "ok",

			/**
			 * Set the transition event on load
			 * @type {[type]}
			 */
			transition : undefined,

			/**
			 * Set the proper button click events
			 *
			 * @param {Function} fn    [Optional] Callback function
			 *
			 * @return {undefined}
			 */
			addListeners : function (fn) {
				var hasOK     = (typeof btnOK !== "undefined"),
				    hasCancel = (typeof btnCancel !== "undefined"),
				    hasInput  = (typeof input !== "undefined"),
				    val       = "",
				    self      = this,
				    ok, cancel, common, key, reset;

				// ok event handler
				ok = function (event) {
					if (typeof event.preventDefault !== "undefined") event.preventDefault();
					common(event);
					if (typeof input !== "undefined") val = input.value;
					if (typeof fn === "function") {
						if (typeof input !== "undefined") {
							fn(true, val);
						}
						else fn(true);
					}
					return false;
				};

				// cancel event handler
				cancel = function (event) {
					if (typeof event.preventDefault !== "undefined") event.preventDefault();
					common(event);
					if (typeof fn === "function") fn(false);
					return false;
				};

				// common event handler (keyup, ok and cancel)
				common = function (event) {
					self.hide();
					self.unbind(document.body, "keyup", key);
					self.unbind(btnReset, "focus", reset);
					if (hasOK) self.unbind(btnOK, "click", ok);
					if (hasCancel) self.unbind(btnCancel, "click", cancel);
				};

				// keyup handler
				key = function (event) {
					var keyCode = event.keyCode;
					if ((keyCode === keys.SPACE && !hasInput) || (hasInput && keyCode === keys.ENTER)) ok(event);
					if (keyCode === keys.ESC && hasCancel) cancel(event);
				};

				// reset focus to first item in the dialog
				reset = function (event) {
					if (hasInput) input.focus();
					else if (!hasCancel || self.buttonReverse) btnOK.focus();
					else btnCancel.focus();
				};

				// handle reset focus link
				// this ensures that the keyboard focus does not
				// ever leave the dialog box until an action has
				// been taken
				this.bind(btnReset, "focus", reset);
				this.bind(btnResetBack, "focus", reset);
				// handle OK click
				if (hasOK) this.bind(btnOK, "click", ok);
				// handle Cancel click
				if (hasCancel) this.bind(btnCancel, "click", cancel);
				// listen for keys, Cancel => ESC
				this.bind(document.body, "keyup", key);
				if (!this.transition.supported) {
					this.setFocus();
				}
			},

			/**
			 * Bind events to elements
			 *
			 * @param  {Object}   el       HTML Object
			 * @param  {Event}    event    Event to attach to element
			 * @param  {Function} fn       Callback function
			 *
			 * @return {undefined}
			 */
			bind : function (el, event, fn) {
				if (typeof el.addEventListener === "function") {
					el.addEventListener(event, fn, false);
				} else if (el.attachEvent) {
					el.attachEvent("on" + event, fn);
				}
			},

			/**
			 * Use alertify as the global error handler (using window.onerror)
			 *
			 * @return {boolean} success
			 */
			handleErrors : function () {
				if (typeof global.onerror !== "undefined") {
					var self = this;
					global.onerror = function (msg, url, line) {
						self.error("[" + msg + " on line " + line + " of " + url + "]", 0);
					};
					return true;
				} else {
					return false;
				}
			},

			/**
			 * Append button HTML strings
			 *
			 * @param {String} secondary    The secondary button HTML string
			 * @param {String} primary      The primary button HTML string
			 *
			 * @return {String}             The appended button HTML strings
			 */
			appendButtons : function (secondary, primary) {
				return this.buttonReverse ? primary + secondary : secondary + primary;
			},

			/**
			 * Build the proper message box
			 *
			 * @param  {Object} item    Current object in the queue
			 *
			 * @return {String}         An HTML string of the message box
			 */
			build : function (item) {
				var html    = "",
				    type    = item.type,
				    message = item.message,
				    css     = item.cssClass || "";

				html += "<div class=\"alertify-dialog\">";
				html += "<a id=\"alertify-resetFocusBack\" class=\"alertify-resetFocus\" href=\"#\">Reset Focus</a>";

				if (_alertify.buttonFocus === "none") html += "<a href=\"#\" id=\"alertify-noneFocus\" class=\"alertify-hidden\"></a>";

				// doens't require an actual form
				if (type === "prompt") html += "<div id=\"alertify-form\">";

				html += "<article class=\"alertify-inner\">";
				html += dialogs.message.replace("{{message}}", message);

				if (type === "prompt") html += dialogs.input;

				html += dialogs.buttons.holder;
				html += "</article>";

				if (type === "prompt") html += "</div>";

				html += "<a id=\"alertify-resetFocus\" class=\"alertify-resetFocus\" href=\"#\">Reset Focus</a>";
				html += "</div>";
				switch (type) {
				case "confirm":
					html = html.replace("{{buttons}}", this.appendButtons(dialogs.buttons.ok, dialogs.buttons.cancel));
					html = html.replace("{{ok}}", this.labels.ok).replace("{{cancel}}", this.labels.cancel);
					break;
				case "prompt":
					html = html.replace("{{buttons}}", this.appendButtons(dialogs.buttons.submit, dialogs.buttons.cancel));
					html = html.replace("{{ok}}", this.labels.ok).replace("{{cancel}}", this.labels.cancel);
					break;
				case "alert":
					html = html.replace("{{buttons}}", dialogs.buttons.ok);
					html = html.replace("{{ok}}", this.labels.ok);
					break;
				default:
					break;
				}

				elDialog.className = "alertify alertify-" + type + " " + css;
				elCover.className  = "alertify-cover";
				return html;
			},

			/**
			 * Close the log messages
			 *
			 * @param  {Object} elem    HTML Element of log message to close
			 * @param  {Number} wait    [optional] Time (in ms) to wait before automatically hiding the message, if 0 never hide
			 *
			 * @return {undefined}
			 */
			close : function (elem, wait) {
				// Unary Plus: +"2" === 2
				var timer = (wait && !isNaN(wait)) ? +wait : this.delay,
				    self  = this,
				    hideElement, transitionDone;

				// set click event on log messages
				this.bind(elem, "click", function () {
					hideElement(elem);
				});
				// Hide the dialog box after transition
				// This ensure it doens't block any element from being clicked
				transitionDone = function (event) {
					event.stopPropagation();
					// unbind event so function only gets called once
					self.unbind(this, self.transition.type, transitionDone);
					// remove log message
					elLog.removeChild(this);
					if (!elLog.hasChildNodes()) elLog.className += " alertify-logs-hidden";
				};
				// this sets the hide class to transition out
				// or removes the child if css transitions aren't supported
				hideElement = function (el) {
					// ensure element exists
					if (typeof el !== "undefined" && el.parentNode === elLog) {
						// whether CSS transition exists
						if (self.transition.supported) {
							self.bind(el, self.transition.type, transitionDone);
							el.className += " alertify-log-hide";
						} else {
							elLog.removeChild(el);
							if (!elLog.hasChildNodes()) elLog.className += " alertify-logs-hidden";
						}
					}
				};
				// never close (until click) if wait is set to 0
				if (wait === 0) return;
				// set timeout to auto close the log message
				setTimeout(function () { hideElement(elem); }, timer);
			},

			/**
			 * Create a dialog box
			 *
			 * @param  {String}   message        The message passed from the callee
			 * @param  {String}   type           Type of dialog to create
			 * @param  {Function} fn             [Optional] Callback function
			 * @param  {String}   placeholder    [Optional] Default value for prompt input field
			 * @param  {String}   cssClass       [Optional] Class(es) to append to dialog box
			 *
			 * @return {Object}
			 */
			dialog : function (message, type, fn, placeholder, cssClass) {
				// set the current active element
				// this allows the keyboard focus to be resetted
				// after the dialog box is closed
				elCallee = document.activeElement;
				// check to ensure the alertify dialog element
				// has been successfully created
				var check = function () {
					if ((elLog && elLog.scrollTop !== null) && (elCover && elCover.scrollTop !== null)) return;
					else check();
				};
				// error catching
				if (typeof message !== "string") throw new Error("message must be a string");
				if (typeof type !== "string") throw new Error("type must be a string");
				if (typeof fn !== "undefined" && typeof fn !== "function") throw new Error("fn must be a function");
				// initialize alertify if it hasn't already been done
				this.init();
				check();

				queue.push({ type: type, message: message, callback: fn, placeholder: placeholder, cssClass: cssClass });
				if (!isopen) this.setup();

				return this;
			},

			/**
			 * Extend the log method to create custom methods
			 *
			 * @param  {String} type    Custom method name
			 *
			 * @return {Function}
			 */
			extend : function (type) {
				if (typeof type !== "string") throw new Error("extend method must have exactly one paramter");
				return function (message, wait) {
					this.log(message, type, wait);
					return this;
				};
			},

			/**
			 * Hide the dialog and rest to defaults
			 *
			 * @return {undefined}
			 */
			hide : function () {
				var transitionDone,
				    self = this;
				// remove reference from queue
				queue.splice(0,1);
				// if items remaining in the queue
				if (queue.length > 0) this.setup(true);
				else {
					isopen = false;
					// Hide the dialog box after transition
					// This ensure it doens't block any element from being clicked
					transitionDone = function (event) {
						event.stopPropagation();
						// unbind event so function only gets called once
						self.unbind(elDialog, self.transition.type, transitionDone);
					};
					// whether CSS transition exists
					if (this.transition.supported) {
						this.bind(elDialog, this.transition.type, transitionDone);
						elDialog.className = "alertify alertify-hide alertify-hidden";
					} else {
						elDialog.className = "alertify alertify-hide alertify-hidden alertify-isHidden";
					}
					elCover.className  = "alertify-cover alertify-cover-hidden";
					// set focus to the last element or body
					// after the dialog is closed
					elCallee.focus();
				}
			},

			/**
			 * Initialize Alertify
			 * Create the 2 main elements
			 *
			 * @return {undefined}
			 */
			init : function () {
				// ensure legacy browsers support html5 tags
				document.createElement("nav");
				document.createElement("article");
				document.createElement("section");
				// cover
				if ($("alertify-cover") == null) {
					elCover = document.createElement("div");
					elCover.setAttribute("id", "alertify-cover");
					elCover.className = "alertify-cover alertify-cover-hidden";
					document.body.appendChild(elCover);
				}
				// main element
				if ($("alertify") == null) {
					isopen = false;
					queue = [];
					elDialog = document.createElement("section");
					elDialog.setAttribute("id", "alertify");
					elDialog.className = "alertify alertify-hidden";
					document.body.appendChild(elDialog);
				}
				// log element
				if ($("alertify-logs") == null) {
					elLog = document.createElement("section");
					elLog.setAttribute("id", "alertify-logs");
					elLog.className = "alertify-logs alertify-logs-hidden";
					document.body.appendChild(elLog);
				}
				// set tabindex attribute on body element
				// this allows script to give it focus
				// after the dialog is closed
				document.body.setAttribute("tabindex", "0");
				// set transition type
				this.transition = getTransitionEvent();
			},

			/**
			 * Show a new log message box
			 *
			 * @param  {String} message    The message passed from the callee
			 * @param  {String} type       [Optional] Optional type of log message
			 * @param  {Number} wait       [Optional] Time (in ms) to wait before auto-hiding the log
			 *
			 * @return {Object}
			 */
			log : function (message, type, wait) {
				// check to ensure the alertify dialog element
				// has been successfully created
				var check = function () {
					if (elLog && elLog.scrollTop !== null) return;
					else check();
				};
				// initialize alertify if it hasn't already been done
				this.init();
				check();

				elLog.className = "alertify-logs";
				this.notify(message, type, wait);
				return this;
			},

			/**
			 * Add new log message
			 * If a type is passed, a class name "alertify-log-{type}" will get added.
			 * This allows for custom look and feel for various types of notifications.
			 *
			 * @param  {String} message    The message passed from the callee
			 * @param  {String} type       [Optional] Type of log message
			 * @param  {Number} wait       [Optional] Time (in ms) to wait before auto-hiding
			 *
			 * @return {undefined}
			 */
			notify : function (message, type, wait) {
				var log = document.createElement("article");
				log.className = "alertify-log" + ((typeof type === "string" && type !== "") ? " alertify-log-" + type : "");
				log.innerHTML = message;
				// append child
				elLog.appendChild(log);
				// triggers the CSS animation
				setTimeout(function() { log.className = log.className + " alertify-log-show"; }, 50);
				this.close(log, wait);
			},

			/**
			 * Set properties
			 *
			 * @param {Object} args     Passing parameters
			 *
			 * @return {undefined}
			 */
			set : function (args) {
				var k;
				// error catching
				if (typeof args !== "object" && args instanceof Array) throw new Error("args must be an object");
				// set parameters
				for (k in args) {
					if (args.hasOwnProperty(k)) {
						this[k] = args[k];
					}
				}
			},

			/**
			 * Common place to set focus to proper element
			 *
			 * @return {undefined}
			 */
			setFocus : function () {
				if (input) {
					input.focus();
					input.select();
				}
				else btnFocus.focus();
			},

			/**
			 * Initiate all the required pieces for the dialog box
			 *
			 * @return {undefined}
			 */
			setup : function (fromQueue) {
				var item = queue[0],
				    self = this,
				    transitionDone;

				// dialog is open
				isopen = true;
				// Set button focus after transition
				transitionDone = function (event) {
					event.stopPropagation();
					self.setFocus();
					// unbind event so function only gets called once
					self.unbind(elDialog, self.transition.type, transitionDone);
				};
				// whether CSS transition exists
				if (this.transition.supported && !fromQueue) {
					this.bind(elDialog, this.transition.type, transitionDone);
				}
				// build the proper dialog HTML
				elDialog.innerHTML = this.build(item);
				// assign all the common elements
				btnReset  = $("alertify-resetFocus");
				btnResetBack  = $("alertify-resetFocusBack");
				btnOK     = $("alertify-ok")     || undefined;
				btnCancel = $("alertify-cancel") || undefined;
				btnFocus  = (_alertify.buttonFocus === "cancel") ? btnCancel : ((_alertify.buttonFocus === "none") ? $("alertify-noneFocus") : btnOK),
				input     = $("alertify-text")   || undefined;
				form      = $("alertify-form")   || undefined;
				// add placeholder value to the input field
				if (typeof item.placeholder === "string" && item.placeholder !== "") input.value = item.placeholder;
				if (fromQueue) this.setFocus();
				this.addListeners(item.callback);
			},

			/**
			 * Unbind events to elements
			 *
			 * @param  {Object}   el       HTML Object
			 * @param  {Event}    event    Event to detach to element
			 * @param  {Function} fn       Callback function
			 *
			 * @return {undefined}
			 */
			unbind : function (el, event, fn) {
				if (typeof el.removeEventListener === "function") {
					el.removeEventListener(event, fn, false);
				} else if (el.detachEvent) {
					el.detachEvent("on" + event, fn);
				}
			}
		};

		return {
			alert   : function (message, fn, cssClass) { _alertify.dialog(message, "alert", fn, "", cssClass); return this; },
			confirm : function (message, fn, cssClass) { _alertify.dialog(message, "confirm", fn, "", cssClass); return this; },
			extend  : _alertify.extend,
			init    : _alertify.init,
			log     : function (message, type, wait) { _alertify.log(message, type, wait); return this; },
			prompt  : function (message, fn, placeholder, cssClass) { _alertify.dialog(message, "prompt", fn, placeholder, cssClass); return this; },
			success : function (message, wait) { _alertify.log(message, "success", wait); return this; },
			error   : function (message, wait) { _alertify.log(message, "error", wait); return this; },
			set     : function (args) { _alertify.set(args); },
			labels  : _alertify.labels,
			debug   : _alertify.handleErrors
		};
	};

	// AMD and window support
	if (typeof define === "function") {
		define([], function () { return new Alertify(); });
	} else if (typeof global.alertify === "undefined") {
		global.alertify = new Alertify();
	}

}(this));
function initStartCmMobile(){}function showWhiteboardActive(B){var A=B.parentNode.parentNode.getAttribute("pid");showWhiteboard_Gwt(A)}function debug(A){};if(typeof console=="undefined"){console={log:function(A){}}}var console_log=function(A){console.log(A)};var transMode="move";var dragBoxPluginInited=false;var Whiteboard=function(cont,isStatic,_opts){var wb=this;var contDiv=cont;var canvas,context,pencil_btn,rect_btn,width,height,x,y,clickX,clickY,penDown=false;var buffercanvas,buffercontext,currentTool="pencil";var gr2D,nL,graphMode,gr2D_xp,gr2D_yp,nL_xp,nL_yp;var offX,offY,x0,y0,w0,h0,drawingLayer,drawcolor,rendering;var graphicData,tool_id;var scope=wb;var isTouchEnabled=false;var screen_width;var screen_height;var mq_holder=new Image();var lastTxt=null;var scrollInt=null;var swipe_mx,swipe_my,swipe_nx,swipe_ny,swipe_ox,swipe_oy,swipe_dx,swipe_dy,swipe_sx,swipe_sy;swipe_ox=swipe_oy=0;var swipe_action="off";var IS_IPAD=navigator.userAgent.match(/iPad/i)!=null;var IS_IE8=navigator.userAgent.match(/MSIE 8.0/i)!=null;var IS_IE9=navigator.userAgent.match(/MSIE 9.0/i)!=null;var IS_IE=IS_IE8||IS_IE9;var IS_ANDROID=navigator.userAgent.match(/Android/i)!=null;var IS_KINDLE=navigator.userAgent.match(/Kindle/i)!=null||navigator.userAgent.match(/Silk/i)!=null;var IS_IPHONE=navigator.userAgent.match(/iPhone/i)!=null;var IS_OPERA=navigator.userAgent.match(/Opera/i)!=null;var IS_TOUCH_ONLY=IS_IPAD||IS_ANDROID||IS_KINDLE||IS_IPHONE;var IS_IOS=IS_IPAD||IS_IPHONE;var enable_calc=true;var isReadOnly=isStatic?isStatic:false;var lastGesture=null;var clickR=0;var selectionMode=false;var selectionDragMode=false;var graphicDataStore=[];var selectedObj=null;var selectedObjIndex=-1;var selectedObjID=null;var lineBound={};var useMQ=false;var selectionDragged=false;var scrollPosition={x:0,y:0};var cwi=8000;var cht=8000;var scroll_window={width:cwi,height:cht};var canvas_drawing_width=0,canvas_drawing_height=0;var uidSeed=0;var gidSeed=0;var objectActions={};var startSelection=false;var selectedObjects=[];var multiSelection=false;var mSelRect=null;var hitW=IS_TOUCH_ONLY?10:5;var hitH=IS_TOUCH_ONLY?10:5;var loadedImgTemps={};var loadedTemps=0;var totalTempsloaded=0;var graphEditMode=false;var editGR;var deleteGR;var rotateGR;var scaleGR;var textEditMode=false;var cTMaxWidth=null;var objOnSel=null;var textAreaW=null;var shapeHitCanvas,shapeHitCtx;var eraseObjStore={};var objsErased={};var checkForErase={};var imgPath="/gwt-resources/images/whiteboard/";var opts={templates:[{type:"img",path:imgPath,icon:"tn-",list:["nL.png","gr2D.png"]},{type:"system",path:imgPath,icon:"tn-",opts:[{scope:"whiteboard","function":"saveAsTemplate"}],list:["Save"]},{type:"system",path:imgPath,icon:"tn-",opts:[{scope:"whiteboard","function":"manageTemplates"}],list:["Manage"]}]};wb.options=opts;wb.options.showTemplates=true;if(_opts){$.extend(wb.options,_opts)}var toolArr=[{name:"button_text",title:"Text",classes:"big_tool_button button_text",text:""},{name:"button_pencil",title:"Draw or Write",classes:"big_tool_button button_pencil",text:""},{name:"button_line",title:"Lines",classes:"big_tool_button button_line",text:""},{name:"button_rect",title:"Rectangles",classes:"big_tool_button button_rect",text:""},{name:"button_oval",title:"Circles/Ellipses",classes:"big_tool_button button_oval",text:""},{name:"button_eraser",title:"Erase",classes:"big_tool_button button_eraser",text:""},{name:"button_gr2D",title:"2D Graph",classes:"big_tool_button button_gr2D",text:""},{name:"button_nL",title:"Number line",classes:"big_tool_button button_nL",text:""},{name:"button_clear",title:"Clear Whiteboard",classes:"big_tool_button button_clear",text:"Clear"},{name:"button_move",title:"Select/Move",classes:"big_tool_button button_move",text:""},{name:"button_undo",title:"Undo",classes:"big_tool_button button_undo",text:"Undo"},{name:"button_temp",title:"Figures",classes:"big_tool_button button_temp",text:"Figure"}];function getNextObjectID(){return uidSeed++}function getNextGroupID(){return gidSeed++}function createToolBtn(obj){var btn=$("<button/>",{title:obj.title,name:obj.name,text:obj.text}).addClass(obj.classes);return btn}function buildGUI(){var parentDiv=$("#"+contDiv);if(parentDiv.children().length>0){console.log("this whitebaord already created: "+contDiv);return }var wbc=$('<div style="display:inline-block"></div>').attr("name","wb-container").addClass("wb-container").appendTo(parentDiv);var toolCont=buildTools([{name:"toggleMenu",title:"Show/Hide Tools (right mouse click for context menu)",classes:"big_tool_button",text:"Tools"}]).appendTo(wbc);var canvasCont=buildCanvasLayers().appendTo(wbc);var vScroll=buildScrollBar("v").appendTo(wbc);var hScroll=buildScrollBar("h").appendTo(wbc);var toolMenu=buildToolMenu(toolArr).appendTo(wbc);var tempMenu=buildTempMenu().appendTo(wbc);$get_jqElement("#toggleMenu").on("click",function(e){hideTemplates();if(graphEditMode){}positionToolMenu("t",e.originalEvent);$get_jqElement("#wb_menu").toggle()});$get_jqElement("#toggleMenu").on("mouseover",function(e){hideTemplates();if(graphEditMode){}});$get_jqElement("#wb_menu").on("mouseleave",function(e){});$get_jqElement("#canvas").on("contextmenu",function(e){hideTemplates();if(!isReadOnly){e.preventDefault();positionToolMenu("mouse",e.originalEvent);$get_jqElement("#wb_menu").show();return false}})}function buildTools(arr){var divObj=$("<div/>",{name:"tools"}).addClass("tools");var tool;for(var k=0;k<arr.length;k++){tool=createToolBtn(arr[k]);tool.appendTo(divObj)}return divObj}function buildToolMenu(arr){var divObj=$("<div name='wb_menu' class='wb_menu' style='position:absolute;width:215px;top:36px;left:5px;background-color:#eeeeee;padding:5px;-webkit-box-shadow: 0 3px 5px rgba(0, 0, 0, 0.5);  -moz-box-shadow: 0 3px 5px rgba(0, 0, 0, 0.5);display:none;'></div>");var tool;for(var k=0;k<arr.length;k++){if(arr[k].text=="Temp"&&!wb.options.showTemplates){continue}tool=createToolBtn(arr[k]);tool.appendTo(divObj).css("margin","4px")}return divObj}function positionToolMenu(flag,_event){var isTouchEnabled=_event.type.indexOf("touch")>-1;if(flag=="mouse"&&!isTouchEnabled){var l,t;var event=_event?_event:window.event;var off=getoffset();var dx,dy;if(event.pageX!=undefined){dx=event.pageX-off.left;dy=event.pageY-off.top+$get_jqElement("#tools").outerHeight()}else{dx=event.clientX-off.left;dy=event.clientY-off.top+$get_jqElement("#tools").outerHeight()}var wlim=$get_jqElement("#drawsection").width();var hlim=$get_jqElement("#drawsection").height()+$get_jqElement("#tools").outerHeight();var wd=$get_jqElement("#wb_menu").outerWidth();var ht=$get_jqElement("#wb_menu").outerHeight();l=dx+wd>wlim?wlim-wd:dx;t=dy+ht>hlim?hlim-ht:dy;$get_jqElement("#wb_menu").css({left:l+"px",top:t+"px"})}else{$get_jqElement("#wb_menu").css({left:"5px",top:$get_jqElement("#tools").outerHeight()+"px"})}}function resizeToolMenu(cl){var w,t,rcl,acl;if(cl=="small_tool_button"){acl=cl;rcl="big_tool_button";w="135px";t="31px"}else{acl=cl;rcl="small_tool_button";w="215px";t="36px"}$get_jqElement("#toggleMenu").removeClass(rcl).addClass(acl);$get_jqElement("#wb_menu").css({width:w,top:t});if(cl=="small_tool_button"){$get_jqElement("#toggleMenu").width(45)}}var event_rightclick=false;function isRightClick(e){e=e||window.event;if(!e.which&&e.button!==undefined){e.which=(e.button&1?1:(e.button&2?3:(e.button&4?2:0)))}event_rightclick=e.which===3;return event_rightclick}function buildCanvasLayers(){var divObj=$("<div/>",{name:"drawsection"}).addClass("drawsection");var canvasCont=$("<div/>",{name:"canvas-container",width:800,height:600}).addClass("canvas-container");$("<canvas/>",{name:"canvas",text:"(Your browser doesn't support canvas)"}).addClass("canvas").appendTo(canvasCont);var itxt=$("<div/>",{name:"inputBox"}).addClass("inputBox");var mqbox=$('<div><span class="mathquill-editable" id="editable-math"></span></div>');var dbtn=$("<button/>",{name:"done_btn",text:"DONE"}).addClass("done_btn");mqbox.appendTo(itxt);dbtn.appendTo(itxt);itxt.appendTo(canvasCont);canvasCont.appendTo(divObj);if(buffercontext){buffercanvas.width=buffercanvas.height=0;shapeHitcanvas.width=shapeHitcanvas.height=0}else{buffercanvas=document.createElement("canvas");shapeHitcanvas=document.createElement("canvas");if(typeof G_vmlCanvasManager!="undefined"){$(buffercanvas).appendTo(canvasCont);G_vmlCanvasManager.initElement(buffercanvas);$(shapeHitcanvas).appendTo(canvasCont);G_vmlCanvasManager.initElement(shapeHitcanvas)}buffercontext=buffercanvas.getContext("2d");shapeHitCtx=shapeHitcanvas.getContext("2d")}return divObj}function buildInputTextBox(){var divObj;return divObj}function buildScrollBar(dir){var divObj;if(dir=="v"){divObj=$("<div name='vscroller' class='vscroller'><div name='vscroll_track' class='scroll_track vscroll_track'></div><div name='vscroll_thumb' class='scroll_thumb vscroll_thumb'></div></div>")}else{divObj=$("<div name='hscroller' class='hscroller'><div name='hscroll_track' class='scroll_track hscroll_track'></div><div name='hscroll_thumb' class='scroll_thumb hscroll_thumb'></div></div>")}return divObj}function createEditableGraph(type,w,h){var egraph=$get_Element("#egraph");if(egraph){$(egraph).remove()}var board_hold=$get_Element("#canvas-container");var board=$("<div name='egraph' class='egraph' style='max-width:400px;width:400px;position:absolute;top:0px;display:none;'/>");board.appendTo($(board_hold));if(!wb.graphModules){wb.graphModules={};wb.plotModules={}}var gtype=type?type:"xy";var graph=new Graph(document,board.get(0),gtype,-5,5,-5,5,1,1,undefined,true,true,w?w:300,h?h:(gtype=="xy"?300:150),true,true,false);wb.graphModule=new Plotter(graph,"point",{data:"['interactive']"},"GridToGrid",true,false,false,false);var cntrlCont=createToolBtn({name:"toggleGraphEdit",title:"Show/Hide Graph Edit",classes:"big_tool_button",text:"Edit Graph"}).appendTo($get_jqElement("#tools")).css({position:"absolute",right:"5px","font-size":"0.9em",display:"none"}).click(function(){var egraph=$get_jqElement("#egraph");var visib=egraph.is(":visible");showHideGraphModuleEditor(!visib)});$(graph.createGTool("done")).click(function(){transMode="move";showHideGraphModuleEditor(false)})}function getGraphModuleConfig(){var p=wb.graphModule;var g=p.graphObj;p.setAxisDatas();var obj=p.getGraphData();obj.plot_data=eval(p.plot_datas);return(obj)}function plotFunctionToGraphModule(config){if(config){var plot=wb.graphModule;var graph=plot.graphObj;graph.setAxis(config.xaxis,config.yaxis);graph.scaleGraph(config.xscale,config.yscale);if(config.plot_data){plot.setAxisDatas();plot.renderData({data:convertObjToString(config.plot_data)},config.labelPlot,config.node_data,false,config.actions)}}}function updateGraphModule(uid,config,rerender,data,boo){showHideGraphToggler(false);if(!rerender){if(!config||(wb.graphModule&&(config.gtype!=wb.graphModule.graph_type))){createEditableGraph(config.gtype,config.width,config.height)}if(config){var plot=wb.graphModule;var graph=plot.graphObj;graph.setAxis(config.xaxis,config.yaxis);graph.scaleGraph(config.xscale,config.yscale);if(config.plot_data){plot.setAxisDatas();plot.renderData({data:convertObjToString(config.plot_data)},config.labelPlot,config.node_data,false,config.actions)}}}var plot=wb.graphModule;var graph=plot.graphObj;var gData=graph.canvas.toDataURL();var pData=graph.canvas.toDataURL();var gImage,pImage;if(!wb.graphModules[uid]){wb.graphModules[uid]=new Image();wb.plotModules[uid]=new Image()}gImage=wb.graphModules[uid];pImage=wb.plotModules[uid];gImage.src=gData;pImage.src=pData;wb.graphModules[uid]=gImage;wb.plotModules[uid]=pImage;var tdata=getGraphModuleConfig();if(!objectActions[uid]["edit"]){objectActions[uid]["edit"]=[{}]}var li=objectActions[uid]["edit"].length-1;objectActions[uid]["edit"][li]=tdata;if(!boo){var mobj={id:data.id,uid:data.uid,type:"cmd",config:tdata,cmd:{name:"edit",data:tdata},dataArr:[]};updateDataToSERVER(null,mobj)}else{updateCanvas()}}function showHideGraphToggler(boo){var togg=$get_jqElement("#toggleGraphEdit");boo?togg.show():togg.hide()}function showHideGraphModuleEditor(boo,noupdate){var plot;var graph;var config=selectedObj?eval(selectedObj.config):null;var gedit=$get_jqElement("#egraph");var togg=$get_jqElement("#toggleGraphEdit");if(boo){togg.text("Edit Done")}else{togg.text("Edit Graph")}if(boo){if((wb.graphModule&&(config.gtype!=wb.graphModule.graph_type))){createEditableGraph(config.gtype,config.width,config.height)}plot=wb.graphModule;graph=plot.graphObj;var uid=selectedObj.uid;var li=objectActions[selectedObj.uid]["edit"]?objectActions[selectedObj.uid]["edit"].length-1:-1;if(li>-1){config=objectActions[uid]["edit"][li]}if(config){graph.setAxis(config.xaxis,config.yaxis);graph.scaleGraph(config.xscale,config.yscale)}graphEditMode=true;var bound=getWhiteboardObjBound("sel");if(selectedObj){plot.currentUID=selectedObj.uid;plot.objIndex=selectedObjIndex;plot.selObjBound=bound}else{config=plot.objIndex!==undefined?eval(graphicDataStore[plot.objIndex].config):null}var pos=bound.brect;var off={left:0.5,top:0.5};removeBoundRect();updateCanvas();gedit.css({left:pos.xmin+off.left+"px",top:pos.ymin+off.top+"px",display:"block"})}else{graphEditMode=!true;if(wb.graphModule){plot=wb.graphModule;graph=plot.graphObj;config=plot.objIndex!==undefined?eval(graphicDataStore[plot.objIndex].config):null;if(config){var nconfig=getGraphModuleConfig();if(config.xaxis!=nconfig.xaxis||config.yaxis!=nconfig.yaxis||config.xscale!=nconfig.xscale||config.yscale!=nconfig.yscale){updateGraphModule(plot.currentUID,nconfig,true,graphicDataStore[plot.objIndex])}if(!noupdate){updateCanvas();setObjSelected(graphicDataStore[plot.objIndex])}gedit.hide()}}}}wb.addGraphModule=function(t,x,y,boo,data){if(selectedObj&&selectionMode&&selectedObj.id=="graph"){return }var config={gtype:t?t:"xy",xmin:-5,ymin:-5,xmax:5,ymax:5,xinc:1,yinc:1};if(!boo){graphicData.dataArr=[];graphicData.id="graph";graphicData.uid=data?(data.uid?data.uid:getNextObjectID()):getNextObjectID();objectActions[graphicData.uid]={}}else{graphicData=data;config=graphicData.config}var uid=graphicData.uid;if(!data||!wb.graphModule||(wb.graphModule&&(config.gtype!=wb.graphModule.graph_type))){createEditableGraph(config.gtype,config.width,config.height)}var plot=wb.graphModule;var graph=plot.graphObj;if(boo&&config){graph.setAxis(config.xaxis,config.yaxis);graph.scaleGraph(config.xscale,config.yscale)}var w=graph.width;var h=graph.height;graphicData.config=getGraphModuleConfig();var gr,xp,yp,xs,ys;var cposX=parseInt($get_Element("#canvas-container").style.left);var cposY=parseInt($get_Element("#canvas-container").style.top);cposX=cposX?cposX:0;cposY=cposY?cposY:0;var sw=(screen_width-w)/2;var sh=(screen_height-h)/2;xp=x?x-w/2:sw-cposX;yp=y?y-h/2:sh-cposY;xs=x?x-w/2:sw-cposX;ys=y?y-h/2:sh-cposY;var buf=30;xp=xs=xp-scrollPosition.x<buf?buf:xp;yp=ys=yp-scrollPosition.y<buf?buf:yp;xp=xs=xp-scrollPosition.x+300>scroll_window.width-buf?scroll_window.width-buf-300+scrollPosition.x:xp;yp=ys=yp-scrollPosition.y+300>scroll_window.height-buf?scroll_window.height-buf-300+scrollPosition.y:yp;var gData=graph.canvas.toDataURL();var pData=graph.canvas.toDataURL();var gImage,pImage;if(!wb.graphModules[uid]){wb.graphModules[uid]=new Image();wb.plotModules[uid]=new Image()}gImage=wb.graphModules[uid];pImage=wb.plotModules[uid];gImage.src=gData;pImage.src=pData;wb.graphModules[uid]=gImage;wb.plotModules[uid]=pImage;context.drawImage(gImage,xp,yp);context.drawImage(pImage,xp,yp);if(!boo){graphicData.dataArr.push({x:xs-scrollPosition.x,y:ys-scrollPosition.y,w:w,h:h});graphicData.brect=getBoundRect(xs-scrollPosition.x,ys-scrollPosition.y,w,h);sendData();if(!selectionMode){selectionMode=true}buttonHighlite("move");updateCanvas();setObjSelected(graphicDataStore[graphicDataStore.length-1])}else{var isDeleted=isObjDeleted(uid);var isMoved=isObjTransformed(uid,"move");var isScaled=isObjTransformed(uid,"scale");var isRotated=isObjTransformed(uid,"rotate");var isModified=isMoved||isScaled||isRotated||isDeleted;if(isModified){updateCanvas()}}};function drawBoundRect(obj,boo){var dx=x-clickX;var dy=y-clickY;var hitC=15;var hitR=hitC/2;context.save();context.lineWidth=4;context.strokeStyle="rgba(0, 0, 255, 0.5)";context.translate(scrollPosition.x,scrollPosition.y);var isMoved=isObjTransformed(selectedObj.uid,"move");var isScaled=isObjTransformed(selectedObj.uid,"scale");var isRotated=isObjTransformed(selectedObj.uid,"rotate");var isEdited=isObjTransformed(selectedObj.uid,"edit");var x0,y0,w0,h0,sx,sy;var sbrect=cloneObject(selectedObj.brect);if(selectedObj&&selectedObj.id==2&&isEdited){sbrect.w=isEdited.brect.w;sbrect.h=isEdited.brect.h;sbrect.xmin=selectedObj.brect.xmin+isEdited.brect.xmin;sbrect.ymin=selectedObj.brect.ymin+isEdited.brect.ymin;sbrect.xmax=sbrect.xmin+sbrect.w;sbrect.ymax=sbrect.ymin+sbrect.h}if(transMode=="move"){if(boo){obj=isMoved?isMoved:{tx:0,ty:0}}x0=selectedObj.brect.xmin+obj.tx;y0=selectedObj.brect.ymin+obj.ty;w0=sbrect.w;h0=sbrect.h;if(isEdited&&selectedObj.id==2){x0=sbrect.xmin+obj.tx;y0=sbrect.ymin+obj.ty;w0=sbrect.w;h0=sbrect.h}if(isScaled){sx=isScaled.tx;sy=isScaled.ty;if(isRotated){}x0=x0-sx;y0=y0-sy;w0=sbrect.w+(sx*2);h0=sbrect.h+(sy*2)}if(isRotated){x0=x0?x0:selectedObj.brect.xmin;y0=y0?y0:selectedObj.brect.ymin;w0=w0?w0:sbrect.w;h0=h0?h0:sbrect.h;var cx=x0+(w0/2);var cy=y0+(h0/2);context.translate(cx,cy);context.rotate(isRotated.tr);context.translate(-cx,-cy)}context.beginPath();context.strokeRect(x0,y0,w0,h0)}else{if(transMode=="scale"){if(boo){obj=isScaled?isScaled:{tx:0,ty:0}}sx=obj.tx;sy=obj.ty;if(isRotated){}x0=selectedObj.brect.xmin-sx;y0=selectedObj.brect.ymin-sy;w0=sbrect.w+(sx*2);h0=sbrect.h+(sy*2);if(isMoved){x0=x0+isMoved.tx;y0=y0+isMoved.ty}if(isRotated){x0=x0?x0:selectedObj.brect.xmin;y0=y0?y0:selectedObj.brect.ymin;w0=w0?w0:sbrect.w;h0=h0?h0:sbrect.h;var cx=x0+(w0/2);var cy=y0+(h0/2);context.translate(cx,cy);context.rotate(isRotated.tr);context.translate(-cx,-cy)}context.beginPath();context.strokeRect(x0,y0,w0,h0)}else{if(transMode=="rotate"){if(boo){obj=isRotated?isRotated:{tx:0,tr:0}}console.log("ROTATION:::"+obj.tr);x0=selectedObj.brect.xmin;y0=selectedObj.brect.ymin;w0=sbrect.w;h0=sbrect.h;if(isMoved){x0=x0+isMoved.tx;y0=y0+isMoved.ty}if(isScaled){x0=x0-isScaled.tx;y0=y0-isScaled.ty;w0=sbrect.w+(isScaled.tx*2);h0=sbrect.h+(isScaled.ty*2)}x0=x0?x0:selectedObj.brect.xmin;y0=y0?y0:selectedObj.brect.ymin;w0=w0?w0:sbrect.w;h0=h0?h0:sbrect.h;var cx=x0+(w0/2);var cy=y0+(h0/2);context.translate(cx,cy);context.rotate(obj.tr);context.translate(-cx,-cy);context.beginPath();context.strokeRect(x0,y0,w0,h0)}}}context.beginPath();context.fillStyle="blue";var xLT=x0-hitR;var yLT=y0-hitR;var xLB=x0-hitR;var yLB=y0+h0+hitR;var xRT=x0+w0+hitR;var yRT=y0-hitR;var xRB=x0+w0+hitR;var yRB=y0+h0+hitR;context.save();context.lineWidth=1;context.strokeStyle="rgba(0, 0, 255, 1)";context.restore();if(selectedObj.id=="graph"||selectedObj.id==2){context.fillRect(xLB-hitR,yLB-hitR,hitC,hitC)}else{if(selectedObj.id==2){}context.fillRect(xLT-hitR,yLT-hitR,hitC,hitC);context.fillRect(xRB-hitR,yRB-hitR,hitC,hitC);context.beginPath();context.drawImage(rotateGR,xLT-(hitR),yLT-(hitR),hitC,hitC);context.drawImage(scaleGR,xRB-(hitR),yRB-(hitR),hitC,hitC)}context.save();context.lineWidth=0;context.fillRect(xRT-hitR,yRT-hitR,hitC,hitC);context.restore();context.fill();context.drawImage(deleteGR,xRT-(hitR),yRT-(hitR),hitC,hitC);if(selectedObj.id=="graph"||selectedObj.id==2){context.drawImage(editGR,x0-(hitC),y0+h0+(0),hitC,hitC)}context.restore()}function drawSelectionRect(obj,w,col){context.save();context.lineWidth=w?w:1;context.strokeStyle=col?col:"rgba(0, 0, 0, 0.75)";context.strokeRect(obj.tx,obj.ty,obj.brect.w,obj.brect.h);context.restore()}function drawMultiSelectionRect(){if(mSelRect){multiSelection=true;drawSelectionRect({tx:mSelRect.xmin,ty:mSelRect.ymin,brect:{w:mSelRect.xmax-mSelRect.xmin,h:mSelRect.ymax-mSelRect.ymin}},4,"rgba(0, 0, 255, 0.5)")}}function removeBoundRect(){context.clearRect(0,0,canvas.width,canvas.height);reRenderCanvas()}function getScaleRatio(w,h,radians,boo){var a=(Math.cos(radians)),b=(Math.sin(radians));if(boo){a=Math.abs(a);b=Math.abs(b)}console.log("scaleRatio:"+w+":"+h+"||"+a+":"+b);return{h:(h*a-w*b),w:h*b+w*a}}function getRPoint(cx,cy,px,py,rad){var x,y,ds,dx,dy;dx=px-cx;dy=py-cy;ds=Math.sqrt(dx*dx+dy*dy);rad+=Math.atan2(dy,dx);x=cx+ds*Math.cos(rad);y=cy+ds*Math.sin(rad);return{x:x,y:y}}function getObjCenter(obj){var rect=[obj.xmin,obj.ymin,obj.w,obj.h];return{x:rect[0]+rect[2]/2,y:rect[1]+rect[3]/2}}function getBoundingBox(obj,tr,_cx,_cy){var c1,c2,c3,c4,bx1,by1,bx2,by2;var rect=[obj.xmin,obj.ymin,obj.w,obj.h];var rad=tr;var cx=_cx?_cx:rect[0]+rect[2]/2;var cy=_cy?_cy:rect[1]+rect[3]/2;c1=getRPoint(cx,cy,rect[0],rect[1],rad);c2=getRPoint(cx,cy,rect[0]+rect[2],rect[1],rad);c3=getRPoint(cx,cy,rect[0]+rect[2],rect[1]+rect[3],rad);c4=getRPoint(cx,cy,rect[0],rect[1]+rect[3],rad);bx1=Math.min(c1.x,c2.x,c3.x,c4.x);by1=Math.min(c1.y,c2.y,c3.y,c4.y);bx2=Math.max(c1.x,c2.x,c3.x,c4.x);by2=Math.max(c1.y,c2.y,c3.y,c4.y);var bounds=[bx1,by1,bx2-bx1,by2-by1];return{x:bx1,y:by1,xmin:bx1,ymin:by1,xmax:bx2,ymax:by2,w:bounds[2],h:bounds[3]}}function drawTempObj(selectedObj,dx,dy){if(selectedObj.id===2&&useMQ){}else{try{renderObj(selectedObj,true);renderToBuffer(selectedObj)}catch(ex){alert(ex)}}}function applyAllTrans(obj){var isMoved=isObjTransformed(selectedObj.uid,"move");var isScaled=isObjTransformed(selectedObj.uid,"scale");var isRotated=isObjTransformed(selectedObj.uid,"rotate");if(isMoved){translateObj(obj,isMoved.tx,isMoved.ty)}if(isScaled){scaleObj(obj,isScaled.tx,isScaled.ty)}if(isRotated){rotateObj(obj,isRotated.trect.rot)}}function transformObj(obj,dx,dy,multi){if(transMode=="move"){translateObj(obj,dx,dy,multi)}if(transMode=="scale"){scaleObj(obj,dx,dy,multi)}if(transMode=="rotate"){rotateObj(obj,dx,dy,multi)}return obj}function translateObj(obj,dx,dy,multi){var da=obj.dataArr;var _selectedObj=multi?multi:selectedObj;var sa=_selectedObj.dataArr[0];var sobj=da[0];sobj.x=sa.x+dx;sobj.y=sa.y+dy;obj.dataArr[0]=sobj;da=_selectedObj.brect;for(var m in da){if(m=="x"||m=="xmin"||m=="xmax"){obj.brect[m]=_selectedObj.brect[m]+dx}if(m=="y"||m=="ymin"||m=="ymax"){obj.brect[m]=_selectedObj.brect[m]+dy}}return obj}function checkforBoundry(obj,dx,dy,multi){var _selectedObj=multi?multi:selectedObj;var sa=_selectedObj.dataArr[0];var buf=30;if(obj.id=="graph"||obj.id==11||obj.id==12){var xp=sa.x+dx;var yp=sa.y+dy;if(xp<buf){dx=-sa.x+buf}if(yp<buf){dy=-sa.y+buf}if(xp>scroll_window.width-buf-300){dx=-sa.x+scroll_window.width-buf-300}if(yp>scroll_window.height-buf-300){dy=-sa.y+scroll_window.height-buf-300}}return{dx:dx,dy:dy}}function scaleObj(obj,dx,dy,multi){var da=obj.dataArr;var _selectedObj=multi?multi:selectedObj;var sa=_selectedObj.dataArr[0];var sobj=da[0];sobj.x=sa.x+dx;sobj.y=sa.y+dy;obj.dataArr[0]=sobj;da=_selectedObj.brect;for(var m in da){if(m=="x"||m=="xmin"){obj.brect[m]=_selectedObj.brect[m]-dx}if(m=="y"||m=="ymin"){obj.brect[m]=_selectedObj.brect[m]-dy}if(m=="xmax"){obj.brect[m]=_selectedObj.brect[m]+dx}if(m=="ymax"){obj.brect[m]=_selectedObj.brect[m]+dy}if(m=="w"){obj.brect[m]=_selectedObj.brect[m]+(dx*2)}if(m=="h"){obj.brect[m]=_selectedObj.brect[m]+(dy*2)}}return obj}function rotateObj(obj,rot){obj.tr=obj.tr?obj.tr+rot:rot;obj.brect.tr=obj.tr;return obj}function transformRect(obj,dx,dy,mode,pa){var _selectedObj=selectedObj;if(!mode){}if(mode=="rotate"){var c=pa?getObjCenter(pa):{};var _obj=getBoundingBox(obj,dx,c.x,c.y);for(var m in obj){obj[m]=_obj[m]?_obj[m]:obj[m]}return obj}for(var m in obj){if(mode=="scale"){if(m=="x"||m=="xmin"){obj[m]=obj[m]-dx}if(m=="y"||m=="ymin"){obj[m]=obj[m]-dy}if(m=="xmax"){obj[m]=obj[m]+dx}if(m=="ymax"){obj[m]=obj[m]+dy}if(m=="w"){obj[m]=obj[m]+(dx*2)}if(m=="h"){obj[m]=obj[m]+(dy*2)}}else{if(m=="x"||m=="xmin"||m=="xmax"){obj[m]=obj[m]+dx}if(m=="y"||m=="ymin"||m=="ymax"){obj[m]=obj[m]+dy}}}return obj}function getMoveNode(r){var c=26;var obj={};obj.x=r.xmax;obj.y=r.ymax;obj.xmin=r.xmax;obj.ymin=r.ymax;obj.xmax=r.xmax+c;obj.ymax=r.ymax+c;obj.w=c;obj.h=c;return obj}function getRotateNode(r){var c=26;var obj={};obj.x=r.xmin-c;obj.y=r.ymin-c;obj.xmin=r.xmin-c;obj.ymin=r.ymin-c;obj.xmax=r.xmin;obj.ymax=r.ymin;obj.w=c;obj.h=c;return obj}function getEditNode(r){var c=26;var obj={};obj.x=r.xmin-c;obj.y=r.ymax;obj.xmin=r.xmin-c;obj.ymin=r.ymax;obj.xmax=r.xmin;obj.ymax=r.ymax+c;obj.w=c;obj.h=c;return obj}function getDeleteNode(r){var c=26;var obj={};obj.x=r.xmax;obj.y=r.ymin-c;obj.xmin=r.xmax;obj.ymin=r.ymin-c;obj.xmax=r.xmax+c;obj.ymax=r.ymin;obj.w=c;obj.h=c;return obj}function findObjIndex(obj,boo){var l=graphicDataStore.length;for(var i=l-1;i>=0;i--){var __obj=graphicDataStore[i];if(!boo&&__obj.type=="cmd"){continue}if(__obj.uid==obj.uid){return i}}return -1}function findUIDIndex(uid){var l=graphicDataStore.length;for(var i=l-1;i>=0;i--){var __obj=graphicDataStore[i];if(__obj.type=="cmd"){continue}if(__obj.uid==uid){return i}}return -1}function selectionOnNode(obj,xp,yp){var rect=cloneObject(obj.brect);var rectM=getMoveNode(rect);var rectR=getRotateNode(rect);var rectD=getDeleteNode(rect);var rectE=getEditNode(rect);var isMoved=isObjTransformed(obj.uid,"move");var isScaled=isObjTransformed(obj.uid,"scale");var isRotated=isObjTransformed(obj.uid,"rotate");var isTransformed=isMoved||isScaled||isRotated;if(isTransformed){if(isMoved){rect=cloneObject(isMoved.trect);rectM=getMoveNode(rect);rectR=getRotateNode(rect);rectD=getDeleteNode(rect);rectE=getEditNode(rect)}if(isScaled){transformRect(rect,isScaled.tx,isScaled.ty,"scale");transformRect(rectM,isScaled.tx,isScaled.ty,"move");transformRect(rectR,-isScaled.tx,isScaled.ty,"move");transformRect(rectE,isScaled.tx,isScaled.ty,"move");transformRect(rectD,isScaled.tx,-isScaled.ty,"move")}if(isRotated){transformRect(rect,isRotated.tx,isRotated.ty,"rotate");transformRect(rectM,isRotated.tx,isRotated.ty,"rotate",rect);transformRect(rectR,isRotated.tx,isRotated.ty,"rotate",rect);transformRect(rectD,isRotated.tx,isRotated.ty,"rotate",rect);transformRect(rectE,isRotated.tx,isRotated.ty,"rotate",rect)}}transformRect(rect,scrollPosition.x,scrollPosition.y);transformRect(rectR,scrollPosition.x,scrollPosition.y);transformRect(rectM,scrollPosition.x,scrollPosition.y);transformRect(rectD,scrollPosition.x,scrollPosition.y);transformRect(rectE,scrollPosition.x,scrollPosition.y);var sel=contains(rect,xp,yp);var selR=contains(rectR,xp,yp);var selM=contains(rectM,xp,yp);var selD=contains(rectD,xp,yp);if(selD){return"delete"}if(selR||selM){if(selectedObj&&selectedObj.id=="graph"&&selR){return"move"}if(selectedObj&&selectedObj.id=="graph"&&selM){transMode="move";return"move"}return selM?"scale":"rotate"}if(selectedObj&&(selectedObj.id=="graph"||selectedObj.id==2)){var selE=contains(rectE,xp,yp);if(selE){transMode="edit";return"edit"}}return null}function findSelectedObjIndex(xp,yp){var l=graphicDataStore.length;var figs=[];for(var i=l-1;i>=0;i--){var __obj=graphicDataStore[i];if(graphicDataStore[i].type=="cmd"){continue}var _objid=graphicDataStore[i].id;var _uid=graphicDataStore[i].uid;var __uid=selectedObj?selectedObj.uid:-1;var inSel=__uid===_uid;var isGraph=_objid==11||_objid==12;if(isObjDeleted(graphicDataStore[i].uid)||isGraph){continue}if(_objid=="template"){figs.push({ind:i,data:__obj});continue}var rect=cloneObject(graphicDataStore[i].brect);var rectM=getMoveNode(rect);var rectR=getRotateNode(rect);var rectD=getDeleteNode(rect);var rectE=getEditNode(rect);var isMoved=isObjTransformed(graphicDataStore[i].uid,"move");var isScaled=isObjTransformed(graphicDataStore[i].uid,"scale");var isRotated=isObjTransformed(graphicDataStore[i].uid,"rotate");var isEdited=isObjTransformed(graphicDataStore[i].uid,"edit");var isTransformed=isMoved||isScaled||isRotated||isEdited;if(isTransformed){if(isMoved){rect=cloneObject(isMoved.trect);rectM=getMoveNode(rect);rectR=getRotateNode(rect);rectD=getDeleteNode(rect);rectE=getEditNode(rect)}if(isEdited){if(__obj.id=="2"){rect.w=isEdited.brect.w;rect.h=isEdited.brect.h;rect.xmin=rect.xmin+(isEdited.brect.xmin);rect.ymin=rect.ymin+(isEdited.brect.ymin);rect.xmax=rect.xmin+rect.w;rect.ymax=rect.ymin+rect.h;rectM=getMoveNode(rect);rectR=getRotateNode(rect);rectD=getDeleteNode(rect);rectE=getEditNode(rect)}}if(isScaled){transformRect(rect,isScaled.tx,isScaled.ty,"scale");transformRect(rectM,isScaled.tx,isScaled.ty,"move");transformRect(rectR,-isScaled.tx,-isScaled.ty,"move");transformRect(rectE,isScaled.tx,isScaled.ty,"move");transformRect(rectD,isScaled.tx,isScaled.ty,"move")}if(isRotated){transformRect(rect,isRotated.tx,isRotated.ty,"rotate");transformRect(rectM,isRotated.tx,isRotated.ty,"rotate",rect);transformRect(rectR,isRotated.tx,isRotated.ty,"rotate",rect);transformRect(rectD,isRotated.tx,isRotated.ty,"rotate",rect);transformRect(rectE,isRotated.tx,isRotated.ty,"rotate",rect);console.log(rect)}}transformRect(rect,scrollPosition.x,scrollPosition.y);transformRect(rectR,scrollPosition.x,scrollPosition.y);transformRect(rectM,scrollPosition.x,scrollPosition.y);transformRect(rectD,scrollPosition.x,scrollPosition.y);transformRect(rectE,scrollPosition.x,scrollPosition.y);if(!rect){selectedObj=null;return -1}var sel=contains(rect,xp,yp);var selR=contains(rectR,xp,yp);var selM=contains(rectM,xp,yp);var selD=contains(rectD,xp,yp);console.log(selR);console.log(selM);if(inSel){if(selD){return"delete"}if(selR||selM){i=selectedObjIndex;transMode=selM?"scale":"rotate";if(selectedObj&&selectedObj.id=="graph"&&selR){transMode="move";return"move"}if(selectedObj&&selectedObj.id=="graph"&&selM){transMode="move";return"move"}return i}if(selectedObj&&(selectedObj.id=="graph"||selectedObj.id==2)){var selE=contains(rectE,xp,yp);if(selE){transMode="edit";return"edit"}}}console.log(rect);console.log(sel);var hasShape=false;if(sel){hasShape=getShapeHit(__obj,{xmin:xp-hitW,ymin:yp-hitW,xmax:xp+hitH,ymax:yp+hitH})}if(sel&&hasShape){selectedObj=graphicDataStore[i];return i}}if(figs.length){return findSelectedObjIndex_fig(xp,yp,figs)}selectedObj=null;return -1}function findSelectedObjIndex_fig(xp,yp,arr){var l=arr.length;for(var i=l-1;i>=0;i--){var __obj=arr[i].data;var index=arr[i].ind;if(__obj.type=="cmd"){continue}var _objid=__obj.id;var _uid=__obj.uid;var __uid=selectedObj?selectedObj.uid:-1;var inSel=__uid===_uid;var isGraph=_objid==11||_objid==12;if(isObjDeleted(__obj.uid)||isGraph){continue}var rect=cloneObject(__obj.brect);var rectM=getMoveNode(rect);var rectR=getRotateNode(rect);var rectD=getDeleteNode(rect);var rectE=getEditNode(rect);var isMoved=isObjTransformed(__obj.uid,"move");var isScaled=isObjTransformed(__obj.uid,"scale");var isRotated=isObjTransformed(__obj.uid,"rotate");var isEdited=isObjTransformed(__obj.uid,"edit");var isTransformed=isMoved||isScaled||isRotated||isEdited;if(isTransformed){if(isMoved){rect=cloneObject(isMoved.trect);rectM=getMoveNode(rect);rectR=getRotateNode(rect);rectD=getDeleteNode(rect);rectE=getEditNode(rect)}if(isEdited){}if(isScaled){transformRect(rect,isScaled.tx,isScaled.ty,"scale");transformRect(rectM,isScaled.tx,isScaled.ty,"move");transformRect(rectR,-isScaled.tx,-isScaled.ty,"move");transformRect(rectE,isScaled.tx,isScaled.ty,"move");transformRect(rectD,isScaled.tx,isScaled.ty,"move")}if(isRotated){transformRect(rect,isRotated.tx,isRotated.ty,"rotate");transformRect(rectM,isRotated.tx,isRotated.ty,"rotate",rect);transformRect(rectR,isRotated.tx,isRotated.ty,"rotate",rect);transformRect(rectD,isRotated.tx,isRotated.ty,"rotate",rect);transformRect(rectE,isRotated.tx,isRotated.ty,"rotate",rect);console.log(rect)}}transformRect(rect,scrollPosition.x,scrollPosition.y);transformRect(rectR,scrollPosition.x,scrollPosition.y);transformRect(rectM,scrollPosition.x,scrollPosition.y);transformRect(rectD,scrollPosition.x,scrollPosition.y);transformRect(rectE,scrollPosition.x,scrollPosition.y);if(!rect){selectedObj=null;return -1}var sel=contains(rect,xp,yp);var selR=contains(rectR,xp,yp);var selM=contains(rectM,xp,yp);var selD=contains(rectD,xp,yp);console.log(selR);console.log(selM);if(inSel){if(selD){return"delete"}if(selR||selM){i=selectedObjIndex;transMode=selM?"scale":"rotate";if(selectedObj&&selectedObj.id=="graph"&&selR){transMode="move";return"move"}if(selectedObj&&selectedObj.id=="graph"&&selM){transMode="move";return"move"}return i}}var hasShape=false;if(sel){hasShape=getShapeHit(__obj,{xmin:xp-hitW,ymin:yp-hitW,xmax:xp+hitH,ymax:yp+hitH})}if(sel&&hasShape){selectedObj=__obj;return index}}selectedObj=null;return -1}function findObjUnder(xp,yp){var l=graphicDataStore.length;for(var i=l-1;i>=0;i--){var __obj=graphicDataStore[i];if(graphicDataStore[i].type=="cmd"){continue}var _objid=graphicDataStore[i].id;var _uid=graphicDataStore[i].uid;var __uid=selectedObj?selectedObj.uid:-1;var inSel=__uid===_uid;var isGraph=_objid==11||_objid==12;if(isObjDeleted(graphicDataStore[i].uid)||isGraph){continue}var rect=cloneObject(graphicDataStore[i].brect);var isMoved=isObjTransformed(graphicDataStore[i].uid,"move");var isScaled=isObjTransformed(graphicDataStore[i].uid,"scale");var isRotated=isObjTransformed(graphicDataStore[i].uid,"rotate");var isEdited=isObjTransformed(graphicDataStore[i].uid,"edit");var isTransformed=isMoved||isScaled||isRotated||isEdited;if(isTransformed){if(isMoved){rect=cloneObject(isMoved.trect)}if(isEdited){if(__obj.id=="2"){rect.w=isEdited.brect.w;rect.h=isEdited.brect.h;rect.xmin=rect.xmin+(isEdited.brect.xmin);rect.ymin=rect.ymin+(isEdited.brect.ymin);rect.xmax=rect.xmin+rect.w;rect.ymax=rect.ymin+rect.h}}if(isScaled){transformRect(rect,isScaled.tx,isScaled.ty,"scale")}if(isRotated){transformRect(rect,isRotated.tx,isRotated.ty,"rotate")}}transformRect(rect,scrollPosition.x,scrollPosition.y);if(!rect){return null}var sel=contains(rect,xp,yp);var hasShape=false;if(sel){hasShape=getShapeHit(__obj,{xmin:xp-hitW,ymin:yp-hitW,xmax:xp+hitH,ymax:yp+hitH})}if(sel&&hasShape){return graphicDataStore[i]}}return null}function showObjSelection(obj){var index=findObjIndex(obj);var el=$get_Element("#tempSelection");if(index>-1){if(!el){var p=$get_jqElement("#canvas-container");var _obj=$("<div name='tempSelection' class='tempSelection' style='position:absolute;border:4px solid rgba(0, 0, 255, 0.5);'></div>");p.prepend(_obj);el=_obj[0]}var bound=getWhiteboardObjBound("custom",obj);var _dim={tx:bound.brect.xmin+scrollPosition.x-4,ty:bound.brect.ymin+scrollPosition.y-4,w:bound.brect.xmax-bound.brect.xmin,h:bound.brect.ymax-bound.brect.ymin};$(el).css({width:_dim.w+"px",height:_dim.h+"px",left:_dim.tx+"px",top:_dim.ty+"px",display:"block"})}}function removeObjSelection(){var obj=$get_Element("#tempSelection");if(obj){$(obj).hide()}}function checkForMultiSelect(){var l=graphicDataStore.length;var _arr=[];mSelRect=null;for(var i=0;i<l;i++){var obj=graphicDataStore[i];if(obj.type=="cmd"){continue}var _objid=obj.id;var isGraph=_objid==11||_objid==12;if(isObjDeleted(obj.uid)||isGraph||_objid===0){continue}if(!wb.isErased(obj)){var r1=obj.brect;var rect=cloneObject(r1);var isMoved=isObjTransformed(graphicDataStore[i].uid,"move");var isScaled=isObjTransformed(graphicDataStore[i].uid,"scale");var isRotated=isObjTransformed(graphicDataStore[i].uid,"rotate");var isTransformed=isMoved||isScaled||isRotated;var isEdited=isObjTransformed(graphicDataStore[i].uid,"edit");if(isTransformed){if(isMoved){rect=cloneObject(isMoved.trect)}if(isEdited){if(obj.id=="2"){rect.w=isEdited.brect.w;rect.h=isEdited.brect.h;rect.xmin=rect.xmin-(-isEdited.brect.xmin);rect.ymin=rect.ymin-(-isEdited.brect.ymin);rect.xmax=rect.xmin+rect.w;rect.ymax=rect.ymin+rect.h}}if(isScaled){var dw=isScaled.tx;var dh=isScaled.ty;if(isRotated){}transformRect(rect,dw,dh,"scale")}if(isRotated){transformRect(rect,isRotated.tx,isRotated.ty,"rotate")}}else{if(isEdited){if(obj.id=="2"){rect.w=isEdited.brect.w;rect.h=isEdited.brect.h;rect.xmin=rect.xmin-(-isEdited.brect.xmin);rect.ymin=rect.ymin-(-isEdited.brect.ymin);rect.xmax=rect.xmin+rect.w;rect.ymax=rect.ymin+rect.h}}}transformRect(rect,scrollPosition.x,scrollPosition.y);var sel=intersectRect(rect,selectionRect);var hasShape=false;if(sel){hasShape=getShapeHit(obj,getIntRect(rect,selectionRect))}if(sel&&hasShape){_arr.push(obj);if(!mSelRect){mSelRect={xmin:rect.xmin,ymin:rect.ymin,xmax:rect.xmax,ymax:rect.ymax}}mSelRect.xmin=rect.xmin<mSelRect.xmin?rect.xmin:mSelRect.xmin;mSelRect.ymin=rect.ymin<mSelRect.ymin?rect.ymin:mSelRect.ymin;mSelRect.xmax=rect.xmax>mSelRect.xmax?rect.xmax:mSelRect.xmax;mSelRect.ymax=rect.ymax>mSelRect.ymax?rect.ymax:mSelRect.ymax}}}return _arr}function updateMultiSelectRect(){var l=selectedObjects.length;mSelRect=null;for(var i=0;i<l;i++){var obj=selectedObjects[i];if(isObjDeleted(obj.uid)){continue}if(!wb.isErased(obj)){var r1=obj.brect;var rect=cloneObject(r1);var isMoved=isObjTransformed(obj.uid,"move");var isScaled=isObjTransformed(obj.uid,"scale");var isRotated=isObjTransformed(obj.uid,"rotate");var isTransformed=isMoved||isScaled||isRotated;var isEdited=isObjTransformed(obj.uid,"edit");if(isTransformed){if(isMoved){rect=cloneObject(isMoved.trect)}if(isEdited){if(obj.id=="2"){rect.w=isEdited.brect.w;rect.h=isEdited.brect.h;rect.xmin=rect.xmin-(-isEdited.brect.xmin);rect.ymin=rect.ymin-(-isEdited.brect.ymin);rect.xmax=rect.xmin+rect.w;rect.ymax=rect.ymin+rect.h}}if(isScaled){var dw=isScaled.tx;var dh=isScaled.ty;if(isRotated){}transformRect(rect,dw,dh,"scale")}if(isRotated){transformRect(rect,isRotated.tx,isRotated.ty,"rotate")}}else{if(isEdited){if(obj.id=="2"){rect.w=isEdited.brect.w;rect.h=isEdited.brect.h;rect.xmin=rect.xmin-(-isEdited.brect.xmin);rect.ymin=rect.ymin-(-isEdited.brect.ymin);rect.xmax=rect.xmin+rect.w;rect.ymax=rect.ymin+rect.h}}}transformRect(rect,scrollPosition.x,scrollPosition.y);if(!mSelRect){mSelRect={xmin:rect.xmin,ymin:rect.ymin,xmax:rect.xmax,ymax:rect.ymax}}mSelRect.xmin=rect.xmin<mSelRect.xmin?rect.xmin:mSelRect.xmin;mSelRect.ymin=rect.ymin<mSelRect.ymin?rect.ymin:mSelRect.ymin;mSelRect.xmax=rect.xmax>mSelRect.xmax?rect.xmax:mSelRect.xmax;mSelRect.ymax=rect.ymax>mSelRect.ymax?rect.ymax:mSelRect.ymax}}}function getWhiteboardObjBound(flag,_obj){var objs=graphicDataStore;if(flag=="msel"){objs=selectedObjects}else{if(flag=="sel"){objs=[selectedObj]}else{if(flag=="custom"){objs=[_obj]}}}var l=objs.length;var mSelRect=null;for(var i=0;i<l;i++){var obj=objs[i];var isCmd=obj.type==="cmd";var isDeleted=isObjDeleted(obj.uid);if(isDeleted||isCmd||obj.id===0){continue}if(true){var r1=obj.brect;var rect=cloneObject(r1);var isMoved=isObjTransformed(obj.uid,"move");var isScaled=isObjTransformed(obj.uid,"scale");var isRotated=isObjTransformed(obj.uid,"rotate");var isEdited=isObjTransformed(obj.uid,"edit");var isTransformed=isMoved||isScaled||isRotated||isEdited;if(isTransformed){if(isMoved){rect=cloneObject(isMoved.trect)}if(isEdited){if(obj.id=="2"){rect.w=isEdited.brect.w;rect.h=isEdited.brect.h;rect.xmin=rect.xmin-(-isEdited.brect.xmin);rect.ymin=rect.ymin-(-isEdited.brect.ymin);rect.xmax=rect.xmin+rect.w;rect.ymax=rect.ymin+rect.h}}if(isScaled){var dw=isScaled.tx;var dh=isScaled.ty;transformRect(rect,dw,dh,"scale")}if(isRotated){transformRect(rect,isRotated.tx,isRotated.ty,"rotate")}}transformRect(rect,scrollPosition.x,scrollPosition.y);if(!mSelRect){mSelRect={xmin:rect.xmin,ymin:rect.ymin,xmax:rect.xmax,ymax:rect.ymax}}mSelRect.xmin=rect.xmin<mSelRect.xmin?rect.xmin:mSelRect.xmin;mSelRect.ymin=rect.ymin<mSelRect.ymin?rect.ymin:mSelRect.ymin;mSelRect.xmax=rect.xmax>mSelRect.xmax?rect.xmax:mSelRect.xmax;mSelRect.ymax=rect.ymax>mSelRect.ymax?rect.ymax:mSelRect.ymax}}var bound={tx:mSelRect.xmin,ty:mSelRect.ymin,brect:{xmin:mSelRect.xmin,ymin:mSelRect.ymin,xmax:mSelRect.xmax,ymax:mSelRect.ymax,w:mSelRect.xmax-mSelRect.xmin,h:mSelRect.ymax-mSelRect.ymin}};return bound}function contains(rect,xp,yp){if(xp>=rect.xmin-1&&xp<=rect.xmax+1&&yp>=rect.ymin-1&&yp<=rect.ymax+1){return true}return false}function intersectRect(r1,r2){return !(r2.xmin>r1.xmax||r2.xmax<r1.xmin||r2.ymin>r1.ymax||r2.ymax<r1.ymin)}function getIntRect(r1,r2){var xmin=Math.max(r1.xmin,r2.xmin);var xmax=Math.min(r1.xmax,r2.xmax);var ymin=Math.max(r1.ymin,r2.ymin);var ymax=Math.min(r1.ymax,r2.ymax);return{xmin:xmin,ymin:ymin,xmax:xmax,ymax:ymax}}function getShapeHit(obj,rect){shapeHitCtx.clearRect(0,0,buffercanvas.width,buffercanvas.height);shapeHitcanvas.width=canvas.width;shapeHitcanvas.height=canvas.height;shapeHitCtx.save();shapeHitCtx.translate(scrollPosition.x,scrollPosition.y);renderToBuffer(obj,shapeHitCtx);var __w=rect.xmax-rect.xmin;var __h=rect.ymax-rect.ymin;__w=Math.max(__w,hitW*2);__h=Math.max(__h,hitH*2);var imgd=shapeHitCtx.getImageData(rect.xmin,rect.ymin,__w,__h);var pix=imgd.data;var hasColorData=false;for(var i=0,n=pix.length;i<n;i+=4){if(pix[i+3]>0){hasColorData=true;break}}shapeHitCtx.restore();return hasColorData}function checkForObjectErase(r,arr){var _graphicDataStore=arr?arr:graphicDataStore;var l=_graphicDataStore.length;var eobjs=[];for(var i=0;i<l;i++){var obj=_graphicDataStore[i];var isGraph=obj.id==11||obj.id==12||obj.id=="graph";if(obj.type=="cmd"||isGraph||wb.isErased(obj)||obj.id===0){continue}if(isObjDeleted(obj.uid)){continue}if(!wb.isErased(obj)){var r1=obj.brect;var rect=cloneObject(r1);var isMoved=isObjTransformed(obj.uid,"move");var isScaled=isObjTransformed(obj.uid,"scale");var isRotated=isObjTransformed(obj.uid,"rotate");var isTransformed=isMoved||isScaled||isRotated;if(isTransformed){}if(isTransformed){if(isMoved){rect=cloneObject(isMoved.trect)}if(isScaled){transformRect(rect,isScaled.tx,isScaled.ty,"scale")}if(isRotated){transformRect(rect,isRotated.tx,isRotated.ty,"rotate")}}transformRect(rect,scrollPosition.x,scrollPosition.y);var sel=intersectRect(rect,r);var hasShape=false;if(sel){hasShape=getShapeHit(obj,r)}objsErased[obj.uid]=hasShape;if(hasShape){eobjs.push(obj.uid)}}}return eobjs}mq_holder.onload=function(){context.drawImage(this,holder_x,holder_y);updateCanvas()};function getInternetExplorerVersion(){var rv=-1;if(navigator.appName=="Microsoft Internet Explorer"){var ua=navigator.userAgent;var re=new RegExp("MSIE ([0-9]{1,}[.0-9]{0,})");if(re.exec(ua)!=null){rv=parseFloat(RegExp.$1)}}return rv}function showCalc(){console_log("SHOW_CALC");if($("#calc_hold").html()||!enable_calc){}else{var calc_x=screen_width-325;var calc_y=$get_Element("#tools").offsetTop+$get_Element("#tools").offsetHeight;var ch='<div id="calc_hold" style="width:325px;position:absolute;left:'+calc_x+"px;top:"+calc_y+'px"></div>';var calc_hold=$("#main-content").append($(ch));console_log("SHOW_HIDE_CALC-s2");$("#calc_hold").calculator({layout:$.calculator.scientificLayout});$get_Element("#button_calc").style.border="2px solid #ff0000"}}function hideCalc(){if($("#calc_hold").html()){console_log("HIDE_CALC");$("#calc_hold").remove();$get_Element("#button_calc").style.border="1px solid #000000"}}function _enableCalc(){$get_jqElement("#button_calc").css("background-image","url("+_imageBaseDir+"calculator.png)")}function _disableCalc(){hideCalc();$get_jqElement("#button_calc").css("background-image","url("+_imageBaseDir+"calculator_no.png)");console_log($get_jqElement("#button_calc").css("backgroundImage"))}function showHideCalc(){console_log("SHOW_HIDE_CALC");if($("#calc_hold").html()){console_log("SHOW_HIDE_CALC-s0");hideCalc()}else{console_log("SHOW_HIDE_CALC-s1");showCalc()}}function mouseOverCalc(event){if(!$("#calc_hold").html()){return false}getCanvasPos();var mx=event.layerX?event.layerX:event.pageX-offX;var my=event.layerY?event.layerY:event.pageY-offY;var box=$get_jqElement("#canvas-container").position();var xp,yp,wi,hi;xp=screen_width-325-box.left;yp=0-box.top;wi=325;hi=$get_jqElement("#calc_hold").height();if((mx>=xp&&mx<=xp+wi)&&(my>=yp&&my<=yp+hi)){return true}return false}var determineFontHeight=function(fontStyle){var body=document.getElementsByTagName("body")[0];var dummy=document.createElement("div");var dummyText=document.createTextNode("M");dummy.appendChild(dummyText);dummy.setAttribute("style",fontStyle);body.appendChild(dummy);var result=dummy.offsetHeight+4;body.removeChild(dummy);return result};function wrapTextX(context,text,x,y,maxWidth,lineHeight){var words=text.split(" ");var line="";var w=maxWidth;var h=0;for(var n=0;n<words.length;n++){var testLine=line+words[n]+" ";var metrics=context.measureText(testLine);var testWidth=metrics.width;if(testWidth>maxWidth&&n>0){context.fillText(line,x,y);w=Math.max(w,context.measureText(line).width);line=words[n]+" ";h+=lineHeight+lineHeight/3;y+=lineHeight+lineHeight/3}else{line=testLine;w=Math.max(w,context.measureText(line).width)}}context.fillText(line,x,y);h+=lineHeight+lineHeight/3;w=Math.max(w,context.measureText(line).width);return{w:w,h:Math.max(40,h)}}function wrapText(context,text,x,y,maxWidth,lineHeight){var lines=text.split("\n");var w=maxWidth;var h=0;for(var i=0;i<lines.length;i++){var words=lines[i].split(" ");var line="";for(var n=0;n<words.length;n++){var testLine=line+words[n]+" ";var metrics=context.measureText(testLine);var testWidth=metrics.width;if(testWidth>maxWidth&&n>0){context.fillText(line,x,y);line=words[n]+" ";y+=lineHeight;h+=lineHeight}else{line=testLine;w=Math.max(w,context.measureText(line).width)}}context.fillText(line,x,y);y+=lineHeight;h+=lineHeight;w=Math.max(w,context.measureText(line).width)}return{w:w,h:Math.max(40,h)}}function getTextBoxDim(text,x,y,maxWidth,lineHeight){var words=text.split(" ");var line="";var w=0;var h=0;for(var n=0;n<words.length;n++){var testLine=line+words[n]+" ";var metrics=context.measureText(testLine);var testWidth=metrics.width;if(testWidth>maxWidth&&n>0){w=Math.max(w,context.measureText(line).width);h+=lineHeight+lineHeight/3;line=words[n]+" ";y+=lineHeight+lineHeight/3}else{line=testLine;w=Math.max(w,context.measureText(line).width)}}h+=lineHeight+lineHeight/3;w=Math.max(w,context.measureText(line).width);return{w:w,h:Math.max(40,h)}}var _textToolFont="12pt Arial";function renderText_html(xt,xp,yp,col,ctx,notEdit){var boo=false;var txt=xt?xt:$get_Element("#content").value;var cntxt=ctx?ctx:context;var str=txt.split("\n");var _xp=parseFloat($get_jqElement("#inputBox").css("left"))+parseFloat($get_jqElement("#input_box").css("left"));var _yp=parseFloat($get_jqElement("#inputBox").css("top"))+parseFloat($get_jqElement("#input_box").css("top"));if(!notEdit&&transMode=="edit"&&selectionMode&&selectedObj){xp=_xp;yp=_yp;boo=true;col=selectedObj.dataArr[0].color}var x0=xp?xp:_xp;var y0=yp?yp:_yp;var ht=determineFontHeight(str[0]);var sy=y0;cntxt.font=_textToolFont;cntxt.textBaseline="top";var colr=col?col:wb.globalStrokeColor;cntxt.fillStyle=colr;var maxWidth=xt?cTMaxWidth:$get_jqElement("#content").outerWidth();var dim=wrapText(cntxt,txt,x0,y0,maxWidth,ht);if(!xt){var rect={};rect.x=rect.xmin=x0-scrollPosition.x;rect.y=rect.ymin=sy-scrollPosition.y;rect.w=dim.w;rect.h=dim.h;rect.xmax=rect.x+rect.w;rect.ymax=rect.y+rect.h;if(boo){var uid=selectedObj.uid;var isMoved=isObjTransformed(uid,"move");rect.x=rect.xmin=-(isMoved.tx?selectedObj.brect.xmin+isMoved.tx-xp:selectedObj.brect.xmin-xp);rect.y=rect.ymin=-(isMoved.ty?selectedObj.brect.ymin+isMoved.ty-yp:selectedObj.brect.ymin-yp);rect.w=dim.w;rect.h=dim.h;rect.xmax=-rect.x+rect.w;rect.ymax=-rect.y+rect.h;var tdata={x:-(isMoved.tx?selectedObj.brect.xmin+isMoved.tx-xp:selectedObj.brect.xmin-xp),y:-(isMoved.ty?selectedObj.brect.ymin+isMoved.ty-yp:selectedObj.brect.ymin-yp),text:txt,textBoxWidth:maxWidth,brect:rect};if(!objectActions[uid]["edit"]){objectActions[uid]["edit"]=[{}]}var li=objectActions[uid]["edit"].length-1;objectActions[uid]["edit"][li]=tdata;var mobj={id:selectedObj.id,uid:selectedObj.uid,type:"cmd",cmd:{name:"edit",data:tdata},textBoxWidth:maxWidth,dataArr:[]};updateDataToSERVER(null,mobj);transMode="move"}else{var gd=graphicData;gd.brect=rect;gd.textBoxWidth=maxWidth;updateText(txt,x0,sy,colorToNumber(colr));sendData()}updateCanvas();$get_Element("#content").value="";$get_Element("#inputBox").style.display="none";textEditMode=!true;selectedObj=null;if(boo){}}}function renderText_mq(xt,xp,yp,col){var txt=xt?xt:$get_jqElement("#editable-math").mathquill("latex");var x0=xp?xp:clickX;var y0=yp?yp:clickY;var colr=col?col:wb.globalStrokeColor;var ht=15;var holder_x=x0;var holder_y=y0;if(false){context.drawImage(mq_holder,holder_x,holder_y);updateCanvas()}else{var _mq_holder=new Image();_mq_holder.onload=function(){var rect={};rect.x=rect.xmin=x0;rect.y=rect.ymin=y0;rect.w=this.width;rect.h=this.height;rect.xmax=rect.x+rect.w;rect.ymax=rect.y+rect.h;console.log("renderText");console.log(this);var gd=graphicDataStore[graphicDataStore.length-1];gd.brect=rect;context.drawImage(this,holder_x,holder_y);updateCanvas();_mq_holder=null;delete _mq_holder};var txtCol=String(colr).substring(1);_mq_holder.src="http://chart.apis.google.com/chart?cht=tx&chf=bg,s,ffffff00&chco="+txtCol+"&chl="+encodeURIComponent("\\fontsize{18} "+txt);lastTxt=txt}if(!xt){updateText(txt,x0,y0,colorToNumber(colr));sendData();$get_jqElement("#editable-math").mathquill("latex","");$get_Element("#inputBox").style.display="none"}}function renderText(xt,xp,yp,col,ctx,boo){if(useMQ){renderText_mq(xt,xp,yp,col,ctx,boo)}else{renderText_html(xt,xp,yp,col,ctx,boo)}}function onkeyupHandler(){}function onkeydownHandler(_event){var event=_event?_event:window.event;var txtBox=$get_jqElement("#inputBox");var visib=txtBox.is(":visible");if(currentTool=="text"&&visib&&event.keyCode==13){if(!event.shiftKey){if(event.preventDefault){event.preventDefault()}else{event.returnValue=false}renderText()}}}function resetButtonHighlite(){$get_Element("#button_text").style.border="1px solid #000000";$get_Element("#button_pencil").style.border="1px solid #000000";$get_Element("#button_line").style.border="1px solid #000000";$get_Element("#button_rect").style.border="1px solid #000000";$get_Element("#button_oval").style.border="1px solid #000000";$get_Element("#button_eraser").style.border="1px solid #000000";if($get_Element("#button_nav")){$get_Element("#button_nav").style.border="1px solid #000000"}if($get_Element("#button_temp")){$get_Element("#button_temp").style.border="1px solid #000000"}if($get_Element("#button_move")){$get_Element("#button_move").style.border="1px solid #000000"}if(currentTool!="nav"){hideNavigator()}if(currentTool!="temps"){hideTemplates()}if(graphEditMode){showHideGraphModuleEditor(false)}$get_jqElement("#wb_menu").hide()}function buttonHighlite(t){resetButtonHighlite();var isOpen=$get_Element("#inputBox").style.display=="block";if(isOpen){renderText()}$get_Element("#button_"+t).style.border="2px solid #ff9900";if(currentTool!="text"&&$get_Element("#inputBox").style.display=="block"){textEditMode=!true;hideTextBox()}if(t!=="move"){selectionMode=false;selectedObj=null;removeBoundRect()}}var _docWidth=0;var _docHeight=0;var _viewPort=null;wb.setWhiteboardViewPort=function(width,height,flag){console_log("EXTERNAL CALL::setWhiteboardViewPort:: "+width+":"+height);_viewPort={width:width,height:height};if(flag&&flag=="fixed"){wb.setSizeOfWhiteboard(width,height)}};wb.resizeWhiteboard=function(){console_log("EXTERNAL CALL::resizeWhiteboard::");adjustToolbar()};function resizeWhiteboardTo(match,minW,minH){var w,h;var pad=5;if(match=="content"){if(graphicDataStore&&graphicDataStore.length){var bound=getWhiteboardObjBound();canvas_drawing_width=bound.brect.xmax;canvas_drawing_height=bound.brect.ymax}w=canvas_drawing_width;h=canvas_drawing_height}else{if(match=="custom"){w=minW?minW:300;h=minH?minH:300}}var off_left=$get_Element("#tools").offsetLeft;var off_top=$get_Element("#tools").offsetTop;var off_ht=$get_Element("#tools").offsetHeight;var topOff=off_ht+off_top;var leftOff=off_left;var margin=5;var scroller=15;w=w+leftOff+scroller+margin;h=h+topOff+scroller+margin;wb.setSizeOfWhiteboard(w,h);wb.setWhiteboardViewPort(w,h);wb.resizeWhiteboard()}function viewport_testpage(){var e=window,a="inner";if(!("innerWidth" in window)){a="client";e=document.documentElement||document.body}return{width:e[a+"Width"],height:e[a+"Height"]}}function viewport(){var e=window,a="inner";if(!("innerWidth" in window)){a="client";e=document.documentElement||document.body}if(_viewPort==null){alert("Whiteboard setup: _docWidth/_docHeight must be set by calling setWhiteboardViewPort(width, height)");_viewPort=viewport_testpage()}return _viewPort}function getDocHeight(){var D=document;return Math.max(Math.max(D.body.scrollHeight,D.documentElement.scrollHeight),Math.max(D.body.offsetHeight,D.documentElement.offsetHeight),Math.max(D.body.clientHeight,D.documentElement.clientHeight))}function isMultitouch_gesture(event){var ev=event?event:window.event;isTouchEnabled=ev.type.indexOf("touch")>-1;var pinch_threshold=0.01;if(isTouchEnabled){var scal=Math.abs(1-ev.scale);var isPinchZoom=scal>pinch_threshold;if(isPinchZoom){return true}}return false}function touchStartFunction(event){var ev=event?event:window.event;var boo=isMultitouch_gesture(event);if(boo){return true}if(ev.touches.length==2){}else{if(lastGesture&&lastGesture.type=="touchstart"&&ev.touches.length===1&&(ev.timeStamp-lastGesture.timeStamp)<300){lastGesture=null;event.preventDefault()}else{if(ev.touches.length===1){}else{event.preventDefault()}}}lastGesture=ev}var touchMoveFunction=touchStartFunction;var _imageBaseDir="/gwt-resources/images/whiteboard/";var mainDoc;var ieVer=getInternetExplorerVersion();var isIE=ieVer!=-1&&ieVer<9;console.log("iIE: "+isIE+", version: "+ieVer);function doRightScroll(dx){var currPos=scrollPosition.x;currPos=currPos?currPos:0;currPos=dx;currPos=currPos>0?0:currPos;currPos=currPos<-(scroll_window.width-screen_width)?-(scroll_window.width-screen_width):currPos;var scrub=(scroll_window.width-screen_width)/(screen_width-30);$get_Element("#hscroll_thumb").style.left=(-currPos/scrub)+"px";scrollPosition.x=currPos}function doUpScroll(dy){var currPos=scrollPosition.y;currPos=currPos?currPos:0;currPos=dy;currPos=currPos>0?0:currPos;currPos=currPos<-(scroll_window.height-screen_height)?-(scroll_window.height-screen_height):currPos;var scrub=(scroll_window.height-screen_height)/(screen_height-30);$get_Element("#vscroll_thumb").style.top=(-currPos/scrub)+"px";scrollPosition.y=currPos}function showHideTemplates(){var cont=$get_jqElement("#temp_cont");if(cont.is(":visible")){hideTemplates()}else{showTemplates()}}function hideTemplates(){hideTemplatesCont()}function showTemplates(){var wbm=$get_jqElement("#wb_menu");var x=wbm.css("left");var y=wbm.css("top");wbm.hide();showTemplatesCont();posTemplatesCont(x,y)}function posTemplatesCont(x,y){var cont=$get_jqElement("#temp_cont");cont.css({left:x,top:y})}function showTemplatesCont(){var cont=$get_jqElement("#temp_cont");cont.show()}function hideTemplatesCont(){var cont=$get_jqElement("#temp_cont");cont.hide()}function prepareTemplatesMenu(jsn){var opts=jsn?eval(jsn):eval(wb.options);var tempsD=jsn?[opts]:opts.templates;var temps=[];var temp;for(var i=0;i<tempsD.length;i++){temp=tempsD[i];var type=temp.type?temp.type:"img";var list=temp.list;var path=temp.path;path=path?path:"";var icon=temp.icon?temp.icon:"-tn";if(icon.indexOf("-")==-1){icon="-"+icon}var opts=temp.opts;var labels=temp.labels?temp.labels:list;var label;for(var j=0;j<list.length;j++){var obj={};obj.type=type;var ext="";if(type!="img"){obj.opts=opts[j];ext=".png"}obj.icon=path+icon+list[j]+ext;if(icon&&icon.charAt(0)=="-"){var lab=list[j];if(list[j].indexOf(".")>-1){var _lab=list[j].split(".");lab=_lab[0];ext="."+_lab[1]}obj.icon=path+lab+icon+ext}label=labels[j];if(list[j].indexOf("/")>-1){var ei=list[j].indexOf(".png");if(ei>-1){obj.icon=list[j].substring(0,ei)+"-tn.png"}label=label.split("/");label=label[label.length-1]}obj.url=path+list[j];obj.name=obj.title=label.split(".")[0];temps.push(obj)}}return temps}function buildTempMenu(){var arr=prepareTemplatesMenu();var divObj=$("<div name='temp_cont' class='temp_cont' style='position:absolute;width:235px;max-height:225px;top:36px;left:5px;background-color:#eeeeee;padding:5px;-webkit-box-shadow: 0 3px 5px rgba(0, 0, 0, 0.5);  -moz-box-shadow: 0 3px 5px rgba(0, 0, 0, 0.5);display:none;overflow:auto;'></div>");var temp;for(var k=0;k<arr.length;k++){temp=createTempBtn(arr[k]);temp.appendTo(divObj).css("margin","4px")}return divObj}function updateTempMenu(json){var arr=prepareTemplatesMenu(json);var divObj=$get_jqElement("#temp_cont");var saveBtn=divObj.find("[name='Save']");var temp;for(var k=0;k<arr.length;k++){temp=createTempBtn(arr[k]);if(saveBtn.length){temp.insertBefore(saveBtn).css("margin","4px")}else{temp.appendTo(divObj).css("margin","4px")}}return divObj}function createTempBtn(obj){var btn=$("<button/>",{title:obj.title?obj.title:"Template",name:obj.name,path:obj.url,text:""}).addClass("small_tool_button").css({"background-image":"url("+obj.icon+")","background-repeat":"no-repeat","background-position":"center"}).on("click",function(){var temp=$(this);var name=temp.attr("name");var path=temp.attr("path");var type=temp.data("type");if(type=="img"){loadTemplate({name:name,path:path})}else{if(type=="system"){var opts=temp.data("opts");var scope=opts.scope;var fname=opts["function"];if(scope=="global"){fname()}else{if(scope=="whiteboard"){wb[fname]()}else{window[scope][fname]()}}}}});btn.data("type",obj.type);if(obj.type!="img"){btn.data("opts",obj.opts)}return btn}function loadTemplate(obj,x,y,boo,data){var img;if(loadedImgTemps[obj.name]){img=loadedImgTemps[obj.name];addTemplate(obj,x,y,img,boo,data)}else{loadedImgTemps[obj.name]=new Image();loadedImgTemps[obj.name].onload=function(){addTemplate(obj,x,y,this,boo,data)};loadedImgTemps[obj.name].src=obj.path}}function addTemplate(temp,x,y,img,boo,data){if(!boo){graphicData.dataArr=[];graphicData.id="template";graphicData.uid=getNextObjectID();objectActions[graphicData.uid]={}}else{graphicData=data}var uid=graphicData.uid;var w=img.width;var h=img.height;var gr,xp,yp,xs,ys;var cposX=parseInt($get_Element("#canvas-container").style.left);var cposY=parseInt($get_Element("#canvas-container").style.top);cposX=cposX?cposX:0;cposY=cposY?cposY:0;var sw=(screen_width-w)/2;var sh=(screen_height-h)/2;xp=x?x:sw-cposX;yp=y?y:sh-cposY;xs=x?x:sw-cposX;ys=y?y:sh-cposY;var buf=30;xp=xs=xp-scrollPosition.x<buf?buf:xp;yp=ys=yp-scrollPosition.y<buf?buf:yp;xp=xs=xp-scrollPosition.x+w>scroll_window.width-buf?scroll_window.width-buf-w+scrollPosition.x:xp;yp=ys=yp-scrollPosition.y+h>scroll_window.height-buf?scroll_window.height-buf-h+scrollPosition.y:yp;if(!boo){context.drawImage(img,xp,yp);graphicData.dataArr.push({x:xs-scrollPosition.x,y:ys-scrollPosition.y,w:w,h:h,name:temp.name,url:temp.path});graphicData.brect=getBoundRect(xs-scrollPosition.x,ys-scrollPosition.y,w,h);sendData();if(!selectionMode){selectionMode=true}buttonHighlite("move");updateCanvas();setObjSelected(graphicDataStore[graphicDataStore.length-1])}else{loadedTemps++;var isDeleted=isObjDeleted(uid);var isMoved=isObjTransformed(uid,"move");var isScaled=isObjTransformed(uid,"scale");var isRotated=isObjTransformed(uid,"rotate");var isModified=isMoved||isScaled||isRotated||isDeleted;if(isModified){updateCanvas()}}}function setObjSelected(obj){var index=findObjIndex(obj);if(index>-1){selectedObj=obj;selectedObjIndex=index;drawBoundRect({tx:0,ty:0,tr:0,brect:selectedObj.brect},true)}}var mpos;var nav_width=300;var nav_height=300;var ipos;var navClicked=false;function showNavigator(x,y){var cont=$get_jqElement("#drawsection");var wlim=cont.width()-17;var hlim=cont.height()-17;nav_width=Math.min(300,wlim);nav_height=Math.min(300,hlim);var navig='<div name="navigator" class="navigator" style="width: 200px; height: 200px; border: 2px solid white; position: absolute; right: 0px;top: 0px;background-color: rgba(200,200,200,0.95);box-shadow: 0 3px 5px rgba(0, 0, 0, 0.5);  -webkit-box-shadow: 0 3px 5px rgba(0, 0, 0, 0.5);  -moz-box-shadow: 0 3px 5px rgba(0, 0, 0, 0.5);"><div class="navThumb_cont" name="navThumb_cont" style="border: 1px solid blue; left: 0px; top: 0px; position: absolute;"><div name="navThumb" style="border: 1px solid red; left: 0px; top: 0px; "></div><span style="font-size:10px;color:gray;display: block;cursor: default;" unselectable="on">Drag me</span></div></div>';cont.append(navig);$get_jqElement("#navigator").width(nav_width);$get_jqElement("#navigator").height(nav_height);var ratW=nav_width/scroll_window.width;var ratH=nav_height/scroll_window.height;var navTW=cont.width()*ratW;var navTH=cont.height()*ratH;$get_jqElement("#navThumb").width(navTW);$get_jqElement("#navThumb").height(navTH);$get_jqElement("#navThumb_cont").height(navTH+50);updateNavThumb(x,y);ipos=$get_jqElement("#navThumb_cont").position();$get_jqElement("#navThumb_cont").on("mousedown",initNavTBDrag);$get_jqElement("#navThumb_cont").on("touchstart",removeDrag);$get_jqElement("#navThumb_cont").on("touchstart",initNavTBDrag);$get_jqElement("#navigator").on("mousedown",registerNavClick);$get_jqElement("#navigator").on("mouseup",movetoNavClick);$get_jqElement("#navigator").on("touchstart",registerNavClick)}function hideNavigator(){$get_jqElement("#navigator").remove()}function showHideNavigator(arr,pos){if($get_jqElement("#navigator").length){hideNavigator();return"hide"}else{showNavigator(pos.x,pos.y);updateNavigator(arr,pos.x,pos.y);return"show"}}function reloadNavigator(){if($get_jqElement("#navigator").length){hideNavigator();var pos=scrollPosition;var arr=graphicDataStore;showNavigator(pos.x,pos.y);updateNavigator(arr,pos.x,pos.y)}}function addPix(x,y,boo){var ratW=nav_width/scroll_window.width;var ratH=nav_height/scroll_window.height;var xp=x*ratW;var yp=y*ratH;if(boo){$("<div/>",{"class":"inline"}).appendTo($get_jqElement("#navigator")).css({position:"absolute",left:xp+"px",top:yp+"px","background-color":"white",width:"4px",height:"4px"});return }$("<div/>",{"class":"inline"}).appendTo($get_jqElement("#navigator")).css({position:"absolute",left:xp+"px",top:yp+"px","background-color":"black",width:"4px",height:"4px"})}function updateNavigator(arr,x,y){var l=arr.length;for(var i=0;i<l;i++){var obj=arr[i];if(obj.id==11||obj.id==12||obj.id===0){continue}var b=obj.brect;addPix(b.xmin,b.ymin,wb.isErased(obj))}if($get_jqElement("#graph_cont").length){var el=$get_jqElement("#graph_cont");var pos=el.position();var ratW=nav_width/scroll_window.width;var ratH=nav_height/scroll_window.height;var xp=pos.left-x;var yp=pos.top-y;addPix(xp,yp)}}function updateNavThumb(x,y){var ratW=nav_width/scroll_window.width;var ratH=nav_height/scroll_window.height;var nx=x*ratW;var ny=y*ratH;$get_jqElement("#navThumb_cont").css({left:-nx+"px",top:-ny+"px"})}function doNavTBDrag(_event){navClicked=false;var event=_event?_event.originalEvent:window.event;var isTouchEnabled=event.type.indexOf("touch")>-1;event=isTouchEnabled?event.changedTouches[0]:event;var pos=getMousePos(event);var dx=-ipos.left+mpos.x-pos.x;var dy=-ipos.top+mpos.y-pos.y;var nvt_cont=$get_jqElement("#navThumb_cont");var nvt=$get_jqElement("#navThumb");var parentOffset=nvt_cont.parent().offset();var limitW=nav_width;var limitH=nav_height;dx=-dx+nvt.width()>limitW?-(limitW-nvt.width()):dx;dy=-dy+nvt.height()>limitH?-(limitH-nvt.height()):dy;dx=dx>0?0:dx;dy=dy>0?0:dy;nvt_cont.css({left:-dx+"px",top:-dy+"px"});var ratW=scroll_window.width/nav_width;var ratH=scroll_window.height/nav_height;wb.scrollScreen(dx*ratW,dy*ratH);if(_event.preventDefault){_event.preventDefault()}else{_event.returnValue=false}}function getMousePos(event){var dx,dy;if(event.pageX!=undefined){dx=event.pageX;dy=event.pageY}else{dx=event.clientX;dy=event.clientY}var parentOffset=$get_jqElement("#navThumb_cont").parent().offset();var relX=dx-parentOffset.left;var relY=dy-parentOffset.top;return{x:relX,y:relY}}function stopNavTBDrag(){$(document).off("mousemove",doNavTBDrag);$(document).off("mouseup",stopNavTBDrag);$(document).off("touchmove",doNavTBDrag);$(document).off("touchend",stopNavTBDrag);$get_jqElement("#navigator").off("touchend",movetoNavClick);$get_jqElement("#navigator").off("touchmove",removeDrag)}function initNavTBDrag(_event){var event=_event?_event.originalEvent:window.event;var isTouchEnabled=event.type.indexOf("touch")>-1;try{event=isTouchEnabled?event.changedTouches[0]:event}catch(e){alert(e)}var nvt_cont=$get_jqElement("#navThumb_cont");var nvt=$get_jqElement("#navThumb");if(isTouchEnabled){nvt_cont.off("mousedown",initNavTBDrag);$get_jqElement("#navigator").off("touchend",movetoNavClick);$(document).on("touchmove",doNavTBDrag);$(document).on("touchend",stopNavTBDrag)}else{$(document).on("mousemove",doNavTBDrag);$(document).on("mouseup",stopNavTBDrag)}var cp=getMousePos(event);ipos=nvt_cont.position();var parentOffset=nvt_cont.parent().offset();mpos=cp;navClicked=true;if(_event.preventDefault){_event.preventDefault()}else{_event.returnValue=false}}function movetoNavClick(_event){if(!navClicked){return }var event=_event?_event.originalEvent:window.event;var isTouchEnabled=event.type.indexOf("touch")>-1;event=isTouchEnabled?event.changedTouches[0]:event;if(_event.preventDefault){_event.preventDefault()}else{_event.returnValue=false}var nvt_cont=$get_jqElement("#navThumb_cont");var nvt=$get_jqElement("#navThumb");var pos=getMousePos(event);var diffX=nvt.width()/2;var diffY=nvt.height()/2;var dx=-pos.x+diffX;var dy=-pos.y+diffY;var parentOffset=nvt_cont.parent().offset();var limitW=nav_width;var limitH=nav_height;console.log(ipos.left+":"+dx);dx=-dx+nvt.width()>limitW?-(limitW-nvt.width()):dx;dy=-dy+nvt.height()>limitH?-(limitH-nvt.height()):dy;dx=dx>0?0:dx;dy=dy>0?0:dy;nvt_cont.css({left:-dx+"px",top:-dy+"px"});var ratW=scroll_window.width/nav_width;var ratH=scroll_window.height/nav_height;wb.scrollScreen(dx*ratW,dy*ratH);ipos=nvt_cont.position();stopNavTBDrag()}function getNavPos(){var box=$get_Element("#navigator").getBoundingClientRect();var body=document.body;var docElem=document.documentElement;var scrollTop=window.pageYOffset||docElem.scrollTop||body.scrollTop;var scrollLeft=window.pageXOffset||docElem.scrollLeft||body.scrollLeft;var clientTop=docElem.clientTop||body.clientTop||0;var clientLeft=docElem.clientLeft||body.clientLeft||0;var top=box.top+scrollTop-clientTop;var left=box.left+scrollLeft-clientLeft;offX=Math.round(left);offY=Math.round(top);return{top:offY,left:offX}}function removeDrag(_event){if(_event.originalEvent.preventDefault){_event.originalEvent.preventDefault()}else{_event.originalEvent.returnValue=false}}function registerNavClick(_event){navClicked=true;var event=_event?_event.originalEvent:window.event;var isTouchEnabled=event.type.indexOf("touch")>-1;if(_event.preventDefault){_event.preventDefault()}else{_event.returnValue=false}if(isTouchEnabled){$get_jqElement("#navigator").off("mousedown",registerNavClick);$get_jqElement("#navigator").off("mouseup",movetoNavClick);$get_jqElement("#navigator").on("touchend",movetoNavClick);$get_jqElement("#navigator").on("touchmove",removeDrag)}}function getoffset(){console_log("getCanvasPos processing!");var box=canvas.getBoundingClientRect();var body=document.body;var docElem=document.documentElement;var scrollTop=window.pageYOffset||docElem.scrollTop||body.scrollTop;var scrollLeft=window.pageXOffset||docElem.scrollLeft||body.scrollLeft;var clientTop=docElem.clientTop||body.clientTop||0;var clientLeft=docElem.clientLeft||body.clientLeft||0;var top=box.top+scrollTop-clientTop;var left=box.left+scrollLeft-clientLeft;var offX=Math.round(left);var offY=Math.round(top);return{top:offY,left:offX}}wb.initWhiteboard=function(mainDocIn){console_log("WHITEBOARD_INITIATED! - document object:"+mainDocIn);canvas_drawing_width=0;canvas_drawing_height=0;if(context){var _width=0;buffercanvas.width=canvas.width=_width;buffercanvas.height=canvas.height=_width;shapeHitcanvas.width=_width;shapeHitcanvas.height=_width;if(isIE){$(canvas).css({width:"0px",height:"0px"});$(canvas).empty();$(buffercanvas).css({width:"0px",height:"0px"});$(buffercanvas).empty();$(shapeHitcanvas).css({width:"0px",height:"0px"});$(shapeHitcanvas).empty()}else{canvas=null;buffercanvas=null;context=null;buffercontext=null;shapeHitcanvas=null;shapeHitCtx=null}}mainDoc=mainDocIn;buildGUI();if($get_Element("#button_calc")){$get_jqElement("#button_calc").css({position:"absolute",right:"5px"})}setTimeout(function(){canvas=$get_Element("#canvas");var siz=viewport();var docWidth=siz.width;var docHeight=siz.height;console_log("CANVAS_IN_IE: "+canvas+":"+canvas.getContext);if(docWidth>600){if(isReadOnly){$get_jqElement("#tools").css("height","15px")}else{}$("div#"+contDiv+" .wb_menu button").removeClass("small_tool_button").addClass("big_tool_button");$get_jqElement("#button_clear").css("width","45px");$get_jqElement("#button_clear").css("height","30px");$get_jqElement("#button_clear").text("Clear");$get_jqElement("#button_save").text("Save");$get_jqElement("#button_undo").text("Undo");$get_jqElement("#button_delete").text("Delete");resizeToolMenu("big_tool_button");reloadNavigator()}else{if(isReadOnly){$get_jqElement("#tools").css("height","15px")}else{}$("div#"+contDiv+" .wb_menu button").removeClass("big_tool_button").addClass("small_tool_button");$get_jqElement("#button_clear").css("width","25px");$get_jqElement("#button_clear").css("height","25px");$get_jqElement("#button_clear").text("CL");$get_jqElement("#button_save").text("S");$get_jqElement("#button_undo").text("U");$get_jqElement("#button_delete").text("X");resizeToolMenu("small_tool_button");reloadNavigator()}var off_left=$get_Element("#tools").offsetLeft;var off_top=$get_Element("#tools").offsetTop;var off_ht=$get_Element("#tools").offsetHeight;var topOff=off_ht+off_top+15;var leftOff=off_left+15;var vscrollObj={};var hscrollObj={};wb.globalStrokeColor="#000000";wb.mode="student";var vWidth=docWidth-leftOff;var vHeight=docHeight-topOff;canvas.width=vWidth;canvas.height=vHeight;var ccnt=$get_Element("#canvas-container");$get_jqElement("#canvas-container").css("width",vWidth+"px");$get_jqElement("#canvas-container").css("height",vHeight+"px");console_log("off_ht_1: "+$get_Element("#tools").offsetHeight+":"+$get_Element("#tools").offsetLeft+":"+$get_Element("#tools").offsetTop);var addScrollerH=scroll_window.width>docWidth;var addScrollerV=scroll_window.height>docHeight;var addScroller=addScrollerH||addScrollerV;if(IS_IPHONE||docWidth<=600){dox=IS_IPHONE?5:19;doy=IS_IPHONE?5:19}else{dox=19;doy=19}if(IS_IOS){dox=15;doy=15}if(!addScrollerH){dox=0}if(!addScrollerV){doy=0}try{if(typeof G_vmlCanvasManager!="undefined"){var parent_cont=$get_Element("#canvas-container");console_log("DEBUG_IE parent_cont: "+parent_cont);console_log("DEBUG_IE: parent_cont.removeChild"+parent_cont.removeChild);parent_cont.removeChild(canvas);parent_cont.removeChild(buffercanvas);parent_cont.removeChild(shapeHitcanvas);canvas=null;buffercanvas=null;context=null;buffercontext=null;shapeHitcanvas=null;shapeHitCtx=null;canvas=document.createElement("canvas");canvas.width=vWidth;canvas.height=vHeight;$(canvas).attr("class","canvas");buffercanvas=document.createElement("canvas");shapeHitcanvas=document.createElement("canvas");$(parent_cont).prepend(canvas);$(parent_cont).prepend(buffercanvas);$(parent_cont).prepend(shapeHitcanvas);G_vmlCanvasManager.initElement(canvas);G_vmlCanvasManager.initElement(buffercanvas);G_vmlCanvasManager.initElement(shapeHitcanvas)}}catch(error){console_log("DEBUG_IE:"+error)}screen_width=docWidth-leftOff-dox;screen_height=docHeight-topOff-doy;console_log("off_ht_2: "+$get_Element("#tools").offsetHeight+":"+$get_Element("#tools").style.height+":"+$get_jqElement("#tools").height());$get_Element("#drawsection").style.width=(screen_width)+"px";$get_Element("#drawsection").style.height=(screen_height)+"px";if(addScroller){$get_Element("#vscroll_track").style.height=(screen_height)+"px";$get_Element("#vscroller").style.left=(screen_width+3+off_left)+"px";$get_Element("#vscroller").style.top=(off_ht+off_top)+"px";$get_Element("#hscroll_track").style.width=(screen_width)+"px";$get_Element("#hscroller").style.left=(off_left)+"px";$get_Element("#hscroller").style.top=(off_ht+off_top+screen_height+3)+"px";var posData="";posData+="Screen-Width:"+docWidth+"\n";posData+="Screen-Height:"+docHeight+"\n";posData+="wb-Width:"+screen_width+"\n";posData+="wb-Height:"+screen_height+"\n";posData+="wb-off-top:"+$get_Element("#tools").offsetTop+"\n";posData+="wb-off-height:"+$get_Element("#tools").offsetHeight+":"+off_ht+"\n";posData+="vscroller-off-top:"+$get_Element("#vscroller").style.top+"\n";posData+="vscroller-off-left:"+$get_Element("#vscroller").style.left+"\n";posData+="hscroller-off-top:"+$get_Element("#hscroller").style.top+"\n";posData+="hscroller-off-left:"+$get_Element("#hscroller").style.left+"\n"}else{$get_jqElement("#vscroller").css({display:"none"});$get_jqElement("#hscroller").css({display:"none"});if(isReadOnly){$get_jqElement("#tools").removeClass("tools");$get_jqElement("#tools").css("height","0px")}}var cmd_keys={};var nav_keys={};cmd_keys.frac="/";cmd_keys.power="^";cmd_keys.sqrt="\\sqrt";cmd_keys.prod="*";cmd_keys.div="�";cmd_keys.neq="\\ne";nav_keys.Up="Up";nav_keys.Down="Down";nav_keys.Right="Right";nav_keys.Left="Left";nav_keys.Backspace="Backspace";if(!IS_TOUCH_ONLY){}else{}function mathquill_focus(){$(".mathquill-editable").focus()}function navigate(key){var h=$(".mathquill-editable").data("[[mathquill internal data]]").block;h.keydown({which:key,shiftKey:0})}$(".keypad").on("click","button",function(event){var key=$(this).attr("value");var h=$(".mathquill-editable");if(cmd_keys[key]){h.mathquill("cmd",cmd_keys[key])}else{if(nav_keys[key]){navigate(nav_keys[key])}else{h.mathquill("write",$(this).text())}}setTimeout(function(){mathquill_focus()},100)});if(true){if(document.addEventListener){var thumb_h=$get_Element("#hscroll_thumb");thumb_h.addEventListener("mousedown",initThumbDrag,false);thumb_h.addEventListener("touchstart",touchStartFunction,false);thumb_h.addEventListener("touchmove",touchMoveFunction,false);thumb_h.addEventListener("touchstart",initThumbDrag,false);var thumb_v=$get_Element("#vscroll_thumb");thumb_v.addEventListener("mousedown",initThumbDrag,false);thumb_v.addEventListener("touchstart",touchStartFunction,false);thumb_v.addEventListener("touchmove",touchMoveFunction,false);thumb_v.addEventListener("touchstart",initThumbDrag,false)}else{$get_Element("#hscroll_thumb").onmousedown=initThumbDrag;$get_Element("#vscroll_thumb").onmousedown=initThumbDrag}}function getCanvasPos(){console_log("getCanvasPos processing!");var box=canvas.getBoundingClientRect();console_log("canvas bound= top: "+box.top+" left:"+box.left);var body=mainDoc.body;var docElem=mainDoc.documentElement;var scrollTop=window.pageYOffset||docElem.scrollTop||body.scrollTop;var scrollLeft=window.pageXOffset||docElem.scrollLeft||body.scrollLeft;var clientTop=docElem.clientTop||body.clientTop||0;var clientLeft=docElem.clientLeft||body.clientLeft||0;console_log("offset_datas: scrollTop="+scrollTop+" scrollLeft="+scrollLeft+" clientTop="+clientTop+" clientLeft="+clientLeft);var top=box.top+scrollTop-clientTop;var left=box.left+scrollLeft-clientLeft;offX=Math.round(left);offY=Math.round(top);console_log("OFFSET: top="+offY+" left="+offX);return{top:offY,left:offX}}function resize_wb(){console_log("INTERNAL CALL::WINDOW_RESIZE::");adjustToolbar()}$(window).resize(resize_wb);adjustToolbar=function(){var siz=viewport();var docWidth=siz.width;var docHeight=siz.height;if($get_Element("#tools")==null){return }if(docWidth>600){if(isReadOnly){$get_jqElement("#tools").css("height","15px")}else{}$("div#"+contDiv+" .wb_menu button").removeClass("small_tool_button").addClass("big_tool_button");$get_jqElement("#button_clear").css("width","45px");$get_jqElement("#button_clear").css("height","30px");$get_jqElement("#button_clear").text("Clear");$get_jqElement("#button_save").text("Save");$get_jqElement("#button_undo").text("Undo");$get_jqElement("#button_delete").text("Delete");resizeToolMenu("big_tool_button");reloadNavigator()}else{if(isReadOnly){$get_jqElement("#tools").css("height","15px")}else{}$("div#"+contDiv+" .wb_menu button").removeClass("big_tool_button").addClass("small_tool_button");$get_jqElement("#button_clear").css("width","25px");$get_jqElement("#button_clear").css("height","25px");$get_jqElement("#button_clear").text("CL");$get_jqElement("#button_save").text("S");$get_jqElement("#button_undo").text("U");$get_jqElement("#button_delete").text("X");resizeToolMenu("small_tool_button");reloadNavigator()}var off_left=$get_Element("#tools").offsetLeft;var off_top=$get_Element("#tools").offsetTop;var off_ht=$get_Element("#tools").offsetHeight;var topOff=off_ht+off_top+15;var leftOff=off_left+15;var vWidth=docWidth-leftOff;var vHeight=docHeight-topOff;canvas.width=vWidth;canvas.height=vHeight;var ccnt=$get_Element("#canvas-container");$get_jqElement("#canvas-container").css("width",vWidth+"px");$get_jqElement("#canvas-container").css("height",vHeight+"px");var addScrollerH=scroll_window.width>docWidth;var addScrollerV=scroll_window.height>docHeight;var addScroller=addScrollerH||addScrollerV;if(IS_IPHONE||docWidth<=600){dox=IS_IPHONE?5:19;doy=IS_IPHONE?5:19}else{dox=19;doy=19}if(IS_IOS){dox=15;doy=15}if(!addScrollerH){dox=0}if(!addScrollerV){doy=0}screen_width=docWidth-leftOff-dox;screen_height=docHeight-topOff-doy;console_log("off_ht_2: "+$get_Element("#tools").offsetHeight+":"+$get_Element("#tools").style.height+":"+$get_jqElement("#tools").height());$get_Element("#drawsection").style.width=(screen_width)+"px";$get_Element("#drawsection").style.height=(screen_height)+"px";if(addScroller){$get_Element("#vscroll_track").style.height=(screen_height)+"px";$get_Element("#vscroller").style.left=(screen_width+3+off_left)+"px";$get_Element("#vscroller").style.top=(off_ht+off_top)+"px";$get_Element("#hscroll_track").style.width=(screen_width)+"px";$get_Element("#hscroller").style.left=(off_left)+"px";$get_Element("#hscroller").style.top=(off_ht+off_top+screen_height+3)+"px";var posData="";posData+="Screen-Width:"+docWidth+"\n";posData+="Screen-Height:"+docHeight+"\n";posData+="wb-Width:"+screen_width+"\n";posData+="wb-Height:"+screen_height+"\n";posData+="wb-off-top:"+$get_Element("#tools").offsetTop+"\n";posData+="wb-off-height:"+$get_Element("#tools").offsetHeight+":"+off_ht+"\n";posData+="vscroller-off-top:"+$get_Element("#vscroller").style.top+"\n";posData+="vscroller-off-left:"+$get_Element("#vscroller").style.left+"\n";posData+="hscroller-off-top:"+$get_Element("#hscroller").style.top+"\n";posData+="hscroller-off-left:"+$get_Element("#hscroller").style.left+"\n";positionScroller()}else{$get_jqElement("#vscroller").css({display:"none"});$get_jqElement("#hscroller").css({display:"none"});if(isReadOnly){$get_jqElement("#tools").removeClass("tools");$get_jqElement("#tools").css("height","0px")}}var egraph=$get_jqElement("#egraph");var egvisib=egraph.is(":visible");var txtBox=$get_jqElement("#inputBox");var txtvisib=txtBox.is(":visible");var scX=scrollPosition.x;var scY=scrollPosition.y;scrollPosition={x:0,y:0};updateCanvas();gr2D_xp=nL_xp=(screen_width-300)/2;gr2D_yp=(screen_height-300)/2;nL_yp=(screen_height-100)/2;if(selectedObj){if(transMode=="edit"){if(selectedObj.id==2){showTextBox()}else{showHideGraphModuleEditor(true)}}else{drawBoundRect({tx:0,ty:0,tr:0,brect:selectedObj.brect},true)}}else{if(egvisib){showHideGraphModuleEditor(true)}if(txtvisib){var px=parseFloat($get_Element("#inputBox").style.left)-scX;var py=parseFloat($get_Element("#inputBox").style.top)-scY;clickX=px;clickY=py;showTextBox()}}};function initThumbDrag(_event){var event=_event?_event:window.event;isTouchEnabled=event.type.indexOf("touch")>-1;if(isTouchEnabled){$get_Element("#hscroll_thumb").removeEventListener("mousedown",initThumbDrag,false)}event=isTouchEnabled?_event.changedTouches[0]:event;if(event.preventDefault){event.preventDefault()}else{event.returnValue=false}getCanvasPos();var dx,dy;if(event.pageX!=undefined){dx=event.pageX-offX;dy=event.pageY-offY}else{dx=event.clientX-offX;dy=event.clientY-offY}var scroll="v";var pos="top";var scrollObj=vscrollObj;var mouse_pos=dy;var dim="height";var sdim=screen_height;var coo="y";var target=event.target?event.target:event.srcElement;if(target==$get_Element("#hscroll_thumb")){scroll="h";pos="left";scrollObj=hscrollObj;mouse_pos=dx;dim="width";sdim=screen_width;coo="x"}var spos=$get_Element("#"+scroll+"scroll_thumb").style[pos];spos=spos?spos:0;var scpos=scrollPosition[coo];scpos=scpos?scpos:0;scrollObj.sy=parseInt(spos);scrollObj.screeny=parseInt(scpos);scrollObj.my=mouse_pos;scrollObj.dragged=true;scrollObj.scrub=(scroll_window[dim]-sdim)/(sdim-30);if(document.addEventListener){if(isTouchEnabled){document.addEventListener("touchend",stopThumbDrag,false);document.addEventListener("touchmove",startThumbDrag,false);$get_Element("#"+scroll+"scroll_thumb").addEventListener("touchend",stopThumbDrag,false)}else{document.addEventListener("mouseup",stopThumbDrag,false);document.addEventListener("mousemove",startThumbDrag,false);$get_Element("#"+scroll+"scroll_thumb").addEventListener("mouseup",stopThumbDrag,false)}}else{document.onmousemove=startThumbDrag;$get_Element("#"+scroll+"scroll_thumb").onmouseup=stopThumbDrag;document.onmouseup=stopThumbDrag}}function startThumbDrag(_event){if(!vscrollObj.dragged&&!hscrollObj.dragged){return }var event=_event?_event:window.event;event=isTouchEnabled?event.changedTouches[0]:event;if(event.preventDefault){event.preventDefault()}else{event.returnValue=false}var dx,dy;if(event.pageX!=undefined){dx=event.pageX-offX;dy=event.pageY-offY}else{dx=event.clientX-offX;dy=event.clientY-offY}var scroll="v";var pos="top";var scrollObj=vscrollObj;var mouse_pos=dy;var dim="height";var sdim=screen_height;var neg=-1;var coo="y";if(hscrollObj.dragged){scroll="h";pos="left";scrollObj=hscrollObj;mouse_pos=dx;dim="width";sdim=screen_width;neg=-1;coo="x"}var change=mouse_pos-scrollObj.my;var newpos=scrollObj.sy+change;newpos=newpos<0?0:newpos;newpos=newpos>sdim-30?sdim-30:newpos;if(newpos>=0&&newpos<=sdim-30){var currPos=scrollObj.screeny-(change*scrollObj.scrub);currPos=currPos>0?0:currPos;currPos=currPos<neg*(scroll_window[dim]-sdim)?-(scroll_window[dim]-sdim):currPos;$get_Element("#"+scroll+"scroll_thumb").style[pos]=newpos+"px";var diffX=coo=="x"?currPos-scrollPosition[coo]:0;var diffY=coo=="y"?currPos-scrollPosition[coo]:0;scrollPosition[coo]=currPos;updateNavThumb(scrollPosition.x,scrollPosition.y);var egraph=$get_jqElement("#egraph");var egvisib=egraph.is(":visible");var txtBox=$get_jqElement("#inputBox");var txtvisib=txtBox.is(":visible");updateCanvas();if(selectedObj){if(transMode=="edit"){if(selectedObj.id==2){showTextBox()}else{showHideGraphModuleEditor(true)}}else{drawBoundRect({tx:0,ty:0,tr:0,brect:selectedObj.brect},true)}}else{if(egvisib){showHideGraphModuleEditor(true)}if(txtvisib){var px=parseFloat($get_Element("#inputBox").style.left)+diffX;var py=parseFloat($get_Element("#inputBox").style.top)+diffY;clickX=px;clickY=py;showTextBox()}}}}function stopThumbDrag(_event){if(!vscrollObj.dragged&&!hscrollObj.dragged){return }var event=_event?_event:window.event;event=isTouchEnabled?event.changedTouches[0]:event;if(event.preventDefault){event.preventDefault()}else{event.returnValue=false}var dx,dy;if(event.pageX!=undefined){dx=event.pageX-offX;dy=event.pageY-offY}else{dx=event.clientX-offX;dy=event.clientY-offY}var scroll="v";var pos="top";var scrollObj=vscrollObj;var mouse_pos=dy;var dim="height";var sdim=screen_height;var neg=-1;var coo="y";if(hscrollObj.dragged){scroll="h";pos="left";scrollObj=hscrollObj;mouse_pos=dx;dim="width";sdim=screen_width;neg=-1;coo="x"}var change=mouse_pos-scrollObj.my;var newpos=scrollObj.sy+change;newpos=newpos<0?0:newpos;newpos=newpos>sdim-30?sdim-30:newpos;if(newpos>=0&&newpos<=sdim-30){var currPos=scrollObj.screeny-(change*scrollObj.scrub);currPos=currPos>0?0:currPos;currPos=currPos<neg*(scroll_window[dim]-sdim)?-(scroll_window[dim]-sdim):currPos;$get_Element("#"+scroll+"scroll_thumb").style[pos]=newpos+"px";var diffX=coo=="x"?currPos-scrollPosition[coo]:0;var diffY=coo=="y"?currPos-scrollPosition[coo]:0;scrollPosition[coo]=currPos;var egraph=$get_jqElement("#egraph");var egvisib=egraph.is(":visible");var txtBox=$get_jqElement("#inputBox");var txtvisib=txtBox.is(":visible");updateCanvas();if(selectedObj){if(transMode=="edit"){if(selectedObj.id==2){showTextBox()}else{showHideGraphModuleEditor(true)}}else{drawBoundRect({tx:0,ty:0,tr:0,brect:selectedObj.brect},true)}}else{if(egvisib){showHideGraphModuleEditor(true)}if(txtvisib){var px=parseFloat($get_Element("#inputBox").style.left)+diffX;var py=parseFloat($get_Element("#inputBox").style.top)+diffY;clickX=px;clickY=py;showTextBox()}}}if(document.addEventListener){if(isTouchEnabled){document.removeEventListener("mousemove",startThumbDrag,false);document.removeEventListener("touchmove",startThumbDrag,false)}else{document.removeEventListener("mousemove",startThumbDrag,false)}}else{document.onmousemove=null}scrollObj.dragged=false}context=canvas.getContext("2d");buffercontext=buffercanvas.getContext("2d");shapeHitCtx=shapeHitcanvas.getContext("2d");width=screen_width;height=screen_height;context.font=buffercontext.font="12px sans-serif";gr2D=new Image();gr2D.src=_imageBaseDir+"gr2D.png";nL=new Image();nL.src=_imageBaseDir+"nL.png";graphMode="";gr2D_xp=nL_xp=(screen_width-300)/2;gr2D_yp=(screen_height-300)/2;nL_yp=(screen_height-100)/2;gr2D_w=300;gr2D_h=300;nL_w=300;nL_h=100;editGR=new Image();editGR.src=imgPath+"edit.png";deleteGR=new Image();deleteGR.src=imgPath+"delete.png";rotateGR=new Image();rotateGR.src=imgPath+"rotate.png";scaleGR=new Image();scaleGR.src=imgPath+"scale.png";offX=$get_Element("#canvas-container").offsetLeft;offY=$get_Element("#canvas-container").offsetTop;function getCanvasPos(){console_log("getCanvasPos processing!");var box=canvas.getBoundingClientRect();console_log("canvas bound= top: "+box.top+" left:"+box.left);var body=mainDoc.body;var docElem=mainDoc.documentElement;var scrollTop=window.pageYOffset||docElem.scrollTop||body.scrollTop;var scrollLeft=window.pageXOffset||docElem.scrollLeft||body.scrollLeft;var clientTop=docElem.clientTop||body.clientTop||0;var clientLeft=docElem.clientLeft||body.clientLeft||0;console_log("offset_datas: scrollTop="+scrollTop+" scrollLeft="+scrollLeft+" clientTop="+clientTop+" clientLeft="+clientLeft);var top=box.top+scrollTop-clientTop;var left=box.left+scrollLeft-clientLeft;offX=Math.round(left);offY=Math.round(top);console_log("OFFSET: top="+offY+" left="+offX);return{top:offY,left:offX}}console_log("getCanvasPos calling!");getCanvasPos();console_log("getCanvasPos CALL END!");graphicData={};tool_id={};tool_id.eraser=0;tool_id.pencil=1;tool_id.text=2;tool_id.line=3;tool_id.rect=4;tool_id.oval=5;tool_id.gr2D=11;tool_id.nL=12;drawingLayer="1";if(currentTool!="pencil"){if(currentTool=="text"||$get_Element("#inputBox").style.display=="block"){textEditMode=!true;hideTextBox()}resetButtonHighlite();currentTool="pencil"}$get_Element("#button_pencil").style.border="2px solid #ff9900";if($get_Element("#button_calc")){$get_Element("#button_calc").onclick=function(event){if(enable_calc){showHideCalc()}}}$get_Element("#button_text").onclick=function(event){$get_Element("#drawsection").style.cursor="text";currentTool="text";buttonHighlite(currentTool)};$get_Element("#button_pencil").onclick=function(event){$get_Element("#drawsection").style.cursor='url("'+_imageBaseDir+'pencil.png") 0 26,auto';currentTool="pencil";buttonHighlite(currentTool)};$get_Element("#button_rect").onclick=function(event){$get_Element("#drawsection").style.cursor="crosshair";currentTool="rect";buttonHighlite(currentTool)};$get_Element("#button_line").onclick=function(event){$get_Element("#drawsection").style.cursor="crosshair";currentTool="line";buttonHighlite(currentTool)};$get_Element("#button_oval").onclick=function(event){$get_Element("#drawsection").style.cursor="crosshair";currentTool="oval";buttonHighlite(currentTool)};$get_Element("#button_gr2D").onclick=function(event){if(wb.options.showTemplates){wb.addGraphModule("xy")}else{currentTool="gr2D";showHideGraph("gr2D");buttonHighlite("pencil")}};$get_Element("#button_nL").onclick=function(event){if(wb.options.showTemplates){wb.addGraphModule("x")}else{currentTool="nL";showHideGraph("nL");buttonHighlite("pencil")}};$get_Element("#button_clear").onclick=function(event){currentTool="pencil";buttonHighlite(currentTool);textEditMode=!true;hideTextBox();resetWhiteBoard(true)};$get_Element("#button_eraser").onclick=function(event){$get_Element("#drawsection").style.cursor="crosshair";currentTool="eraser";buttonHighlite(currentTool)};if($get_Element("#button_move")){$get_Element("#button_move").onclick=function(event){$get_Element("#drawsection").style.cursor="move";wb.setSelectionMode();if(selectionMode){buttonHighlite("move")}else{wb.removeSelectionMode()}}}$get_Element("#done_btn").onclick=function(event){renderText()};$(document).on("keydown",onkeydownHandler);if($get_Element("#button_undo")){$get_Element("#button_undo").onclick=function(event){var l=graphicDataStore.length;var c=1;if(l){var item=graphicDataStore[l-1];var gid=item.groupid;if(gid!==undefined){for(var i=l-2;i>=0;i--){var _item=graphicDataStore[i];if(_item.groupid!==undefined&&gid===_item.groupid){c++}else{break}}}}var callUndo=wb.options.callInternalUndo?wb.whiteboardOut_local:wb.whiteboardOut;for(var j=0;j<c;j++){callUndo("undo",true)}}}if($get_Element("#button_delete")){$get_Element("#button_delete").onclick=function(event){wb.deleteSelectedObj()}}if($get_Element("#button_nav")){$get_Element("#button_nav").onclick=function(event){var a=showHideNavigator(graphicDataStore,scrollPosition);if(a=="show"){currentTool="nav";buttonHighlite(currentTool)}else{currentTool="pencil";buttonHighlite(currentTool)}}}if($get_Element("#button_temp")){$get_Element("#button_temp").onclick=function(event){if(!window.gwt_manageTemplates){showHideTemplates()}else{wb.manageTemplates()}}}if($get_Element("#button_save")){$get_Element("#button_save").onclick=function(event){wb.saveWhiteboard()}}function killMouseListeners(){if(document.addEventListener){canvas.removeEventListener("mousedown",ev_onmousedown,false);canvas.removeEventListener("mouseup",ev_onmouseup,false);canvas.removeEventListener("mousemove",ev_onmousemove,false)}else{canvas.detachEvent("onmousedown",ev_onmousedown);canvas.detachEvent("onmouseup",ev_onmouseup);canvas.detachEvent("onmousemove",ev_onmousemove)}}function killTouchListeners(){if(document.addEventListener){canvas.removeEventListener("touchstart",touchStartFunction,false);canvas.removeEventListener("touchmove",touchMoveFunction,false);canvas.removeEventListener("touchstart",ev_onmousedown,false);canvas.removeEventListener("touchmove",ev_onmousemove,false);canvas.removeEventListener("touchend",ev_onmouseup,false)}else{canvas.detachEvent("touchstart",touchStartFunction);canvas.detachEvent("touchmove",touchMoveFunction);canvas.detachEvent("touchstart",ev_onmousedown);canvas.detachEvent("touchmove",ev_onmousemove);canvas.detachEvent("touchend",ev_onmouseup)}}function __killListeners(){killMouseListeners();killTouchListeners()}function positionScroller(){var scrubH=(canvas.width-screen_width)/(screen_width-30);var scrubV=(canvas.height-screen_height)/(screen_height-30);var currPosH=parseInt($get_Element("#canvas-container").style.left);currPosH=currPosH?currPosH:0;currPosH=currPosH>0?0:currPosH;currPosH=currPosH<-(canvas.width-screen_width)?-(canvas.width-screen_width):currPosH;$get_Element("#hscroll_thumb").style.left=(-currPosH/scrubH)+"px";$get_Element("#canvas-container").style.left=currPosH+"px";var currPosV=parseInt($get_Element("#canvas-container").style.top);currPosV=currPosV?currPosV:0;currPosV=currPosV>0?0:currPosV;currPosV=currPosV<-(canvas.height-screen_height)?-(canvas.height-screen_height):currPosV;$get_Element("#vscroll_thumb").style.top=(-currPosV/scrubV)+"px";$get_Element("#canvas-container").style.top=currPosV+"px"}function scrollTheCanvas(event){checkForScroll(event)}function checkForScroll(_event){var event=_event?_event:window.event;isTouchEnabled=event.type.indexOf("touch")>-1;var dx,dy,dist;if(event.pageX!=undefined){dx=event.pageX-offX;dy=event.pageY-offY}else{dx=event.clientX-offX;dy=event.clientY-offY}if(penDown){return }var cposX=($get_Element("#wb-container").style.left);var cposY=($get_Element("#wb-container").style.top);cposX=cposX?parseInt(cposX):0;cposY=cposY?parseInt(cposY):0;if(dx-cposX>=screen_width){doRightScroll();setTimeout(function(){checkForScroll(_event)},100)}else{if(dy-cposY>=screen_height){doUpScroll();setTimeout(function(){checkForScroll(_event)},100)}else{}}}function initMultiSelection(){var num=selectedObjects.length;if(!num){return }var selectedObj;selectionDragMode=true;selectionDragged=false;for(var i=0;i<num;i++){selectedObj=selectedObjects[i];if(!objectActions[selectedObj.uid]["move"]){objectActions[selectedObj.uid]["move"]=[]}if(!objectActions[selectedObj.uid]["delete"]){objectActions[selectedObj.uid]["delete"]=[]}objectActions[selectedObj.uid]["move"].push({})}}function renderMultiSelectionTrans(){var num=selectedObjects.length;if(!num){return }var dx=x-clickX;var dy=y-clickY;var selectedObj;selectionDragged=true;for(var i=0;i<num;i++){selectedObj=selectedObjects[i];var pd=cloneObjectDeep(selectedObj);var li=objectActions[selectedObj.uid][transMode].length-1;var isTransformed=li>0?isObjTransformed(selectedObj.uid,transMode,true):false;var trans={tx:dx,ty:dy,trect:selectedObj.brect};if(isTransformed){trans={tx:isTransformed.tx+dx,ty:isTransformed.ty+dy,trect:isTransformed.trect}}transformObj(pd,trans.tx,trans.ty,selectedObj);var tdata={tx:trans.tx,ty:trans.ty,trect:pd.brect};objectActions[selectedObj.uid][transMode][li]=tdata}updateCanvas();updateMultiSelectRect();drawMultiSelectionRect()}function applyMultiSelectionTrans(){var dx=x-clickX;var dy=y-clickY;var num=selectedObjects.length;if(!num){return }var selectedObj;if(selectionDragged){removeBoundRect();var gid=getNextGroupID();for(var i=0;i<num;i++){selectedObj=selectedObjects[i];var pd=cloneObjectDeep(selectedObj);var li=objectActions[selectedObj.uid][transMode].length-1;var isTransformed=li>0?isObjTransformed(selectedObj.uid,transMode,true):false;var trans={tx:dx,ty:dy,trect:selectedObj.brect};if(isTransformed){trans={tx:isTransformed.tx+dx,ty:isTransformed.ty+dy,trect:isTransformed.trect}}transformObj(pd,trans.tx,trans.ty,selectedObj);var tdata={tx:trans.tx,ty:trans.ty,trect:pd.brect};objectActions[selectedObj.uid][transMode][li]=tdata;selectionDragged=false;var mobj={id:selectedObj.id,uid:selectedObj.uid,groupid:gid,type:"cmd",cmd:{name:transMode,data:tdata},dataArr:[]};updateDataToSERVER(null,mobj)}updateCanvas();updateMultiSelectRect();drawMultiSelectionRect()}else{for(var i=0;i<num;i++){selectedObj=selectedObjects[i];objectActions[selectedObj.uid][transMode].pop()}}}var ev_onmousedown=function(_event){$get_jqElement("#wb_menu").hide();hideTemplates();transMode="move";if(isReadOnly||currentTool=="nav"||isRightClick(_event)){return }var event=_event?_event:window.event;var tevent=event;isTouchEnabled=event.type.indexOf("touch")>-1;if(isTouchEnabled){canvas.removeEventListener("mousedown",ev_onmousedown,false);canvas.removeEventListener("mouseup",ev_onmouseup,false);canvas.removeEventListener("mousemove",ev_onmousemove,false)}getCanvasPos();event=isTouchEnabled?_event.changedTouches[0]:event;var dx,dy,dist;if(event.pageX!=undefined){dx=event.pageX-offX;dy=event.pageY-offY}else{dx=event.clientX-offX;dy=event.clientY-offY}context.lineWidth=2;context.strokeStyle=wb.globalStrokeColor;var currPos=$get_Element("#canvas-container").style.left;currPos=currPos?parseInt(currPos):0;var click_pos=dx+currPos;console_log("MOUSE_DOWN "+dx+":"+width+":::"+click_pos+":"+screen_width);if(mouseOverCalc(event)){penDown=false;return }else{if(click_pos>=0&&click_pos<screen_width){hideCalc();if(isTouchEnabled){if(tevent.touches.length>1){penDown=false;rendering=false;if(!IS_IOS){initSwipe(_event)}return }}penDown=true;rendering=false;var isOpen=$get_Element("#inputBox").style.display=="block";if(isOpen){if(selectionMode&&selectedObj){transMode="edit"}renderText()}if(objOnSel){removeObjSelection();if(!selectionMode){$get_jqElement("#button_move").trigger("click")}}clickX=dx;clickY=dy;x=dx;y=dy;lineBound={};if(selectionMode){var i;if(multiSelection){if(contains(mSelRect,x,y)){initMultiSelection()}else{multiSelection=false;mSelRect=null;selectedObjects=[];selectionRect={x:x,y:y,xmin:x,ymin:y,xmax:x,ymax:y};selectionDragMode=true;removeBoundRect()}if(event.preventDefault){event.preventDefault()}else{event.returnValue=false}return }var dofindSel=true;if(selectedObj){var bsrect=getWhiteboardObjBound("sel");if(contains(bsrect.brect,x,y)){i=selectedObjIndex;dofindSel=!true;transMode=selectionOnNode(selectedObj,x,y);transMode=transMode==null?"move":transMode;if(transMode=="edit"||transMode=="delete"){return }}else{transMode=selectionOnNode(selectedObj,x,y);transMode=transMode==null?"move":transMode;if(transMode=="edit"||transMode=="delete"){return }}}if(dofindSel){i=findSelectedObjIndex(x,y)}selectedObjIndex=i;console.log(i);console.log(selectedObj);if(i>-1){if(wb.isErased(selectedObj)){penDown=!true;wb.removeSelectionMode(true);alert("Sorry! Erased objects cannot be moved!!");return }selectedObjID=selectedObj.uid;selectionDragMode=true;selectionDragged=false;resetWhiteBoard(false);updateCanvas();var isTransformed=isObjTransformed(selectedObj.uid,transMode);var isMoved=isObjTransformed(selectedObj.uid,"move");var isScaled=isObjTransformed(selectedObj.uid,"scale");var isRotated=isObjTransformed(selectedObj.uid,"rotate");var isEdited=selectedObj.id=="2"&&isObjTransformed(selectedObj.uid,"edit");if(transMode=="rotate"){var rect=cloneObject(selectedObj.brect);if(isMoved){transformRect(rect,isMoved.tx,isMoved.ty,"move")}if(isScaled){transformRect(rect,isScaled.tx,isScaled.ty,"scale")}var cx=rect.xmin+rect.w/2;var cy=rect.ymin+rect.h/2;var dsx=x-cx-scrollPosition.x;var dsy=y-cy-scrollPosition.y;clickR=Math.atan2(dsy,dsx)}if(isTransformed||isEdited){if(isEdited){drawBoundRect({tx:isTransformed?isTransformed.tx:0,ty:isTransformed?isTransformed.ty:0,tr:0,brect:isEdited.brect})}else{try{drawBoundRect({tx:isTransformed.tx,ty:isTransformed.ty,tr:isTransformed.tr,brect:isTransformed.trect})}catch(e){alert(e)}}}else{try{drawBoundRect({tx:0,ty:0,tr:0,brect:selectedObj.brect})}catch(e){alert(e)}}if(!objectActions[selectedObj.uid]["move"]){objectActions[selectedObj.uid]["move"]=[]}if(!objectActions[selectedObj.uid]["scale"]){objectActions[selectedObj.uid]["scale"]=[]}if(!objectActions[selectedObj.uid]["rotate"]){objectActions[selectedObj.uid]["rotate"]=[]}if(!objectActions[selectedObj.uid]["delete"]){objectActions[selectedObj.uid]["delete"]=[]}if(transMode=="scale"){objectActions[selectedObj.uid]["scale"].push({})}else{if(transMode=="rotate"){objectActions[selectedObj.uid]["rotate"].push({})}else{objectActions[selectedObj.uid]["move"].push({})}}penDown=true}else{selectionRect={x:x,y:y,xmin:x,ymin:y,xmax:x,ymax:y};selectionDragMode=true}if(event.preventDefault){event.preventDefault()}else{event.returnValue=false}return }if(!graphicData.dataArr){graphicData.dataArr=[]}graphicData.id=tool_id[currentTool];graphicData.uid=getNextObjectID();objectActions[graphicData.uid]={};console_log("CURRENT_TOOL:"+currentTool);if(currentTool=="pencil"){context.beginPath();context.moveTo(clickX,clickY)}else{if(currentTool=="eraser"){var eo=erase(x,y);if(eo&&eo.length){if(!eraseObjStore[graphicData.uid]){eraseObjStore[graphicData.uid]=[]}eraseObjStore[graphicData.uid]=eraseObjStore[graphicData.uid].concat(eo)}}}drawcolor=colorToNumber(context.strokeStyle);if(currentTool=="text"){penDown=false;graphicData.dataArr[0]={x:x-scrollPosition.x,y:y-scrollPosition.y,text:"",color:drawcolor,name:"",layer:drawingLayer};showTextBox()}else{graphicData.dataArr[graphicData.dataArr.length]={x:x-scrollPosition.x,y:y-scrollPosition.y,id:"move",color:drawcolor,name:"",layer:drawingLayer};if(isIE&&(currentTool=="gr2D"||currentTool=="nl")){context.beginPath();context.moveTo(clickX,clickY)}lineBound.ymax=y-scrollPosition.y;lineBound.ymin=y-scrollPosition.y;lineBound.xmax=x-scrollPosition.x;lineBound.xmin=x-scrollPosition.x}}else{penDown=false}}if(event.preventDefault){event.preventDefault()}else{event.returnValue=false}};var ev_onmouseup=function(_event){if(isReadOnly||currentTool=="nav"||event_rightclick||wb.ib_drag=="drag"){event_rightclick=false;wb.ib_drag=="null";return }if(!selectedObj&&graphEditMode){showHideGraphModuleEditor(false);penDown=false;return }if(!selectedObj&&textEditMode){return }if(selectionMode){if(transMode=="edit"){if(selectedObj.id==2){updateCanvas();showTextBox();penDown=false;return }showHideGraphModuleEditor(true);penDown=false;return }if(transMode=="delete"){wb.deleteSelectedObj();penDown=false;return }var dx=x-clickX;var dy=y-clickY;selectionDragMode=false;if(multiSelection&&selectedObjects){applyMultiSelectionTrans();penDown=false;rendering=false;return }if(selectedObj){if(selectionDragged){removeBoundRect();updateCanvas();var pd=cloneObjectDeep(selectedObj);var li=objectActions[selectedObj.uid][transMode].length-1;var isTransformed=li>0?isObjTransformed(selectedObj.uid,transMode,true):false;var dr=0;var isMoved=isObjTransformed(selectedObj.uid,"move");var isScaled=isObjTransformed(selectedObj.uid,"scale");var isRotated=isObjTransformed(selectedObj.uid,"rotate");if(transMode=="rotate"){var rect=cloneObject(selectedObj.brect);if(isMoved){transformRect(rect,isMoved.tx,isMoved.ty,"move")}if(isScaled){transformRect(rect,isScaled.tx,isScaled.ty,"scale")}var cx=rect.xmin+rect.w/2;var cy=rect.ymin+rect.h/2;var dsx=x-cx-scrollPosition.x;var dsy=y-cy-scrollPosition.y;dr=-clickR+Math.atan2(dsy,dsx)}if(transMode=="scale"&&isRotated){var nr0=getScaleRatio(dx,dy,isRotated.tr);dx=nr0.w;dy=nr0.h}var trans={tx:transMode=="rotate"?dr:dx,ty:transMode=="rotate"?dr:dy,tr:transMode=="rotate"?dr:0,trect:selectedObj.brect};if(isTransformed){if(transMode=="rotate"){trans={tx:isTransformed.tr+dr,ty:isTransformed.tr+dr,tr:isTransformed.tr+dr,trect:isTransformed.trect}}else{trans={tx:isTransformed.tx+dx,ty:isTransformed.ty+dy,tr:0,trect:isTransformed.trect}}}transformObj(pd,trans.tx,trans.ty);drawBoundRect({tx:trans.tx,ty:trans.ty,tr:trans.tr,brect:trans.trect});var tdata={tx:trans.tx,ty:trans.ty,tr:trans.tr,trect:pd.brect};objectActions[selectedObj.uid][transMode][li]=tdata;selectionDragged=false;var mobj={id:selectedObj.id,uid:selectedObj.uid,type:"cmd",cmd:{name:transMode,data:tdata},dataArr:[]};updateDataToSERVER(selectedObjIndex,mobj)}else{objectActions[selectedObj.uid][transMode].pop()}}else{var msel=checkForMultiSelect();removeBoundRect();if(msel&&msel.length){if(msel.length==1){selectionRect=null;multiSelection=false;selectedObj=msel[0];var index=findObjIndex(selectedObj);selectedObjIndex=index;drawBoundRect({tx:0,ty:0,tr:0,brect:selectedObj.brect},true)}else{selectedObjects=msel;drawMultiSelectionRect()}}else{selectionRect=null;multiSelection=false;wb.removeSelectionMode(true)}}penDown=false;rendering=false;return }var event=_event?_event:window.event;event=event.type.indexOf("touch")>-1?_event.targetTouches[0]:event;penDown=false;if(swipe_action=="on"){swipe_action="off";return }if(rendering){if(currentTool=="rect"||currentTool=="oval"){graphicData.dataArr[0].w=w0;graphicData.dataArr[0].h=h0;graphicData.dataArr[0].xs=w0/400;graphicData.dataArr[0].ys=h0/400;rect=getBoundRect(graphicData.dataArr[0].x,graphicData.dataArr[0].y,w0,h0)}else{if(currentTool=="line"||currentTool=="pencil"||currentTool=="eraser"){var xp=x-clickX;var yp=y-clickY;xp=currentTool=="eraser"?x-scrollPosition.x:xp;yp=currentTool=="eraser"?y-scrollPosition.y:yp;graphicData.dataArr[graphicData.dataArr.length]={x:xp,y:yp,id:"line"};if(currentTool=="eraser"){var eo=eraseObjStore[graphicData.uid];graphicData.hasErasedObj=false;if(eo&&eo.length){graphicData.hasErasedObj=true;graphicData.erasedObjs=eo}}if(currentTool!="eraser"){rect=getBoundRect(graphicData.dataArr[0].x,graphicData.dataArr[0].y,xp-scrollPosition.x,yp-scrollPosition.y);if(currentTool=="pencil"){rect.x=lineBound.xmin?lineBound.xmin:0;rect.y=lineBound.ymin?lineBound.ymin:0;rect.xmin=lineBound.xmin?lineBound.xmin:0;rect.xmax=lineBound.xmax?lineBound.xmax:0;rect.ymin=lineBound.ymin?lineBound.ymin:0;rect.ymax=lineBound.ymax?lineBound.ymax:0;rect.w=lineBound.xmax-lineBound.xmin;rect.h=lineBound.ymax-lineBound.ymin}}else{rect={xmin:1,ymin:1,w:0,h:0}}}}graphicData.brect=rect;sendData();rendering=false;updateCanvas();context.beginPath()}else{if(currentTool=="eraser"){rect={xmin:1,ymin:1,w:0,h:0};graphicData.brect=rect;sendData();updateCanvas();context.beginPath()}else{if(currentTool!="text"){resetArrays()}else{setTimeout(__focus)}}}};var ev_onmousemove=function(_event){if(isReadOnly||currentTool=="nav"||event_rightclick||transMode=="edit"){return }var event=_event?_event:window.event;event=event.type.indexOf("touch")>-1?_event.changedTouches[0]:event;if(event.pageX!=undefined){x=event.pageX-offX;y=event.pageY-offY}else{x=event.clientX-offX;y=event.clientY-offY}if(penDown){rendering=true;if(currentTool!="pencil"&&currentTool!="text"&&currentTool!="eraser"){if(isIE&&currentTool!="eraser"){context.clearRect(0,0,canvas.width,canvas.height)}else{if(!isIE){context.clearRect(0,0,canvas.width,canvas.height)}}reRenderCanvas()}var dx=x-clickX;var dy=y-clickY;var bool=isMultitouch_gesture(_event);if(selectionMode&&multiSelection&&selectedObjects.length){renderMultiSelectionTrans();if(bool){return true}if(event.preventDefault){event.preventDefault()}else{event.returnValue=false}}else{if(selectionMode){if(selectedObj&&selectionDragMode){selectionDragged=true;var pd=cloneObjectDeep(selectedObj);var li=objectActions[selectedObj.uid][transMode].length-1;var isTransformed=li>0?isObjTransformed(selectedObj.uid,transMode,true):false;var isMoved=isObjTransformed(selectedObj.uid,"move");var isScaled=isObjTransformed(selectedObj.uid,"scale");var isRotated=isObjTransformed(selectedObj.uid,"rotate");var isEdited=selectedObj.id=="2"&&isObjTransformed(selectedObj.uid,"edit");if(transMode=="rotate"){var rect=cloneObject(selectedObj.brect);if(isMoved){transformRect(rect,isMoved.tx,isMoved.ty,"move")}if(isScaled){transformRect(rect,isScaled.tx,isScaled.ty,"scale")}var cx=rect.xmin+rect.w/2;var cy=rect.ymin+rect.h/2;var dsx=x-cx-scrollPosition.x;var dsy=y-cy-scrollPosition.y;dr=-clickR+Math.atan2(dsy,dsx)}if(transMode=="scale"&&isRotated){var nr0=getScaleRatio(dx,dy,isRotated.tr);dx=nr0.w;dy=nr0.h}var trans={tx:transMode=="rotate"?dr:dx,ty:transMode=="rotate"?dr:dy,tr:transMode=="rotate"?dr:0,trect:selectedObj.brect};if(isTransformed){if(transMode=="rotate"){trans={tx:isTransformed.tr+dr,ty:isTransformed.tr+dr,tr:isTransformed.tr+dr,trect:isTransformed.trect}}else{trans={tx:isTransformed.tx+dx,ty:isTransformed.ty+dy,tr:0,trect:isTransformed.trect}}}if(isEdited){}transformObj(pd,trans.tx,trans.ty);var tdata={tx:trans.tx,ty:trans.ty,tr:trans.tr,trect:pd.brect};objectActions[selectedObj.uid][transMode][li]=tdata;updateCanvas();drawBoundRect({tx:trans.tx,ty:trans.ty,tr:trans.tr,brect:trans.trect})}else{if(selectionDragMode){selectionRect=getBoundRect(selectionRect.x,selectionRect.y,dx,dy);removeBoundRect();drawSelectionRect({tx:selectionRect.xmin,ty:selectionRect.ymin,brect:selectionRect})}}bool=isMultitouch_gesture(_event);if(bool){return true}if(event.preventDefault){event.preventDefault()}else{event.returnValue=false}}else{if(currentTool=="rect"||currentTool=="oval"){x0=clickX;y0=clickY;w0=x-clickX;h0=y-clickY;if(currentTool=="rect"){drawRect(x0,y0,w0,h0,wb.globalStrokeColor)}if(currentTool=="oval"){drawOval(x0,y0,w0,h0,wb.globalStrokeColor)}}else{if(currentTool=="line"){context.beginPath();context.moveTo(clickX,clickY);drawLine()}else{if(currentTool=="eraser"){var eo=erase(x,y);if(eo&&eo.length){if(!eraseObjStore[graphicData.uid]){eraseObjStore[graphicData.uid]=[]}eraseObjStore[graphicData.uid]=eraseObjStore[graphicData.uid].concat(eo)}graphicData.dataArr[graphicData.dataArr.length]={x:x-scrollPosition.x,y:y-scrollPosition.y,id:"line"}}else{var xt=x-scrollPosition.x;var yt=y-scrollPosition.y;var cxt=clickX-scrollPosition.x;var cyt=clickY-scrollPosition.y;if(!selectionMode){if(xt>cxt){if(!lineBound.xmax){lineBound.xmax=xt}if(xt>lineBound.xmax){lineBound.xmax=xt}}else{if(xt<cxt){if(!lineBound.xmin){lineBound.xmin=xt}if(xt<lineBound.xmin){lineBound.xmin=xt}}else{if(!lineBound.xmax){lineBound.xmax=xt}if(xt>lineBound.xmax){lineBound.xmax=xt}if(!lineBound.xmin){lineBound.xmin=xt}if(xt<lineBound.xmin){lineBound.xmin=xt}}}if(yt>cyt){if(!lineBound.ymax){lineBound.ymax=yt}if(yt>lineBound.ymax){lineBound.ymax=yt}}else{if(yt<cyt){if(!lineBound.ymin){lineBound.ymin=yt}if(yt<lineBound.ymin){lineBound.ymin=yt}}else{if(!lineBound.ymax){lineBound.ymax=yt}if(yt>lineBound.ymax){lineBound.ymax=yt}if(!lineBound.ymin){lineBound.ymin=yt}if(yt<lineBound.ymin){lineBound.ymin=yt}}}lineBound.xmin=lineBound.xmin?lineBound.xmin:xt;lineBound.xmax=lineBound.xmax?lineBound.xmax:xt;lineBound.ymin=lineBound.ymin?lineBound.ymin:yt;lineBound.ymax=lineBound.ymax?lineBound.ymax:yt;graphicData.dataArr[graphicData.dataArr.length]={x:x-clickX,y:y-clickY,id:"line"};drawLine()}}}}}}}else{}var bool=isMultitouch_gesture(_event);if(bool){return true}if(event.preventDefault){event.preventDefault()}else{event.returnValue=false}};function initSwipe(_event){var event=_event?_event:window.event;var c=$get_Element("#canvas-container");var tl=0;if(event.touches){console_log(event.touches.length);tl=event.touches.length}else{console_log("NOT TOUCH ENABLED!")}console_log("TOUCHES: "+tl);if(tl>=2){event.preventDefault();var tarr=event.touches;var tp={};var tx=0;var ty=0;var tlen=tarr.length;for(var t=0;t<tlen;t++){tx+=tarr[t].pageX;ty+=tarr[t].pageY}var touch={pageX:tx/tlen,pageY:ty/tlen};swipe_sx=touch.pageX;swipe_sy=touch.pageY;console_log("TOUCHE_POS: "+swipe_sx+":"+swipe_sy);swipe_nx=0;swipe_ny=0;swipe_action="on";c.addEventListener("touchmove",startSwipe);c.addEventListener("touchend",stopSwipe)}}function startSwipe(_event){var event=_event?_event:window.event;event.preventDefault();var tarr=event.touches;var tp={};var tx=0;var ty=0;var tlen=tarr.length;if(tlen<2){return }for(var t=0;t<tlen;t++){tx+=tarr[t].pageX;ty+=tarr[t].pageY}var touch={pageX:tx/tlen,pageY:ty/tlen};swipe_mx=touch.pageX;swipe_my=touch.pageY;swipe_dx=swipe_mx-swipe_sx;swipe_dy=swipe_my-swipe_sy;swipe_nx=swipe_ox+swipe_dx;swipe_ny=swipe_oy+swipe_dy;if(tlen<2){return }var currPosY=swipe_ny?swipe_ny:0;currPosY=parseInt(currPosY);currPosY=currPosY>0?0:currPosY;currPosY=currPosY<-(scroll_window.height-screen_height)?-(scroll_window.height-screen_height):currPosY;$get_Element("#vscroll_thumb").style.top=getvscrolldata().t+"px";scrollPosition.y=currPosY;var currPosX=swipe_nx?swipe_nx:0;currPosX=parseInt(currPosX);currPosX=currPosX>0?0:currPosX;currPosX=currPosX<-(scroll_window.width-screen_width)?-(scroll_window.width-screen_width):currPosX;$get_Element("#hscroll_thumb").style.left=gethscrolldata().t+"px";scrollPosition.x=currPosX;updateCanvas()}function stopSwipe(_event){swipe_ox=swipe_ox+swipe_dx;swipe_oy=swipe_oy+swipe_dy;var event=_event?_event:window.event;event.preventDefault();var c=$get_Element("#canvas-container");c.removeEventListener("touchmove",startSwipe);c.removeEventListener("touchend",stopSwipe);$get_Element("#vscroll_thumb").style.top=getvscrolldata().t+"px";$get_Element("#hscroll_thumb").style.left=gethscrolldata().t+"px"}function getvscrolldata(){var currPos=scrollPosition.y;currPos=currPos?currPos:0;currPos=parseInt(currPos);currPos=currPos>0?0:currPos;currPos=currPos<-(scroll_window.height-screen_height)?-(scroll_window.height-screen_height):currPos;var scrub=(scroll_window.height-screen_height)/(screen_height-30);return{p:currPos,s:scrub,t:(-currPos/scrub)}}function gethscrolldata(){var currPos=scrollPosition.x;currPos=currPos?currPos:0;currPos=parseInt(currPos);currPos=currPos>0?0:currPos;currPos=currPos<-(scroll_window.width-screen_width)?-(scroll_window.width-screen_width):currPos;var scrub=(scroll_window.width-screen_width)/(screen_width-30);return{p:currPos,s:scrub,t:(-currPos/scrub)}}function moveObject(event){var delta=0;if(!event){event=window.event}if(event.wheelDelta){delta=event.wheelDelta/60}else{if(event.detail){delta=-event.detail/2}}var currPos=scrollPosition.y;currPos=currPos?currPos:0;currPos=parseInt(currPos)+(delta*10);currPos=currPos>0?0:currPos;currPos=currPos<-(scroll_window.height-screen_height)?-(scroll_window.height-screen_height):currPos;var scrub=(scroll_window.height-screen_height)/(screen_height-30);$get_Element("#vscroll_thumb").style.top=(-currPos/scrub)+"px";var diffY=currPos-scrollPosition.y;var diffX=0;scrollPosition.y=currPos;updateNavThumb(scrollPosition.x,scrollPosition.y);var egraph=$get_jqElement("#egraph");var egvisib=egraph.is(":visible");var txtBox=$get_jqElement("#inputBox");var txtvisib=txtBox.is(":visible");updateCanvas();if(selectedObj){if(transMode=="edit"){if(selectedObj.id==2){showTextBox()}else{showHideGraphModuleEditor(true)}}else{drawBoundRect({tx:0,ty:0,tr:0,brect:selectedObj.brect},true)}}else{if(egvisib){showHideGraphModuleEditor(true)}if(txtvisib){var px=parseFloat($get_Element("#inputBox").style.left)+diffX;var py=parseFloat($get_Element("#inputBox").style.top)+diffY;clickX=px;clickY=py;showTextBox()}}}if(!IS_IOS){$get_Element("#drawsection").onmousewheel=moveObject}__killListeners();if(document.addEventListener){canvas.addEventListener("mousedown",ev_onmousedown,false);canvas.addEventListener("mouseup",ev_onmouseup,false);canvas.addEventListener("mousemove",ev_onmousemove,false);canvas.addEventListener("touchstart",touchStartFunction,false);canvas.addEventListener("touchmove",touchMoveFunction,false);canvas.addEventListener("touchstart",ev_onmousedown,false);canvas.addEventListener("touchmove",ev_onmousemove,false);canvas.addEventListener("touchend",ev_onmouseup,false)}else{canvas.attachEvent("onmousedown",ev_onmousedown);canvas.attachEvent("onmouseup",ev_onmouseup);canvas.attachEvent("onmousemove",ev_onmousemove);canvas.attachEvent("touchstart",touchStartFunction);canvas.attachEvent("touchmove",touchMoveFunction);canvas.attachEvent("touchstart",ev_onmousedown);canvas.attachEvent("touchmove",ev_onmousemove);canvas.attachEvent("touchend",ev_onmouseup)}if(isReadOnly){wb.isReadOnly(true)}canvas.focus();wb.whiteboardIsReady()},100)};function $get_Element(n){var str=n.indexOf("#")>-1?n.split("#")[1]:n;var jqobj=$("div#"+contDiv+" [name="+str+"]");return jqobj[0]}function $get_jqElement(n){return $($get_Element(n))}function updateText(txt,x,y,c){if(graphicData.dataArr.length){var data=graphicData.dataArr[0];graphicData.dataArr=[data]}graphicData.dataArr[0].text=escape(txt);graphicData.dataArr[0].x=x-scrollPosition.x;graphicData.dataArr[0].y=y-scrollPosition.y;graphicData.dataArr[0].color=c}function showTextBox(){cTMaxWidth=null;if(useMQ){showTextBox_mq()}else{showTextBox_html()}textEditMode=true}function hideTextBox(){if(useMQ){hideTextBox_mq()}else{hideTextBox_html()}textEditMode=!true}function showTextBox_html(){var siz=viewport();var docWidth=siz.width;var docHeight=siz.height;if(!$get_Element("#content")){var maxW=docWidth-clickX-50;var ttHtml="<div class='input_box' name='input_box'><textarea class='content' name='content' style='color:"+wb.globalStrokeColor+"'> </textarea></div><div name='dummy_resize' style='max-width: "+maxW+"px;'></div>";$($("#"+contDiv+" [name='inputBox'] div")[0]).html(ttHtml);if(!dragBoxPluginInited){initDragBoxPlugin();dragBoxPluginInited=true}$get_jqElement("#input_box").resizeBox(wb)}else{var rd=$get_jqElement("#dummy_resize");var rs=$get_jqElement("#content");var ri=$get_jqElement("#input_box");rs.css("width","120px");rs.css("height","40px");ri.css("width","120px");ri.css("height","40px");$get_jqElement("#inputBox").find("[name='done_btn']").css({top:($get_jqElement("#input_box").outerHeight()+30)+"px",left:0+"px"});var maxW=docWidth-clickX-50;rd.css("max-width",maxW+"px");rd.css("min-height","40px")}var px=clickX;var py=clickY;if(selectedObj){var isEdited=isObjTransformed(selectedObj.uid,"edit");var data=isEdited||selectedObj.dataArr[0];var txt=data?data.text:"";txt=unescape(decodeURI(txt));var dim=getTextBoxDim(txt);$get_jqElement("#inputBox").find("[name='content']").val(txt);var b=getWhiteboardObjBound("sel");var _w=b.brect.w;px=data&&b?b.tx:clickX;py=data&&b?b.ty:clickY;var rs=$get_jqElement("#dummy_resize");rs.css("max-width",_w+"px");$get_jqElement("#content").css("width",_w+"px");$get_jqElement("#content").css("height",b.brect.h+"px");$get_jqElement("#input_box").css("width",_w+"px");$get_jqElement("#input_box").css("height",b.brect.h+"px")}$get_Element("#inputBox").style.display="block";$get_Element("#inputBox").style.top=py+"px";$get_Element("#inputBox").style.left=px+"px";$get_Element("#input_box").style.top=0+"px";$get_Element("#input_box").style.left=0+"px";$get_jqElement("#inputBox").find("[name='done_btn']").css({top:($get_jqElement("#input_box").outerHeight()+30)+"px",left:0+"px"});$get_Element("#content").focus()}function hideTextBox_html(){if($get_Element("#content")){$get_Element("#content").value=""}$get_Element("#inputBox").style.display="none"}function showTextBox_mq(){$get_Element("#inputBox").style.display="block";$get_Element("#inputBox").style.top=clickY+"px";$get_Element("#inputBox").style.left=clickX+"px";if(wb.mode=="student"){$get_jqElement("#editable-math").css("color","#000000")}else{$get_jqElement("#editable-math").css("color","#ff0000")}setTimeout(__focus)}function __focus(){if(isIE||isTouchEnabled||ieVer>8){$("#"+contDiv+" [name='inputBox'] textarea").focus()}else{$(".mathquill-editable").focus()}}function hideTextBox_mq(){var disp=$get_Element("#inputBox").style.display;if(disp=="block"){$get_jqElement("#editable-math").mathquill("latex","");$get_Element("#inputBox").style.display="none"}}function resetWhiteBoard(boo){if(!canvas){alert("resetWhiteBoard: canvas is null!");return }penDown=false;graphMode="";buffercontext.clearRect(0,0,canvas.width,canvas.height);shapeHitCtx.clearRect(0,0,canvas.width,canvas.height);context.clearRect(0,0,canvas.width,canvas.height);var _width=canvas.width;buffercanvas.width=canvas.width=_width;shapeHitcanvas.width=_width;drawingLayer="1";$get_Element("#button_gr2D").style.border="1px solid #000000";$get_Element("#button_nL").style.border="1px solid #000000";$(".mathquill-embedded-latex").remove();if($get_Element("#graph_cont")){$get_jqElement("#graph_cont").remove()}if(boo){loadedImgTemps={};graphicDataStore=[];wb.clearWhiteboard(true)}}function showHideGraph(flag,x,y,boo,foo){if($get_Element("#graph_cont")){$get_jqElement("#graph_cont").remove()}graphicData.dataArr=[];graphicData.id=tool_id[currentTool];var addGraph=false;if(!boo&&((graphMode=="gr2D"&&flag=="gr2D")||(graphMode=="nL"&&flag=="nL"))){graphMode="";drawingLayer="1";$get_Element("#button_gr2D").style.border="1px solid #000000";$get_Element("#button_nL").style.border="1px solid #000000"}else{$get_Element("#button_gr2D").style.border="1px solid #000000";$get_Element("#button_nL").style.border="1px solid #000000";var gr,xp,yp,xs,ys;graphMode=flag;var cposX=parseInt($get_Element("#canvas-container").style.left);var cposY=parseInt($get_Element("#canvas-container").style.top);cposX=cposX?cposX:0;cposY=cposY?cposY:0;if(flag=="gr2D"){gr=gr2D;xp=x?x-(gr2D_w/2):gr2D_xp-cposX;yp=y?y-(gr2D_h/2):gr2D_yp-cposY;xs=x?x:gr2D_xp-cposX+(gr2D_w/2);ys=y?y:gr2D_yp-cposY+(gr2D_h/2);$get_Element("#button_gr2D").style.border="2px solid #ff0000"}else{gr=nL;xp=x?x-(nL_w/2):nL_xp-cposX;yp=y?y-(nL_h/2):nL_yp-cposY;xs=x?x:nL_xp-cposX+(nL_w/2);ys=y?y:nL_yp-cposY+(nL_h/2);$get_Element("#button_nL").style.border="2px solid #ff0000"}drawingLayer=isIE?"1":"3";addGraph=true;var gc=$("<div name='graph_cont' style='position:absolute;left:"+xp+"px;top:"+yp+"px;'></div>");gc.append(gr);$get_jqElement("#canvas-container").prepend(gc);if(!foo){var grNode=$get_jqElement("#canvas-container");if(true){grNode.data("grpos",{x:xp,y:yp,sx:scrollPosition.x,sy:scrollPosition.y})}}}graphicData.dataArr.push({x:xs-scrollPosition.x,y:ys-scrollPosition.y,name:"graphImage",addImage:addGraph});graphicData.brect=getBoundRect(xs,ys,300,(flag=="gr2D"?300:150));sendData();if(currentTool=="gr2D"||currentTool=="nL"){currentTool="pencil"}}function mouseOverGraph(){getCanvasPos();var mx=event.layerX?event.layerX:event.pageX-offX;var my=event.layerY?event.layerY:event.pageY-offY;var xp,yp,wi,hi;if(graphMode=="gr2D"){gr=gr2D;xp=gr2D_xp;yp=gr2D_yp;wi=300;hi=300}else{if(graphMode=="nL"){gr=nL;xp=nL_xp;yp=nL_yp;wi=300;hi=100}}if((mx>=xp&&mx<=xp+wi)&&(my>=yp&&my<=yp+hi)){return true}return false}function updateCanvas(){var egraph=$get_jqElement("#egraph");var visib=egraph.is(":visible");if(visib){showHideGraphModuleEditor(false,true)}var txtBox=$get_jqElement("#inputBox");visib=txtBox.is(":visible");if(visib&&$get_jqElement("#content").val().length){txtBox.hide()}buffercontext.clearRect(0,0,buffercanvas.width,buffercanvas.height);buffercanvas.width=canvas.width;buffercanvas.height=canvas.height;var l=graphicDataStore.length;var graphsTemp=[];var objTemp=[];buffercontext.save();buffercontext.translate(scrollPosition.x,scrollPosition.y);for(var i=0;i<l;i++){var _t=graphicDataStore[i];if(_t.type!="cmd"&&(_t.id==11||_t.id==12||_t.id=="graph")){graphsTemp.push(_t);continue}if(_t.type!="cmd"&&_t.id=="template"){renderToBuffer(_t,buffercontext)}else{objTemp.push(_t)}}for(i=0;i<objTemp.length;i++){var _t=objTemp[i];renderToBuffer(_t,buffercontext)}for(i=0;i<graphsTemp.length;i++){var _t=graphsTemp[i];renderToBuffer(_t,buffercontext)}buffercontext.restore();context.clearRect(0,0,canvas.width,canvas.height);reRenderCanvas();var gr=$get_jqElement("#canvas-container");if(gr.data("grpos")){var grxp=gr.data("grpos").x+(-gr.data("grpos").sx+scrollPosition.x);var gryp=gr.data("grpos").y+(-gr.data("grpos").sy+scrollPosition.y);$get_jqElement("#graph_cont").css("left",grxp+"px");$get_jqElement("#graph_cont").css("top",gryp+"px")}context.beginPath()}function updateBuffer(){buffercontext.clearRect(0,0,buffercanvas.width,buffercanvas.height);buffercanvas.width=canvas.width;buffercanvas.height=canvas.height;var l=graphicDataStore.length;buffercontext.save();buffercontext.translate(scrollPosition.x,scrollPosition.y);for(var i=0;i<l;i++){renderToBuffer(graphicDataStore[i],buffercontext)}buffercontext.restore()}function reRenderCanvas(){if(isIE){var cn=$($(canvas).children()[0]);var cv=$($(buffercanvas).children()[0]);var el='<div style="position:absolute;">'+$($(buffercanvas).html()).html()+'</div><div style="position: absolute; filter: alpha(opacity=0); BACKGROUND-COLOR: red; overflow: hidden;"></div>';cn.append(el)}else{context.drawImage(buffercanvas,0,0)}}function erase(x,y,ctx,skip,check,arr){var ew=30;var ep=ew;if(!check){var cntx=ctx?ctx:context;if(isIE){var x0=x;var y0=y;var graphics=cntx;var eR=ep/2;cntx.save();cntx.beginPath();cntx.fillStyle="white";cntx.lineWidth=0;graphics.moveTo(x0-eR,y0-eR);graphics.lineTo(x0+eR,y0-eR);graphics.lineTo(x0+eR,y0+eR);graphics.lineTo(x0-eR,y0+eR);graphics.lineTo(x0-eR,y0-eR);cntx.closePath();cntx.fill();cntx.restore()}else{cntx.clearRect(x-ep/2,y-ep/2,ew,ew)}}var left=x-(ep/2);var right=x+ew-(ep/2);var top=y-(ep/2);var bottom=y+ew-(ep/2);var r={xmin:left,ymin:top,xmax:right,ymax:bottom};if(!skip){return checkForObjectErase(r,arr)}return null}function drawLine(ctx){var cntx=ctx?ctx:context;cntx.lineTo(x,y);cntx.stroke()}function drawRect(x,y,w,h,color,ctx){var cntx=ctx?ctx:context;if(color!=undefined){cntx.strokeStyle=color}cntx.strokeRect(x,y,w,h)}function drawOval(x,y,w,h,color,ctx){var cntx=ctx?ctx:context;if(color!=undefined){cntx.strokeStyle=color}var kappa=0.5522848;var ox=(w/2)*kappa;var oy=(h/2)*kappa;var xe=x+w;var ye=y+h;var xm=x+w/2;var ym=y+h/2;cntx.beginPath();cntx.moveTo(x,ym);cntx.bezierCurveTo(x,ym-oy,xm-ox,y,xm,y);cntx.bezierCurveTo(xm+ox,y,xe,ym-oy,xe,ym);cntx.bezierCurveTo(xe,ym+oy,xm+ox,ye,xm,ye);cntx.bezierCurveTo(xm-ox,ye,x,ym+oy,x,ym);cntx.closePath();cntx.stroke()}function sendData(){if(graphicData.id||graphicData.id===0){var txtVal=graphicData.dataArr[graphicData.dataArr.length-1].text;if(graphicData.id==2&&(txtVal==""||txtVal==undefined)){resetArrays();textRendering=false;return }if(graphicData.id==1&&graphicData.dataArr.length>500){var jStr=convertObjToString(graphicData);var ptC=graphicData.dataArr.length;var segArr=[];var buf;var header=graphicData.dataArr.shift();var tarr=graphicData.dataArr;var segData;var nxtStart;var nx0;var ny0;var pt={x:header.x,y:header.y};var nname=header.name;var segC=0;var nheader;while(ptC>0){segC++;buf=Math.min(500,ptC);ptC=ptC-buf;segData=tarr.splice(0,buf);var ngdata={};ngdata.lineColor=graphicData.lineColor;ngdata.id=graphicData.id;ngdata.brect=graphicData.brect;if(segC>1){var sObj={};sObj.id="continue";sObj.x=pt.x;sObj.y=pt.y;segData.unshift(sObj)}nheader=cloneObject(header);nheader.name=nname;segData.unshift(nheader);ngdata.dataArr=segData;segArr.push(ngdata);nxtStart=segData[segData.length-1];pt={x:nxtStart.x,y:nxtStart.y};var n=header.name.split("_");nname=n[0]+"_"+(Number(n[1])+1)}for(var z=0;z<segArr.length;z++){sendDataToSERVER(segArr[z])}console_log("Sending json string_segemented line -segments  : "+segArr.length);render=false;resetArrays();textRendering=false;return }render=false;console_log("Sending Data string for: "+graphicData.id);var isAGraph=graphicData.id==11||graphicData.id==12;if(!isAGraph&&graphicData.dataArr[0].name=="graphImage"){}else{sendDataToSERVER(graphicData)}textRendering=false}resetArrays()}function sendDataToSERVER(jsdata){var nobj=cloneObject(jsdata);nobj.imageData=undefined;var jsonStr=convertObjToString(nobj);if(!nobj.cmd){var rect=nobj.brect;canvas_drawing_width=rect.xmax>canvas_drawing_width?rect.xmax:canvas_drawing_width;canvas_drawing_height=rect.ymax>canvas_drawing_height?rect.ymax:canvas_drawing_height;console_log("Sending json string: "+jsonStr)}graphicDataStore.push(cloneObject(jsdata));wb.whiteboardOut(jsonStr,true);try{if(supports_localStorage()){localStorage.jstr=jsonStr}else{console_log("DATA NOT SAVED - LOCAL STORAGE NOT AVAILABLE!")}}catch(e){console_log("DATA NOT SAVED - LOCAL STORAGE NOT AVAILABLE!")}}function supports_localStorage(){try{return"localStorage" in window&&window.localStorage!=null}catch(e){return false}}function cloneObject(obj){var clone={};for(var m in obj){clone[m]=obj[m]}return clone}function cloneObjectDeep(obj){var clone={};jQuery.extend(true,clone,obj);return clone}function resetArrays(){graphicData.dataArr=null;graphicData={}}function getToolFromID(id){for(var m in tool_id){if(id==tool_id[m]){return m}}}function convertObjToString(obj){try{var s=stringify(obj);return s}catch(ex){console_log(ex.name+":"+ex.message+":"+ex.location+":"+ex.text)}}function convertStringToObj(str){try{var o=eval("("+str+")");return o}catch(ex){console_log(ex.name+":"+ex.message+":"+ex.location+":"+ex.text)}}function stringify(obj){if("JSON" in window){return JSON.stringify(obj)}var t=typeof (obj);if(t!="object"||obj===null){if(t=="string"){obj='"'+obj+'"'}return String(obj)}else{var n,v,json=[],arr=(obj&&obj.constructor==Array);for(n in obj){v=obj[n];t=typeof (v);if(obj.hasOwnProperty(n)){if(t=="string"){v='"'+v+'"'}else{if(t=="object"&&v!==null){v=stringify(v)}}json.push((arr?"":'"'+n+'":')+String(v))}}return(arr?"[":"{")+String(json)+(arr?"]":"}")}}function getBoundRect(x0,y0,w0,h0){var rect={};rect.x=x0;rect.y=y0;rect.w=w0;rect.h=h0;rect.xmin=rect.w>=0?rect.x:rect.x+rect.w;rect.xmax=rect.w>=0?rect.x+rect.w:rect.x;rect.ymin=rect.h>=0?rect.y:rect.y+rect.h;rect.ymax=rect.h>=0?rect.y+rect.h:rect.y;rect.w=Math.abs(w0);rect.h=Math.abs(h0);return rect}function isObjDeleted(uid){if(!objectActions[uid]){return false}if(!objectActions[uid]["delete"]){return false}return objectActions[uid]["delete"].length}function isObjTransformed(uid,mode,skipLast){if(!objectActions[uid]||!objectActions[uid][mode]){return false}var l=objectActions[uid][mode].length;if(!l){return false}var _l=skipLast?l-2:l-1;return objectActions[uid][mode][_l]}function renderObj(obj,boo){try{renderObjAux(obj,boo)}catch(e){console_log("error rendering: "+e)}}function renderObjAux(obj,boo){graphicData=obj;if(obj.type&&obj.type=="cmd"){if(obj.cmd.name=="erase"){var eo=eraseObjStore[obj.uid]=obj.erasedObjs;for(var c=0;c<eo.length;c++){objsErased[eo[c]]=true}}else{if(!objectActions[obj.uid][obj.cmd.name]){objectActions[obj.uid][obj.cmd.name]=[]}objectActions[obj.uid][obj.cmd.name].push(obj.cmd.data);var _obj=cloneObject(obj);graphicDataStore.push(_obj);if(obj.id=="graph"){updateGraphModule(_obj.uid,_obj.config,!true,null,true)}if(obj.groupid!==undefined){gidSeed=obj.groupid;gidSeed++}}return }var graphic_id=obj.id;var graphic_data=obj.dataArr;var line_rgb=obj.lineColor;var dLength=graphic_data.length;var dep,x0,y0,x1,y1;var textF;var idName;var doUpdateCanvas=false;drawingLayer=graphic_data[0].layer?graphic_data[0].layer:drawingLayer;drawingLayer=isIE?"1":drawingLayer;var rect,lineBound;var uid;if(obj.uid===undefined){uid=getNextObjectID()}else{uidSeed=uid=obj.uid;uidSeed++}obj.uid=uid;objectActions[uid]={};if(!boo){rect={xmin:1,ymin:1,w:0,h:0}}if(context.lineWidth!=2){context.lineWidth=2}if(graphic_data[0].color!==undefined){var cstr=String(graphic_data[0].color).indexOf("#")>-1?graphic_data[0].color.substr(1):graphic_data[0].color.toString(16);var col="#"+(cstr=="0"?"000000":cstr);context.strokeStyle=col}var deb="";console_log("RENDER_DATA_FOR: "+graphic_id);if(graphic_id===0){var _skip=obj.hasErasedObj;var eo=[];for(var i=0;i<dLength;i++){x1=graphic_data[i].x+scrollPosition.x;y1=graphic_data[i].y+scrollPosition.y;deb+=x1+":"+y1+"||";var _eo=erase(x1,y1,null,_skip);eo=eo.concat(_eo);if(isIE){doUpdateCanvas=true}}if(obj.hasErasedObj){eo=eraseObjStore[obj.uid]=obj.erasedObjs;for(var c=0;c<eo.length;c++){objsErased[eo[c]]=true}}else{eraseObjStore[obj.uid]=eo;checkForErase[obj.uid]={data:cloneObject(obj),id:obj.uid,arr:eo}}}if(graphic_id===3||graphic_id===1){if(graphic_data[0].name=="graphImage"){return }lineBound={};for(i=0;i<dLength;i++){x1=graphic_data[i].x;y1=graphic_data[i].y;if(graphic_data[i].id=="move"){context.beginPath();context.moveTo(x1,y1);x0=x1;y0=y1;if(graphic_id==1){lineBound.ymax=y1;lineBound.ymin=y1;lineBound.xmax=x1;lineBound.xmin=x1}}else{if(graphic_data[i].id=="continue"){ctx.moveTo(x0+x1,y0+y1)}else{context.lineTo(x0+x1,y0+y1);if(!boo&&graphic_id==1){var xn=x0+x1;var yn=y0+y1;if(xn>x0){if(!lineBound.xmax){lineBound.xmax=xn}if(xn>lineBound.xmax){lineBound.xmax=xn}}else{if(xn<x0){if(!lineBound.xmin){lineBound.xmin=xn}if(xn<lineBound.xmin){lineBound.xmin=xn}}else{if(!lineBound.xmax){lineBound.xmax=xn}if(xn>lineBound.xmax){lineBound.xmax=xn}if(!lineBound.xmin){lineBound.xmin=xn}if(xn<lineBound.xmin){lineBound.xmin=xn}}}if(yn>y0){if(!lineBound.ymax){lineBound.ymax=yn}if(yn>lineBound.ymax){lineBound.ymax=yn}}else{if(yn<y0){if(!lineBound.ymin){lineBound.ymin=yn}if(yn<lineBound.ymin){lineBound.ymin=yn}}else{if(!lineBound.ymax){lineBound.ymax=yn}if(y1>lineBound.ymax){lineBound.ymax=yn}if(!lineBound.ymin){lineBound.ymin=yn}if(yn<lineBound.ymin){lineBound.ymin=yn}}}lineBound.xmin=lineBound.xmin?lineBound.xmin:xn;lineBound.xmax=lineBound.xmax?lineBound.xmax:xn;lineBound.ymin=lineBound.ymin?lineBound.ymin:yn;lineBound.ymax=lineBound.ymax?lineBound.ymax:yn}}}}if(!boo){if(graphic_id==1){rect.x=lineBound.xmin?lineBound.xmin:0;rect.y=lineBound.ymin?lineBound.ymin:0;rect.w=lineBound.xmax-lineBound.xmin;rect.h=lineBound.ymax-lineBound.ymin;rect.xmin=lineBound.xmin?lineBound.xmin:0;rect.xmax=lineBound.xmax?lineBound.xmax:0;rect.ymin=lineBound.ymin?lineBound.ymin:0;rect.ymax=lineBound.ymax?lineBound.ymax:0}else{rect=getBoundRect(x0,y0,x1,y1)}}context.stroke();if(!boo){}doUpdateCanvas=true}if(graphic_id===2){for(i=0;i<dLength;i++){if(graphic_data[i].text!=""||graphic_data[i].text!=undefined){x0=graphic_data[i].x;y0=graphic_data[i].y;xt=graphic_data[i].text;xt=unescape(decodeURI(xt));xt=String(xt).split("\\:").join(" ");if(xt.indexOf("\\frac")>-1){xt=xt.split("\\frac").join("");xt=xt.split("}{").join("/");xt=xt.split("{").join("");xt=xt.split("}").join("")}cTMaxWidth=obj.textBoxWidth?obj.textBoxWidth:obj.brect.w;renderText(xt,x0,y0,col);if(!boo){var str=xt.split("\n");var ht=determineFontHeight(str[0]);rect.x=rect.xmin=x0;rect.y=rect.ymin=y0;rect.w=context.measureText(xt).width;rect.h=(ht+ht/3)*str.length;rect.xmax=rect.x+rect.w;rect.ymax=rect.y+rect.h}}}if(!boo){}doUpdateCanvas=true}if(graphic_id===4||graphic_id===5){var fName=graphic_id==4?drawRect:drawOval;for(i=0;i<dLength;i++){var xd=graphic_data[i].xs<0?-1:1;var yd=graphic_data[i].ys<0?-1:1;x0=xd<0?graphic_data[i].x+graphic_data[i].w:graphic_data[i].x;y0=yd<0?graphic_data[i].y+graphic_data[i].h:graphic_data[i].y;w0=graphic_data[i].w*xd;h0=graphic_data[i].h*yd;fName(x0,y0,w0,h0,col)}rect=getBoundRect(x0,y0,w0,h0);if(!boo){}doUpdateCanvas=true}if(graphic_id===11||graphic_id===12){idName=graphic_id==11?"gr2D":"nL";var _obj=cloneObject(obj);if(wb.options.showTemplates){var config={gtype:idName=="gr2D"?"xy":"x",xmin:-5,ymin:-5,xmax:5,ymax:5,xinc:1,yinc:1,xaxis:150,yaxis:idName=="gr2D"?150:75,xscale:25,yscale:25};var w=300;var h=(idName=="gr2D"?300:150);_obj.id="graph";_obj.config=config;objectActions[_obj.uid]={};wb.addGraphModule(_obj.config.gtype,graphic_data[0].x,graphic_data[0].y,true,_obj);_obj.dataArr[0].x=graphic_data[0].x-w/2;_obj.dataArr[0].y=graphic_data[0].y-h/2}else{showHideGraph(idName,graphic_data[0].x+scrollPosition.x,graphic_data[0].y+scrollPosition.y,graphic_data[0].addImage)}rect=getBoundRect(graphic_data[0].x,graphic_data[0].y,300,(idName=="gr2D"?300:150));obj=_obj}if(graphic_id==="template"){totalTempsloaded++;var _obj=cloneObject(obj);loadTemplate({name:graphic_data[0].name,path:graphic_data[0].url},graphic_data[0].x,graphic_data[0].y,true,!boo?obj:undefined);rect=getBoundRect(graphic_data[0].x,graphic_data[0].y,graphic_data[0].w,graphic_data[0].h);obj=_obj;doUpdateCanvas=true}if(graphic_id==="graph"){var _obj=cloneObject(obj);wb.addGraphModule(_obj.config.gtype,graphic_data[0].x,graphic_data[0].y,true,_obj);rect=getBoundRect(graphic_data[0].x,graphic_data[0].y,graphic_data[0].w,graphic_data[0].h);obj=_obj;doUpdateCanvas=true}if(!boo){obj.brect=rect;graphicDataStore.push(cloneObject(obj))}if(doUpdateCanvas){}canvas_drawing_width=rect.xmax>canvas_drawing_width?rect.xmax:canvas_drawing_width;canvas_drawing_height=rect.ymax>canvas_drawing_height?rect.ymax:canvas_drawing_height}function renderToBuffer(_obj,_ctx){var obj=_obj?_obj:graphicData;var graphic_id=obj.id;var graphic_data=obj.dataArr;var line_rgb=obj.lineColor;var dLength=graphic_data.length;var dep,x0,y0,x1,y1;var textF;var idName;var ctx=_ctx?_ctx:buffercontext;var rect,lineBound;var uid=obj.uid;var isCmd=obj.type==="cmd";var isDeleted=isObjDeleted(uid);var isMoved=isObjTransformed(uid,"move");var isScaled=isObjTransformed(uid,"scale");var isRotated=isObjTransformed(uid,"rotate");var isTransformed=isMoved||isScaled||isRotated;if(isDeleted||isCmd){return }var cx=0;var cy=0;if(isTransformed){ctx.save();var transRect=cloneObject(obj.brect);if(isMoved){ctx.translate(isMoved.tx,isMoved.ty)}if(isRotated){var dw=isRotated.tx;var dh=isRotated.ty;var r=isRotated.tr;var o=obj.brect;var spx=Math.abs(scrollPosition.x);var spy=Math.abs(scrollPosition.y);var cx=o.xmin+(o.w/2);var cy=o.ymin+(o.h/2);ctx.translate(cx,cy);ctx.rotate(r);ctx.translate(-cx,-cy);cx=0;cy=0}if(isScaled){var dw=isScaled.tx;var dh=isScaled.ty;var r=isScaled.trect;var o=obj.brect;var w0=o.w;var h0=o.h;if(isRotated&&transMode!="rotate"){}var w=w0+(dw*2);var h=h0+(dh*2);var rw=w/o.w;var rh=h/o.h;var cx=o.xmin+(o.w/2);var cy=o.ymin+(o.h/2);ctx.translate(cx,cy);ctx.scale(rw,rh);ctx.translate(-cx,-cy);cx=0;cy=0}}if(ctx.lineWidth!=2){ctx.lineWidth=2}if(graphic_data[0].color!==undefined){var cstr=String(graphic_data[0].color).indexOf("#")>-1?graphic_data[0].color.substr(1):graphic_data[0].color.toString(16);var col="#"+(cstr=="0"?"000000":cstr);ctx.strokeStyle=col}var deb="";if(graphic_id===0){for(var i=0;i<dLength;i++){x1=graphic_data[i].x-cx;y1=graphic_data[i].y-cy;deb+=x1+":"+y1+"||";erase(x1,y1,ctx,true)}}if(graphic_id===3||graphic_id===1){if(graphic_data[0].name=="graphImage"){return }for(i=0;i<dLength;i++){x1=graphic_data[i].x-cx;y1=graphic_data[i].y-cy;if(graphic_data[i].id=="move"){ctx.beginPath();ctx.moveTo(x1,y1);x0=x1;y0=y1}else{if(graphic_data[i].id=="continue"){ctx.moveTo(x0+x1,y0+y1)}else{ctx.lineTo(x0+x1,y0+y1)}}}ctx.stroke()}if(graphic_id===2){if(transMode=="edit"&&selectedObj&&(uid==selectedObj.uid)){}else{var isEdited=isObjTransformed(uid,"edit");if(isEdited){x0=obj.brect.xmin+cx+isEdited.x;y0=obj.brect.ymin+cy+isEdited.y;if(isMoved){}xt=isEdited.text;xt=unescape(decodeURI(xt));xt=String(xt).split("\\:").join(" ");if(xt.indexOf("\\frac")>-1){xt=xt.split("\\frac").join("");xt=xt.split("}{").join("/");xt=xt.split("{").join("");xt=xt.split("}").join("")}cTMaxWidth=isEdited.textBoxWidth?isEdited.textBoxWidth:_obj.brect.w;renderText(xt,x0,y0,isEdited.color,ctx,true)}else{for(i=0;i<dLength;i++){if(graphic_data[i].text!=""||graphic_data[i].text!=undefined){x0=graphic_data[i].x-cx;y0=graphic_data[i].y-cy;xt=graphic_data[i].text;xt=unescape(decodeURI(xt));xt=String(xt).split("\\:").join(" ");if(xt.indexOf("\\frac")>-1){xt=xt.split("\\frac").join("");xt=xt.split("}{").join("/");xt=xt.split("{").join("");xt=xt.split("}").join("")}cTMaxWidth=_obj.textBoxWidth?_obj.textBoxWidth:_obj.brect.w;renderText(xt,x0,y0,col,ctx,true)}}}}}if(graphic_id===4||graphic_id===5){var fName=graphic_id==4?drawRect:drawOval;for(i=0;i<dLength;i++){var xd=graphic_data[i].xs<0?-1:1;var yd=graphic_data[i].ys<0?-1:1;x0=xd<0?graphic_data[i].x+graphic_data[i].w:graphic_data[i].x;y0=yd<0?graphic_data[i].y+graphic_data[i].h:graphic_data[i].y;w0=graphic_data[i].w*xd;h0=graphic_data[i].h*yd;fName(x0-cx,y0-cy,w0,h0,col,ctx)}}if(graphic_id===11||graphic_id===12){idName=graphic_id==11?"gr2D":"nL";showHideGraph(idName,graphic_data[0].x,graphic_data[0].y,graphic_data[0].addImage,true)}if(graphic_id==="template"){var img=loadedImgTemps[graphic_data[0].name];ctx.drawImage(img,graphic_data[0].x,graphic_data[0].y)}if(graphic_id==="graph"){if(selectedObj&&graphEditMode&&(uid==selectedObj.uid)){}else{var gimg=wb.graphModules[uid];var pimg=wb.plotModules[uid];ctx.drawImage(gimg,graphic_data[0].x,graphic_data[0].y);ctx.drawImage(pimg,graphic_data[0].x,graphic_data[0].y)}}if(isTransformed){ctx.restore()}}wb.updateWhiteboard_local=function(cmdArray){var oaL=cmdArray.length;for(var l=0;l<oaL;l++){if(cmdArray[l] instanceof Array){var arg=cmdArray[l][1];arg=arg==undefined?[]:arg;var command=cmdArray[l][0];if(command=="clear"){resetInternalStore();resetWhiteBoard(false)}else{this[command].apply(scope,arg)}}else{if(cmdArray[l].indexOf("dataArr")!=-1){wb.draw(cmdArray[l])}else{scope[cmdArray[l]]()}}}resetArrays()};function resetInternalStore(){graphicDataStore=[];loadedImgTemps={};objectActions={};uidSeed=0;gidSeed=0}function gwt_updatewhiteboard(cmdArray){var realArray=[];for(var i=0,t=cmdArray.length;i<t;i++){var ele=[];ele[0]=cmdArray[i][0];ele[1]=cmdArray[i][1];realArray[i]=ele}wb.updateWhiteboard_local(realArray)}wb.updateWhiteboard=function(cmdArray){gwt_updatewhiteboard(cmdArray)};wb.updateWhiteboardData=function(index,newJSON){console.log("updateWhiteboardData");console.log(index);console.log(newJSON)};wb.whiteboardLoadComplete=function(){for(var m in checkForErase){var _obj=checkForErase[m];if(_obj&&_obj.arr&&_obj.arr.length){var _data=_obj.data;var eo=_obj.arr;_data.hasErasedObj=true;_data.erasedObjs=eo;var _uid=_obj.id;var _idx=findUIDIndex(_uid);graphicDataStore[_idx]=_data;var _json=convertObjToString(_data);wb.updateWhiteboardData(_idx,_json)}}updateCanvas()};wb.renderFromStorage=function(){if(supports_localStorage()){var str=localStorage.jstr;wb.updateWhiteboard([["draw",[str]]])}else{console_log("DATA NOT SAVED - LOCAL STORAGE NOT AVAILABLE!")}};wb.setAsTeacherMode=function(boo){var b=boo===undefined?true:boo;if(b){wb.globalStrokeColor="#ff0000";wb.mode="admin"}else{wb.globalStrokeColor="#000000";wb.mode="student"}};wb.getWhiteboardMode=function(){return wb.mode};wb.draw=function(json_str){var grobj=convertStringToObj(json_str);renderObj(grobj)};function colorToNumber(c){var n=c.split("#").join("0x");return Number(n)}wb.clearWhiteboard=function(boo){if(!boo){resetWhiteBoard(false)}wb.whiteboardOut("clear",false)};wb.saveWhiteboard=function(){console_log("default whiteboard save")};wb.whiteboardOut=function(data,boo){if(data=="undo"){if(graphicDataStore.length){var obj=graphicDataStore.pop();if(obj.type&&obj.type=="cmd"){if(obj.cmd.name!="delete"){objectActions[obj.uid][obj.cmd.name].pop()}if(obj.cmd.name=="delete"){objectActions[obj.uid]["delete"].pop()}}}updateCanvas()}console.log(data)};wb.whiteboardOut_local=function(data,boo){if(data=="undo"){if(graphicDataStore.length){var obj=graphicDataStore.pop();if(obj.type&&obj.type=="cmd"){if(obj.cmd.name!="delete"){objectActions[obj.uid][obj.cmd.name].pop()}if(obj.cmd.name=="delete"){objectActions[obj.uid]["delete"].pop()}}updateCanvas()}}console.log(data)};wb.disconnectWhiteboard=function(documentObject){alert("default whiteboard disconnect")};wb.whiteboardIsReady=function(){alert("This is the default whiteboardIsReady, it should be overridden in GWT")};wb.disableCalculator=function(){enable_calc=false;_disableCalc()};wb.enableCalculator=function(){enable_calc=true;_enableCalc()};wb.hideCalculator=function(){hideCalc()};wb.showCalculator=function(){showCalc()};wb.setSelectionMode=function(){selectionMode=!selectionMode;if(!selectionMode){removeBoundRect()}};wb.removeSelectionMode=function(boo){selectedObjects=[];selectedObj=null;mSelRect=null;multiSelection=false;removeBoundRect();if(!boo){selectionMode=!true;$get_Element("#button_move").style.border="1px solid #000000";currentTool="pencil";buttonHighlite(currentTool)}};wb.whiteboardDelete=function(n){};wb.clearMemory=function(){graphicData=null;graphicDataStore=null;selectedObj=null;var _width=0;buffercanvas.width=canvas.width=_width;buffercanvas.height=canvas.height=_width;if(isIE){$(canvas).css({width:"0px",height:"0px"});$(canvas).empty();$(buffercanvas).css({width:"0px",height:"0px"});$(buffercanvas).empty()}else{}gr2D=null;nL=null};function updateDataToSERVER(index,jsdata){graphicData=jsdata;sendDataToSERVER(jsdata);resetArrays()}wb.isReadOnly=function(boo){isReadOnly=boo;if(boo){$("div#"+contDiv+" .wb_menu button").hide();$("div#"+contDiv+" [name='toggleMenu']").hide()}else{$("div#"+contDiv+" .wb_menu button").show();$("div#"+contDiv+" [name='toggleMenu']").show()}adjustToolbar()};wb.releaseResources=function(){wb.clearMemory();graphicDataStore=[];loadedImgTemps={}};wb.getSizeOfWhiteboard=function(){return canvas_drawing_width+", "+canvas_drawing_height};wb.getContentSizeOfWhiteboard=function(){var bound=getWhiteboardObjBound();canvas_drawing_width=bound.brect.xmax;canvas_drawing_height=bound.brect.ymax;var pad=5;return[canvas_drawing_width+pad,canvas_drawing_height+pad]};wb.setSizeOfWhiteboard=function(w,h){cwi=w;cht=h;scroll_window={width:cwi,height:cht}};wb.enableUndo=function(){$get_jqElement("#button_undo").prop("disabled",!true);$get_jqElement("#button_undo").css({opacity:1})};wb.disableUndo=function(){$get_jqElement("#button_undo").prop("disabled",true);$get_jqElement("#button_undo").css({opacity:0.3})};wb.getUIDSeed=function(){var dat=new Date();return dat.getTime()};wb.deleteSelectedObj=function(){if(!selectedObj&&!multiSelection){alert("Select an object and click delete button!");return }var selObjs=multiSelection?selectedObjects:[selectedObj];var num=selObjs.length;if(!num){return }var gid=multiSelection?getNextGroupID():null;for(var i=0;i<num;i++){var _selectedObj=selObjs[i];objectActions[_selectedObj.uid]["delete"]=[true];var mobj={id:_selectedObj.id,uid:_selectedObj.uid,type:"cmd",cmd:{name:"delete",data:null},dataArr:[]};if(multiSelection){mobj.groupid=gid}updateDataToSERVER(selectedObjIndex,mobj)}wb.removeSelectionMode(true);updateCanvas()};wb.scrollRight=function(p){doRightScroll(p)};wb.scrollTop=function(p){doUpScroll(p)};wb.scrollScreen=function(x,y){doRightScroll(x);doUpScroll(y);updateCanvas()};wb.resizeWhiteboardTo=function(match,width,height){resizeWhiteboardTo(match,width,height)};wb.saveSelToImage=function(){if(IS_IE8){alert("Not supported");return null}var mselobj=multiSelection?{tx:mSelRect.xmin,ty:mSelRect.ymin,brect:{xmin:mSelRect.xmin,ymin:mSelRect.ymin,xmax:mSelRect.xmax,ymax:mSelRect.ymax,w:mSelRect.xmax-mSelRect.xmin,h:mSelRect.ymax-mSelRect.ymin}}:{};var obj;if(multiSelection&&selectionMode){obj=getWhiteboardObjBound("msel")}else{if(selectedObj&&selectionMode){obj=getWhiteboardObjBound("sel")}else{obj=getWhiteboardObjBound()}}var dcan=$('<canvas width="300" height="300"/>')[0];var rect=cloneObjectDeep(obj.brect);var pad=10;dcan.width=rect.w+pad;dcan.height=rect.h+pad;var dcontext=dcan.getContext("2d");multiSelection=false;mSelRect=null;selectedObj=null;removeBoundRect();var imageData=context.getImageData(rect.xmin-(pad/2),rect.ymin-(pad/2),rect.w+pad,rect.h+pad);dcontext.putImageData(imageData,0,0);var dataURL=dcan.toDataURL();console.log(dataURL);if($("#canvasImg")[0]){$("#canvasImg")[0].src=dataURL}return dataURL};wb.saveAsTemplate=function(){wb.gwt_saveWhiteboardAsTemplate()};wb.gwt_saveWhiteboardAsTemplate=function(){gwt_saveWhiteboardAsTemplate()};wb.getWhiteboardAsTemplate=function(){return wb.saveSelToImage()};wb.manageTemplates=function(){gwt_manageTemplates()};wb.setTransModeScale=function(){transMode=transMode=="scale"?"move":"scale"};wb.setTransModeRotate=function(){transMode=transMode=="rotate"?"move":"rotate"};wb.appendTemplates=function(temp){wb.options.templates.push(temp);var divObj=$get_jqElement("#temp_cont");if(divObj.length){updateTempMenu(temp)}};wb.getRenderedCommands=function(){var jsonStr=convertObjToString(graphicDataStore);return jsonStr};wb.setTemplate=function(name,path){loadTemplate({name:name,path:path})};wb.loadFromJson=function(json){try{var arr=eval("("+json+")");for(var i=0;i<arr.length;i++){renderObj(arr[i],false);resetArrays()}updateCanvas()}catch(e){alert(e)}};wb.isErased=function(obj){var id=obj.uid;return objsErased[id]};return wb};function _debugGetCommandInfoLabel(J){var E=JSON.parse(J);var I={};var A=E.dataArr;for(var F=0;F<A.length;F++){var C=A[F];var B=C.id;var D=I[B];if(!D){I[B]=1}else{I[B]=(D+1)}}var H="";for(key in I){if(H!=""){H+=", "}var G=I[key];H+=key+"["+G+"]"}return H}function initDragBoxPlugin(){(function(F){var A,Y,B,H,R,Q,L,K;var D;var J;var S=navigator.userAgent.match(/iPad/i)!=null;var V=navigator.userAgent.match(/MSIE 8.0/i)!=null;var T=navigator.userAgent.match(/MSIE 9.0/i)!=null;var G=V||T;var E=navigator.userAgent.match(/Android/i)!=null;var P=navigator.userAgent.match(/Kindle/i)!=null||navigator.userAgent.match(/Silk/i)!=null;var M=navigator.userAgent.match(/iPhone/i)!=null;var C=navigator.userAgent.match(/Opera/i)!=null;var U=S||E||P||M;var O=S||M;var X=function(k){var e=F(k).get(0).getBoundingClientRect();var f=document.body;var a=document.documentElement;var Z=window.pageYOffset||a.scrollTop||f.scrollTop;var c=window.pageXOffset||a.scrollLeft||f.scrollLeft;var d=a.clientTop||f.clientTop||0;var g=a.clientLeft||f.clientLeft||0;var h=e.top+Z-d;var b=e.left+c-g;var j=Math.round(b);var i=Math.round(h);k.data("offX",j);k.data("offY",i);return{top:i,left:j}};var N=function(d,b){X(b);var a=b.data("offX");var Z=b.data("offY");var c=d?d.originalEvent:window.event;var g=c.type.indexOf("touch")>-1;c=g?c.changedTouches[0]:c;var f={x:0,y:0};if(c.pageX!==undefined){f.x=c.pageX-a;f.y=c.pageY-Z}else{f.x=c.clientX-a;f.y=c.clientY-Z}return f};F.fn.resizeBox=function(e){J=e;D=F(this);var g=D[0];D.css("height",D.find("[name='content']").outerHeight()+"px");D.css("width",D.find("[name='content']").outerWidth()+"px");D.parent().parent().find("[name='done_btn']").css({position:"absolute",top:"70px"});var b=["tl","tm","tr","ml","mr","bl","bm","br"];var f=function(i){i.preventDefault();J.ib_drag="start";var h=N(i,D.parent());R=h.x;Q=h.y;A=parseFloat(D.css("left"));Y=parseFloat(D.css("top"));B=parseFloat(D.outerWidth());H=parseFloat(D.outerHeight());var j=F(this).attr("id").split("_")[2];F(document).on("mousemove",{elm:F(this),id:j},W);F(document).on("mouseup",I)};var d=function(i){i.preventDefault();J.ib_drag="start";var h=N(i,D.parent());R=h.x;Q=h.y;A=parseFloat(D.css("left"));Y=parseFloat(D.css("top"));B=parseFloat(D.outerWidth());H=parseFloat(D.outerHeight());var j=F(this).attr("id").split("_")[2];F(document).on("touchmove",{elm:F(this),id:j},W);F(document).on("touchend",I)};for(var c=0;c<b.length;c++){var a=document.createElement("div");var Z=document.createElement("div");a.className="dragresize dragresize-"+b[c];Z.className="dragresize-hit dragresize-"+b[c]+"-hit";F(a).attr("id",D.attr("name")+"_"+b[c]);F(Z).attr("id",D.attr("name")+"_"+b[c]+"_hit");g["_handle_"+b[c]]=g.appendChild(a);g["_handle_"+b[c]+"_hit"]=g.appendChild(Z);if(U){F(Z).on("touchstart",function(i){i.preventDefault();J.ib_drag="start";try{var h=N(i,D.parent())}catch(j){alert(j)}R=h.x;Q=h.y;A=parseFloat(D.css("left"));Y=parseFloat(D.css("top"));B=parseFloat(D.outerWidth());H=parseFloat(D.outerHeight());var k=F(this).attr("id").split("_")[2];F(document).on("touchmove",{elm:F(this),id:k},W);F(document).on("touchend",I)})}else{F(Z).on("mousedown",function(i){i.preventDefault();J.ib_drag="start";var h=N(i,D.parent());R=h.x;Q=h.y;A=parseFloat(D.css("left"));Y=parseFloat(D.css("top"));B=parseFloat(D.outerWidth());H=parseFloat(D.outerHeight());var j=F(this).attr("id").split("_")[2];F(document).on("mousemove",{elm:F(this),id:j},W);F(document).on("mouseup",I)})}}return this};function I(a){a.preventDefault();var Z=N(a,D.parent());L=Z.x-R;K=Z.y-Q;if(Math.abs(L)>0||Math.abs(K)>0){J.ib_drag="end"}else{J.ib_drag="null"}if(U){F(document).off("touchmove",W);F(document).off("touchend",I)}else{F(document).off("mousemove",W);F(document).off("mouseup",I)}}function W(d){d.preventDefault();J.ib_drag="drag";var g=d.data.elm;var f=d.data.id;var c=N(d,D.parent());L=c.x-R;K=c.y-Q;var Z,e,a,b;Z=A;e=Y;a=B;b=H;if(f=="mr"){a=B+L;if(a<120){a=120}}if(f=="br"){a=B+L;b=H+K;if(b<40){b=40}if(a<120){a=120}}if(f=="bm"){b=H+K;if(b<40){b=40}}if(f=="tr"){a=B+L;b=H-K;e=Y+K;if(b<40){b=40;e=Y+(H-b)}if(a<120){a=120}}if(f=="tm"){b=H-K;e=Y+K;if(b<40){b=40;e=Y+(H-b)}}if(f=="bl"){a=B-L;b=H+K;Z=A+L;if(b<40){b=40}if(a<120){a=120;Z=A+(B-a)}}if(f=="ml"){a=B-L;Z=A+L;if(a<120){a=120;Z=A+(B-a)}}if(f=="tl"){Z=A+L;e=Y+K;if(b<40){b=40;e=Y+(H-b)}if(a<120){a=120;Z=A+(B-a)}}D.css({left:Z+"px",top:e+"px",width:a+"px",height:b+"px"});D.find("[name='content']").css({width:a+"px",height:b+"px"});D.parent().parent().find("[name='done_btn']").css({position:"absolute",top:parseFloat(D.css("top"))+(b+30)+"px",left:parseFloat(D.css("left"))+"px"})}}(jQuery))}function setupMathQuill(){$(function(){$(".mathquill-editable:not(.mathquill-rendered-math)").mathquill("editable");$(".mathquill-textbox:not(.mathquill-rendered-math)").mathquill("textbox");$(".mathquill-embedded-latex").mathquill()})};window._cmWhiteboards=[];function setupStaticWhiteboards(){try{var A=TutorManager.getActiveTutorWrapper();var F=$(".wb_json",A.tutorDomNode);for(var E=0,I=F.length;E<I;E++){var D=F.get(E);var B=D.innerText;D.innerHTML="";var H=new Date().getUTCMilliseconds();var C="wb_json-"+H+"_"+E;D.setAttribute("id",C);window._cmWhiteboards[C]=new Whiteboard(C,true);window._cmWhiteboards[C].whiteboardIsReady=(function(J,K){return function(){window._cmWhiteboards[J].loadFromJson(K);window._cmWhiteboards[J].resizeWhiteboardTo("content",100,100)}})(C,B);window._cmWhiteboards[C].setWhiteboardViewPort(500,300);window._cmWhiteboards[C].initWhiteboard(document)}}catch(G){alert("error loading static whiteboards: "+G)}};function setupEducationWorldAdServer() {
	
	/** disabled for now */
	if(true) {
		return;
	}
	
	selectEducationWorldAdToShow();
	HmEvents.eventTutorInitialized.subscribe(function(e) {
		selectEducationWorldAdToShow();
	});
}


function selectEducationWorldAdToShow() {
	console.log('setting up ew ad');
	var lb = document.getElementById("leaderboard");
	if(lb) {
		lb.innerHTML = getEwAdFrame();
		lb.style.display = 'block';
	}
}

var _ZONE_MOBILE=128;
var _ZONE_DESKTOP=24;

function getEwAdFrame() {
	return isMobileSmallScreen()? getEwAdFrameMobile(): getEwAdFrameDesktop();
}

function getEwAdFrameMobile() {
    var randN = Math.floor(Math.random() * 99999999999) + '$1';
    var adHtml = null;
    var adHtml = "<iframe id='a3d1175f' name='a3d1175f' src='http://maxmedia.educationworld.com/www/delivery/afr.php?n=a3d1175f&amp;zoneid=" + _ZONE_MOBILE + "&amp;cb="
                    + randN
                    + "' framespacing='0' frameborder='no' scrolling='no' width='100%' height='50'><a href='http://maxmedia.educationworld.com/www/delivery/ck.php?n=afa0b553&amp;cb="
                    + randN
                    + "' target='_blank'><img src='http://maxmedia.educationworld.com/www/delivery/avw.php?zoneid=" + _ZONE_MOBILE + "&amp;cb="
                    + randN
                    + "&amp;n=afa0b553' border='0' alt='' /></a></iframe>";
    return adHtml;
}


function getEwAdFrameDesktop() {
    var randN = Math.floor(Math.random() * 99999999999) + '$1';
    var adHtml = null;
    var adHtml = "<iframe id='a3d1175f' name='a3d1175f' src='http://maxmedia.educationworld.com/www/delivery/afr.php?n=a3d1175f&amp;zoneid=" + _ZONE_DESKTOP + "&amp;cb="
                    + randN
                    + "' framespacing='0' frameborder='no' scrolling='no' width='728' height='90'><a href='http://maxmedia.educationworld.com/www/delivery/ck.php?n=afa0b553&amp;cb="
                    + randN
                    + "' target='_blank'><img src='http://maxmedia.educationworld.com/www/delivery/avw.php?zoneid=" + _ZONE_DESKTOP + "&amp;cb="
                    + randN
                    + "&amp;n=afa0b553' border='0' alt='' /></a></iframe>";
    return adHtml;
}


// block 79
// unknown 3
// block 160;
// school notes 128;
// HM heder 130,
// big header ew 24
