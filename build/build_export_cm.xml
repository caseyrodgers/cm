<!--
    build file to create the solutions and INMH data export files that need
    to be inported into the live server:   export

    And, a generalized way to import the export files into the live server: import_inmh
-->
<project basedir="." default="" name="catchup">

    <property name="textcodes" value="cahseehm,nationalhm,genericprealg,genericalg1,genericgeo,genericalg2,mini6and7gt,minialg1gt,minigeogt,minialg2gt,cmextras,cmextrasgeo,cmextrasalg2,cmextrasgeo-2,alg1ptests,alg1ptests2,alg2ptests,prealgptests,geoptests,geoptests2,placement,miniprealggt,miniprecalcgt,taks11hm,alg2ptests2,prealgptests2,alg1ptests3,cmextrasalg1"/>

    <target name='export' depends='export_cm_solutions_all'/>
    <target name='import_inmh' depends='import_cm_inmh_all,import_cm_inmh_link_all'/>


    <property name="build.classes" value="../../hotmath2/build/classes"/>
    <property name="lib" value="../../libs"/>
    <path id="local.classpath.run">
        <pathelement location="../libs/hotmath2.jar"/>
        <pathelement location="${lib}/sblib/2.0/lib/sblib.jar"/>
        <pathelement location="${lib}/commons_digester/1.6/lib/commons-digester.jar"/>
        <pathelement location="${lib}/commons_collections/2.1/lib/commons-collections.jar"/>
        <pathelement location="${lib}/commons_logging/1.0.4/lib/commons-logging.jar"/>
        <pathelement location="${lib}/commons_beanutils/1.7/lib/commons-beanutils.jar"/>
        <pathelement location="${lib}/jade/6.0/lib/jade.jar"/>
        <pathelement location="${lib}/log4j/1.2.13/lib/log4j-1.2.13.jar"/>
        <pathelement location="${lib}/commons_dbcp/1.2.2/lib/commons-dbcp-1.2.2.jar"/>
        <pathelement location="${lib}/commons_pool/1.3/lib/commons-pool-1.3.jar"/>
        <pathelement location="${lib}/slf4j/1.0.rc6/lib/slf4j-log4j12.jar"/>
        <pathelement location="${lib}/mysql/5.0.5/lib/mysql-connector-java-5.0.5-bin.jar"/>
        <pathelement location="${lib}/htmlparser/1.6/lib/htmlparser.jar"/>
        <pathelement location="${lib}/nekohtml/0.9.5/lib/nekohtml.jar"/>
        <pathelement location="${lib}/xerces/2.6.2/lib/xercesImpl.jar"/>
        <pathelement location="${lib}/json-tools/1.5/lib/jsontools-core-1.5.jar"/>
        <pathelement location="${lib}/json-tools/1.5/lib/jsontools-core-1.5.jar"/>
        <pathelement location="${lib}/jdom/1.0/lib/jdom.jar"/>
        <pathelement location="${lib}/velocity/1.4/lib/velocity-1.4.jar"/>
    </path>

    <taskdef name="foreach" classname="net.sf.antcontrib.logic.ForEach"/>

    <target name='import_cm_inmh_all'>
        <foreach target="import_cm_inmh" param="textcode" list="${textcodes}"/>
    </target>

    <target name='clean'>
        <delete dir='hotmathexport'/>
    </target>

    <target name='export_cm_solutions_all' depends='clean'>
        <foreach target="export_cm_solutions" param="textcode" list="${textcodes}"/>
    </target>

    <target name='export_cm_solutions'>
         <echo>Exporting ${textcode}</echo>
         <java   classname="hotmath.HotMathDatabaseExport" fork="true" failonerror="true" classpathref="local.classpath.run" >
              <jvmarg value="-Xmx400m"/>
              <jvmarg value="-Xms300m"/>
              <!-- <arg value="-dir=${INMH_DIR}"/> -->
              <arg value="-book"/>
              <arg value="${textcode}"/>
         </java>

     </target>


     <target name='import_cm_inmh'>
         <java   classname="hotmath.inmh.INeedMoreHelpIndex" fork="true" failonerror="true" classpathref="local.classpath.run" >
              <jvmarg value="-Xmx400m"/>
              <jvmarg value="-Xms300m"/>
              <!-- <arg value="-dir=${INMH_DIR}"/> -->
              <arg value="-files=../../hotmath2/inmh/${textcode}.inmh"/>
         </java>
     </target>

    <target name='import_cm_inmh_link_all'>
        <foreach target="import_cm_inmh_link" param="inmh_link_file" list="cmextra,workbook_link,activity_links,video_links"/>
    </target>


     <target name='import_cm_inmh_link'>
         <echo>Importing INMH LINK: ${inmh_link_file}</echo>
         <java   classname="hotmath.inmh.link.HelpReferenceLinks" fork="true" failonerror="true" classpathref="local.classpath.run" >
              <jvmarg value="-Xmx400m"/>
              <jvmarg value="-Xms300m"/>
              <arg value="../../hotmath2/inmh_link/${inmh_link_file}.inmh_link"/>
         </java>
     </target>


</project>
